{"version":3,"file":"9820.6b462d83575efd05c883.js","mappings":"0JASO,MAAMA,CAA8E,CAIzF,YAAmBC,EAA+B,CAA/B,aAAAA,EAHnB,qBAAkB,CAAC,KAAc,QAAQ,EACzC,mBAA+B,KAiB/B,cAAYC,GAAyB,CACnC,GAAI,CAAC,OAAO,GACV,OAGF,OAAO,GAAG,MAAO,CAAE,KAAMA,EAAE,QAAQ,IAAK,CAAC,EACzC,OAAO,GAAG,OAAQ,UAAU,EAE5B,KAAM,CAAE,aAAAC,EAAc,OAAAC,CAAO,EAAIF,EAAE,KAC/BC,GAAgBC,IAAW,KAAK,gBAClC,KAAK,cAAgBA,EACrB,OAAO,GAAG,MAAO,SAAUA,CAAM,EAErC,EAGA,WAAQ,IAAM,CAAC,EA9Bb,MAAMC,EAAM,6CAA6CJ,EAAQ,MAAQ,SAAW,EAAE,SACtF,MAAWI,CAAG,EAEd,MAAMC,EAAM,OAAO,GACjB,OAAO,IAEP,UAAY,EACTA,EAAG,EAAIA,EAAG,GAAK,CAAC,GAAG,KAAK,SAAS,CACpC,EACFA,EAAG,EAAI,CAAC,IAAI,KACZA,EAAG,SAAUL,EAAQ,kBAAmB,MAAM,EAC9CK,EAAG,MAAO,cAAe,EAAI,CAC/B,CAmBF,C","sources":["webpack://grafana/./public/app/core/services/echo/backends/analytics/GABackend.ts"],"sourcesContent":["import { EchoBackend, EchoEventType, PageviewEchoEvent } from '@grafana/runtime';\n\nimport { loadScript } from '../../utils';\n\nexport interface GAEchoBackendOptions {\n  googleAnalyticsId: string;\n  debug?: boolean;\n}\n\nexport class GAEchoBackend implements EchoBackend<PageviewEchoEvent, GAEchoBackendOptions> {\n  supportedEvents = [EchoEventType.Pageview];\n  trackedUserId: number | null = null;\n\n  constructor(public options: GAEchoBackendOptions) {\n    const url = `https://www.google-analytics.com/analytics${options.debug ? '_debug' : ''}.js`;\n    loadScript(url);\n\n    const ga = (window.ga =\n      window.ga ||\n      // this had the equivalent of `eslint-disable-next-line prefer-arrow/prefer-arrow-functions`\n      function () {\n        (ga.q = ga.q || []).push(arguments);\n      });\n    ga.l = +new Date();\n    ga('create', options.googleAnalyticsId, 'auto');\n    ga('set', 'anonymizeIp', true);\n  }\n\n  addEvent = (e: PageviewEchoEvent) => {\n    if (!window.ga) {\n      return;\n    }\n\n    window.ga('set', { page: e.payload.page });\n    window.ga('send', 'pageview');\n\n    const { userSignedIn, userId } = e.meta;\n    if (userSignedIn && userId !== this.trackedUserId) {\n      this.trackedUserId = userId;\n      window.ga('set', 'userId', userId);\n    }\n  };\n\n  // Not using Echo buffering, addEvent above sends events to GA as soon as they appear\n  flush = () => {};\n}\n"],"names":["GAEchoBackend","options","e","userSignedIn","userId","url","ga"],"sourceRoot":""}