{"version":3,"file":"3273.5c07cd8b2e7d440d5743.js","mappings":"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","sources":["webpack://grafana/./public/app/plugins/datasource/loki/components/LokiCheatSheet.tsx","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/QueryHeaderSwitch.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/QueryEditorModeToggle.js","webpack://grafana/./public/app/plugins/datasource/loki/components/LokiLabelBrowser.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LabelBrowserModal.tsx","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/LabelFilterItem.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/LabelFilters.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationExplainedBox.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationInfoButton.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationHeader.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationParamEditor.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationEditorBody.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationEditor.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationList.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/QueryBuilderHints.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationListExplained.js","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderExplained.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/NestedQuery.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/NestedQueryList.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilder.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/QueryPreview.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderContainer.tsx","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/QueryOptionGroup.js","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderOptions.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/QueryPattern.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/components/QueryPatternsModal.tsx","webpack://grafana/./public/app/plugins/datasource/loki/querybuilder/state.ts","webpack://grafana/./public/app/plugins/datasource/loki/components/stats.ts","webpack://grafana/./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx","webpack://grafana/./public/app/plugins/datasource/loki/components/LokiQueryEditorForAlerting.tsx","webpack://grafana/./public/app/plugins/datasource/loki/components/LokiQueryEditorByApp.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/AlertingSettings.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/DebugSection.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/DerivedField.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/DerivedFields.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/QuerySettings.tsx","webpack://grafana/./public/app/plugins/datasource/loki/configuration/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/loki/module.ts","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/ConfigEditor/ConfigSection/ConfigDescriptionLink.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorHeader.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/FlexItem.js","webpack://grafana/./node_modules/@grafana/plugin-ui/dist/esm/components/VisualQueryBuilder/components/OperationsEditorRow.js"],"sourcesContent":["import { css } from '@emotion/css';\nimport { shuffle } from 'lodash';\nimport { PureComponent } from 'react';\n\nimport { GrafanaTheme2, QueryEditorHelpProps } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Themeable2, withTheme2 } from '@grafana/ui';\n\nimport LokiLanguageProvider from '../LanguageProvider';\nimport { escapeLabelValueInExactSelector } from '../languageUtils';\nimport { LokiQuery } from '../types';\n\nconst DEFAULT_EXAMPLES = ['{job=\"default/prometheus\"}'];\nconst PREFERRED_LABELS = ['job', 'app', 'k8s_app'];\nconst EXAMPLES_LIMIT = 5;\n\nconst LOGQL_EXAMPLES = [\n  {\n    title: 'Log pipeline',\n    expression: '{job=\"mysql\"} |= \"metrics\" | logfmt | duration > 10s',\n    label:\n      'This query targets the MySQL job, keeps logs that contain the substring \"metrics\", and then parses and filters the logs further.',\n  },\n  {\n    title: 'Count over time',\n    expression: 'count_over_time({job=\"mysql\"}[5m])',\n    label: 'This query counts all the log lines within the last five minutes for the MySQL job.',\n  },\n  {\n    title: 'Rate',\n    expression: 'rate(({job=\"mysql\"} |= \"error\" != \"timeout\")[10s])',\n    label:\n      'This query gets the per-second rate of all non-timeout errors within the last ten seconds for the MySQL job.',\n  },\n  {\n    title: 'Aggregate, count, and group',\n    expression: 'sum(count_over_time({job=\"mysql\"}[5m])) by (level)',\n    label: 'Get the count of logs during the last five minutes, grouping by level.',\n  },\n];\n\nclass UnthemedLokiCheatSheet extends PureComponent<\n  QueryEditorHelpProps<LokiQuery> & Themeable2,\n  { userExamples: string[] }\n> {\n  declare userLabelTimer: ReturnType<typeof setTimeout>;\n  state = {\n    userExamples: [],\n  };\n\n  componentDidMount() {\n    this.scheduleUserLabelChecking();\n    reportInteraction('grafana_loki_cheatsheet_opened', {});\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.userLabelTimer);\n  }\n\n  scheduleUserLabelChecking() {\n    this.userLabelTimer = setTimeout(this.checkUserLabels, 1000);\n  }\n\n  checkUserLabels = async () => {\n    // Set example from user labels\n    const provider: LokiLanguageProvider = this.props.datasource?.languageProvider;\n    if (provider.started) {\n      const labels = provider.getLabelKeys() || [];\n      const preferredLabel = PREFERRED_LABELS.find((l) => labels.includes(l));\n      if (preferredLabel) {\n        const values = await provider.fetchLabelValues(preferredLabel);\n        const userExamples = shuffle(values)\n          .slice(0, EXAMPLES_LIMIT)\n          .map((value) => `{${preferredLabel}=\"${escapeLabelValueInExactSelector(value)}\"}`);\n        this.setState({ userExamples });\n      }\n    } else {\n      this.scheduleUserLabelChecking();\n    }\n  };\n\n  renderExpression(expr: string) {\n    const { onClickExample, theme } = this.props;\n    const styles = getStyles(theme);\n    const onClick = (query: LokiQuery) => {\n      onClickExample(query);\n      reportInteraction('grafana_loki_cheatsheet_example_clicked', {});\n    };\n\n    return (\n      <button\n        type=\"button\"\n        className={styles.cheatSheetExample}\n        key={expr}\n        onClick={() => onClick({ refId: 'A', expr })}\n      >\n        <code>{expr}</code>\n      </button>\n    );\n  }\n\n  render() {\n    const { userExamples } = this.state;\n    const { theme } = this.props;\n    const hasUserExamples = userExamples.length > 0;\n    const styles = getStyles(theme);\n\n    return (\n      <div>\n        <h2>Loki Cheat Sheet</h2>\n        <div className={styles.cheatSheetItem}>\n          <div className={styles.cheatSheetItemTitle}>See your logs</div>\n          Start by selecting a log stream from the Label browser, or alternatively you can write a stream selector into\n          the query field.\n          {hasUserExamples ? (\n            <div>\n              Here are some example streams from your logs:\n              {userExamples.map((example) => this.renderExpression(example))}\n            </div>\n          ) : (\n            <div>\n              Here is an example of a log stream:\n              {this.renderExpression(DEFAULT_EXAMPLES[0])}\n            </div>\n          )}\n        </div>\n        <div className={styles.cheatSheetItem}>\n          <div className={styles.cheatSheetItemTitle}>Combine stream selectors</div>\n          {this.renderExpression('{app=\"cassandra\",namespace=\"prod\"}')}\n          Returns all log lines from streams that have both labels.\n        </div>\n\n        <div className={styles.cheatSheetItem}>\n          <div className={styles.cheatSheetItemTitle}>Filtering for search terms.</div>\n          {this.renderExpression('{app=\"cassandra\"} |~ \"(duration|latency)s*(=|is|of)s*[d.]+\"')}\n          {this.renderExpression('{app=\"cassandra\"} |= \"exact match\"')}\n          {this.renderExpression('{app=\"cassandra\"} != \"do not match\"')}\n          <a href=\"https://grafana.com/docs/loki/latest/logql/#log-pipeline\" target=\"logql\">\n            LogQL\n          </a>{' '}\n          supports exact and regular expression filters.\n        </div>\n        {LOGQL_EXAMPLES.map((item) => (\n          <div className={styles.cheatSheetItem} key={item.expression}>\n            <div className={styles.cheatSheetItemTitle}>{item.title}</div>\n            {this.renderExpression(item.expression)}\n            {item.label}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withTheme2(UnthemedLokiCheatSheet);\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  cheatSheetItem: css({\n    margin: theme.spacing(3, 0),\n  }),\n  cheatSheetItemTitle: css({\n    fontSize: theme.typography.h3.fontSize,\n  }),\n  cheatSheetExample: css({\n    margin: theme.spacing(0.5, 0),\n    // element is interactive, clear button styles\n    textAlign: 'left',\n    border: 'none',\n    background: 'transparent',\n    display: 'block',\n  }),\n});\n","import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React__default, { useRef } from 'react';\nimport '@grafana/data';\nimport { useStyles2, Switch } from '@grafana/ui';\nimport '../../QueryEditor/types.js';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport 'react-use';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport 'uuid';\nimport '@grafana/runtime';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction QueryHeaderSwitch({ label, ...inputProps }) {\n  const dashedLabel = label.replace(\" \", \"-\");\n  const switchIdRef = useRef(uniqueId(`switch-${dashedLabel}`));\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 1 }, /* @__PURE__ */ React__default.createElement(\"label\", { htmlFor: switchIdRef.current, className: styles.switchLabel }, label), /* @__PURE__ */ React__default.createElement(Switch, { ...inputProps, id: switchIdRef.current }));\n}\nconst getStyles = (theme) => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: \"pointer\",\n      fontSize: theme.typography.bodySmall.fontSize,\n      \"&:hover\": {\n        color: theme.colors.text.primary\n      }\n    })\n  };\n};\n\nexport { QueryHeaderSwitch };\n//# sourceMappingURL=QueryHeaderSwitch.js.map\n","import React__default from 'react';\nimport { RadioButtonGroup } from '@grafana/ui';\nimport { QueryEditorMode } from '../types.js';\n\nconst editorModes = [\n  { label: \"Builder\", value: QueryEditorMode.Builder },\n  { label: \"Code\", value: QueryEditorMode.Code }\n];\nfunction QueryEditorModeToggle({ mode, onChange }) {\n  return /* @__PURE__ */ React__default.createElement(\"div\", { \"data-testid\": \"QueryEditorModeToggle\" }, /* @__PURE__ */ React__default.createElement(RadioButtonGroup, { options: editorModes, size: \"sm\", value: mode, onChange }));\n}\n\nexport { QueryEditorModeToggle };\n//# sourceMappingURL=QueryEditorModeToggle.js.map\n","import { css, cx } from '@emotion/css';\nimport { sortBy } from 'lodash';\nimport { ChangeEvent } from 'react';\nimport * as React from 'react';\nimport { FixedSizeList } from 'react-window';\n\nimport { CoreApp, GrafanaTheme2, TimeRange } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport {\n  Button,\n  HighlightPart,\n  Input,\n  Label,\n  LoadingPlaceholder,\n  withTheme2,\n  BrowserLabel as LokiLabel,\n  fuzzyMatch,\n  Stack,\n} from '@grafana/ui';\n\nimport LokiLanguageProvider from '../LanguageProvider';\nimport { escapeLabelValueInExactSelector, escapeLabelValueInRegexSelector } from '../languageUtils';\n\n// Hard limit on labels to render\nconst MAX_LABEL_COUNT = 1000;\nconst MAX_VALUE_COUNT = 10000;\nconst MAX_AUTO_SELECT = 4;\nconst EMPTY_SELECTOR = '{}';\n\nexport interface BrowserProps {\n  languageProvider: LokiLanguageProvider;\n  onChange: (selector: string) => void;\n  theme: GrafanaTheme2;\n  app?: CoreApp;\n  autoSelect?: number;\n  timeRange?: TimeRange;\n  hide?: () => void;\n  lastUsedLabels: string[];\n  storeLastUsedLabels: (labels: string[]) => void;\n  deleteLastUsedLabels: () => void;\n}\n\ninterface BrowserState {\n  labels: SelectableLabel[];\n  searchTerm: string;\n  status: string;\n  error: string;\n  validationStatus: string;\n}\n\ninterface FacettableValue {\n  name: string;\n  selected?: boolean;\n  highlightParts?: HighlightPart[];\n  order?: number;\n}\n\nexport interface SelectableLabel {\n  name: string;\n  selected?: boolean;\n  loading?: boolean;\n  values?: FacettableValue[];\n  hidden?: boolean;\n  facets?: number;\n}\n\nexport function buildSelector(labels: SelectableLabel[]): string {\n  const selectedLabels = [];\n  for (const label of labels) {\n    if (label.selected && label.values && label.values.length > 0) {\n      const selectedValues = label.values.filter((value) => value.selected).map((value) => value.name);\n      if (selectedValues.length > 1) {\n        selectedLabels.push(`${label.name}=~\"${selectedValues.map(escapeLabelValueInRegexSelector).join('|')}\"`);\n      } else if (selectedValues.length === 1) {\n        selectedLabels.push(`${label.name}=\"${escapeLabelValueInExactSelector(selectedValues[0])}\"`);\n      }\n    }\n  }\n  return ['{', selectedLabels.join(','), '}'].join('');\n}\n\nexport function facetLabels(\n  labels: SelectableLabel[],\n  possibleLabels: Record<string, string[]>,\n  lastFacetted?: string\n): SelectableLabel[] {\n  return labels.map((label) => {\n    const possibleValues = possibleLabels[label.name];\n    if (possibleValues) {\n      let existingValues: FacettableValue[];\n      if (label.name === lastFacetted && label.values) {\n        // Facetting this label, show all values\n        existingValues = label.values;\n      } else {\n        // Keep selection in other facets\n        const selectedValues: Set<string> = new Set(\n          label.values?.filter((value) => value.selected).map((value) => value.name) || []\n        );\n        // Values for this label have not been requested yet, let's use the facetted ones as the initial values\n        existingValues = possibleValues.map((value) => ({ name: value, selected: selectedValues.has(value) }));\n      }\n      return { ...label, loading: false, values: existingValues, facets: existingValues.length };\n    }\n\n    // Label is facetted out, hide all values\n    return { ...label, loading: false, hidden: !possibleValues, values: undefined, facets: 0 };\n  });\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    backgroundColor: theme.colors.background.secondary,\n    width: '100%',\n  }),\n  wrapperPadding: css({\n    padding: theme.spacing(2),\n  }),\n  list: css({\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxHeight: '200px',\n    overflow: 'auto',\n  }),\n  section: css({\n    '& + &': {\n      margin: theme.spacing(2, 0),\n    },\n\n    position: 'relative',\n  }),\n  footerSectionStyles: css({\n    padding: theme.spacing(1),\n    backgroundColor: theme.colors.background.primary,\n    position: 'sticky',\n    bottom: theme.spacing(-3) /* offset the padding on modal */,\n    left: 0,\n  }),\n  selector: css({\n    fontFamily: theme.typography.fontFamilyMonospace,\n    marginBottom: theme.spacing(1),\n    width: '100%',\n  }),\n  status: css({\n    marginBottom: theme.spacing(1),\n    color: theme.colors.text.secondary,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n      transition: 'opacity 100ms linear',\n    },\n    opacity: 0,\n    fontSize: theme.typography.bodySmall.fontSize,\n    height: `calc(${theme.typography.bodySmall.fontSize} + 10px)`,\n  }),\n  statusShowing: css({\n    opacity: 1,\n  }),\n  error: css({\n    color: theme.colors.error.main,\n  }),\n  valueList: css({\n    marginRight: theme.spacing(1),\n    resize: 'horizontal',\n  }),\n  valueListWrapper: css({\n    borderLeft: `1px solid ${theme.colors.border.medium}`,\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1, 0, 1, 1),\n  }),\n  valueListArea: css({\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing(1),\n  }),\n  valueTitle: css({\n    marginLeft: theme.spacing(-0.5),\n    marginBottom: theme.spacing(1),\n  }),\n  validationStatus: css({\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n    color: theme.colors.text.maxContrast,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  }),\n});\n\nexport class UnthemedLokiLabelBrowser extends React.Component<BrowserProps, BrowserState> {\n  state: BrowserState = {\n    labels: [],\n    searchTerm: '',\n    status: 'Ready',\n    error: '',\n    validationStatus: '',\n  };\n\n  onChangeSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  onClickRunLogsQuery = () => {\n    reportInteraction('grafana_loki_label_browser_closed', {\n      app: this.props.app,\n      closeType: 'showLogsButton',\n    });\n    const selector = buildSelector(this.state.labels);\n    this.props.onChange(selector);\n  };\n\n  onClickRunMetricsQuery = () => {\n    reportInteraction('grafana_loki_label_browser_closed', {\n      app: this.props.app,\n      closeType: 'showLogsRateButton',\n    });\n    const selector = buildSelector(this.state.labels);\n    const query = `rate(${selector}[$__auto])`;\n    this.props.onChange(query);\n  };\n\n  onClickClear = () => {\n    this.setState((state) => {\n      const labels: SelectableLabel[] = state.labels.map((label) => ({\n        ...label,\n        values: undefined,\n        selected: false,\n        loading: false,\n        hidden: false,\n        facets: undefined,\n      }));\n      return { labels, searchTerm: '', status: '', error: '', validationStatus: '' };\n    });\n    this.props.deleteLastUsedLabels();\n  };\n\n  onClickLabel = (name: string, value: string | undefined, event: React.MouseEvent<HTMLElement>) => {\n    const label = this.state.labels.find((l) => l.name === name);\n    if (!label) {\n      return;\n    }\n    // Toggle selected state\n    const selected = !label.selected;\n    let nextValue: Partial<SelectableLabel> = { selected };\n    if (label.values && !selected) {\n      // Deselect all values if label was deselected\n      const values = label.values.map((value) => ({ ...value, selected: false }));\n      nextValue = { ...nextValue, facets: 0, values };\n    }\n    // Resetting search to prevent empty results\n    this.setState({ searchTerm: '' });\n    this.updateLabelState(name, nextValue, '', () => this.doFacettingForLabel(name));\n  };\n\n  onClickValue = (name: string, value: string | undefined, event: React.MouseEvent<HTMLElement>) => {\n    const label = this.state.labels.find((l) => l.name === name);\n    if (!label || !label.values) {\n      return;\n    }\n    // Resetting search to prevent empty results\n    this.setState({ searchTerm: '' });\n    // Toggling value for selected label, leaving other values intact\n    const values = label.values.map((v) => ({ ...v, selected: v.name === value ? !v.selected : v.selected }));\n    this.updateLabelState(name, { values }, '', () => this.doFacetting(name));\n  };\n\n  onClickValidate = () => {\n    const selector = buildSelector(this.state.labels);\n    this.validateSelector(selector);\n  };\n\n  updateLabelState(name: string, updatedFields: Partial<SelectableLabel>, status = '', cb?: () => void) {\n    this.setState((state) => {\n      const labels: SelectableLabel[] = state.labels.map((label) => {\n        if (label.name === name) {\n          return { ...label, ...updatedFields };\n        }\n        return label;\n      });\n      // New status overrides errors\n      const error = status ? '' : state.error;\n      return { labels, status, error, validationStatus: '' };\n    }, cb);\n  }\n\n  componentDidMount() {\n    const { languageProvider, autoSelect = MAX_AUTO_SELECT, lastUsedLabels, timeRange } = this.props;\n    if (languageProvider) {\n      const selectedLabels: string[] = lastUsedLabels;\n      languageProvider.start(timeRange).then(() => {\n        let rawLabels: string[] = languageProvider.getLabelKeys();\n        if (rawLabels.length > MAX_LABEL_COUNT) {\n          const error = `Too many labels found (showing only ${MAX_LABEL_COUNT} of ${rawLabels.length})`;\n          rawLabels = rawLabels.slice(0, MAX_LABEL_COUNT);\n          this.setState({ error });\n        }\n        // Auto-select all labels if label list is small enough\n        const labels: SelectableLabel[] = rawLabels.map((label, i, arr) => ({\n          name: label,\n          selected: (arr.length <= autoSelect && selectedLabels.length === 0) || selectedLabels.includes(label),\n          loading: false,\n        }));\n        // Pre-fetch values for selected labels\n        this.setState({ labels }, () => {\n          this.state.labels.forEach((label) => {\n            if (label.selected) {\n              this.fetchValues(label.name, EMPTY_SELECTOR);\n            }\n          });\n        });\n      });\n    }\n  }\n\n  doFacettingForLabel(name: string) {\n    const label = this.state.labels.find((l) => l.name === name);\n    if (!label) {\n      return;\n    }\n    const selectedLabels = this.state.labels.filter((label) => label.selected).map((label) => label.name);\n    this.props.storeLastUsedLabels(selectedLabels);\n    if (label.selected) {\n      // Refetch values for newly selected label...\n      if (!label.values) {\n        this.fetchValues(name, buildSelector(this.state.labels));\n      }\n    } else {\n      // Only need to facet when deselecting labels\n      this.doFacetting();\n    }\n  }\n\n  doFacetting = (lastFacetted?: string) => {\n    const selector = buildSelector(this.state.labels);\n    if (selector === EMPTY_SELECTOR) {\n      // Clear up facetting\n      const labels: SelectableLabel[] = this.state.labels.map((label) => {\n        return { ...label, facets: 0, values: undefined, hidden: false };\n      });\n      this.setState({ labels }, () => {\n        // Get fresh set of values\n        this.state.labels.forEach((label) => label.selected && this.fetchValues(label.name, selector));\n      });\n    } else {\n      // Do facetting\n      this.fetchSeries(selector, lastFacetted);\n    }\n  };\n\n  async fetchValues(name: string, selector: string) {\n    const { languageProvider, timeRange } = this.props;\n    this.updateLabelState(name, { loading: true }, `Fetching values for ${name}`);\n    try {\n      let rawValues = await languageProvider.fetchLabelValues(name, { timeRange });\n      // If selector changed, clear loading state and discard result by returning early\n      if (selector !== buildSelector(this.state.labels)) {\n        this.updateLabelState(name, { loading: false }, '');\n        return;\n      }\n      if (rawValues.length > MAX_VALUE_COUNT) {\n        const error = `Too many values for ${name} (showing only ${MAX_VALUE_COUNT} of ${rawValues.length})`;\n        rawValues = rawValues.slice(0, MAX_VALUE_COUNT);\n        this.setState({ error });\n      }\n      const values: FacettableValue[] = rawValues.map((value) => ({ name: value }));\n      this.updateLabelState(name, { values, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async fetchSeries(selector: string, lastFacetted?: string) {\n    const { languageProvider, timeRange } = this.props;\n    if (lastFacetted) {\n      this.updateLabelState(lastFacetted, { loading: true }, `Loading labels for ${selector}`);\n    }\n    try {\n      const possibleLabels = await languageProvider.fetchSeriesLabels(selector, { timeRange });\n      // If selector changed, clear loading state and discard result by returning early\n      if (selector !== buildSelector(this.state.labels)) {\n        if (lastFacetted) {\n          this.updateLabelState(lastFacetted, { loading: false });\n        }\n        return;\n      }\n      if (Object.keys(possibleLabels).length === 0) {\n        this.setState({ error: `Empty results, no matching label for ${selector}` });\n        return;\n      }\n      const labels: SelectableLabel[] = facetLabels(this.state.labels, possibleLabels, lastFacetted);\n      this.setState({ labels, error: '' });\n      if (lastFacetted) {\n        this.updateLabelState(lastFacetted, { loading: false });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async validateSelector(selector: string) {\n    const { languageProvider, timeRange } = this.props;\n    this.setState({ validationStatus: `Validating selector ${selector}`, error: '' });\n    const streams = await languageProvider.fetchSeries(selector, { timeRange });\n    this.setState({ validationStatus: `Selector is valid (${streams.length} streams found)` });\n  }\n\n  render() {\n    const { theme } = this.props;\n    const { labels, searchTerm, status, error, validationStatus } = this.state;\n    if (labels.length === 0) {\n      return <LoadingPlaceholder text=\"Loading labels...\" />;\n    }\n    const styles = getStyles(theme);\n    const selector = buildSelector(this.state.labels);\n    const empty = selector === EMPTY_SELECTOR;\n\n    let selectedLabels = labels.filter((label) => label.selected && label.values);\n    if (searchTerm) {\n      selectedLabels = selectedLabels.map((label) => {\n        const searchResults = label.values!.filter((value) => {\n          // Always return selected values\n          if (value.selected) {\n            value.highlightParts = undefined;\n            return true;\n          }\n          const fuzzyMatchResult = fuzzyMatch(value.name.toLowerCase(), searchTerm.toLowerCase());\n          if (fuzzyMatchResult.found) {\n            value.highlightParts = fuzzyMatchResult.ranges;\n            value.order = fuzzyMatchResult.distance;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        return {\n          ...label,\n          values: sortBy(searchResults, (value) => (value.selected ? -Infinity : value.order)),\n        };\n      });\n    } else {\n      // Clear highlight parts when searchTerm is cleared\n      selectedLabels = this.state.labels\n        .filter((label) => label.selected && label.values)\n        .map((label) => ({\n          ...label,\n          values: label?.values ? label.values.map((value) => ({ ...value, highlightParts: undefined })) : [],\n        }));\n    }\n\n    return (\n      <>\n        <div className={styles.wrapper}>\n          <div className={cx(styles.section, styles.wrapperPadding)}>\n            <Label description=\"Which labels would you like to consider for your search?\">\n              1. Select labels to search in\n            </Label>\n            <div className={styles.list}>\n              {labels.map((label) => (\n                <LokiLabel\n                  key={label.name}\n                  name={label.name}\n                  loading={label.loading}\n                  active={label.selected}\n                  hidden={label.hidden}\n                  facets={label.facets}\n                  onClick={this.onClickLabel}\n                />\n              ))}\n            </div>\n          </div>\n          <div className={cx(styles.section, styles.wrapperPadding)}>\n            <Label description=\"Choose the label values that you would like to use for the query. Use the search field to find values across selected labels.\">\n              2. Find values for the selected labels\n            </Label>\n            <div>\n              <Input\n                onChange={this.onChangeSearch}\n                aria-label=\"Filter expression for values\"\n                value={searchTerm}\n                placeholder={'Enter a label value'}\n              />\n            </div>\n            <div className={styles.valueListArea}>\n              {selectedLabels.map((label) => (\n                <div role=\"list\" key={label.name} className={styles.valueListWrapper}>\n                  <div className={styles.valueTitle} aria-label={`Values for ${label.name}`}>\n                    <LokiLabel\n                      name={label.name}\n                      loading={label.loading}\n                      active={label.selected}\n                      hidden={label.hidden}\n                      //If no facets, we want to show number of all label values\n                      facets={label.facets || label.values?.length}\n                      onClick={this.onClickLabel}\n                    />\n                  </div>\n                  <FixedSizeList\n                    height={200}\n                    itemCount={label.values?.length || 0}\n                    itemSize={28}\n                    itemKey={(i) => label.values?.[i].name ?? i}\n                    width={200}\n                    className={styles.valueList}\n                  >\n                    {({ index, style }) => {\n                      const value = label.values?.[index];\n                      if (!value) {\n                        return null;\n                      }\n                      return (\n                        <div style={style}>\n                          <LokiLabel\n                            name={label.name}\n                            value={value?.name}\n                            active={value?.selected}\n                            highlightParts={value?.highlightParts}\n                            onClick={this.onClickValue}\n                            searchTerm={searchTerm}\n                          />\n                        </div>\n                      );\n                    }}\n                  </FixedSizeList>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className={styles.footerSectionStyles}>\n          <Label>3. Resulting selector</Label>\n          <pre aria-label=\"selector\" className={styles.selector}>\n            {selector}\n          </pre>\n          {validationStatus && <div className={styles.validationStatus}>{validationStatus}</div>}\n          <div className={cx(styles.status, (status || error) && styles.statusShowing)}>\n            <span className={error ? styles.error : ''}>{error || status}</span>\n          </div>\n          <Stack gap={1}>\n            <Button aria-label=\"Use selector as logs button\" disabled={empty} onClick={this.onClickRunLogsQuery}>\n              Show logs\n            </Button>\n            <Button\n              aria-label=\"Use selector as metrics button\"\n              variant=\"secondary\"\n              disabled={empty}\n              onClick={this.onClickRunMetricsQuery}\n            >\n              Show logs rate\n            </Button>\n            <Button\n              aria-label=\"Validate submit button\"\n              variant=\"secondary\"\n              disabled={empty}\n              onClick={this.onClickValidate}\n            >\n              Validate selector\n            </Button>\n            <Button aria-label=\"Selector clear button\" variant=\"secondary\" onClick={this.onClickClear}>\n              Clear\n            </Button>\n          </Stack>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const LokiLabelBrowser = withTheme2(UnthemedLokiLabelBrowser);\n","import { css } from '@emotion/css';\nimport { useState, useEffect } from 'react';\n\nimport { CoreApp, GrafanaTheme2, LocalStorageValueProvider, TimeRange } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { LoadingPlaceholder, Modal, useStyles2 } from '@grafana/ui';\n\nimport { LokiLabelBrowser } from '../../components/LokiLabelBrowser';\nimport { LokiDatasource } from '../../datasource';\nimport { LokiQuery } from '../../types';\n\nexport interface Props {\n  isOpen: boolean;\n  datasource: LokiDatasource;\n  query: LokiQuery;\n  app?: CoreApp;\n  timeRange?: TimeRange;\n  onClose: () => void;\n  onChange: (query: LokiQuery) => void;\n  onRunQuery: () => void;\n}\n\nexport const LabelBrowserModal = (props: Props) => {\n  const { isOpen, onClose, datasource, app, timeRange } = props;\n  const [labelsLoaded, setLabelsLoaded] = useState(false);\n  const [hasLogLabels, setHasLogLabels] = useState(false);\n  const LAST_USED_LABELS_KEY = 'grafana.datasources.loki.browser.labels';\n\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    datasource.languageProvider.fetchLabels({ timeRange }).then((labels) => {\n      setLabelsLoaded(true);\n      setHasLogLabels(labels.length > 0);\n    });\n  }, [datasource, isOpen, timeRange]);\n\n  const changeQuery = (value: string) => {\n    const { query, onChange, onRunQuery } = props;\n    const nextQuery = { ...query, expr: value };\n    onChange(nextQuery);\n    onRunQuery();\n  };\n\n  const onChange = (selector: string) => {\n    changeQuery(selector);\n    onClose();\n  };\n\n  const reportInteractionAndClose = () => {\n    reportInteraction('grafana_loki_label_browser_closed', {\n      app,\n      closeType: 'modalClose',\n    });\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} title=\"Label browser\" onDismiss={reportInteractionAndClose} className={styles.modal}>\n      {!labelsLoaded && <LoadingPlaceholder text=\"Loading labels...\" />}\n      {labelsLoaded && !hasLogLabels && <p>No labels found.</p>}\n      {labelsLoaded && hasLogLabels && (\n        <LocalStorageValueProvider<string[]> storageKey={LAST_USED_LABELS_KEY} defaultValue={[]}>\n          {(lastUsedLabels, onLastUsedLabelsSave, onLastUsedLabelsDelete) => {\n            return (\n              <LokiLabelBrowser\n                languageProvider={datasource.languageProvider}\n                onChange={onChange}\n                lastUsedLabels={lastUsedLabels}\n                storeLastUsedLabels={onLastUsedLabelsSave}\n                deleteLastUsedLabels={onLastUsedLabelsDelete}\n                app={app}\n                timeRange={timeRange}\n              />\n            );\n          }}\n        </LocalStorageValueProvider>\n      )}\n    </Modal>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    modal: css({\n      width: '85vw',\n      [theme.breakpoints.down('md')]: {\n        width: '100%',\n      },\n    }),\n  };\n};\n","import { uniqBy } from 'lodash';\nimport React__default, { useState, useRef } from 'react';\nimport { v4 } from 'uuid';\nimport { toOption } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { InlineField, Select } from '@grafana/ui';\nimport { InputGroup } from '../../QueryEditor/InputGroup.js';\nimport { AccessoryButton } from '../../QueryEditor/AccessoryButton.js';\n\nconst CONFLICTING_LABEL_FILTER_ERROR_MESSAGE = \"You have conflicting label filters\";\nfunction LabelFilterItem({\n  item,\n  items,\n  defaultOp,\n  onChange,\n  onDelete,\n  onGetLabelNames,\n  onGetLabelValues,\n  invalidLabel,\n  invalidValue,\n  multiValueSeparator = \"|\"\n}) {\n  var _a;\n  const [state, setState] = useState({});\n  const [labelNamesMenuOpen, setLabelNamesMenuOpen] = useState(false);\n  const [labelValuesMenuOpen, setLabelValuesMenuOpen] = useState(false);\n  const isMultiSelect = (operator = item.op) => {\n    var _a2;\n    return (_a2 = operators.find((op) => op.label === operator)) == null ? undefined : _a2.isMultiValue;\n  };\n  const getSelectOptionsFromString = (item2) => {\n    if (item2) {\n      if (item2.indexOf(multiValueSeparator) > 0) {\n        return item2.split(multiValueSeparator);\n      }\n      return [item2];\n    }\n    return [];\n  };\n  const getOptions = () => {\n    const labelValues = state.labelValues ? [...state.labelValues] : [];\n    const selectedOptions = getSelectOptionsFromString(item == null ? undefined : item.value).map(toOption);\n    return uniqBy([...selectedOptions, ...labelValues], \"value\");\n  };\n  const isConflicting = isConflictingLabelFilter(item, items);\n  const { current: id } = useRef(v4());\n  return /* @__PURE__ */ React__default.createElement(\"div\", { \"data-testid\": \"visual-query-builder-dimensions-filter-item\" }, /* @__PURE__ */ React__default.createElement(InlineField, { error: CONFLICTING_LABEL_FILTER_ERROR_MESSAGE, invalid: isConflicting ? true : undefined }, /* @__PURE__ */ React__default.createElement(InputGroup, null, /* @__PURE__ */ React__default.createElement(\n    Select,\n    {\n      placeholder: \"Select label\",\n      \"data-testid\": selectors.components.QueryBuilder.labelSelect,\n      inputId: `visual-query-builder-dimensions-filter-item-key-${id}`,\n      width: \"auto\",\n      value: item.label ? toOption(item.label) : null,\n      allowCustomValue: true,\n      onOpenMenu: async () => {\n        setState({ isLoadingLabelNames: true });\n        const labelNames = await onGetLabelNames(item);\n        setLabelNamesMenuOpen(true);\n        setState({ labelNames, isLoadingLabelNames: undefined });\n      },\n      onCloseMenu: () => {\n        setLabelNamesMenuOpen(false);\n      },\n      isOpen: labelNamesMenuOpen,\n      isLoading: state.isLoadingLabelNames,\n      options: state.labelNames,\n      onChange: (change) => {\n        var _a2;\n        if (change.value) {\n          onChange({\n            ...item,\n            op: (_a2 = item.op) != null ? _a2 : defaultOp,\n            label: change.value\n          });\n        }\n      },\n      invalid: isConflicting || invalidLabel\n    }\n  ), /* @__PURE__ */ React__default.createElement(\n    Select,\n    {\n      \"data-testid\": selectors.components.QueryBuilder.matchOperatorSelect,\n      value: toOption((_a = item.op) != null ? _a : defaultOp),\n      options: operators,\n      width: \"auto\",\n      onChange: (change) => {\n        if (change.value) {\n          onChange({\n            ...item,\n            op: change.value,\n            value: isMultiSelect(change.value) ? item.value : getSelectOptionsFromString(item == null ? undefined : item.value)[0]\n          });\n        }\n      },\n      invalid: isConflicting\n    }\n  ), /* @__PURE__ */ React__default.createElement(\n    Select,\n    {\n      placeholder: \"Select value\",\n      \"data-testid\": selectors.components.QueryBuilder.valueSelect,\n      inputId: `visual-query-builder-dimensions-filter-item-value-${id}`,\n      width: \"auto\",\n      value: isMultiSelect() ? getSelectOptionsFromString(item == null ? undefined : item.value).map(toOption) : getSelectOptionsFromString(item == null ? undefined : item.value).map(toOption)[0],\n      allowCustomValue: true,\n      onOpenMenu: async () => {\n        setState({ isLoadingLabelValues: true });\n        const labelValues = await onGetLabelValues(item);\n        setState({\n          ...state,\n          labelValues,\n          isLoadingLabelValues: undefined\n        });\n        setLabelValuesMenuOpen(true);\n      },\n      onCloseMenu: () => {\n        setLabelValuesMenuOpen(false);\n      },\n      isOpen: labelValuesMenuOpen,\n      isMulti: isMultiSelect(),\n      isLoading: state.isLoadingLabelValues,\n      options: getOptions(),\n      onChange: (change) => {\n        var _a2, _b;\n        if (change.value) {\n          onChange({\n            ...item,\n            value: change.value,\n            op: (_a2 = item.op) != null ? _a2 : defaultOp\n          });\n        } else {\n          const changes = change.map((change2) => {\n            if (change2.value) {\n              return change2.value;\n            } else {\n              return undefined;\n            }\n          }).filter((val) => val !== undefined).join(multiValueSeparator);\n          onChange({ ...item, value: changes, op: (_b = item.op) != null ? _b : defaultOp });\n        }\n      },\n      invalid: isConflicting || invalidValue\n    }\n  ), /* @__PURE__ */ React__default.createElement(AccessoryButton, { \"aria-label\": \"remove\", icon: \"times\", variant: \"secondary\", onClick: onDelete }))));\n}\nconst operators = [\n  { label: \"=\", value: \"=\", description: \"Equals\", isMultiValue: false },\n  { label: \"!=\", value: \"!=\", description: \"Does not equal\", isMultiValue: false },\n  { label: \"=~\", value: \"=~\", description: \"Matches regex\", isMultiValue: true },\n  { label: \"!~\", value: \"!~\", description: \"Does not match regex\", isMultiValue: true }\n];\nfunction isConflictingLabelFilter(newLabel, labels) {\n  if (!newLabel.label || !newLabel.op || !newLabel.value) {\n    return false;\n  }\n  if (labels.length < 2) {\n    return false;\n  }\n  const operationIsNegative = newLabel.op.toString().startsWith(\"!\");\n  const candidates = labels.filter(\n    (label) => label.label === newLabel.label && label.value === newLabel.value && label.op !== newLabel.op\n  );\n  const conflict = candidates.some((candidate) => {\n    var _a, _b;\n    if (operationIsNegative && ((_a = candidate == null ? undefined : candidate.op) == null ? undefined : _a.toString().startsWith(\"!\")) === false) {\n      return true;\n    }\n    if (operationIsNegative === false && ((_b = candidate == null ? undefined : candidate.op) == null ? undefined : _b.toString().startsWith(\"!\"))) {\n      return true;\n    }\n    return false;\n  });\n  return conflict;\n}\n\nexport { LabelFilterItem, isConflictingLabelFilter };\n//# sourceMappingURL=LabelFilterItem.js.map\n","import { isEqual } from 'lodash';\nimport React__default, { useState, useEffect } from 'react';\nimport '@grafana/data';\nimport { EditorField } from '../../QueryEditor/EditorField.js';\nimport { EditorFieldGroup } from '../../QueryEditor/EditorFieldGroup.js';\nimport { EditorList } from '../../QueryEditor/EditorList.js';\nimport { LabelFilterItem } from './LabelFilterItem.js';\n\nconst MISSING_LABEL_FILTER_ERROR_MESSAGE = \"Select at least 1 label filter (label and value)\";\nfunction LabelFilters({\n  labelsFilters,\n  onChange,\n  onGetLabelNames,\n  onGetLabelValues,\n  labelFilterRequired,\n  multiValueSeparator\n}) {\n  const defaultOp = \"=\";\n  const [items, setItems] = useState([{ op: defaultOp }]);\n  useEffect(() => {\n    if (labelsFilters.length > 0) {\n      setItems(labelsFilters);\n    } else {\n      setItems([{ op: defaultOp }]);\n    }\n  }, [labelsFilters]);\n  const onLabelsChange = (newItems) => {\n    setItems(newItems);\n    const newLabels = newItems.filter(\n      (item) => item.label !== undefined && item.value !== undefined\n    );\n    if (!isEqual(newLabels, labelsFilters)) {\n      onChange(newLabels);\n    }\n  };\n  const hasLabelFilter = items.some((item) => item.label && item.value);\n  return /* @__PURE__ */ React__default.createElement(EditorFieldGroup, null, /* @__PURE__ */ React__default.createElement(\n    EditorField,\n    {\n      label: \"Label filters\",\n      error: MISSING_LABEL_FILTER_ERROR_MESSAGE,\n      invalid: labelFilterRequired && !hasLabelFilter\n    },\n    /* @__PURE__ */ React__default.createElement(\n      EditorList,\n      {\n        items,\n        onChange: onLabelsChange,\n        renderItem: (item, onChangeItem, onDelete) => /* @__PURE__ */ React__default.createElement(\n          LabelFilterItem,\n          {\n            item,\n            items,\n            defaultOp,\n            onChange: onChangeItem,\n            onDelete,\n            onGetLabelNames,\n            onGetLabelValues,\n            invalidLabel: labelFilterRequired && !item.label,\n            invalidValue: labelFilterRequired && !item.value,\n            multiValueSeparator\n          }\n        )\n      }\n    )\n  ));\n}\n\nexport { LabelFilters, MISSING_LABEL_FILTER_ERROR_MESSAGE };\n//# sourceMappingURL=LabelFilters.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport { renderMarkdown } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nfunction OperationExplainedBox({ title, stepNumber, markdown, children }) {\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.box }, stepNumber !== undefined && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.stepNumber }, stepNumber), /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.boxInner }, title && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.header }, /* @__PURE__ */ React__default.createElement(\"span\", null, title)), /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.body }, markdown && /* @__PURE__ */ React__default.createElement(\"div\", { dangerouslySetInnerHTML: { __html: renderMarkdown(markdown) } }), children)));\n}\nconst getStyles = (theme) => {\n  return {\n    box: css({\n      background: theme.colors.background.secondary,\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.radius.default,\n      position: \"relative\"\n    }),\n    boxInner: css({\n      marginLeft: theme.spacing(4)\n    }),\n    stepNumber: css({\n      fontWeight: theme.typography.fontWeightMedium,\n      background: theme.colors.secondary.main,\n      width: \"20px\",\n      height: \"20px\",\n      borderRadius: theme.shape.radius.circle,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      top: \"10px\",\n      left: \"11px\",\n      fontSize: theme.typography.bodySmall.fontSize\n    }),\n    header: css({\n      paddingBottom: theme.spacing(0.5),\n      display: \"flex\",\n      alignItems: \"center\",\n      fontFamily: theme.typography.fontFamilyMonospace\n    }),\n    body: css({\n      color: theme.colors.text.secondary,\n      \"p:last-child\": {\n        margin: 0\n      },\n      a: {\n        color: theme.colors.text.link,\n        textDecoration: \"underline\"\n      }\n    })\n  };\n};\n\nexport { OperationExplainedBox };\n//# sourceMappingURL=OperationExplainedBox.js.map\n","import { css } from '@emotion/css';\nimport React__default, { useState } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport { renderMarkdown } from '@grafana/data';\nimport { useStyles2, Button, Portal } from '@grafana/ui';\nimport { FlexItem } from '../../QueryEditor/FlexItem.js';\n\nconst OperationInfoButton = React__default.memo(({ definition, operation, innerQueryPlaceholder }) => {\n  const styles = useStyles2(getStyles);\n  const [show, setShow] = useState(false);\n  const { getTooltipProps, setTooltipRef, setTriggerRef, visible } = usePopperTooltip({\n    placement: \"top\",\n    visible: show,\n    offset: [0, 16],\n    onVisibleChange: setShow,\n    interactive: true,\n    trigger: [\"click\"]\n  });\n  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement(\n    Button,\n    {\n      title: \"Click to show description\",\n      ref: setTriggerRef,\n      icon: \"info-circle\",\n      size: \"sm\",\n      variant: \"secondary\",\n      fill: \"text\"\n    }\n  ), visible && /* @__PURE__ */ React__default.createElement(Portal, null, /* @__PURE__ */ React__default.createElement(\"div\", { ref: setTooltipRef, ...getTooltipProps(), className: styles.docBox }, /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.docBoxHeader }, /* @__PURE__ */ React__default.createElement(\"span\", null, definition.renderer(operation, definition, innerQueryPlaceholder)), /* @__PURE__ */ React__default.createElement(FlexItem, { grow: 1 }), /* @__PURE__ */ React__default.createElement(\n    Button,\n    {\n      icon: \"times\",\n      onClick: () => setShow(false),\n      fill: \"text\",\n      variant: \"secondary\",\n      title: \"Remove operation\"\n    }\n  )), /* @__PURE__ */ React__default.createElement(\n    \"div\",\n    {\n      className: styles.docBoxBody,\n      dangerouslySetInnerHTML: { __html: getOperationDocs(definition, operation) }\n    }\n  ))));\n});\nOperationInfoButton.displayName = \"OperationDocs\";\nconst getStyles = (theme) => {\n  return {\n    docBox: css({\n      overflow: \"hidden\",\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.strong}`,\n      boxShadow: theme.shadows.z3,\n      maxWidth: \"600px\",\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.radius.default,\n      zIndex: theme.zIndex.tooltip\n    }),\n    docBoxHeader: css({\n      fontSize: theme.typography.h5.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace,\n      paddingBottom: theme.spacing(1),\n      display: \"flex\",\n      alignItems: \"center\"\n    }),\n    docBoxBody: css({\n      // The markdown paragraph has a marginBottom this removes it\n      marginBottom: theme.spacing(-1),\n      color: theme.colors.text.secondary\n    }),\n    signature: css({\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace\n    }),\n    dropdown: css({\n      opacity: 0,\n      color: theme.colors.text.secondary\n    })\n  };\n};\nfunction getOperationDocs(def, op) {\n  var _a;\n  return renderMarkdown(def.explainHandler ? def.explainHandler(op, def) : (_a = def.documentation) != null ? _a : \"no docs\");\n}\n\nexport { OperationInfoButton };\n//# sourceMappingURL=OperationInfoButton.js.map\n","import { css } from '@emotion/css';\nimport React__default, { useState } from 'react';\nimport '@hello-pangea/dnd';\nimport '@grafana/data';\nimport { useStyles2, Button, Select } from '@grafana/ui';\nimport { OperationInfoButton } from './OperationInfoButton.js';\nimport { FlexItem } from '../../QueryEditor/FlexItem.js';\n\nconst OperationHeader = React__default.memo(\n  ({ operation, definition, index, onChange, onRemove, onToggle, queryModeller, dragHandleProps }) => {\n    var _a;\n    const styles = useStyles2(getStyles);\n    const [state, setState] = useState({});\n    const onToggleSwitcher = () => {\n      if (state.isOpen) {\n        setState({ ...state, isOpen: false });\n      } else {\n        const alternatives = queryModeller.getAlternativeOperations(definition.alternativesKey).map((alt) => ({ label: alt.name, value: alt }));\n        setState({ isOpen: true, alternatives });\n      }\n    };\n    return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.header }, !state.isOpen && /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement(\"div\", { ...dragHandleProps }, (_a = definition.name) != null ? _a : definition.id), /* @__PURE__ */ React__default.createElement(FlexItem, { grow: 1 }), /* @__PURE__ */ React__default.createElement(\"div\", { className: `${styles.operationHeaderButtons} operation-header-show-on-hover` }, /* @__PURE__ */ React__default.createElement(\n      Button,\n      {\n        icon: \"angle-down\",\n        size: \"sm\",\n        onClick: onToggleSwitcher,\n        fill: \"text\",\n        variant: \"secondary\",\n        title: \"Click to view alternative operations\"\n      }\n    ), /* @__PURE__ */ React__default.createElement(\n      OperationInfoButton,\n      {\n        definition,\n        operation,\n        innerQueryPlaceholder: queryModeller.innerQueryPlaceholder\n      }\n    ), definition.toggleable && /* @__PURE__ */ React__default.createElement(\n      Button,\n      {\n        icon: operation.disabled ? \"eye-slash\" : \"eye\",\n        size: \"sm\",\n        onClick: () => onToggle(index),\n        fill: \"text\",\n        variant: \"secondary\",\n        title: operation.disabled ? \"Enable operation\" : \"Disable operation\"\n      }\n    ), /* @__PURE__ */ React__default.createElement(\n      Button,\n      {\n        icon: \"times\",\n        size: \"sm\",\n        onClick: () => onRemove(index),\n        fill: \"text\",\n        variant: \"secondary\",\n        title: \"Remove operation\"\n      }\n    ))), state.isOpen && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.selectWrapper }, /* @__PURE__ */ React__default.createElement(\n      Select,\n      {\n        autoFocus: true,\n        openMenuOnFocus: true,\n        placeholder: \"Replace with\",\n        options: state.alternatives,\n        isOpen: true,\n        onCloseMenu: onToggleSwitcher,\n        onChange: (value) => {\n          if (value.value) {\n            const newDef = queryModeller.getOperationDefinition(value.value.id);\n            const newParams = [...newDef.defaultParams];\n            for (let i = 0; i < Math.min(operation.params.length, newParams.length); i++) {\n              if (newDef.params[i].type === definition.params[i].type) {\n                newParams[i] = operation.params[i];\n              }\n            }\n            const changedOp = { ...operation, params: newParams, id: value.value.id };\n            onChange(\n              index,\n              definition.changeTypeHandler ? definition.changeTypeHandler(changedOp, newDef) : changedOp\n            );\n          }\n        }\n      }\n    )));\n  }\n);\nOperationHeader.displayName = \"OperationHeader\";\nconst getStyles = (theme) => {\n  return {\n    header: css({\n      borderBottom: `1px solid ${theme.colors.border.medium}`,\n      padding: theme.spacing(0.5, 0.5, 0.5, 1),\n      display: \"flex\",\n      alignItems: \"center\"\n    }),\n    operationHeaderButtons: css({\n      opacity: 1\n    }),\n    selectWrapper: css({\n      paddingRight: theme.spacing(2)\n    })\n  };\n};\n\nexport { OperationHeader };\n//# sourceMappingURL=OperationHeader.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport { toOption } from '@grafana/data';\nimport { AutoSizeInput, Checkbox, useStyles2, Button, Select } from '@grafana/ui';\nimport '../../QueryEditor/types.js';\nimport 'lodash';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport 'react-use';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport 'uuid';\nimport '@grafana/runtime';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction getOperationParamEditor(paramDef) {\n  if (paramDef.editor) {\n    return paramDef.editor;\n  }\n  if (paramDef.options) {\n    return SelectInputParamEditor;\n  }\n  switch (paramDef.type) {\n    case \"boolean\":\n      return BoolInputParamEditor;\n    case \"number\":\n    case \"string\":\n    default:\n      return SimpleInputParamEditor;\n  }\n}\nfunction SimpleInputParamEditor(props) {\n  var _a;\n  return /* @__PURE__ */ React__default.createElement(\n    AutoSizeInput,\n    {\n      id: getOperationParamId(props.operationId, props.index),\n      defaultValue: (_a = props.value) == null ? undefined : _a.toString(),\n      minWidth: props.paramDef.minWidth,\n      placeholder: props.paramDef.placeholder,\n      title: props.paramDef.description,\n      maxWidth: (props.paramDef.minWidth || 20) * 3,\n      onCommitChange: (evt) => {\n        props.onChange(props.index, evt.currentTarget.value);\n        if (props.paramDef.runQueryOnEnter && evt.type === \"keydown\") {\n          props.onRunQuery();\n        }\n      }\n    }\n  );\n}\nfunction BoolInputParamEditor(props) {\n  return /* @__PURE__ */ React__default.createElement(\n    Checkbox,\n    {\n      id: getOperationParamId(props.operationId, props.index),\n      value: Boolean(props.value),\n      onChange: (evt) => props.onChange(props.index, evt.currentTarget.checked)\n    }\n  );\n}\nfunction SelectInputParamEditor({\n  paramDef,\n  value,\n  index,\n  operationId,\n  onChange\n}) {\n  var _a, _b;\n  const styles = useStyles2(getStyles);\n  let selectOptions = paramDef.options;\n  if (!((_a = selectOptions[0]) == null ? undefined : _a.label)) {\n    selectOptions = paramDef.options.map((option) => ({\n      label: option.toString(),\n      value: option\n    }));\n  }\n  let valueOption = (_b = selectOptions.find((x) => x.value === value)) != null ? _b : toOption(value);\n  if (!value && paramDef.optional) {\n    return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.optionalParam }, /* @__PURE__ */ React__default.createElement(\n      Button,\n      {\n        size: \"sm\",\n        variant: \"secondary\",\n        title: `Add ${paramDef.name}`,\n        icon: \"plus\",\n        onClick: () => onChange(index, selectOptions[0].value)\n      },\n      paramDef.name\n    ));\n  }\n  return /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 0.5, direction: \"row\", alignItems: \"center\" }, /* @__PURE__ */ React__default.createElement(\n    Select,\n    {\n      id: getOperationParamId(operationId, index),\n      value: valueOption,\n      options: selectOptions,\n      placeholder: paramDef.placeholder,\n      allowCustomValue: true,\n      onChange: (value2) => onChange(index, value2.value),\n      width: paramDef.minWidth || \"auto\"\n    }\n  ), paramDef.optional && /* @__PURE__ */ React__default.createElement(\n    Button,\n    {\n      \"data-testid\": `operations.${index}.remove-param`,\n      size: \"sm\",\n      fill: \"text\",\n      icon: \"times\",\n      variant: \"secondary\",\n      title: `Remove ${paramDef.name}`,\n      onClick: () => onChange(index, \"\")\n    }\n  ));\n}\nconst getStyles = (theme) => {\n  return {\n    optionalParam: css({\n      marginTop: theme.spacing(1)\n    })\n  };\n};\nfunction getOperationParamId(operationId, paramIndex) {\n  return `operations.${operationId}.param.${paramIndex}`;\n}\n\nexport { getOperationParamEditor, getOperationParamId };\n//# sourceMappingURL=OperationParamEditor.js.map\n","import React__default, { useRef, useState, useEffect } from 'react';\nimport '@hello-pangea/dnd';\nimport { useTheme2, Tooltip, Icon, Button } from '@grafana/ui';\nimport { cx, css } from '@emotion/css';\nimport '@grafana/data';\nimport { OperationHeader } from './OperationHeader.js';\nimport { getOperationParamEditor, getOperationParamId } from './OperationParamEditor.js';\nimport { v4 } from 'uuid';\nimport '../../QueryEditor/types.js';\nimport 'lodash';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport 'react-use';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport '@grafana/runtime';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction OperationEditorBody({\n  provided,\n  flash,\n  isConflicting,\n  highlight,\n  index,\n  queryModeller,\n  onChange,\n  onRemove,\n  onToggle,\n  operation,\n  definition,\n  query,\n  timeRange,\n  onRunQuery,\n  datasource\n}) {\n  const theme = useTheme2();\n  const styles = getStyles(theme, isConflicting);\n  const shouldFlash = useFlash(flash);\n  const { current: id } = useRef(v4());\n  const onParamValueChanged = (paramIdx, value) => {\n    const update = { ...operation, params: [...operation.params] };\n    update.params[paramIdx] = value;\n    callParamChangedThenOnChange(definition, update, index, paramIdx, onChange);\n  };\n  const onAddRestParam = () => {\n    const update = { ...operation, params: [...operation.params, \"\"] };\n    callParamChangedThenOnChange(definition, update, index, operation.params.length, onChange);\n  };\n  const onRemoveRestParam = (paramIdx) => {\n    const update = {\n      ...operation,\n      params: [...operation.params.slice(0, paramIdx), ...operation.params.slice(paramIdx + 1)]\n    };\n    callParamChangedThenOnChange(definition, update, index, paramIdx, onChange);\n  };\n  let restParam;\n  if (definition.params.length > 0) {\n    const lastParamDef = definition.params[definition.params.length - 1];\n    if (lastParamDef.restParam) {\n      restParam = renderAddRestParamButton(lastParamDef, onAddRestParam, index, operation.params.length, styles);\n    }\n  }\n  return /* @__PURE__ */ React__default.createElement(\n    \"div\",\n    {\n      className: cx(styles.card, {\n        [styles.cardHighlight]: shouldFlash || highlight,\n        [styles.cardError]: isConflicting,\n        [styles.disabled]: operation.disabled\n      }),\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      \"data-testid\": `operations.${index}.wrapper`\n    },\n    /* @__PURE__ */ React__default.createElement(\n      OperationHeader,\n      {\n        operation,\n        dragHandleProps: provided.dragHandleProps,\n        definition,\n        index,\n        onChange,\n        onRemove,\n        onToggle,\n        queryModeller\n      }\n    ),\n    /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.body }, operation.params.map((param, paramIndex) => {\n      const paramDef = definition.params[Math.min(definition.params.length - 1, paramIndex)];\n      const Editor = getOperationParamEditor(paramDef);\n      return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.paramRow, key: `${paramIndex}-1` }, !paramDef.hideName && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.paramName }, /* @__PURE__ */ React__default.createElement(\"label\", { htmlFor: getOperationParamId(id, paramIndex) }, paramDef.name), paramDef.description && /* @__PURE__ */ React__default.createElement(Tooltip, { placement: \"top\", content: paramDef.description, theme: \"info\" }, /* @__PURE__ */ React__default.createElement(Icon, { name: \"info-circle\", size: \"sm\", className: styles.infoIcon }))), /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.paramValue }, /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 0.5, direction: \"row\", alignItems: \"center\", wrap: false }, /* @__PURE__ */ React__default.createElement(\n        Editor,\n        {\n          index: paramIndex,\n          paramDef,\n          value: operation.params[paramIndex],\n          operation,\n          operationId: id,\n          onChange: onParamValueChanged,\n          onRunQuery,\n          query,\n          datasource,\n          timeRange,\n          queryModeller\n        }\n      ), paramDef.restParam && (operation.params.length > definition.params.length || paramDef.optional) && /* @__PURE__ */ React__default.createElement(\n        Button,\n        {\n          \"data-testid\": `operations.${index}.remove-rest-param`,\n          size: \"sm\",\n          fill: \"text\",\n          icon: \"times\",\n          variant: \"secondary\",\n          title: `Remove ${paramDef.name}`,\n          onClick: () => onRemoveRestParam(paramIndex)\n        }\n      ))));\n    })),\n    restParam,\n    index < query.operations.length - 1 && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.arrow }, /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.arrowLine }), /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.arrowArrow }))\n  );\n}\nconst getStyles = (theme, isConflicting) => {\n  return {\n    cardWrapper: css({\n      alignItems: \"stretch\"\n    }),\n    error: css({\n      marginBottom: theme.spacing(1)\n    }),\n    card: css({\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.medium}`,\n      cursor: \"grab\",\n      borderRadius: theme.shape.radius.default,\n      position: \"relative\",\n      transition: \"all 0.5s ease-in 0s\",\n      height: isConflicting ? \"auto\" : \"100%\"\n    }),\n    disabled: css({\n      opacity: 0.5,\n      transition: \"none\"\n    }),\n    cardError: css({\n      boxShadow: `0px 0px 4px 0px ${theme.colors.warning.main}`,\n      border: `1px solid ${theme.colors.warning.main}`\n    }),\n    cardHighlight: css({\n      boxShadow: `0px 0px 4px 0px ${theme.colors.primary.border}`,\n      border: `1px solid ${theme.colors.primary.border}`\n    }),\n    infoIcon: css({\n      marginLeft: theme.spacing(0.5),\n      color: theme.colors.text.secondary,\n      \":hover\": {\n        color: theme.colors.text.primary\n      }\n    }),\n    body: css({\n      margin: theme.spacing(1, 1, 0.5, 1),\n      display: \"table\"\n    }),\n    paramRow: css({\n      label: \"paramRow\",\n      display: \"table-row\",\n      verticalAlign: \"middle\"\n    }),\n    paramName: css({\n      display: \"table-cell\",\n      padding: theme.spacing(0, 1, 0, 0),\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      verticalAlign: \"middle\",\n      height: \"32px\"\n    }),\n    paramValue: css({\n      label: \"paramValue\",\n      display: \"table-cell\",\n      verticalAlign: \"middle\"\n    }),\n    restParam: css({\n      padding: theme.spacing(0, 1, 1, 1)\n    }),\n    arrow: css({\n      position: \"absolute\",\n      top: \"0\",\n      right: \"-18px\",\n      display: \"flex\"\n    }),\n    arrowLine: css({\n      height: \"2px\",\n      width: \"8px\",\n      backgroundColor: theme.colors.border.strong,\n      position: \"relative\",\n      top: \"14px\"\n    }),\n    arrowArrow: css({\n      width: 0,\n      height: 0,\n      borderTop: `5px solid transparent`,\n      borderBottom: `5px solid transparent`,\n      borderLeft: `7px solid ${theme.colors.border.strong}`,\n      position: \"relative\",\n      top: \"10px\"\n    })\n  };\n};\nfunction useFlash(flash) {\n  const [keepFlash, setKeepFlash] = useState(true);\n  useEffect(() => {\n    let t;\n    if (flash) {\n      t = setTimeout(() => {\n        setKeepFlash(false);\n      }, 1e3);\n    } else {\n      setKeepFlash(true);\n    }\n    return () => clearTimeout(t);\n  }, [flash]);\n  return keepFlash && flash;\n}\nfunction callParamChangedThenOnChange(def, operation, operationIndex, paramIndex, onChange) {\n  if (def.paramChangedHandler) {\n    onChange(operationIndex, def.paramChangedHandler(paramIndex, operation, def));\n  } else {\n    onChange(operationIndex, operation);\n  }\n}\nfunction renderAddRestParamButton(paramDef, onAddRestParam, operationIndex, paramIndex, styles) {\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.restParam, key: `${paramIndex}-2` }, /* @__PURE__ */ React__default.createElement(\n    Button,\n    {\n      size: \"sm\",\n      icon: \"plus\",\n      title: `Add ${paramDef.name}`.trimEnd(),\n      variant: \"secondary\",\n      onClick: onAddRestParam,\n      \"data-testid\": `operations.${operationIndex}.add-rest-param`\n    },\n    paramDef.name\n  ));\n}\n\nexport { OperationEditorBody };\n//# sourceMappingURL=OperationEditorBody.js.map\n","import { cx, css } from '@emotion/css';\nimport React__default from 'react';\nimport { Draggable } from '@hello-pangea/dnd';\nimport '@grafana/data';\nimport { useTheme2, InlineField } from '@grafana/ui';\nimport { OperationEditorBody } from './OperationEditorBody.js';\n\nfunction OperationEditor({\n  operation,\n  index,\n  onRemove,\n  onToggle,\n  onChange,\n  onRunQuery,\n  queryModeller,\n  query,\n  datasource,\n  flash,\n  highlight,\n  timeRange,\n  isConflictingOperation\n}) {\n  const def = queryModeller.getOperationDefinition(operation.id);\n  const theme = useTheme2();\n  const isConflicting = isConflictingOperation ? isConflictingOperation(operation, query.operations) : false;\n  const styles = getStyles(theme);\n  if (!def) {\n    return /* @__PURE__ */ React__default.createElement(\"span\", null, \"Operation \", operation.id, \" not found\");\n  }\n  const isInvalid = (isDragging) => {\n    if (isDragging) {\n      return undefined;\n    }\n    return isConflicting ? true : undefined;\n  };\n  return /* @__PURE__ */ React__default.createElement(Draggable, { draggableId: `operation-${index}`, index }, (provided, snapshot) => /* @__PURE__ */ React__default.createElement(\n    InlineField,\n    {\n      error: \"You have conflicting label filters\",\n      invalid: isInvalid(snapshot.isDragging),\n      className: cx(styles.error, styles.cardWrapper)\n    },\n    /* @__PURE__ */ React__default.createElement(\n      OperationEditorBody,\n      {\n        provided,\n        flash,\n        highlight,\n        isConflicting,\n        index,\n        operation,\n        definition: def,\n        onChange,\n        onRemove,\n        onToggle,\n        queryModeller,\n        query,\n        timeRange,\n        onRunQuery,\n        datasource\n      }\n    )\n  ));\n}\nconst getStyles = (theme, isConflicting) => {\n  return {\n    cardWrapper: css({\n      alignItems: \"stretch\"\n    }),\n    error: css({\n      marginBottom: theme.spacing(1)\n    })\n  };\n};\n\nexport { OperationEditor };\n//# sourceMappingURL=OperationEditor.js.map\n","import { css } from '@emotion/css';\nimport React__default, { useState } from 'react';\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\nimport { useMountedState, usePrevious } from 'react-use';\nimport '@grafana/data';\nimport { useStyles2, Cascader, Button } from '@grafana/ui';\nimport { OperationEditor } from './OperationEditor.js';\nimport '../../QueryEditor/types.js';\nimport 'lodash';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport 'uuid';\nimport '@grafana/runtime';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction OperationList({\n  query,\n  datasource,\n  queryModeller,\n  onChange,\n  onRunQuery,\n  highlightedOp,\n  timeRange,\n  isConflictingOperation\n}) {\n  const styles = useStyles2(getStyles);\n  const { operations } = query;\n  const opsToHighlight = useOperationsHighlight(operations);\n  const [cascaderOpen, setCascaderOpen] = useState(false);\n  const onOperationChange = (index, update) => {\n    const updatedList = [...operations];\n    updatedList.splice(index, 1, update);\n    onChange({ ...query, operations: updatedList });\n  };\n  const onRemove = (index) => {\n    const updatedList = [...operations.slice(0, index), ...operations.slice(index + 1)];\n    onChange({ ...query, operations: updatedList });\n  };\n  const onToggle = (index) => {\n    onOperationChange(index, { ...operations[index], disabled: !operations[index].disabled });\n  };\n  const addOptions = queryModeller.getCategories().map((category) => {\n    return {\n      value: category,\n      label: category,\n      items: queryModeller.getOperationsForCategory(category).map((operation) => ({\n        value: operation.id,\n        label: operation.name,\n        isLeaf: true\n      }))\n    };\n  });\n  const onAddOperation = (value) => {\n    const operationDef = queryModeller.getOperationDefinition(value);\n    if (!operationDef) {\n      return;\n    }\n    onChange(operationDef.addOperationHandler(operationDef, query, queryModeller));\n    setCascaderOpen(false);\n  };\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const updatedList = [...operations];\n    const element = updatedList[result.source.index];\n    updatedList.splice(result.source.index, 1);\n    updatedList.splice(result.destination.index, 0, element);\n    onChange({ ...query, operations: updatedList });\n  };\n  const onCascaderBlur = () => {\n    setCascaderOpen(false);\n  };\n  return /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 1, direction: \"column\" }, /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 1 }, operations.length > 0 && /* @__PURE__ */ React__default.createElement(DragDropContext, { onDragEnd }, /* @__PURE__ */ React__default.createElement(Droppable, { droppableId: \"sortable-field-mappings\", direction: \"horizontal\" }, (provided) => /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.operationList, ref: provided.innerRef, ...provided.droppableProps }, operations.map((op, index) => {\n    return /* @__PURE__ */ React__default.createElement(\n      OperationEditor,\n      {\n        key: op.id + JSON.stringify(op.params) + index,\n        queryModeller,\n        index,\n        operation: op,\n        query,\n        datasource,\n        onChange: onOperationChange,\n        onRemove,\n        onToggle,\n        onRunQuery,\n        flash: opsToHighlight[index],\n        highlight: highlightedOp === op,\n        timeRange,\n        isConflictingOperation\n      }\n    );\n  }), provided.placeholder))), /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.addButton }, cascaderOpen ? /* @__PURE__ */ React__default.createElement(\n    Cascader,\n    {\n      options: addOptions,\n      onSelect: onAddOperation,\n      onBlur: onCascaderBlur,\n      autoFocus: true,\n      alwaysOpen: true,\n      hideActiveLevelLabel: true,\n      placeholder: \"Search\"\n    }\n  ) : /* @__PURE__ */ React__default.createElement(Button, { icon: \"plus\", variant: \"secondary\", onClick: () => setCascaderOpen(true), title: \"Add operation\" }, \"Operations\"))));\n}\nfunction useOperationsHighlight(operations) {\n  const isMounted = useMountedState();\n  const prevOperations = usePrevious(operations);\n  if (!isMounted()) {\n    return operations.map(() => false);\n  }\n  if (!prevOperations) {\n    return operations.map(() => true);\n  }\n  let newOps = [];\n  if (prevOperations.length - 1 === operations.length && operations.every((op) => prevOperations.includes(op))) {\n    return operations.map(() => false);\n  }\n  if (prevOperations.length + 1 === operations.length && prevOperations.every((op) => operations.includes(op))) {\n    const newOp = operations.find((op) => !prevOperations.includes(op));\n    newOps = operations.map((op) => {\n      return op === newOp;\n    });\n  } else {\n    newOps = operations.map((op, index) => {\n      var _a;\n      return !isSameOp(op.id, (_a = prevOperations[index]) == null ? undefined : _a.id);\n    });\n  }\n  return newOps;\n}\nfunction isSameOp(op1, op2) {\n  return op1 === op2 || `__${op1}_by` === op2 || op1 === `__${op2}_by`;\n}\nconst getStyles = (theme) => {\n  return {\n    heading: css({\n      label: \"heading\",\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeightMedium,\n      marginBottom: 0\n    }),\n    operationList: css({\n      label: \"operationList\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: theme.spacing(2)\n    }),\n    addButton: css({\n      label: \"addButton\",\n      width: 126,\n      paddingBottom: theme.spacing(1)\n    })\n  };\n};\n\nexport { OperationList };\n//# sourceMappingURL=OperationList.js.map\n","import { css } from '@emotion/css';\nimport React__default, { useState, useEffect } from 'react';\nimport '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { useStyles2, Tooltip, Button } from '@grafana/ui';\n\nconst QueryBuilderHints = ({\n  datasource,\n  query: visualQuery,\n  onChange,\n  data,\n  queryModeller,\n  buildVisualQueryFromString,\n  buildDataQueryFromQueryString,\n  buildQueryStringFromDataQuery\n}) => {\n  const [hints, setHints] = useState([]);\n  const styles = useStyles2(getStyles);\n  useEffect(() => {\n    var _a;\n    const dataQuery = buildDataQueryFromQueryString(queryModeller.renderQuery(visualQuery));\n    const hints2 = (_a = datasource.getQueryHints) == null ? undefined : _a.call(datasource, dataQuery, (data == null ? undefined : data.series) || []).filter((hint) => {\n      var _a2;\n      return (_a2 = hint.fix) == null ? undefined : _a2.action;\n    });\n    setHints(hints2 != null ? hints2 : []);\n  }, [datasource, visualQuery, data, queryModeller, buildDataQueryFromQueryString]);\n  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, hints.length > 0 && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.container }, hints.map((hint) => {\n    var _a, _b, _c, _d;\n    return /* @__PURE__ */ React__default.createElement(Tooltip, { content: `${hint.label} ${(_a = hint.fix) == null ? undefined : _a.label}`, key: hint.type }, /* @__PURE__ */ React__default.createElement(\n      Button,\n      {\n        onClick: () => {\n          var _a2, _b2, _c2;\n          reportInteraction(\"grafana_query_builder_hints_clicked\", {\n            hint: hint.type,\n            datasourceType: datasource.type\n          });\n          if ((_a2 = hint == null ? undefined : hint.fix) == null ? undefined : _a2.action) {\n            const dataQuery = buildDataQueryFromQueryString(queryModeller.renderQuery(visualQuery));\n            const newQuery = (_b2 = datasource.modifyQuery) == null ? undefined : _b2.call(datasource, dataQuery, hint.fix.action);\n            if (newQuery) {\n              const newVisualQuery = buildVisualQueryFromString(\n                (_c2 = buildQueryStringFromDataQuery(newQuery)) != null ? _c2 : \"\"\n              );\n              return onChange(newVisualQuery.query);\n            }\n          }\n        },\n        fill: \"outline\",\n        size: \"sm\",\n        className: styles.hint\n      },\n      \"hint: \",\n      ((_b = hint.fix) == null ? undefined : _b.title) || ((_d = (_c = hint.fix) == null ? undefined : _c.action) == null ? undefined : _d.type.toLowerCase().replace(\"_\", \" \"))\n    ));\n  })));\n};\nQueryBuilderHints.displayName = \"QueryBuilderHints\";\nconst getStyles = (theme) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: start;\n    `,\n    hint: css`\n      margin-right: ${theme.spacing(1)};\n    `\n  };\n};\n\nexport { QueryBuilderHints };\n//# sourceMappingURL=QueryBuilderHints.js.map\n","import 'prismjs';\nimport React__default from 'react';\nimport { OperationExplainedBox } from './OperationExplainedBox.js';\nimport { RawQuery } from './RawQuery.js';\nimport '@grafana/data';\n\nfunction OperationListExplained({\n  query,\n  queryModeller,\n  stepNumber,\n  language,\n  onMouseEnter,\n  onMouseLeave\n}) {\n  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, query.operations.map((op, index) => {\n    var _a;\n    const def = queryModeller.getOperationDefinition(op.id);\n    if (!def) {\n      return `Operation ${op.id} not found`;\n    }\n    const title = def.renderer(op, def, queryModeller.innerQueryPlaceholder);\n    const body = def.explainHandler ? def.explainHandler(op, def) : (_a = def.documentation) != null ? _a : \"no docs\";\n    return /* @__PURE__ */ React__default.createElement(\n      \"div\",\n      {\n        key: index,\n        onMouseEnter: () => onMouseEnter == null ? undefined : onMouseEnter(op, index),\n        onMouseLeave: () => onMouseLeave == null ? undefined : onMouseLeave(op, index)\n      },\n      /* @__PURE__ */ React__default.createElement(\n        OperationExplainedBox,\n        {\n          stepNumber: index + stepNumber,\n          title: /* @__PURE__ */ React__default.createElement(RawQuery, { query: title, language }),\n          markdown: body\n        }\n      )\n    );\n  }));\n}\n\nexport { OperationListExplained };\n//# sourceMappingURL=OperationListExplained.js.map\n","import { memo } from 'react';\n\nimport { OperationExplainedBox, OperationListExplained, RawQuery } from '@grafana/plugin-ui';\nimport { Stack } from '@grafana/ui';\n\nimport { lokiGrammar } from '../../syntax';\nimport { lokiQueryModeller } from '../LokiQueryModeller';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { LokiVisualQuery } from '../types';\n\nexport const EXPLAIN_LABEL_FILTER_CONTENT = 'Fetch all log lines matching label filters.';\n\nexport interface Props {\n  query: string;\n}\n\nexport const LokiQueryBuilderExplained = memo<Props>(({ query }) => {\n  const visQuery = buildVisualQueryFromString(query || '').query;\n  const lang = { grammar: lokiGrammar, name: 'lokiql' };\n\n  return (\n    <Stack gap={0} direction=\"column\">\n      <OperationExplainedBox\n        stepNumber={1}\n        title={<RawQuery query={`${lokiQueryModeller.renderLabels(visQuery.labels)}`} language={lang} />}\n      >\n        {EXPLAIN_LABEL_FILTER_CONTENT}\n      </OperationExplainedBox>\n      <OperationListExplained<LokiVisualQuery>\n        stepNumber={2}\n        queryModeller={lokiQueryModeller}\n        query={visQuery}\n        language={lang}\n      />\n    </Stack>\n  );\n});\n\nLokiQueryBuilderExplained.displayName = 'LokiQueryBuilderExplained';\n","import { css } from '@emotion/css';\nimport { memo } from 'react';\n\nimport { GrafanaTheme2, toOption } from '@grafana/data';\nimport { EditorRows, FlexItem } from '@grafana/plugin-ui';\nimport { AutoSizeInput, IconButton, Select, useStyles2 } from '@grafana/ui';\n\nimport { LokiDatasource } from '../../datasource';\nimport { binaryScalarDefs } from '../binaryScalarOperations';\nimport { LokiVisualQueryBinary } from '../types';\n\nimport { LokiQueryBuilder } from './LokiQueryBuilder';\n\nexport interface Props {\n  nestedQuery: LokiVisualQueryBinary;\n  datasource: LokiDatasource;\n  index: number;\n  showExplain: boolean;\n  onChange: (index: number, update: LokiVisualQueryBinary) => void;\n  onRemove: (index: number) => void;\n  onRunQuery: () => void;\n}\n\nexport const NestedQuery = memo<Props>(\n  ({ nestedQuery, index, datasource, onChange, onRemove, onRunQuery, showExplain }) => {\n    const styles = useStyles2(getStyles);\n\n    return (\n      <div className={styles.card}>\n        <div className={styles.header}>\n          <div className={styles.name}>Operator</div>\n          <Select\n            aria-label=\"Select operator\"\n            width=\"auto\"\n            options={operators}\n            value={toOption(nestedQuery.operator)}\n            onChange={(value) => {\n              onChange(index, {\n                ...nestedQuery,\n                operator: value.value!,\n              });\n            }}\n          />\n          <div className={styles.name}>Vector matches</div>\n          <div className={styles.vectorMatchWrapper}>\n            <Select<LokiVisualQueryBinary['vectorMatchesType']>\n              width=\"auto\"\n              value={nestedQuery.vectorMatchesType || 'on'}\n              allowCustomValue\n              options={[\n                { value: 'on', label: 'on' },\n                { value: 'ignoring', label: 'ignoring' },\n              ]}\n              onChange={(val) => {\n                onChange(index, {\n                  ...nestedQuery,\n                  vectorMatchesType: val.value,\n                });\n              }}\n            />\n            <AutoSizeInput\n              className={styles.vectorMatchInput}\n              minWidth={20}\n              defaultValue={nestedQuery.vectorMatches}\n              onCommitChange={(evt) => {\n                onChange(index, {\n                  ...nestedQuery,\n                  vectorMatches: evt.currentTarget.value,\n                  vectorMatchesType: nestedQuery.vectorMatchesType || 'on',\n                });\n              }}\n            />\n          </div>\n          <FlexItem grow={1} />\n          <IconButton name=\"times\" size=\"sm\" onClick={() => onRemove(index)} tooltip=\"Remove nested query\" />\n        </div>\n        <div className={styles.body}>\n          <EditorRows>\n            <LokiQueryBuilder\n              showExplain={showExplain}\n              query={nestedQuery.query}\n              datasource={datasource}\n              onRunQuery={onRunQuery}\n              onChange={(update) => {\n                onChange(index, { ...nestedQuery, query: update });\n              }}\n            />\n          </EditorRows>\n        </div>\n      </div>\n    );\n  }\n);\n\nconst operators = binaryScalarDefs.map((def) => ({ label: def.sign, value: def.sign }));\n\nNestedQuery.displayName = 'NestedQuery';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    card: css({\n      label: 'card',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(0.5),\n    }),\n    header: css({\n      label: 'header',\n      padding: theme.spacing(0.5, 0.5, 0.5, 1),\n      gap: theme.spacing(1),\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    name: css({\n      label: 'name',\n      whiteSpace: 'nowrap',\n    }),\n    body: css({\n      label: 'body',\n      paddingLeft: theme.spacing(2),\n    }),\n    vectorMatchInput: css({\n      label: 'vectorMatchInput',\n      marginLeft: -1,\n    }),\n    vectorMatchWrapper: css({\n      label: 'vectorMatchWrapper',\n      display: 'flex',\n    }),\n  };\n};\n","import { Stack } from '@grafana/ui';\n\nimport { LokiDatasource } from '../../datasource';\nimport { LokiVisualQuery, LokiVisualQueryBinary } from '../types';\n\nimport { NestedQuery } from './NestedQuery';\n\nexport interface Props {\n  query: LokiVisualQuery;\n  datasource: LokiDatasource;\n  showExplain: boolean;\n  onChange: (query: LokiVisualQuery) => void;\n  onRunQuery: () => void;\n}\n\nexport function NestedQueryList({ query, datasource, onChange, onRunQuery, showExplain }: Props) {\n  const nestedQueries = query.binaryQueries ?? [];\n\n  const onNestedQueryUpdate = (index: number, update: LokiVisualQueryBinary) => {\n    const updatedList = [...nestedQueries];\n    updatedList.splice(index, 1, update);\n    onChange({ ...query, binaryQueries: updatedList });\n  };\n\n  const onRemove = (index: number) => {\n    const updatedList = [...nestedQueries.slice(0, index), ...nestedQueries.slice(index + 1)];\n    onChange({ ...query, binaryQueries: updatedList });\n  };\n\n  return (\n    <Stack direction=\"column\" gap={1}>\n      {nestedQueries.map((nestedQuery, index) => (\n        <NestedQuery\n          key={index.toString()}\n          nestedQuery={nestedQuery}\n          index={index}\n          onChange={onNestedQueryUpdate}\n          datasource={datasource}\n          onRemove={onRemove}\n          onRunQuery={onRunQuery}\n          showExplain={showExplain}\n        />\n      ))}\n    </Stack>\n  );\n}\n","import { isEqual } from 'lodash';\nimport { memo, useEffect, useMemo, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { DataSourceApi, getDefaultTimeRange, LoadingState, PanelData, SelectableValue, TimeRange } from '@grafana/data';\nimport {\n  EditorRow,\n  LabelFilters,\n  OperationExplainedBox,\n  OperationList,\n  OperationListExplained,\n  OperationsEditorRow,\n  QueryBuilderHints,\n  RawQuery,\n  QueryBuilderLabelFilter,\n  QueryBuilderOperation,\n} from '@grafana/plugin-ui';\nimport { config } from '@grafana/runtime';\n\nimport { testIds } from '../../components/LokiQueryEditor';\nimport { LokiDatasource } from '../../datasource';\nimport { escapeLabelValueInSelector } from '../../languageUtils';\nimport logqlGrammar from '../../syntax';\nimport { LokiQuery } from '../../types';\nimport { lokiQueryModeller } from '../LokiQueryModeller';\nimport { isConflictingFilter } from '../operationUtils';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { LokiOperationId, LokiVisualQuery } from '../types';\n\nimport { EXPLAIN_LABEL_FILTER_CONTENT } from './LokiQueryBuilderExplained';\nimport { NestedQueryList } from './NestedQueryList';\n\nexport const TIME_SPAN_TO_TRIGGER_SAMPLES = 5 * 60 * 1000;\nexport interface Props {\n  query: LokiVisualQuery;\n  datasource: LokiDatasource;\n  showExplain: boolean;\n  timeRange?: TimeRange;\n  onChange: (update: LokiVisualQuery) => void;\n  onRunQuery: () => void;\n}\nexport const LokiQueryBuilder = memo<Props>(({ datasource, query, onChange, onRunQuery, showExplain, timeRange }) => {\n  const [sampleData, setSampleData] = useState<PanelData>();\n  const [highlightedOp, setHighlightedOp] = useState<QueryBuilderOperation | undefined>(undefined);\n  const prevQuery = usePrevious(query);\n  const prevTimeRange = usePrevious(timeRange);\n\n  const onChangeLabels = (labels: QueryBuilderLabelFilter[]) => {\n    onChange({ ...query, labels });\n  };\n\n  const withTemplateVariableOptions = async (optionsPromise: Promise<string[]>): Promise<SelectableValue[]> => {\n    const options = await optionsPromise;\n    return [...datasource.getVariables(), ...options].map((value) => ({ label: value, value }));\n  };\n\n  const onGetLabelNames = async (forLabel: Partial<QueryBuilderLabelFilter>): Promise<string[]> => {\n    const labelsToConsider = query.labels.filter((x) => x !== forLabel);\n\n    const hasEqualityOperation = labelsToConsider.find(\n      (filter) => filter.op === '=' || (filter.op === '=~' && new RegExp(filter.value).test('') === false)\n    );\n    if (labelsToConsider.length === 0 || !hasEqualityOperation) {\n      return await datasource.languageProvider.fetchLabels({ timeRange });\n    }\n\n    const streamSelector = lokiQueryModeller.renderLabels(labelsToConsider);\n    const possibleLabelNames = await datasource.languageProvider.fetchLabels({\n      streamSelector,\n      timeRange,\n    });\n    const labelsNamesToConsider = labelsToConsider.map((l) => l.label);\n\n    // Filter out label names that are already selected\n    return possibleLabelNames.filter((label) => !labelsNamesToConsider.includes(label)).sort();\n  };\n\n  const onGetLabelValues = async (forLabel: Partial<QueryBuilderLabelFilter>) => {\n    if (!forLabel.label) {\n      return [];\n    }\n\n    let values;\n    const labelsToConsider = query.labels.filter((x) => x !== forLabel);\n    // If we have no equality/regex operation with .*, we can't fetch series as it will throw an error, so we fetch label values\n    const hasEqualityOperation = labelsToConsider.find(\n      (filter) => filter.op === '=' || (filter.op === '=~' && new RegExp(filter.value).test('') === false)\n    );\n    if (labelsToConsider.length === 0 || !hasEqualityOperation) {\n      values = await datasource.languageProvider.fetchLabelValues(forLabel.label, { timeRange });\n    } else {\n      const streamSelector = lokiQueryModeller.renderLabels(labelsToConsider);\n      values = await datasource.languageProvider.fetchLabelValues(forLabel.label, {\n        streamSelector,\n        timeRange,\n      });\n    }\n\n    return values ? values.map((v) => escapeLabelValueInSelector(v, forLabel.op)) : []; // Escape values in return\n  };\n\n  const labelFilterRequired: boolean = useMemo(() => {\n    const { labels, operations: op } = query;\n    if (!labels.length && op.length) {\n      // Filter is required when operations are present (empty line contains operation is exception)\n      if (op.length === 1 && op[0].id === LokiOperationId.LineContains && op[0].params[0] === '') {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }, [query]);\n\n  useEffect(() => {\n    const onGetSampleData = async () => {\n      const lokiQuery = { expr: lokiQueryModeller.renderQuery(query), refId: 'data-samples' };\n      const range = timeRange ?? getDefaultTimeRange();\n      const series = await datasource.getDataSamples(lokiQuery, range);\n      const sampleData = { series, state: LoadingState.Done, timeRange: range };\n      setSampleData(sampleData);\n    };\n\n    const updateBasedOnChangedTimeRange =\n      prevTimeRange &&\n      timeRange &&\n      (Math.abs(timeRange.to.valueOf() - prevTimeRange.to.valueOf()) > TIME_SPAN_TO_TRIGGER_SAMPLES ||\n        Math.abs(timeRange.from.valueOf() - prevTimeRange.from.valueOf()) > TIME_SPAN_TO_TRIGGER_SAMPLES);\n    const updateBasedOnChangedQuery = !isEqual(prevQuery, query);\n    if (config.featureToggles.lokiQueryHints && (updateBasedOnChangedTimeRange || updateBasedOnChangedQuery)) {\n      onGetSampleData().catch(console.error);\n    }\n  }, [datasource, query, timeRange, prevQuery, prevTimeRange]);\n\n  const lang = { grammar: logqlGrammar, name: 'logql' };\n  return (\n    <div data-testid={testIds.editor}>\n      <EditorRow>\n        <LabelFilters\n          onGetLabelNames={(forLabel: Partial<QueryBuilderLabelFilter>) =>\n            withTemplateVariableOptions(onGetLabelNames(forLabel))\n          }\n          onGetLabelValues={(forLabel: Partial<QueryBuilderLabelFilter>) =>\n            withTemplateVariableOptions(onGetLabelValues(forLabel))\n          }\n          labelsFilters={query.labels}\n          onChange={onChangeLabels}\n          labelFilterRequired={labelFilterRequired}\n        />\n      </EditorRow>\n      {showExplain && (\n        <OperationExplainedBox\n          stepNumber={1}\n          title={<RawQuery query={`${lokiQueryModeller.renderLabels(query.labels)}`} language={lang} />}\n        >\n          {EXPLAIN_LABEL_FILTER_CONTENT}\n        </OperationExplainedBox>\n      )}\n      <OperationsEditorRow>\n        <OperationList\n          queryModeller={lokiQueryModeller}\n          query={query}\n          onChange={onChange}\n          onRunQuery={onRunQuery}\n          datasource={datasource as DataSourceApi}\n          highlightedOp={highlightedOp}\n          isConflictingOperation={(operation: QueryBuilderOperation, otherOperations: QueryBuilderOperation[]) =>\n            operation.id === LokiOperationId.LabelFilter && isConflictingFilter(operation, otherOperations)\n          }\n        />\n        <QueryBuilderHints<LokiVisualQuery, LokiQuery>\n          datasource={datasource}\n          query={query}\n          onChange={onChange}\n          data={sampleData}\n          queryModeller={lokiQueryModeller}\n          buildVisualQueryFromString={buildVisualQueryFromString}\n          buildDataQueryFromQueryString={(queryString) => ({ expr: queryString, refId: 'hints' })}\n          buildQueryStringFromDataQuery={(query) => query.expr}\n        />\n      </OperationsEditorRow>\n      {showExplain && (\n        <OperationListExplained<LokiVisualQuery>\n          stepNumber={2}\n          queryModeller={lokiQueryModeller}\n          query={query}\n          language={lang}\n          onMouseEnter={(op) => {\n            setHighlightedOp(op);\n          }}\n          onMouseLeave={() => {\n            setHighlightedOp(undefined);\n          }}\n        />\n      )}\n      {query.binaryQueries && query.binaryQueries.length > 0 && (\n        <NestedQueryList\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          onRunQuery={onRunQuery}\n          showExplain={showExplain}\n        />\n      )}\n    </div>\n  );\n});\n\nLokiQueryBuilder.displayName = 'LokiQueryBuilder';\n","import { EditorRow, EditorFieldGroup, RawQuery } from '@grafana/plugin-ui';\n\nimport { lokiGrammar } from '../../syntax';\n\nexport interface Props {\n  query: string;\n}\n\nexport function QueryPreview({ query }: Props) {\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <RawQuery query={query} language={{ grammar: lokiGrammar, name: 'lokiql' }} />\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { useEffect, useReducer } from 'react';\n\nimport { TimeRange } from '@grafana/data';\n\nimport { testIds } from '../../components/LokiQueryEditor';\nimport { LokiDatasource } from '../../datasource';\nimport { LokiQuery } from '../../types';\nimport { lokiQueryModeller } from '../LokiQueryModeller';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { LokiVisualQuery } from '../types';\n\nimport { LokiQueryBuilder } from './LokiQueryBuilder';\nimport { QueryPreview } from './QueryPreview';\n\nexport interface Props {\n  query: LokiQuery;\n  datasource: LokiDatasource;\n  onChange: (update: LokiQuery) => void;\n  onRunQuery: () => void;\n  showExplain: boolean;\n  timeRange?: TimeRange;\n}\n\nexport interface State {\n  visQuery?: LokiVisualQuery;\n  expr: string;\n}\n\n/**\n * This component is here just to contain the translation logic between string query and the visual query builder model.\n */\nexport function LokiQueryBuilderContainer(props: Props) {\n  const { query, onChange, onRunQuery, datasource, showExplain, timeRange } = props;\n  const [state, dispatch] = useReducer(stateSlice.reducer, {\n    expr: query.expr,\n    // Use initial visual query only if query.expr is empty string\n    visQuery:\n      query.expr === ''\n        ? {\n            labels: [],\n            operations: [{ id: '__line_contains', params: [''] }],\n          }\n        : undefined,\n  });\n\n  // Only rebuild visual query if expr changes from outside\n  useEffect(() => {\n    dispatch(exprChanged(query.expr));\n  }, [query.expr]);\n\n  const onVisQueryChange = (visQuery: LokiVisualQuery) => {\n    const expr = lokiQueryModeller.renderQuery(visQuery);\n    dispatch(visualQueryChange({ visQuery, expr }));\n    onChange({ ...props.query, expr: expr });\n  };\n\n  if (!state.visQuery) {\n    return null;\n  }\n\n  return (\n    <>\n      <LokiQueryBuilder\n        query={state.visQuery}\n        datasource={datasource}\n        onChange={onVisQueryChange}\n        onRunQuery={onRunQuery}\n        showExplain={showExplain}\n        data-testid={testIds.editor}\n        timeRange={timeRange}\n      />\n      {query.expr !== '' && <QueryPreview query={query.expr} />}\n    </>\n  );\n}\n\nconst initialState: State = { expr: '' };\n\nconst stateSlice = createSlice({\n  name: 'loki-builder-container',\n  initialState,\n  reducers: {\n    visualQueryChange: (state, action: PayloadAction<{ visQuery: LokiVisualQuery; expr: string }>) => {\n      state.expr = action.payload.expr;\n      state.visQuery = action.payload.visQuery;\n    },\n    exprChanged: (state, action: PayloadAction<string>) => {\n      if (!state.visQuery || state.expr !== action.payload) {\n        state.expr = action.payload;\n        const parseResult = buildVisualQueryFromString(action.payload);\n        state.visQuery = parseResult.query;\n      }\n    },\n  },\n});\n\nconst { visualQueryChange, exprChanged } = stateSlice.actions;\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport { useToggle } from 'react-use';\nimport { getValueFormat } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2, Collapse, Tooltip, Icon } from '@grafana/ui';\nimport '../../QueryEditor/types.js';\nimport 'lodash';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport 'uuid';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction QueryOptionGroup({ title, children, collapsedInfo, queryStats }) {\n  const [isOpen, toggleOpen] = useToggle(false);\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.wrapper }, /* @__PURE__ */ React__default.createElement(\n    Collapse,\n    {\n      className: styles.collapse,\n      collapsible: true,\n      isOpen,\n      onToggle: toggleOpen,\n      label: /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 0 }, /* @__PURE__ */ React__default.createElement(\"h6\", { className: styles.title }, title), !isOpen && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.description }, collapsedInfo.map((x, i) => /* @__PURE__ */ React__default.createElement(\"span\", { key: i }, x))))\n    },\n    /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.body }, children)\n  ), queryStats && config.featureToggles.lokiQuerySplitting && /* @__PURE__ */ React__default.createElement(Tooltip, { content: \"Note: the query will be split into multiple parts and executed in sequence. Query limits will only apply each individual part.\" }, /* @__PURE__ */ React__default.createElement(Icon, { tabIndex: 0, name: \"info-circle\", className: styles.tooltip, size: \"sm\" })), queryStats && /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.stats }, generateQueryStats(queryStats)));\n}\nconst getStyles = (theme) => {\n  return {\n    collapse: css({\n      backgroundColor: \"unset\",\n      border: \"unset\",\n      marginBottom: 0,\n      [\"> button\"]: {\n        padding: theme.spacing(0, 1)\n      }\n    }),\n    wrapper: css({\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"baseline\"\n    }),\n    title: css({\n      flexGrow: 1,\n      overflow: \"hidden\",\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      margin: 0\n    }),\n    description: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.bodySmall.fontWeight,\n      paddingLeft: theme.spacing(2),\n      gap: theme.spacing(2),\n      display: \"flex\"\n    }),\n    body: css({\n      display: \"flex\",\n      gap: theme.spacing(2),\n      flexWrap: \"wrap\"\n    }),\n    stats: css({\n      margin: \"0px\",\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize\n    }),\n    tooltip: css({\n      marginRight: theme.spacing(0.25)\n    })\n  };\n};\nconst generateQueryStats = (queryStats) => {\n  if (queryStats.message) {\n    return queryStats.message;\n  }\n  return `This query will process approximately ${convertUnits(queryStats)}.`;\n};\nconst convertUnits = (queryStats) => {\n  const { text, suffix } = getValueFormat(\"bytes\")(queryStats.bytes, 1);\n  return text + suffix;\n};\n\nexport { QueryOptionGroup };\n//# sourceMappingURL=QueryOptionGroup.js.map\n","import { trim } from 'lodash';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as React from 'react';\n\nimport {\n  CoreApp,\n  isValidDuration,\n  isValidGrafanaDuration,\n  LogSortOrderChangeEvent,\n  LogsSortOrder,\n  store,\n} from '@grafana/data';\nimport { EditorField, EditorRow, QueryOptionGroup } from '@grafana/plugin-ui';\nimport { config, getAppEvents } from '@grafana/runtime';\nimport { AutoSizeInput, RadioButtonGroup } from '@grafana/ui';\n\nimport {\n  getQueryDirectionLabel,\n  preprocessMaxLines,\n  queryDirections,\n  queryTypeOptions,\n} from '../../components/LokiOptionFields';\nimport { getLokiQueryType, isLogsQuery } from '../../queryUtils';\nimport { LokiQuery, LokiQueryDirection, LokiQueryType, QueryStats } from '../../types';\n\nexport interface Props {\n  query: LokiQuery;\n  onChange: (update: LokiQuery) => void;\n  onRunQuery: () => void;\n  maxLines: number;\n  app?: CoreApp;\n  queryStats: QueryStats | null;\n}\n\nexport const LokiQueryBuilderOptions = React.memo<Props>(\n  ({ app, query, onChange, onRunQuery, maxLines, queryStats }) => {\n    const [splitDurationValid, setSplitDurationValid] = useState(true);\n\n    useEffect(() => {\n      if (app !== CoreApp.Explore && app !== CoreApp.Dashboard && app !== CoreApp.PanelEditor) {\n        return;\n      }\n      // Initialize the query direction according to the current environment.\n      if (!query.direction) {\n        onChange({ ...query, direction: getDefaultQueryDirection(app) });\n      }\n    }, [app, onChange, query]);\n\n    useEffect(() => {\n      if (query.step && !isValidGrafanaDuration(`${query.step}`) && parseInt(query.step, 10)) {\n        onChange({\n          ...query,\n          step: `${parseInt(query.step, 10)}s`,\n        });\n      }\n    }, [onChange, query]);\n\n    const onQueryTypeChange = (value: LokiQueryType) => {\n      onChange({ ...query, queryType: value });\n      onRunQuery();\n    };\n\n    const onQueryDirectionChange = useCallback(\n      (value: LokiQueryDirection) => {\n        onChange({ ...query, direction: value });\n        onRunQuery();\n      },\n      [onChange, onRunQuery, query]\n    );\n\n    const onChunkRangeChange = (evt: React.FormEvent<HTMLInputElement>) => {\n      const value = evt.currentTarget.value;\n      if (!isValidDuration(value)) {\n        setSplitDurationValid(false);\n        return;\n      }\n      setSplitDurationValid(true);\n      onChange({ ...query, splitDuration: value });\n      onRunQuery();\n    };\n\n    const onLegendFormatChanged = (evt: React.FormEvent<HTMLInputElement>) => {\n      onChange({ ...query, legendFormat: evt.currentTarget.value });\n      onRunQuery();\n    };\n\n    function onMaxLinesChange(e: React.SyntheticEvent<HTMLInputElement>) {\n      const newMaxLines = preprocessMaxLines(e.currentTarget.value);\n      if (query.maxLines !== newMaxLines) {\n        onChange({ ...query, maxLines: newMaxLines });\n        onRunQuery();\n      }\n    }\n\n    function onStepChange(e: React.SyntheticEvent<HTMLInputElement>) {\n      onChange({ ...query, step: trim(e.currentTarget.value) });\n      onRunQuery();\n    }\n\n    useEffect(() => {\n      if (app !== CoreApp.Dashboard && app !== CoreApp.PanelEditor) {\n        return;\n      }\n      const subscription = getAppEvents().subscribe(LogSortOrderChangeEvent, (sortEvent: LogSortOrderChangeEvent) => {\n        if (query.direction === LokiQueryDirection.Scan) {\n          return;\n        }\n        const newDirection =\n          sortEvent.payload.order === LogsSortOrder.Ascending\n            ? LokiQueryDirection.Forward\n            : LokiQueryDirection.Backward;\n        if (newDirection !== query.direction) {\n          onQueryDirectionChange(newDirection);\n        }\n      });\n      return () => {\n        subscription.unsubscribe();\n      };\n    }, [app, onQueryDirectionChange, query.direction]);\n\n    let queryType = getLokiQueryType(query);\n    const isLogQuery = isLogsQuery(query.expr);\n    const filteredQueryTypeOptions = isLogQuery\n      ? queryTypeOptions.filter((o) => o.value !== LokiQueryType.Instant)\n      : queryTypeOptions;\n\n    // if the state's queryType is still Instant, trigger a change to range for log queries\n    if (isLogQuery && queryType === LokiQueryType.Instant) {\n      onChange({ ...query, queryType: LokiQueryType.Range });\n      queryType = LokiQueryType.Range;\n    }\n\n    const isValidStep = useMemo(() => {\n      if (!query.step) {\n        return true;\n      }\n      return typeof query.step === 'string' && isValidGrafanaDuration(query.step) && !isNaN(parseInt(query.step, 10));\n    }, [query.step]);\n\n    return (\n      <EditorRow>\n        <QueryOptionGroup\n          title=\"Options\"\n          collapsedInfo={getCollapsedInfo(query, queryType, maxLines, isLogQuery, isValidStep, query.direction)}\n          queryStats={queryStats}\n        >\n          <EditorField\n            label=\"Legend\"\n            tooltip=\"Series name override or template. Ex. {{hostname}} will be replaced with label value for hostname.\"\n          >\n            <AutoSizeInput\n              placeholder=\"{{label}}\"\n              type=\"string\"\n              minWidth={14}\n              defaultValue={query.legendFormat}\n              onCommitChange={onLegendFormatChanged}\n            />\n          </EditorField>\n          {filteredQueryTypeOptions.length > 1 && (\n            <EditorField label=\"Type\">\n              <RadioButtonGroup options={filteredQueryTypeOptions} value={queryType} onChange={onQueryTypeChange} />\n            </EditorField>\n          )}\n          {isLogQuery && (\n            <>\n              <EditorField label=\"Line limit\" tooltip=\"Upper limit for number of log lines returned by query.\">\n                <AutoSizeInput\n                  className=\"width-4\"\n                  placeholder={maxLines.toString()}\n                  type=\"number\"\n                  min={0}\n                  defaultValue={query.maxLines?.toString() ?? ''}\n                  onCommitChange={onMaxLinesChange}\n                />\n              </EditorField>\n              <EditorField label=\"Direction\" tooltip=\"Direction to search for logs.\">\n                <RadioButtonGroup\n                  options={queryDirections}\n                  value={query.direction ?? getDefaultQueryDirection(app)}\n                  onChange={onQueryDirectionChange}\n                />\n              </EditorField>\n            </>\n          )}\n          {!isLogQuery && (\n            <>\n              <EditorField\n                label=\"Step\"\n                tooltip=\"Use the step parameter when making metric queries to Loki. If not filled, Grafana's calculated interval will be used. Example valid values: 1s, 5m, 10h, 1d.\"\n                invalid={!isValidStep}\n                error={'Invalid step. Example valid values: 1s, 5m, 10h, 1d.'}\n              >\n                <AutoSizeInput\n                  className=\"width-6\"\n                  placeholder={'auto'}\n                  type=\"string\"\n                  value={query.step ?? ''}\n                  onCommitChange={onStepChange}\n                />\n              </EditorField>\n            </>\n          )}\n          {config.featureToggles.lokiQuerySplittingConfig && config.featureToggles.lokiQuerySplitting && (\n            <EditorField\n              label=\"Split Duration\"\n              tooltip=\"Defines the duration of a single query when query splitting is enabled.\"\n            >\n              <AutoSizeInput\n                minWidth={14}\n                type=\"string\"\n                min={0}\n                defaultValue={query.splitDuration ?? '1d'}\n                onCommitChange={onChunkRangeChange}\n                invalid={!splitDurationValid}\n              />\n            </EditorField>\n          )}\n        </QueryOptionGroup>\n      </EditorRow>\n    );\n  }\n);\n\nfunction getCollapsedInfo(\n  query: LokiQuery,\n  queryType: LokiQueryType,\n  maxLines: number,\n  isLogQuery: boolean,\n  isValidStep: boolean,\n  direction: LokiQueryDirection | undefined\n): string[] {\n  const queryTypeLabel = queryTypeOptions.find((x) => x.value === queryType);\n\n  const items: string[] = [];\n\n  if (query.legendFormat) {\n    items.push(`Legend: ${query.legendFormat}`);\n  }\n\n  items.push(`Type: ${queryTypeLabel?.label}`);\n\n  if (isLogQuery && direction) {\n    items.push(`Line limit: ${query.maxLines ?? maxLines}`);\n    items.push(`Direction: ${getQueryDirectionLabel(direction)}`);\n  } else {\n    if (query.step) {\n      items.push(`Step: ${isValidStep ? query.step : 'Invalid value'}`);\n    }\n  }\n\n  return items;\n}\n\nfunction getDefaultQueryDirection(app?: CoreApp) {\n  if (app !== CoreApp.Explore) {\n    /**\n     * The default direction is backward because the default sort order is Descending.\n     * See:\n     * - public/app/features/explore/Logs/Logs.tsx\n     * - public/app/plugins/panel/logs/module.tsx\n     */\n    return LokiQueryDirection.Backward;\n  }\n  // See app/features/explore/Logs/utils/logs\n  const key = 'grafana.explore.logs.sortOrder';\n  const storedOrder = store.get(key) || LogsSortOrder.Descending;\n  return storedOrder === LogsSortOrder.Ascending ? LokiQueryDirection.Forward : LokiQueryDirection.Backward;\n}\n\nLokiQueryBuilderOptions.displayName = 'LokiQueryBuilderOptions';\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { testIds } from '../../components/LokiQueryEditor';\nimport { LokiQueryField } from '../../components/LokiQueryField';\nimport { LokiQueryEditorProps } from '../../components/types';\n\nimport { LokiQueryBuilderExplained } from './LokiQueryBuilderExplained';\n\ntype Props = LokiQueryEditorProps & {\n  showExplain: boolean;\n};\n\nexport function LokiQueryCodeEditor({\n  query,\n  datasource,\n  range,\n  onRunQuery,\n  onChange,\n  data,\n  app,\n  showExplain,\n  history,\n}: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      <LokiQueryField\n        datasource={datasource}\n        query={query}\n        range={range}\n        onRunQuery={onRunQuery}\n        onChange={onChange}\n        history={history}\n        data={data}\n        app={app}\n        data-testid={testIds.editor}\n      />\n      {showExplain && <LokiQueryBuilderExplained query={query.expr} />}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      maxWidth: '100%',\n      '.gf-form': {\n        marginBottom: 0.5,\n      },\n    }),\n    buttonGroup: css({\n      border: `1px solid ${theme.colors.border.medium}`,\n      borderTop: 'none',\n      padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\n      marginBottom: theme.spacing(0.5),\n      display: 'flex',\n      flexGrow: 1,\n      justifyContent: 'end',\n      fontSize: theme.typography.bodySmall.fontSize,\n    }),\n    hint: css({\n      color: theme.colors.text.disabled,\n      whiteSpace: 'nowrap',\n      cursor: 'help',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { RawQuery } from '@grafana/plugin-ui';\nimport { Button, Card, useStyles2 } from '@grafana/ui';\n\nimport logqlGrammar from '../../syntax';\nimport { lokiQueryModeller } from '../LokiQueryModeller';\nimport { LokiQueryPattern } from '../types';\n\ntype Props = {\n  pattern: LokiQueryPattern;\n  hasNewQueryOption: boolean;\n  hasPreviousQuery: boolean;\n  selectedPatternName: string | null;\n  setSelectedPatternName: (name: string | null) => void;\n  onPatternSelect: (pattern: LokiQueryPattern, selectAsNewQuery?: boolean) => void;\n};\n\nexport const QueryPattern = (props: Props) => {\n  const { pattern, onPatternSelect, hasNewQueryOption, hasPreviousQuery, selectedPatternName, setSelectedPatternName } =\n    props;\n\n  const styles = useStyles2(getStyles);\n  const lang = { grammar: logqlGrammar, name: 'logql' };\n\n  return (\n    <Card className={styles.card}>\n      <Card.Heading>{pattern.name}</Card.Heading>\n      <div className={styles.rawQueryContainer}>\n        <RawQuery\n          query={lokiQueryModeller.renderQuery({ labels: [], operations: pattern.operations })}\n          language={lang}\n          className={styles.rawQuery}\n        />\n      </div>\n      <Card.Actions>\n        {selectedPatternName !== pattern.name ? (\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              if (hasPreviousQuery) {\n                // If user has previous query, we need to confirm that they want to replace it\n                setSelectedPatternName(pattern.name);\n              } else {\n                onPatternSelect(pattern);\n              }\n            }}\n          >\n            Use this query\n          </Button>\n        ) : (\n          <>\n            <div className={styles.spacing}>\n              {`If you would like to use this query, ${\n                hasNewQueryOption\n                  ? 'you can either replace your current query or create a new query'\n                  : 'your current query will be replaced'\n              }.`}\n            </div>\n            <Button size=\"sm\" fill=\"outline\" onClick={() => setSelectedPatternName(null)}>\n              Back\n            </Button>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                onPatternSelect(pattern);\n              }}\n            >\n              Apply to query\n            </Button>\n            {hasNewQueryOption && (\n              <Button\n                size=\"sm\"\n                onClick={() => {\n                  onPatternSelect(pattern, true);\n                }}\n              >\n                Create new query\n              </Button>\n            )}\n          </>\n        )}\n      </Card.Actions>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    card: css({\n      width: '49.5%',\n      display: 'flex',\n      flexDirection: 'column',\n    }),\n    rawQueryContainer: css({\n      flexGrow: 1,\n    }),\n    rawQuery: css({\n      backgroundColor: theme.colors.background.primary,\n      padding: theme.spacing(1),\n      marginTop: theme.spacing(1),\n    }),\n    spacing: css({\n      marginBottom: theme.spacing(1),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { CoreApp, GrafanaTheme2, getNextRefId } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Button, Collapse, Modal, useStyles2 } from '@grafana/ui';\n\nimport { LokiQuery } from '../../types';\nimport { lokiQueryModeller } from '../LokiQueryModeller';\nimport { operationDefinitions } from '../operations';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { LokiOperationId, LokiQueryPattern, LokiQueryPatternType, LokiVisualQueryOperationCategory } from '../types';\n\nimport { QueryPattern } from './QueryPattern';\n\ntype Props = {\n  isOpen: boolean;\n  query: LokiQuery;\n  queries: DataQuery[] | undefined;\n  app?: CoreApp;\n  onClose: () => void;\n  onChange: (query: LokiQuery) => void;\n  onAddQuery?: (query: LokiQuery) => void;\n};\n\nconst keepOperationCategories: string[] = [\n  LokiVisualQueryOperationCategory.Formats,\n  LokiVisualQueryOperationCategory.LineFilters,\n  LokiVisualQueryOperationCategory.LabelFilters,\n];\nconst excludeOperationIds: string[] = [LokiOperationId.Unwrap];\nconst keepOperations = operationDefinitions\n  .filter(\n    (operation) =>\n      operation.category &&\n      keepOperationCategories.includes(operation.category) &&\n      !excludeOperationIds.includes(operation.id)\n  )\n  .map((operation) => operation.id);\n\nexport const QueryPatternsModal = (props: Props) => {\n  const { isOpen, onClose, onChange, onAddQuery, query, queries, app } = props;\n  const [openTabs, setOpenTabs] = useState<string[]>([]);\n  const [selectedPatternName, setSelectedPatternName] = useState<string | null>(null);\n\n  const styles = useStyles2(getStyles);\n  const hasNewQueryOption = !!onAddQuery;\n  const hasPreviousQuery = useMemo(\n    () => buildVisualQueryFromString(query.expr).query.operations.length > 0,\n    [query.expr]\n  );\n\n  const onPatternSelect = (pattern: LokiQueryPattern, selectAsNewQuery = false) => {\n    const visualQuery = buildVisualQueryFromString(selectAsNewQuery ? '' : query.expr);\n    reportInteraction('grafana_loki_query_patterns_selected', {\n      version: 'v2',\n      app: app ?? '',\n      editorMode: query.editorMode,\n      selectedPattern: pattern.name,\n      preSelectedOperationsCount: visualQuery.query.operations.length,\n      preSelectedLabelsCount: visualQuery.query.labels.length,\n      createNewQuery: hasNewQueryOption && selectAsNewQuery,\n    });\n\n    // Filter operations in the original query except those we configured to keep\n    visualQuery.query.operations = visualQuery.query.operations.filter((op) => keepOperations.includes(op.id));\n    // Filter operations in the pattern that are present in the original query\n    const patternOperations = pattern.operations.filter(\n      (patternOp) => visualQuery.query.operations.findIndex((op) => op.id === patternOp.id) < 0\n    );\n    visualQuery.query.operations = [...visualQuery.query.operations, ...patternOperations];\n\n    if (hasNewQueryOption && selectAsNewQuery) {\n      onAddQuery({\n        ...query,\n        refId: getNextRefId(queries ?? [query]),\n        expr: lokiQueryModeller.renderQuery(visualQuery.query),\n      });\n    } else {\n      onChange({\n        ...query,\n        expr: lokiQueryModeller.renderQuery(visualQuery.query),\n      });\n    }\n    setSelectedPatternName(null);\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} title=\"Kick start your query\" onDismiss={onClose} className={styles.modal}>\n      <div className={styles.spacing}>\n        Kick start your query by selecting one of these queries. You can then continue to complete your query.\n      </div>\n      {Object.values(LokiQueryPatternType).map((patternType) => {\n        return (\n          <Collapse\n            key={patternType}\n            label={`${capitalize(patternType)} query starters`}\n            isOpen={openTabs.includes(patternType)}\n            collapsible={true}\n            onToggle={() =>\n              setOpenTabs((tabs) =>\n                // close tab if it's already open, otherwise open it\n                tabs.includes(patternType) ? tabs.filter((t) => t !== patternType) : [...tabs, patternType]\n              )\n            }\n          >\n            <div className={styles.cardsContainer}>\n              {lokiQueryModeller\n                .getQueryPatterns()\n                .filter((pattern) => pattern.type === patternType)\n                .map((pattern) => (\n                  <QueryPattern\n                    key={pattern.name}\n                    pattern={pattern}\n                    hasNewQueryOption={hasNewQueryOption}\n                    hasPreviousQuery={hasPreviousQuery}\n                    onPatternSelect={onPatternSelect}\n                    selectedPatternName={selectedPatternName}\n                    setSelectedPatternName={setSelectedPatternName}\n                  />\n                ))}\n            </div>\n          </Collapse>\n        );\n      })}\n      <Button variant=\"secondary\" onClick={onClose}>\n        Close\n      </Button>\n    </Modal>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    cardsContainer: css({\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n    }),\n    spacing: css({\n      marginBottom: theme.spacing(1),\n    }),\n    modal: css({\n      width: '85vw',\n      [theme.breakpoints.down('md')]: {\n        width: '100%',\n      },\n    }),\n  };\n};\n","import { QueryEditorMode } from '@grafana/plugin-ui';\n\nimport { LokiQuery, LokiQueryType } from '../types';\n\nconst queryEditorModeDefaultLocalStorageKey = 'LokiQueryEditorModeDefault';\n\nexport function changeEditorMode(query: LokiQuery, editorMode: QueryEditorMode, onChange: (query: LokiQuery) => void) {\n  // If empty query store new mode as default\n  if (query.expr === '') {\n    window.localStorage.setItem(queryEditorModeDefaultLocalStorageKey, editorMode);\n  }\n\n  onChange({ ...query, editorMode });\n}\n\nexport function getDefaultEditorMode(expr: string) {\n  // If we already have an expression default to code view\n  if (expr != null && expr !== '') {\n    return QueryEditorMode.Code;\n  }\n\n  const value: string | null = window.localStorage.getItem(queryEditorModeDefaultLocalStorageKey);\n  switch (value) {\n    case 'code':\n      return QueryEditorMode.Code;\n\n    case 'builder':\n    default:\n      return QueryEditorMode.Builder;\n  }\n}\n\n/**\n * Returns query with defaults, and boolean true/false depending on change was required\n */\nexport function getQueryWithDefaults(query: LokiQuery): LokiQuery {\n  // If no expr (ie new query) then default to builder\n  let result = query;\n\n  if (!query.editorMode) {\n    result = { ...query, editorMode: getDefaultEditorMode(query.expr) };\n  }\n\n  if (query.expr == null) {\n    result = { ...result, expr: '' };\n  }\n\n  if (query.queryType == null) {\n    // Default to range query\n    result = { ...result, queryType: LokiQueryType.Range };\n  }\n\n  return result;\n}\n","import { DateTime, isDateTime, TimeRange } from '@grafana/data';\n\nimport { LokiQueryType } from '../types';\n\n/**\n * This function compares two time values. If the first is absolute, it compares them using `DateTime.isSame`.\n *\n * @param {(DateTime | string)} time1\n * @param {(DateTime | string | undefined)} time2\n */\nfunction compareTime(time1: DateTime | string | undefined, time2: DateTime | string | undefined) {\n  if (!time1 || !time2) {\n    return false;\n  }\n\n  const isAbsolute = isDateTime(time1);\n\n  if (isAbsolute) {\n    return time1.isSame(time2);\n  }\n\n  return time1 === time2;\n}\n\nexport function shouldUpdateStats(\n  query: string,\n  prevQuery: string | undefined,\n  timeRange: TimeRange | undefined,\n  prevTimeRange: TimeRange | undefined,\n  queryType: LokiQueryType | undefined,\n  prevQueryType: LokiQueryType | undefined\n): boolean {\n  if (prevQuery === undefined || query.trim() !== prevQuery.trim() || queryType !== prevQueryType) {\n    return true;\n  }\n\n  if (\n    compareTime(timeRange?.raw.from, prevTimeRange?.raw.from) &&\n    compareTime(timeRange?.raw.to, prevTimeRange?.raw.to)\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import { isEqual } from 'lodash';\nimport { memo, SyntheticEvent, useCallback, useEffect, useId, useState } from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { CoreApp, LoadingState } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport {\n  EditorHeader,\n  EditorRows,\n  FlexItem,\n  QueryEditorModeToggle,\n  QueryHeaderSwitch,\n  QueryEditorMode,\n} from '@grafana/plugin-ui';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Button, ConfirmModal, Space, Stack } from '@grafana/ui';\n\nimport { LabelBrowserModal } from '../querybuilder/components/LabelBrowserModal';\nimport { LokiQueryBuilderContainer } from '../querybuilder/components/LokiQueryBuilderContainer';\nimport { LokiQueryBuilderOptions } from '../querybuilder/components/LokiQueryBuilderOptions';\nimport { LokiQueryCodeEditor } from '../querybuilder/components/LokiQueryCodeEditor';\nimport { QueryPatternsModal } from '../querybuilder/components/QueryPatternsModal';\nimport { buildVisualQueryFromString } from '../querybuilder/parsing';\nimport { changeEditorMode, getQueryWithDefaults } from '../querybuilder/state';\nimport { LokiQuery, QueryStats } from '../types';\n\nimport { shouldUpdateStats } from './stats';\nimport { LokiQueryEditorProps } from './types';\n\nexport const testIds = {\n  editor: 'loki-editor',\n};\n\nexport const lokiQueryEditorExplainKey = 'LokiQueryEditorExplainDefault';\n\nexport const LokiQueryEditor = memo<LokiQueryEditorProps>((props) => {\n  const id = useId();\n  const { onChange, onRunQuery, onAddQuery, data, app, queries, datasource, range: timeRange } = props;\n  const [parseModalOpen, setParseModalOpen] = useState(false);\n  const [queryPatternsModalOpen, setQueryPatternsModalOpen] = useState(false);\n  const [dataIsStale, setDataIsStale] = useState(false);\n  const [labelBrowserVisible, setLabelBrowserVisible] = useState(false);\n  const [queryStats, setQueryStats] = useState<QueryStats | null>(null);\n  const [explain, setExplain] = useState(window.localStorage.getItem(lokiQueryEditorExplainKey) === 'true');\n\n  const predefinedOperations = datasource.predefinedOperations;\n  const previousTimeRange = usePrevious(timeRange);\n\n  const query = getQueryWithDefaults(props.query);\n  if (config.featureToggles.lokiPredefinedOperations && !query.expr && predefinedOperations) {\n    query.expr = `{} ${predefinedOperations}`;\n  }\n  const previousQueryExpr = usePrevious(query.expr);\n  const previousQueryType = usePrevious(query.queryType);\n\n  // This should be filled in from the defaults by now.\n  const editorMode = query.editorMode!;\n\n  const onExplainChange = (event: SyntheticEvent<HTMLInputElement>) => {\n    window.localStorage.setItem(lokiQueryEditorExplainKey, event.currentTarget.checked ? 'true' : 'false');\n    setExplain(event.currentTarget.checked);\n  };\n\n  const onEditorModeChange = useCallback(\n    (newEditorMode: QueryEditorMode) => {\n      reportInteraction('grafana_loki_editor_mode_clicked', {\n        newEditor: newEditorMode,\n        previousEditor: query.editorMode ?? '',\n        newQuery: !query.expr,\n        app: app ?? '',\n      });\n\n      if (newEditorMode === QueryEditorMode.Builder) {\n        const result = buildVisualQueryFromString(query.expr || '');\n        // If there are errors, give user a chance to decide if they want to go to builder as that can lose some data.\n        if (result.errors.length) {\n          setParseModalOpen(true);\n          return;\n        }\n      }\n      changeEditorMode(query, newEditorMode, onChange);\n    },\n    [onChange, query, app]\n  );\n\n  useEffect(() => {\n    setDataIsStale(false);\n  }, [data]);\n\n  const onChangeInternal = (query: LokiQuery) => {\n    if (!isEqual(query, props.query)) {\n      setDataIsStale(true);\n    }\n    onChange(query);\n  };\n\n  const onClickLabelBrowserButton = () => {\n    reportInteraction('grafana_loki_label_browser_opened', {\n      app: app,\n    });\n\n    setLabelBrowserVisible((visible) => !visible);\n  };\n\n  useEffect(() => {\n    const shouldUpdate = shouldUpdateStats(\n      query.expr,\n      previousQueryExpr,\n      timeRange,\n      previousTimeRange,\n      query.queryType,\n      previousQueryType\n    );\n    if (shouldUpdate && timeRange) {\n      const makeAsyncRequest = async () => {\n        // overwriting the refId that is later used to cancel inflight queries with the same ID.\n        const stats = await datasource.getStats({ ...query, refId: `${id}_${query.refId}` }, timeRange);\n        setQueryStats(stats);\n      };\n      makeAsyncRequest();\n    }\n  }, [datasource, timeRange, previousTimeRange, query, previousQueryExpr, previousQueryType, setQueryStats, id]);\n\n  return (\n    <>\n      <ConfirmModal\n        isOpen={parseModalOpen}\n        title=\"Query parsing\"\n        body=\"There were errors while trying to parse the query. Continuing to visual builder may lose some parts of the query.\"\n        confirmText=\"Continue\"\n        onConfirm={() => {\n          onChange({ ...query, editorMode: QueryEditorMode.Builder });\n          setParseModalOpen(false);\n        }}\n        onDismiss={() => setParseModalOpen(false)}\n      />\n      <QueryPatternsModal\n        isOpen={queryPatternsModalOpen}\n        onClose={() => setQueryPatternsModalOpen(false)}\n        query={query}\n        queries={queries}\n        app={app}\n        onChange={onChange}\n        onAddQuery={onAddQuery}\n      />\n      <LabelBrowserModal\n        isOpen={labelBrowserVisible}\n        datasource={datasource}\n        query={query}\n        app={app}\n        onClose={() => setLabelBrowserVisible(false)}\n        onChange={onChangeInternal}\n        onRunQuery={onRunQuery}\n        timeRange={timeRange}\n      />\n      <EditorHeader>\n        <Stack gap={1}>\n          <Button\n            data-testid={selectors.components.QueryBuilder.queryPatterns}\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => {\n              setQueryPatternsModalOpen((prevValue) => !prevValue);\n\n              const visualQuery = buildVisualQueryFromString(query.expr || '');\n              reportInteraction('grafana_loki_query_patterns_opened', {\n                version: 'v2',\n                app: app ?? '',\n                editorMode: query.editorMode,\n                preSelectedOperationsCount: visualQuery.query.operations.length,\n                preSelectedLabelsCount: visualQuery.query.labels.length,\n              });\n            }}\n          >\n            Kick start your query\n          </Button>\n          <Button variant=\"secondary\" size=\"sm\" onClick={onClickLabelBrowserButton} data-testid=\"label-browser-button\">\n            Label browser\n          </Button>\n        </Stack>\n        <QueryHeaderSwitch label=\"Explain query\" value={explain} onChange={onExplainChange} />\n        <FlexItem grow={1} />\n        {app !== CoreApp.Explore && app !== CoreApp.Correlations && (\n          <Button\n            variant={dataIsStale ? 'primary' : 'secondary'}\n            size=\"sm\"\n            onClick={onRunQuery}\n            icon={data?.state === LoadingState.Loading ? 'spinner' : undefined}\n            disabled={data?.state === LoadingState.Loading}\n          >\n            {queries && queries.length > 1 ? `Run queries` : `Run query`}\n          </Button>\n        )}\n        <QueryEditorModeToggle mode={editorMode!} onChange={onEditorModeChange} />\n      </EditorHeader>\n      <Space v={0.5} />\n      <EditorRows>\n        {editorMode === QueryEditorMode.Code && (\n          <LokiQueryCodeEditor {...props} query={query} onChange={onChangeInternal} showExplain={explain} />\n        )}\n        {editorMode === QueryEditorMode.Builder && (\n          <LokiQueryBuilderContainer\n            datasource={props.datasource}\n            query={query}\n            onChange={onChangeInternal}\n            onRunQuery={props.onRunQuery}\n            showExplain={explain}\n            timeRange={timeRange}\n          />\n        )}\n        <LokiQueryBuilderOptions\n          query={query}\n          onChange={onChange}\n          onRunQuery={onRunQuery}\n          app={app}\n          maxLines={datasource.maxLines}\n          queryStats={queryStats}\n        />\n      </EditorRows>\n    </>\n  );\n});\n\nLokiQueryEditor.displayName = 'LokiQueryEditor';\n","import { LokiQueryField } from './LokiQueryField';\nimport { LokiQueryEditorProps } from './types';\n\nexport function LokiQueryEditorForAlerting(props: LokiQueryEditorProps) {\n  const { query, data, datasource, onChange, onRunQuery, history } = props;\n\n  return (\n    <LokiQueryField\n      datasource={datasource}\n      query={query}\n      onChange={onChange}\n      onRunQuery={onRunQuery}\n      history={history}\n      data={data}\n      placeholder=\"Enter a Loki query\"\n      data-testid={testIds.editor}\n    />\n  );\n}\n\nexport const testIds = {\n  editor: 'loki-editor-cloud-alerting',\n};\n","import { memo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\n\nimport { LokiQueryEditor } from './LokiQueryEditor';\nimport { LokiQueryEditorForAlerting } from './LokiQueryEditorForAlerting';\nimport { LokiQueryEditorProps } from './types';\n\nexport function LokiQueryEditorByApp(props: LokiQueryEditorProps) {\n  const { app } = props;\n\n  switch (app) {\n    case CoreApp.CloudAlerting:\n      return <LokiQueryEditorForAlerting {...props} />;\n    default:\n      return <LokiQueryEditor {...props} />;\n  }\n}\n\nexport default memo(LokiQueryEditorByApp);\n\nexport const testIds = {\n  editor: 'loki-editor',\n};\n","import { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/plugin-ui';\nimport { InlineField, InlineSwitch } from '@grafana/ui';\n\nexport function AlertingSettings({\n  options,\n  onOptionsChange,\n}: Pick<DataSourcePluginOptionsEditorProps, 'options' | 'onOptionsChange'>) {\n  return (\n    <ConfigSubSection\n      title=\"Alerting\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Manage alert rules for the Loki data source.\"\n          suffix=\"loki/configure-loki-data-source/#alerting\"\n          feature=\"alerting\"\n        />\n      }\n    >\n      <InlineField\n        labelWidth={29}\n        label=\"Manage alert rules in Alerting UI\"\n        disabled={options.readOnly}\n        tooltip=\"Manage alert rules for this data source. To manage other alerting resources, add an Alertmanager data source.\"\n      >\n        <InlineSwitch\n          value={options.jsonData.manageAlerts !== false}\n          onChange={(event) =>\n            onOptionsChange({\n              ...options,\n              jsonData: { ...options.jsonData, manageAlerts: event!.currentTarget.checked },\n            })\n          }\n        />\n      </InlineField>\n    </ConfigSubSection>\n  );\n}\n","import { ReactNode, useState } from 'react';\n\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { InlineField, TextArea } from '@grafana/ui';\n\nimport { DerivedFieldConfig } from '../types';\n\ntype Props = {\n  derivedFields?: DerivedFieldConfig[];\n  className?: string;\n};\nexport const DebugSection = (props: Props) => {\n  const { derivedFields, className } = props;\n  const [debugText, setDebugText] = useState('');\n\n  let debugFields: DebugField[] = [];\n  if (debugText && derivedFields) {\n    debugFields = makeDebugFields(derivedFields, debugText);\n  }\n\n  return (\n    <div className={className}>\n      <InlineField label=\"Debug log message\" labelWidth={24} grow>\n        <TextArea\n          type=\"text\"\n          aria-label=\"Loki query\"\n          placeholder=\"Paste an example log line here to test the regular expressions of your derived fields\"\n          value={debugText}\n          onChange={(event) => setDebugText(event.currentTarget.value)}\n        />\n      </InlineField>\n      {!!debugFields.length && <DebugFields fields={debugFields} />}\n    </div>\n  );\n};\n\ntype DebugFieldItemProps = {\n  fields: DebugField[];\n};\nconst DebugFields = ({ fields }: DebugFieldItemProps) => {\n  return (\n    <table className={'filter-table'}>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n          <th>Url</th>\n        </tr>\n      </thead>\n      <tbody>\n        {fields.map((field) => {\n          let value: ReactNode = field.value;\n          if (field.error && field.error instanceof Error) {\n            value = field.error.message;\n          } else if (field.href) {\n            value = <a href={field.href}>{value}</a>;\n          }\n          return (\n            <tr key={`${field.name}=${field.value}`}>\n              <td>{field.name}</td>\n              <td>{value}</td>\n              <td>{field.href ? <a href={field.href}>{field.href}</a> : ''}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\ntype DebugField = {\n  name: string;\n  error?: unknown;\n  value?: string;\n  href?: string;\n};\n\nfunction makeDebugFields(derivedFields: DerivedFieldConfig[], debugText: string): DebugField[] {\n  return derivedFields\n    .filter((field) => field.name && field.matcherRegex)\n    .map((field) => {\n      try {\n        const testMatch = debugText.match(field.matcherRegex);\n        let href;\n        const value = testMatch && testMatch[1];\n\n        if (value) {\n          href = getTemplateSrv().replace(field.url, {\n            __value: {\n              value: {\n                raw: value,\n              },\n              text: 'Raw value',\n            },\n          });\n        }\n        const debugFiled: DebugField = {\n          name: field.name,\n          value: value || '<no match>',\n          href,\n        };\n        return debugFiled;\n      } catch (error) {\n        return {\n          name: field.name,\n          error,\n        };\n      }\n    });\n}\n","import { css } from '@emotion/css';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { GrafanaTheme2, DataSourceInstanceSettings, VariableSuggestion } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { Button, DataLinkInput, Field, Icon, Input, Label, Tooltip, useStyles2, Select, Switch } from '@grafana/ui';\n\nimport { DerivedFieldConfig } from '../types';\n\ntype MatcherType = 'label' | 'regex';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  row: css({\n    display: 'flex',\n    alignItems: 'baseline',\n  }),\n  nameField: css({\n    flex: 2,\n    marginRight: theme.spacing(0.5),\n  }),\n  regexField: css({\n    flex: 3,\n    marginRight: theme.spacing(0.5),\n  }),\n  urlField: css({\n    flex: 1,\n    marginRight: theme.spacing(0.5),\n  }),\n  urlDisplayLabelField: css({\n    flex: 1,\n  }),\n  internalLink: css({\n    marginRight: theme.spacing(1),\n  }),\n  openNewTab: css({\n    marginRight: theme.spacing(1),\n  }),\n  dataSource: css({}),\n  nameMatcherField: css({\n    width: theme.spacing(20),\n    marginRight: theme.spacing(0.5),\n  }),\n});\n\ntype Props = {\n  value: DerivedFieldConfig;\n  onChange: (value: DerivedFieldConfig) => void;\n  onDelete: () => void;\n  suggestions: VariableSuggestion[];\n  className?: string;\n  validateName: (name: string) => boolean;\n};\nexport const DerivedField = (props: Props) => {\n  const { value, onChange, onDelete, suggestions, className, validateName } = props;\n  const styles = useStyles2(getStyles);\n  const [showInternalLink, setShowInternalLink] = useState(!!value.datasourceUid);\n  const [openInNewTab, setOpenInNewTab] = useState(!!value.targetBlank);\n  const previousUid = usePrevious(value.datasourceUid);\n  const [fieldType, setFieldType] = useState<MatcherType>(value.matcherType ?? 'regex');\n\n  // Force internal link visibility change if uid changed outside of this component.\n  useEffect(() => {\n    if (!previousUid && value.datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n    if (previousUid && !value.datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, value.datasourceUid, showInternalLink]);\n\n  const handleChange = (field: keyof typeof value) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      [field]: event.currentTarget.value,\n    });\n  };\n\n  const invalidName = !validateName(value.name);\n\n  return (\n    <div className={className} data-testid=\"derived-field\">\n      <div className=\"gf-form\">\n        <Field className={styles.nameField} label=\"Name\" invalid={invalidName} error=\"The name is already in use\">\n          <Input value={value.name} onChange={handleChange('name')} placeholder=\"Field name\" invalid={invalidName} />\n        </Field>\n        <Field\n          className={styles.nameMatcherField}\n          label={\n            <TooltipLabel\n              label=\"Type\"\n              content=\"Derived fields can be created from labels or by applying a regular expression to the log message.\"\n            />\n          }\n        >\n          <Select\n            options={[\n              { label: 'Regex in log line', value: 'regex' },\n              { label: 'Label', value: 'label' },\n            ]}\n            value={fieldType}\n            onChange={(type) => {\n              // make sure this is a valid MatcherType\n              if (type.value === 'label' || type.value === 'regex') {\n                setFieldType(type.value);\n                onChange({\n                  ...value,\n                  matcherType: type.value,\n                });\n              }\n            }}\n          />\n        </Field>\n        <Field\n          className={styles.regexField}\n          label={\n            <>\n              {fieldType === 'regex' && (\n                <TooltipLabel\n                  label=\"Regex\"\n                  content=\"Use to parse and capture some part of the log message. You can use the captured groups in the template.\"\n                />\n              )}\n\n              {fieldType === 'label' && <TooltipLabel label=\"Label\" content=\"Use to derive the field from a label.\" />}\n            </>\n          }\n        >\n          <Input value={value.matcherRegex} onChange={handleChange('matcherRegex')} />\n        </Field>\n        <Field label=\"\">\n          <Button\n            variant=\"destructive\"\n            title=\"Remove field\"\n            icon=\"times\"\n            onClick={(event) => {\n              event.preventDefault();\n              onDelete();\n            }}\n          />\n        </Field>\n      </div>\n\n      <div className=\"gf-form\">\n        <Field label={showInternalLink ? 'Query' : 'URL'} className={styles.urlField}>\n          <DataLinkInput\n            placeholder={showInternalLink ? '${__value.raw}' : 'http://example.com/${__value.raw}'}\n            value={value.url || ''}\n            onChange={(newValue) =>\n              onChange({\n                ...value,\n                url: newValue,\n              })\n            }\n            suggestions={suggestions}\n          />\n        </Field>\n        <Field\n          className={styles.urlDisplayLabelField}\n          label={\n            <TooltipLabel\n              label=\"URL Label\"\n              content=\"Use to override the button label when this derived field is found in a log.\"\n            />\n          }\n        >\n          <Input value={value.urlDisplayLabel} onChange={handleChange('urlDisplayLabel')} />\n        </Field>\n      </div>\n\n      <div className=\"gf-form\">\n        <Field label=\"Internal link\" className={styles.internalLink}>\n          <Switch\n            value={showInternalLink}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => {\n              const { checked } = e.currentTarget;\n              if (!checked) {\n                onChange({\n                  ...value,\n                  datasourceUid: undefined,\n                });\n              }\n              setShowInternalLink(checked);\n            }}\n          />\n        </Field>\n\n        {showInternalLink && (\n          <Field label=\"\" className={styles.dataSource}>\n            <DataSourcePicker\n              tracing={true}\n              onChange={(ds: DataSourceInstanceSettings) =>\n                onChange({\n                  ...value,\n                  datasourceUid: ds.uid,\n                })\n              }\n              current={value.datasourceUid}\n              noDefault\n            />\n          </Field>\n        )}\n      </div>\n\n      <div className=\"gf-form\">\n        <Field label=\"Open in new tab\" className={styles.openNewTab}>\n          <Switch\n            value={openInNewTab}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => {\n              const { checked } = e.currentTarget;\n              onChange({\n                ...value,\n                targetBlank: checked,\n              });\n              setOpenInNewTab(checked);\n            }}\n          />\n        </Field>\n      </div>\n    </div>\n  );\n};\n\nconst TooltipLabel = ({ content, label }: { content: string; label: string }) => (\n  <Label>\n    {label}\n    <Tooltip placement=\"top\" content={content} theme=\"info\">\n      <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" style={{ marginLeft: '10px' }} />\n    </Tooltip>\n  </Label>\n);\n","import { css } from '@emotion/css';\nimport { useCallback, useState } from 'react';\n\nimport { GrafanaTheme2, VariableOrigin, DataLinkBuiltInVars } from '@grafana/data';\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/plugin-ui';\nimport { Button, useTheme2 } from '@grafana/ui';\n\nimport { DerivedFieldConfig } from '../types';\n\nimport { DebugSection } from './DebugSection';\nimport { DerivedField } from './DerivedField';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  addButton: css({\n    marginRight: '10px',\n  }),\n  derivedField: css({\n    marginBottom: theme.spacing(1),\n  }),\n  container: css({\n    marginBottom: theme.spacing(4),\n  }),\n  debugSection: css({\n    marginTop: theme.spacing(4),\n  }),\n});\n\ntype Props = {\n  fields?: DerivedFieldConfig[];\n  onChange: (value: DerivedFieldConfig[]) => void;\n};\n\nexport const DerivedFields = ({ fields = [], onChange }: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  const [showDebug, setShowDebug] = useState(false);\n\n  const validateName = useCallback(\n    (name: string) => {\n      return fields.filter((field) => field.name && field.name === name).length <= 1;\n    },\n    [fields]\n  );\n\n  return (\n    <ConfigSubSection\n      title=\"Derived fields\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Derived fields can be used to extract new fields from a log message and create a link from its value.\"\n          suffix=\"loki/configure-loki-data-source/#derived-fields\"\n          feature=\"derived fields\"\n        />\n      }\n    >\n      <div className={styles.container}>\n        {fields.map((field, index) => {\n          return (\n            <DerivedField\n              className={styles.derivedField}\n              key={index}\n              value={field}\n              onChange={(newField) => {\n                const newDerivedFields = [...fields];\n                newDerivedFields.splice(index, 1, newField);\n                onChange(newDerivedFields);\n              }}\n              onDelete={() => {\n                const newDerivedFields = [...fields];\n                newDerivedFields.splice(index, 1);\n                onChange(newDerivedFields);\n              }}\n              validateName={validateName}\n              suggestions={[\n                {\n                  value: DataLinkBuiltInVars.valueRaw,\n                  label: 'Raw value',\n                  documentation: 'Exact string captured by the regular expression',\n                  origin: VariableOrigin.Value,\n                },\n              ]}\n            />\n          );\n        })}\n        <div>\n          <Button\n            variant=\"secondary\"\n            className={styles.addButton}\n            icon=\"plus\"\n            onClick={(event) => {\n              event.preventDefault();\n              const emptyConfig: DerivedFieldConfig = {\n                name: '',\n                matcherRegex: '',\n                urlDisplayLabel: '',\n                url: '',\n                matcherType: 'regex',\n              };\n              const newDerivedFields = [...fields, emptyConfig];\n              onChange(newDerivedFields);\n            }}\n          >\n            Add\n          </Button>\n\n          {fields.length > 0 && (\n            <Button variant=\"secondary\" type=\"button\" onClick={() => setShowDebug(!showDebug)}>\n              {showDebug ? 'Hide example log message' : 'Show example log message'}\n            </Button>\n          )}\n        </div>\n\n        {showDebug && (\n          <div className={styles.debugSection}>\n            <DebugSection\n              className={css({\n                marginBottom: '10px',\n              })}\n              derivedFields={fields}\n            />\n          </div>\n        )}\n      </div>\n    </ConfigSubSection>\n  );\n};\n","import * as React from 'react';\n\nimport { ConfigDescriptionLink, ConfigSubSection } from '@grafana/plugin-ui';\nimport { config } from '@grafana/runtime';\nimport { Badge, InlineField, InlineFieldRow, Input } from '@grafana/ui';\n\ntype Props = {\n  maxLines: string;\n  onMaxLinedChange: (value: string) => void;\n  predefinedOperations: string;\n  onPredefinedOperationsChange: (value: string) => void;\n};\n\nexport const QuerySettings = (props: Props) => {\n  const { maxLines, onMaxLinedChange, predefinedOperations, onPredefinedOperationsChange } = props;\n  return (\n    <ConfigSubSection\n      title=\"Queries\"\n      description={\n        <ConfigDescriptionLink\n          description=\"Additional options to customize your querying experience.\"\n          suffix=\"loki/configure-loki-data-source/#queries\"\n          feature=\"query settings\"\n        />\n      }\n    >\n      <InlineField\n        label=\"Maximum lines\"\n        htmlFor=\"loki_config_maxLines\"\n        labelWidth={22}\n        tooltip={\n          <>\n            Loki queries must contain a limit of the maximum number of lines returned (default: 1000). Increase this\n            limit to have a bigger result set for ad-hoc analysis. Decrease this limit if your browser becomes sluggish\n            when displaying the log results.\n          </>\n        }\n      >\n        <Input\n          type=\"number\"\n          id=\"loki_config_maxLines\"\n          value={maxLines}\n          onChange={(event: React.FormEvent<HTMLInputElement>) => onMaxLinedChange(event.currentTarget.value)}\n          width={16}\n          placeholder=\"1000\"\n          spellCheck={false}\n        />\n      </InlineField>\n\n      {config.featureToggles.lokiPredefinedOperations && (\n        <InlineFieldRow>\n          <InlineField\n            label=\"Predefined operations\"\n            htmlFor=\"loki_config_predefinedOperations\"\n            labelWidth={22}\n            tooltip={\n              <>\n                {\n                  'Predefined operations are used as an initial state for your queries. They are useful, if you want to unpack, parse or format all log lines. Currently we support only log operations starting with |. For example: | unpack | line_format \"{{.message}}\".'\n                }\n              </>\n            }\n          >\n            <Input\n              type=\"string\"\n              id=\"loki_config_predefinedOperations\"\n              value={predefinedOperations}\n              onChange={(event: React.FormEvent<HTMLInputElement>) =>\n                onPredefinedOperationsChange(event.currentTarget.value)\n              }\n              width={40}\n              placeholder=\"| unpack | line_format\"\n              spellCheck={false}\n            />\n          </InlineField>\n          <InlineField>\n            <Badge\n              text=\"Experimental\"\n              color=\"orange\"\n              icon=\"exclamation-triangle\"\n              tooltip=\"Predefined operations is an experimental feature that may change in the future.\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n      )}\n    </ConfigSubSection>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings } from '@grafana/data';\nimport {\n  ConfigSection,\n  DataSourceDescription,\n  ConnectionSettings,\n  Auth,\n  convertLegacyAuthProps,\n  AdvancedHttpSettings,\n} from '@grafana/plugin-ui';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Divider, SecureSocksProxySettings, Stack } from '@grafana/ui';\n\nimport { LokiOptions } from '../types';\n\nimport { AlertingSettings } from './AlertingSettings';\nimport { DerivedFields } from './DerivedFields';\nimport { QuerySettings } from './QuerySettings';\n\nexport type Props = DataSourcePluginOptionsEditorProps<LokiOptions>;\n\nconst makeJsonUpdater =\n  <T extends any>(field: keyof LokiOptions) =>\n  (options: DataSourceSettings<LokiOptions>, value: T): DataSourceSettings<LokiOptions> => {\n    return {\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [field]: value,\n      },\n    };\n  };\n\nconst setMaxLines = makeJsonUpdater('maxLines');\nconst setPredefinedOperations = makeJsonUpdater('predefinedOperations');\nconst setDerivedFields = makeJsonUpdater('derivedFields');\n\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  const updatePredefinedOperations = useCallback(\n    (value: string) => {\n      reportInteraction('grafana_loki_predefined_operations_changed', { value });\n      onOptionsChange(setPredefinedOperations(options, value));\n    },\n    [options, onOptionsChange]\n  );\n\n  return (\n    <>\n      <DataSourceDescription\n        dataSourceName=\"Loki\"\n        docsLink=\"https://grafana.com/docs/grafana/latest/datasources/loki/configure-loki-data-source/\"\n        hasRequiredFields={false}\n      />\n      <Divider spacing={4} />\n      <ConnectionSettings config={options} onChange={onOptionsChange} urlPlaceholder=\"http://localhost:3100\" />\n      <Divider spacing={4} />\n      <Auth\n        {...convertLegacyAuthProps({\n          config: options,\n          onChange: onOptionsChange,\n        })}\n      />\n      <Divider spacing={4} />\n      <ConfigSection\n        title=\"Additional settings\"\n        description=\"Additional settings are optional settings that can be configured for more control over your data source.\"\n        isCollapsible={true}\n        isInitiallyOpen\n      >\n        <Stack gap={5} direction=\"column\">\n          <AdvancedHttpSettings config={options} onChange={onOptionsChange} />\n          {config.secureSocksDSProxyEnabled && (\n            <SecureSocksProxySettings options={options} onOptionsChange={onOptionsChange} />\n          )}\n          <AlertingSettings options={options} onOptionsChange={onOptionsChange} />\n          <QuerySettings\n            maxLines={options.jsonData.maxLines || ''}\n            onMaxLinedChange={(value) => onOptionsChange(setMaxLines(options, value))}\n            predefinedOperations={options.jsonData.predefinedOperations || ''}\n            onPredefinedOperationsChange={updatePredefinedOperations}\n          />\n          <DerivedFields\n            fields={options.jsonData.derivedFields}\n            onChange={(value) => onOptionsChange(setDerivedFields(options, value))}\n          />\n        </Stack>\n      </ConfigSection>\n    </>\n  );\n};\n","import { DashboardLoadedEvent, DataSourcePlugin } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\n\nimport LokiCheatSheet from './components/LokiCheatSheet';\nimport LokiQueryEditorByApp from './components/LokiQueryEditorByApp';\nimport { ConfigEditor } from './configuration/ConfigEditor';\nimport { LokiDatasource } from './datasource';\nimport { onDashboardLoadedHandler } from './tracking';\nimport { LokiQuery } from './types';\n\nexport const plugin = new DataSourcePlugin(LokiDatasource)\n  .setQueryEditor(LokiQueryEditorByApp)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditorHelp(LokiCheatSheet);\n\n// Subscribe to on dashboard loaded event so that we can track plugin adoption\ngetAppEvents().subscribe<DashboardLoadedEvent<LokiQuery>>(DashboardLoadedEvent, onDashboardLoadedHandler);\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nfunction ConfigDescriptionLink(props) {\n  const { description, suffix, feature } = props;\n  const text = `Learn more about ${feature}`;\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"span\", { className: styles.container }, description, /* @__PURE__ */ React__default.createElement(\n    \"a\",\n    {\n      \"aria-label\": text,\n      href: `https://grafana.com/docs/grafana/next/datasources/${suffix}`,\n      rel: \"noreferrer\",\n      target: \"_blank\"\n    },\n    text\n  ));\n}\nconst getStyles = (theme) => {\n  return {\n    container: css({\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: \"underline\",\n        marginLeft: \"5px\",\n        \"&:hover\": {\n          textDecoration: \"none\"\n        }\n      })\n    })\n  };\n};\n\nexport { ConfigDescriptionLink };\n//# sourceMappingURL=ConfigDescriptionLink.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst EditorHeader = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, children);\n};\nconst getStyles = (theme) => ({\n  root: css({\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    gap: theme.spacing(3),\n    minHeight: theme.spacing(4)\n  })\n});\n\nexport { EditorHeader };\n//# sourceMappingURL=EditorHeader.js.map\n","import React__default from 'react';\n\nconst FlexItem = ({ grow, shrink }) => {\n  return /* @__PURE__ */ React__default.createElement(\"div\", { style: { display: \"block\", flexGrow: grow, flexShrink: shrink } });\n};\n\nexport { FlexItem };\n//# sourceMappingURL=FlexItem.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport '../../QueryEditor/types.js';\nimport 'lodash';\nimport '../../QueryEditor/EditorList.js';\nimport { EditorStack } from '../../QueryEditor/EditorStack.js';\nimport '../../QueryEditor/Space.js';\nimport 'react-use';\nimport '../../QueryEditor/QueryHeader.js';\nimport 'react-virtualized-auto-sizer';\nimport 'sql-formatter-plus';\nimport '../../SQLEditor/standardSql/language.js';\nimport 'uuid';\nimport '@grafana/runtime';\nimport '../../SQLEditor/utils/debugger.js';\nimport '../../SQLEditor/standardSql/macros.js';\nimport '../../QueryEditor/visual-query-builder/AwesomeQueryBuilder.js';\nimport '../../QueryEditor/visual-query-builder/WhereRow.js';\nimport '../../QueryEditor/visual-query-builder/EditorField.js';\nimport 'rxjs';\nimport 'rxjs/operators';\n\nfunction OperationsEditorRow({ children }) {\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 1 }, children));\n}\nconst getStyles = (theme) => {\n  return {\n    root: css({\n      padding: theme.spacing(1, 1, 0, 1),\n      backgroundColor: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default\n    })\n  };\n};\n\nexport { OperationsEditorRow };\n//# sourceMappingURL=OperationsEditorRow.js.map\n"],"names":["DEFAULT_EXAMPLES","PREFERRED_LABELS","EXAMPLES_LIMIT","LOGQL_EXAMPLES","UnthemedLokiCheatSheet","provider","labels","preferredLabel","l","values","userExamples","value","expr","onClickExample","theme","styles","getStyles","onClick","query","hasUserExamples","example","item","QueryHeaderSwitch","label","inputProps","dashedLabel","switchIdRef","EditorStack","Switch","editorModes","QueryEditorModeToggle","mode","onChange","RadioButtonGroup","MAX_LABEL_COUNT","MAX_VALUE_COUNT","MAX_AUTO_SELECT","EMPTY_SELECTOR","buildSelector","selectedLabels","selectedValues","facetLabels","possibleLabels","lastFacetted","possibleValues","existingValues","UnthemedLokiLabelBrowser","event","selector","state","name","selected","nextValue","v","updatedFields","status","cb","error","languageProvider","autoSelect","lastUsedLabels","timeRange","rawLabels","i","arr","rawValues","streams","searchTerm","validationStatus","LoadingPlaceholder","empty","searchResults","fuzzyMatchResult","fuzzy","Label","Input","index","style","Stack","Button","LokiLabelBrowser","LabelBrowserModal","props","isOpen","onClose","datasource","app","labelsLoaded","setLabelsLoaded","hasLogLabels","setHasLogLabels","LAST_USED_LABELS_KEY","changeQuery","onRunQuery","nextQuery","reportInteractionAndClose","Modal","LocalStorageValueProvider","onLastUsedLabelsSave","onLastUsedLabelsDelete","CONFLICTING_LABEL_FILTER_ERROR_MESSAGE","LabelFilterItem","items","defaultOp","onDelete","onGetLabelNames","onGetLabelValues","invalidLabel","invalidValue","multiValueSeparator","_a","setState","labelNamesMenuOpen","setLabelNamesMenuOpen","labelValuesMenuOpen","setLabelValuesMenuOpen","isMultiSelect","operator","_a2","operators","op","getSelectOptionsFromString","item2","getOptions","labelValues","selectedOptions","isConflicting","isConflictingLabelFilter","id","v4","InlineField","InputGroup","Select","selectors","labelNames","change","_b","changes","change2","val","AccessoryButton","newLabel","operationIsNegative","candidate","MISSING_LABEL_FILTER_ERROR_MESSAGE","LabelFilters","labelsFilters","labelFilterRequired","setItems","onLabelsChange","newItems","newLabels","hasLabelFilter","EditorFieldGroup","EditorField","EditorList","onChangeItem","OperationExplainedBox","title","stepNumber","markdown","children","OperationInfoButton","definition","operation","innerQueryPlaceholder","show","setShow","getTooltipProps","setTooltipRef","setTriggerRef","visible","Portal","FlexItem","getOperationDocs","def","OperationHeader","onRemove","onToggle","queryModeller","dragHandleProps","onToggleSwitcher","alternatives","alt","newDef","newParams","changedOp","getOperationParamEditor","paramDef","SelectInputParamEditor","BoolInputParamEditor","SimpleInputParamEditor","AutoSizeInput","getOperationParamId","evt","Checkbox","operationId","selectOptions","option","valueOption","x","value2","paramIndex","OperationEditorBody","provided","flash","highlight","shouldFlash","useFlash","onParamValueChanged","paramIdx","update","callParamChangedThenOnChange","onAddRestParam","onRemoveRestParam","restParam","lastParamDef","renderAddRestParamButton","param","Editor","Tooltip","Icon","keepFlash","setKeepFlash","t","operationIndex","OperationEditor","isConflictingOperation","isInvalid","isDragging","snapshot","OperationList","highlightedOp","operations","opsToHighlight","useOperationsHighlight","cascaderOpen","setCascaderOpen","onOperationChange","updatedList","addOptions","category","onAddOperation","operationDef","onDragEnd","result","element","onCascaderBlur","Cascader","isMounted","useMountedState","prevOperations","usePrevious","newOps","newOp","isSameOp","op1","op2","QueryBuilderHints","visualQuery","data","buildVisualQueryFromString","buildDataQueryFromQueryString","buildQueryStringFromDataQuery","hints","setHints","dataQuery","hints2","hint","_c","_d","_b2","_c2","newQuery","newVisualQuery","OperationListExplained","language","onMouseEnter","onMouseLeave","body","RawQuery","EXPLAIN_LABEL_FILTER_CONTENT","LokiQueryBuilderExplained","visQuery","lang","NestedQuery","nestedQuery","showExplain","IconButton","EditorRows","LokiQueryBuilder","NestedQueryList","nestedQueries","onNestedQueryUpdate","TIME_SPAN_TO_TRIGGER_SAMPLES","sampleData","setSampleData","setHighlightedOp","prevQuery","prevTimeRange","onChangeLabels","withTemplateVariableOptions","optionsPromise","options","forLabel","labelsToConsider","hasEqualityOperation","filter","streamSelector","possibleLabelNames","labelsNamesToConsider","onGetSampleData","lokiQuery","range","updateBasedOnChangedTimeRange","updateBasedOnChangedQuery","config","testIds","EditorRow","OperationsEditorRow","otherOperations","queryString","QueryPreview","LokiQueryBuilderContainer","dispatch","stateSlice","exprChanged","onVisQueryChange","visualQueryChange","initialState","action","parseResult","QueryOptionGroup","collapsedInfo","queryStats","toggleOpen","useToggle","Collapse","generateQueryStats","convertUnits","text","suffix","LokiQueryBuilderOptions","maxLines","splitDurationValid","setSplitDurationValid","getDefaultQueryDirection","onQueryTypeChange","onQueryDirectionChange","onChunkRangeChange","onLegendFormatChanged","onMaxLinesChange","e","newMaxLines","onStepChange","subscription","sortEvent","newDirection","queryType","isLogQuery","filteredQueryTypeOptions","o","isValidStep","getCollapsedInfo","direction","queryTypeLabel","store","LokiQueryCodeEditor","history","LokiQueryField","QueryPattern","pattern","onPatternSelect","hasNewQueryOption","hasPreviousQuery","selectedPatternName","setSelectedPatternName","Card","keepOperationCategories","excludeOperationIds","keepOperations","QueryPatternsModal","onAddQuery","queries","openTabs","setOpenTabs","selectAsNewQuery","patternOperations","patternOp","patternType","tabs","queryEditorModeDefaultLocalStorageKey","changeEditorMode","editorMode","getDefaultEditorMode","getQueryWithDefaults","compareTime","time1","time2","shouldUpdateStats","prevQueryType","lokiQueryEditorExplainKey","LokiQueryEditor","parseModalOpen","setParseModalOpen","queryPatternsModalOpen","setQueryPatternsModalOpen","dataIsStale","setDataIsStale","labelBrowserVisible","setLabelBrowserVisible","setQueryStats","explain","setExplain","predefinedOperations","previousTimeRange","previousQueryExpr","previousQueryType","onExplainChange","onEditorModeChange","newEditorMode","onChangeInternal","onClickLabelBrowserButton","stats","ConfirmModal","EditorHeader","prevValue","Space","LokiQueryEditorForAlerting","LokiQueryEditorByApp","AlertingSettings","onOptionsChange","ConfigSubSection","ConfigDescriptionLink","DebugSection","derivedFields","className","debugText","setDebugText","debugFields","makeDebugFields","TextArea","DebugFields","fields","field","testMatch","href","DerivedField","suggestions","validateName","showInternalLink","setShowInternalLink","openInNewTab","setOpenInNewTab","previousUid","fieldType","setFieldType","handleChange","invalidName","Field","TooltipLabel","type","DataLinkInput","newValue","checked","DataSourcePicker","ds","content","DerivedFields","showDebug","setShowDebug","newField","newDerivedFields","emptyConfig","QuerySettings","onMaxLinedChange","onPredefinedOperationsChange","InlineFieldRow","Badge","makeJsonUpdater","setMaxLines","setPredefinedOperations","setDerivedFields","ConfigEditor","updatePredefinedOperations","DataSourceDescription","Divider","ConnectionSettings","Auth","ConfigSection","AdvancedHttpSettings","SecureSocksProxySettings","LokiCheatSheet","description","feature","grow","shrink"],"sourceRoot":""}