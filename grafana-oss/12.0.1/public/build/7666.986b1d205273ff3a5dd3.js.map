{"version":3,"file":"7666.986b1d205273ff3a5dd3.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/components/rules/Filter/RulesFilter.tsx","webpack://grafana/./node_modules/ix/util/bindcallback.mjs","webpack://grafana/./node_modules/ix/util/identity.mjs","webpack://grafana/./node_modules/ix/util/isiterable.mjs","webpack://grafana/./node_modules/ix/util/tointeger.mjs","webpack://grafana/./node_modules/ix/util/tolength.mjs","webpack://grafana/./node_modules/ix/aborterror.mjs","webpack://grafana/./node_modules/ix/asynciterable/asynciterablex.mjs","webpack://grafana/./node_modules/ix/asynciterable/_sleep.mjs","webpack://grafana/./node_modules/ix/asynciterable/interval.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/withabort.mjs","webpack://grafana/./node_modules/ix/asynciterable/concat.mjs","webpack://grafana/./node_modules/ix/asynciterable/of.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/map.mjs","webpack://grafana/./node_modules/ix/util/safeRace.mjs","webpack://grafana/./node_modules/ix/asynciterable/merge.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/buffercountortime.mjs","webpack://grafana/./node_modules/ix/util/toobserver.mjs","webpack://grafana/./node_modules/ix/util/returniterator.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/tap.mjs","webpack://grafana/./public/app/features/alerting/unified/rule-list/DataSourceRuleListItem.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleActionsButtons.V2.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleActionsSkeleton.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/ruleMatching.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/DataSourceRuleLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/FilterViewStatus.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/AlertRuleListItemLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/GrafanaRuleLoader.tsx","webpack://grafana/./node_modules/react-use/esm/useIntersection.js","webpack://grafana/./public/app/features/alerting/unified/rule-list/LoadMoreHelper.tsx","webpack://grafana/./node_modules/ix/asynciterable/empty.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/concatmap.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/catcherror.mjs","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/filters.ts","webpack://grafana/./public/app/features/alerting/unified/api/prometheusApi.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/prometheusGroupsGenerator.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/useFilteredRulesIterator.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/FilterView.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/DataSourceGroupLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/EvaluationGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/DataSourceSection.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/LazyPagination.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/ListGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/GroupStatus.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleGroupActionsMenu.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/usePaginatedPrometheusGroups.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/PaginatedDataSourceLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/GrafanaGroupLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/PaginatedGrafanaLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/DataSourceErrorBoundary.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/GroupedView.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/RuleList.v2.tsx"],"sourcesContent":["import { Suspense, lazy } from 'react';\n\nimport { config } from '@grafana/runtime';\n\nimport RulesFilterV1 from './RulesFilter.v1';\n\nconst RulesFilterV2 = lazy(() => import('./RulesFilter.v2'));\n\ninterface RulesFilerProps {\n  onClear?: () => void;\n}\n\nconst RulesFilter = (props: RulesFilerProps) => {\n  const newView = config.featureToggles.alertingFilterV2;\n  return <Suspense>{newView ? <RulesFilterV2 {...props} /> : <RulesFilterV1 {...props} />}</Suspense>;\n};\n\nexport default RulesFilter;\n","/**\n * @ignore\n */\nexport function bindCallback(func, thisArg, argCount) {\n    if (typeof thisArg === 'undefined') {\n        return func;\n    }\n    switch (argCount) {\n        case 0:\n            return function () {\n                return func.call(thisArg);\n            };\n        case 1:\n            return function (arg) {\n                return func.call(thisArg, arg);\n            };\n        case 2:\n            return function (value, index) {\n                return func.call(thisArg, value, index);\n            };\n        case 3:\n            return function (value, index, collection) {\n                return func.call(thisArg, value, index, collection);\n            };\n        default:\n            return function () {\n                return func.apply(thisArg, arguments);\n            };\n    }\n}\n\n//# sourceMappingURL=bindcallback.mjs.map\n","import { __awaiter } from \"tslib\";\n/**\n * @ignore\n */\nexport function identity(x) {\n    return x;\n}\n/**\n * @ignore\n */\nexport function identityAsync(x) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return x;\n    });\n}\n\n//# sourceMappingURL=identity.mjs.map\n","/* eslint-disable @typescript-eslint/ban-types */\n/** @ignore */\nconst isNumber = (x) => typeof x === 'number';\n/** @ignore */\nconst isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */\nexport const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport function isArrayLike(x) {\n    return isObject(x) && isNumber(x['length']);\n}\n/** @ignore */\nexport function isIterable(x) {\n    return x != null && isFunction(x[Symbol.iterator]);\n}\n/** @ignore */\nexport function isIterator(x) {\n    return isObject(x) && !isFunction(x[Symbol.iterator]) && isFunction(x['next']);\n}\n/** @ignore */\nexport function isAsyncIterable(x) {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n}\n/** @ignore */\nexport function isObservable(x) {\n    return x != null && Object(x) === x && typeof x['subscribe'] === 'function';\n}\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return (isObject(x) &&\n        isFunction(x['pipe']) &&\n        isFunction(x['_read']) &&\n        isBoolean(x['readable']) &&\n        isObject(x['_readableState']));\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return (isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['_write']) &&\n        isBoolean(x['writable']) &&\n        isObject(x['_writableState']));\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) && isFunction(x['cancel']) && isFunction(x['getReader']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) && isFunction(x['abort']) && isFunction(x['getWriter']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n//# sourceMappingURL=isiterable.mjs.map\n","/**\n * @ignore\n */\nexport function toInteger(value) {\n    const number = Number(value);\n    if (isNaN(number)) {\n        return 0;\n    }\n    if (number === 0 || !isFinite(number)) {\n        return number;\n    }\n    return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\n\n//# sourceMappingURL=tointeger.mjs.map\n","import { toInteger } from './tointeger.mjs';\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n/**\n * @ignore\n */\nexport function toLength(value) {\n    const len = toInteger(value);\n    return Math.min(Math.max(len, 0), maxSafeInteger);\n}\n\n//# sourceMappingURL=tolength.mjs.map\n","import { isObject } from './util/isiterable.mjs';\n/** @ignore */\nexport class AbortError extends Error {\n    constructor(message = 'The operation has been aborted') {\n        super(message);\n        Object.setPrototypeOf(this, AbortError.prototype);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'AbortError';\n    }\n    get [Symbol.toStringTag]() {\n        return 'AbortError';\n    }\n}\nexport function throwIfAborted(signal) {\n    if (signal && signal.aborted) {\n        throw new AbortError();\n    }\n}\nObject.defineProperty(AbortError, Symbol.hasInstance, {\n    writable: true,\n    configurable: true,\n    value(x) {\n        return (isObject(x) && (x.constructor.name === 'AbortError' || x[Symbol.toStringTag] === 'AbortError'));\n    },\n});\n\n//# sourceMappingURL=aborterror.mjs.map\n","import { __asyncGenerator, __asyncValues, __await, __awaiter } from \"tslib\";\nimport { bindCallback } from '../util/bindcallback.mjs';\nimport { identityAsync } from '../util/identity.mjs';\nimport { isReadableNodeStream, isWritableNodeStream, isIterable, isAsyncIterable, isArrayLike, isIterator, isPromise, isObservable, } from '../util/isiterable.mjs';\nimport { toLength } from '../util/tolength.mjs';\nimport { AbortError, throwIfAborted } from '../aborterror.mjs';\n/**\n * This class serves as the base for all operations which support [Symbol.asyncIterator].\n */\nexport class AsyncIterableX {\n    /** @nocollapse */\n    forEach(projection, thisArg, signal) {\n        var _a, e_1, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const source = signal ? new WithAbortAsyncIterable(this, signal) : this;\n            let i = 0;\n            try {\n                for (var _d = true, source_1 = __asyncValues(source), source_1_1; source_1_1 = yield source_1.next(), _a = source_1_1.done, !_a; _d = true) {\n                    _c = source_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    yield projection.call(thisArg, item, i++, signal);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = source_1.return)) yield _b.call(source_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    pipe(...args) {\n        let i = -1;\n        const n = args.length;\n        let acc = this;\n        while (++i < n) {\n            acc = args[i](AsyncIterableX.as(acc));\n        }\n        return acc;\n    }\n    /** @nocollapse */\n    static from(source, selector = identityAsync, thisArg) {\n        const fn = bindCallback(selector, thisArg, 2);\n        if (isIterable(source) || isAsyncIterable(source)) {\n            return new FromAsyncIterable(source, fn);\n        }\n        if (isPromise(source)) {\n            return new FromPromiseIterable(source, fn);\n        }\n        if (isObservable(source)) {\n            return new FromObservableAsyncIterable(source, fn);\n        }\n        if (isArrayLike(source)) {\n            return new FromArrayIterable(source, fn);\n        }\n        if (isIterator(source)) {\n            return new FromAsyncIterable({ [Symbol.asyncIterator]: () => source }, fn);\n        }\n        throw new TypeError('Input type not supported');\n    }\n    /**\n     * Converts the input into an async-iterable sequence.\n     *\n     * @param {*} source The source to convert to an async-iterable sequence.\n     * @returns {AsyncIterableX<*>} An async-iterable containing the input.\n     */\n    /** @nocollapse */\n    static as(source) {\n        if (source instanceof AsyncIterableX) {\n            return source;\n        }\n        if (typeof source === 'string') {\n            return new FromArrayIterable([source], identityAsync);\n        }\n        if (isIterable(source) || isAsyncIterable(source)) {\n            return new FromAsyncIterable(source, identityAsync);\n        }\n        if (isPromise(source)) {\n            return new FromPromiseIterable(source, identityAsync);\n        }\n        if (isObservable(source)) {\n            return new FromObservableAsyncIterable(source, identityAsync);\n        }\n        if (isArrayLike(source)) {\n            return new FromArrayIterable(source, identityAsync);\n        }\n        return new FromArrayIterable([source], identityAsync);\n    }\n}\nAsyncIterableX.prototype[Symbol.toStringTag] = 'AsyncIterableX';\nObject.defineProperty(AsyncIterableX, Symbol.hasInstance, {\n    writable: true,\n    configurable: true,\n    value(inst) {\n        return !!(inst && inst[Symbol.toStringTag] === 'AsyncIterableX');\n    },\n});\nconst ARRAY_VALUE = 'value';\nconst ARRAY_ERROR = 'error';\n/** @ignore */\n/** @ignore */\nexport class AsyncSink {\n    constructor() {\n        this._ended = false;\n        this._values = [];\n        this._resolvers = [];\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    write(value) {\n        this._push({ type: ARRAY_VALUE, value });\n    }\n    error(error) {\n        this._push({ type: ARRAY_ERROR, error });\n    }\n    _push(item) {\n        if (this._ended) {\n            throw new Error('AsyncSink already ended');\n        }\n        if (this._resolvers.length > 0) {\n            const { resolve, reject } = this._resolvers.shift();\n            if (item.type === ARRAY_ERROR) {\n                reject(item.error);\n            }\n            else {\n                resolve({ done: false, value: item.value });\n            }\n        }\n        else {\n            this._values.push(item);\n        }\n    }\n    next() {\n        if (this._values.length > 0) {\n            const { type, value, error } = this._values.shift();\n            if (type === ARRAY_ERROR) {\n                return Promise.reject(error);\n            }\n            else {\n                return Promise.resolve({ done: false, value });\n            }\n        }\n        if (this._ended) {\n            return Promise.resolve({ done: true });\n        }\n        return new Promise((resolve, reject) => {\n            this._resolvers.push({ resolve, reject });\n        });\n    }\n    end() {\n        while (this._resolvers.length > 0) {\n            this._resolvers.shift().resolve({ done: true });\n        }\n        this._ended = true;\n    }\n}\n/** @ignore */\nexport class FromArrayIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator]() {\n        return __asyncGenerator(this, arguments, function* _a() {\n            let i = 0;\n            const length = toLength(this._source.length);\n            while (i < length) {\n                yield yield __await(yield __await(this._selector(this._source[i], i++)));\n            }\n        });\n    }\n}\n/** @ignore */\nexport class FromAsyncIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_2, _c, _d, _e, e_3, _f, _g;\n            let i = 0;\n            if (signal && this._source instanceof AsyncIterableX) {\n                try {\n                    for (var _h = true, _j = __asyncValues(new WithAbortAsyncIterable(this._source, signal)), _k; _k = yield __await(_j.next()), _b = _k.done, !_b; _h = true) {\n                        _d = _k.value;\n                        _h = false;\n                        const item = _d;\n                        yield yield __await(yield __await(this._selector(item, i++)));\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (!_h && !_b && (_c = _j.return)) yield __await(_c.call(_j));\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                throwIfAborted(signal);\n                try {\n                    for (var _l = true, _m = __asyncValues(this._source), _o; _o = yield __await(_m.next()), _e = _o.done, !_e; _l = true) {\n                        _g = _o.value;\n                        _l = false;\n                        const item = _g;\n                        throwIfAborted(signal);\n                        const value = yield __await(this._selector(item, i++));\n                        throwIfAborted(signal);\n                        yield yield __await(value);\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (!_l && !_e && (_f = _m.return)) yield __await(_f.call(_m));\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n            }\n        });\n    }\n}\n/** @ignore */\nexport class FromPromiseIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator]() {\n        return __asyncGenerator(this, arguments, function* _a() {\n            const item = yield __await(this._source);\n            yield yield __await(yield __await(this._selector(item, 0)));\n        });\n    }\n}\n/** @ignore */\nexport class FromObservableAsyncIterable extends AsyncIterableX {\n    constructor(observable, selector) {\n        super();\n        this._observable = observable;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const sink = new AsyncSink();\n            const subscription = this._observable.subscribe({\n                next(value) {\n                    sink.write(value);\n                },\n                error(err) {\n                    sink.error(err);\n                },\n                complete() {\n                    sink.end();\n                },\n            });\n            function onAbort() {\n                sink.error(new AbortError());\n            }\n            if (signal) {\n                signal.addEventListener('abort', onAbort);\n            }\n            let i = 0;\n            try {\n                for (let next; !(next = yield __await(sink.next())).done;) {\n                    throwIfAborted(signal);\n                    yield yield __await(yield __await(this._selector(next.value, i++)));\n                }\n            }\n            finally {\n                if (signal) {\n                    signal.removeEventListener('abort', onAbort);\n                }\n                subscription.unsubscribe();\n            }\n        });\n    }\n}\nclass WithAbortAsyncIterable {\n    constructor(source, signal) {\n        this._source = source;\n        this._signal = signal;\n    }\n    [Symbol.asyncIterator]() {\n        // @ts-ignore\n        return this._source[Symbol.asyncIterator](this._signal);\n    }\n}\ntry {\n    ((isBrowser) => {\n        if (isBrowser) {\n            return;\n        }\n        AsyncIterableX.prototype['pipe'] = nodePipe;\n        const readableOpts = (x, opts = x._writableState || { objectMode: true }) => opts;\n        function nodePipe(...args) {\n            let i = -1;\n            let end;\n            const n = args.length;\n            let prev = this;\n            let next;\n            while (++i < n) {\n                next = args[i];\n                if (typeof next === 'function') {\n                    prev = next(AsyncIterableX.as(prev));\n                }\n                else if (isWritableNodeStream(next)) {\n                    ({ end = true } = args[i + 1] || {});\n                    // prettier-ignore\n                    return isReadableNodeStream(prev) ? prev.pipe(next, { end }) :\n                        AsyncIterableX.as(prev).toNodeStream(readableOpts(next)).pipe(next, { end });\n                }\n            }\n            return prev;\n        }\n    })(typeof window === 'object' && typeof document === 'object' && document.nodeType === 9);\n}\ncatch (e) {\n    /* */\n}\nexport const as = AsyncIterableX.as;\nexport const from = AsyncIterableX.from;\n\n//# sourceMappingURL=asynciterablex.mjs.map\n","import { AbortError } from '../aborterror.mjs';\nexport function sleep(dueTime, signal) {\n    return new Promise((resolve, reject) => {\n        if (signal && signal.aborted) {\n            reject(new AbortError());\n        }\n        const id = setTimeout(() => {\n            if (signal) {\n                signal.removeEventListener('abort', onAbort);\n                if (signal.aborted) {\n                    onAbort();\n                    return;\n                }\n            }\n            resolve();\n        }, dueTime);\n        if (signal) {\n            signal.addEventListener('abort', onAbort, { once: true });\n        }\n        function onAbort() {\n            clearTimeout(id);\n            reject(new AbortError());\n        }\n    });\n}\n\n//# sourceMappingURL=_sleep.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { sleep } from './_sleep.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\nclass IntervalAsyncIterable extends AsyncIterableX {\n    constructor(dueTime) {\n        super();\n        this._dueTime = dueTime;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            let i = 0;\n            while (1) {\n                yield __await(sleep(this._dueTime, signal));\n                yield yield __await(i++);\n            }\n        });\n    }\n}\n/**\n * Produces a new item in an async-iterable at the given interval cycle time.\n *\n * @param {number} dueTime The due time in milliseconds to spawn a new item.\n * @returns {AsyncIterableX<number>} An async-iterable producing values at the specified interval.\n */\nexport function interval(dueTime) {\n    return new IntervalAsyncIterable(dueTime);\n}\n\n//# sourceMappingURL=interval.mjs.map\n","import { AsyncIterableX } from '../asynciterablex.mjs';\n/** @ignore */\nexport class WithAbortAsyncIterable extends AsyncIterableX {\n    constructor(source, signal) {\n        super();\n        this._source = source;\n        this._signal = signal;\n    }\n    withAbort(signal) {\n        return new WithAbortAsyncIterable(this._source, signal);\n    }\n    [Symbol.asyncIterator]() {\n        // @ts-ignore\n        return this._source[Symbol.asyncIterator](this._signal);\n    }\n}\n/**\n * Wraps the existing async-iterable sequence with an abort signal for cancellation.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {AbortSignal} signal The abort signal used for cancellation.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} An async-iterable that can be cancelled by the abort signal.\n */\nexport function withAbort(signal) {\n    return function withAbortOperatorFunction(source) {\n        return new WithAbortAsyncIterable(source, signal);\n    };\n}\n/**\n * Wraps an existing async-iterable with a new async-iterable which support cancellation.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {AsyncIterable<TSource>} source The source sequence to wrap with the abort signal.\n * @param {AbortSignal} [signal] The abort signal used for cancellation.\n * @returns {AsyncIterable<TSource>} The source sequence wrapped with an abort signal for cancellation.\n */\nexport function wrapWithAbort(source, signal) {\n    return signal ? new WithAbortAsyncIterable(source, signal) : source;\n}\n\n//# sourceMappingURL=withabort.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { wrapWithAbort } from './operators/withabort.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\n/** @ignore */\nexport class ConcatAsyncIterable extends AsyncIterableX {\n    constructor(source) {\n        super();\n        this._source = source;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            for (const outer of this._source) {\n                try {\n                    for (var _e = true, _f = (e_1 = void 0, __asyncValues(wrapWithAbort(outer, signal))), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                        _d = _g.value;\n                        _e = false;\n                        const item = _d;\n                        yield yield __await(item);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    }\n}\nexport function _concatAll(source) {\n    return new ConcatAsyncIterable(source);\n}\n/**\n * Concatenates all async-iterable sequences in the given sequences, as long as the previous async-iterable\n * sequence terminated successfully.\n *\n * @template T The type of the elements in the sequences.\n * @param {...AsyncIterable<T>[]} args The async-iterable sources.\n * @returns {AsyncIterableX<T>} An async-iterable sequence that contains the elements of each given sequence, in sequential order.\n */\nexport function concat(...args) {\n    return new ConcatAsyncIterable(args);\n}\n\n//# sourceMappingURL=concat.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\n/** @ignore */\nexport class OfAsyncIterable extends AsyncIterableX {\n    constructor(args) {\n        super();\n        this._args = args;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            for (const item of this._args) {\n                yield yield __await(item);\n            }\n        });\n    }\n}\n/**\n * Creates an async-iterable from the specified elements.\n *\n * @template TSource The type of the elements to create an async-iterable sequence.\n * @param {...TSource[]} args The elements to turn into an async-iterable sequence.\n * @returns {AsyncIterableX<TSource>} The async-iterable sequence created from the elements.\n */\nexport function of(...args) {\n    return new OfAsyncIterable(args);\n}\n\n//# sourceMappingURL=of.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\n/** @ignore */\nexport class MapAsyncIterable extends AsyncIterableX {\n    constructor(source, selector, thisArg) {\n        super();\n        this._source = source;\n        this._selector = selector;\n        this._thisArg = thisArg;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            let i = 0;\n            try {\n                for (var _e = true, _f = __asyncValues(wrapWithAbort(this._source, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                    _d = _g.value;\n                    _e = false;\n                    const item = _d;\n                    const result = yield __await(this._selector.call(this._thisArg, item, i++, signal));\n                    yield yield __await(result);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n}\n/**\n * Projects each element of an async-enumerable sequence into a new form.\n *\n * @template TSource The type of the elements in the source sequence.\n * @template TResult The type of the elements in the result sequence, obtained by running the selector\n * function for each element in the source sequence.\n * @param {((value: TSource, index: number, signal?: AbortSignal) => Promise<TResult> | TResult)} selector A transform function\n * to apply to each source element.\n * @param {*} [thisArg] Optional this for binding to the selector.\n * @returns {OperatorAsyncFunction<TSource, TResult>} An async-iterable sequence whose elements are the result of invoking the transform\n * function on each element of source.\n */\nexport function map(selector, thisArg) {\n    return function mapOperatorFunction(source) {\n        return new MapAsyncIterable(source, selector, thisArg);\n    };\n}\n\n//# sourceMappingURL=map.mjs.map\n","/*\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org/>\n*/\n// see: https://github.com/nodejs/node/issues/17469#issuecomment-685216777\n// see: https://github.com/ReactiveX/IxJS/pull/323\nfunction isPrimitive(value) {\n    return value === null || (typeof value !== 'object' && typeof value !== 'function');\n}\n// Keys are the values passed to race, values are a record of data containing a\n// set of deferreds and whether the value has settled.\nconst wm = new WeakMap();\nexport function safeRace(contenders) {\n    let deferred;\n    const result = new Promise((resolve, reject) => {\n        deferred = { resolve, reject };\n        for (const contender of contenders) {\n            if (isPrimitive(contender)) {\n                // If the contender is a primitive, attempting to use it as a key in the\n                // weakmap would throw an error. Luckily, it is safe to call\n                // `Promise.resolve(contender).then` on a primitive value multiple times\n                // because the promise fulfills immediately.\n                Promise.resolve(contender).then(resolve, reject);\n                continue;\n            }\n            let record = wm.get(contender);\n            if (record === undefined) {\n                record = { deferreds: new Set([deferred]), settled: false };\n                wm.set(contender, record);\n                // This call to `then` happens once for the lifetime of the value.\n                Promise.resolve(contender).then((value) => {\n                    // eslint-disable-next-line no-shadow\n                    for (const { resolve } of record.deferreds) {\n                        resolve(value);\n                    }\n                    record.deferreds.clear();\n                    record.settled = true;\n                }, (err) => {\n                    // eslint-disable-next-line no-shadow\n                    for (const { reject } of record.deferreds) {\n                        reject(err);\n                    }\n                    record.deferreds.clear();\n                    record.settled = true;\n                });\n            }\n            else if (record.settled) {\n                // If the value has settled, it is safe to call\n                // `Promise.resolve(contender).then` on it.\n                Promise.resolve(contender).then(resolve, reject);\n            }\n            else {\n                record.deferreds.add(deferred);\n            }\n        }\n    });\n    // The finally callback executes when any value settles, preventing any of\n    // the unresolved values from retaining a reference to the resolved value.\n    return result.finally(() => {\n        for (const contender of contenders) {\n            if (!isPrimitive(contender)) {\n                const record = wm.get(contender);\n                record.deferreds.delete(deferred);\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=safeRace.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { wrapWithAbort } from './operators/withabort.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\nimport { safeRace } from '../util/safeRace.mjs';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst NEVER_PROMISE = new Promise(() => { });\nfunction wrapPromiseWithIndex(promise, index) {\n    return promise\n        .then(({ value, done }) => ({ value, done, index }))\n        .catch((error) => ({ error, index }));\n}\n/** @ignore */\nexport class MergeAsyncIterable extends AsyncIterableX {\n    constructor(source) {\n        super();\n        this._source = source;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const length = this._source.length;\n            const iterators = new Array(length);\n            const nexts = new Array(length);\n            let active = length;\n            for (let i = 0; i < length; i++) {\n                const iterator = wrapWithAbort(this._source[i], signal)[Symbol.asyncIterator]();\n                iterators[i] = iterator;\n                nexts[i] = wrapPromiseWithIndex(iterator.next(), i);\n            }\n            while (active > 0) {\n                const next = yield __await(safeRace(nexts));\n                if (next.hasOwnProperty('error')) {\n                    throw next.error;\n                }\n                else if (next.done) {\n                    nexts[next.index] = NEVER_PROMISE;\n                    active--;\n                }\n                else {\n                    const iterator$ = iterators[next.index];\n                    nexts[next.index] = wrapPromiseWithIndex(iterator$.next(), next.index);\n                    yield yield __await(next.value);\n                }\n            }\n        });\n    }\n}\nexport function merge(source, ...args) {\n    return new MergeAsyncIterable([source, ...args]);\n}\n\n//# sourceMappingURL=merge.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX, interval, concat, of } from '../index.mjs';\nimport { map } from './map.mjs';\nimport { merge } from '../merge.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nconst timerEvent = {};\nconst ended = {};\nclass BufferCountOrTime extends AsyncIterableX {\n    constructor(source, bufferSize, maxWaitTime) {\n        super();\n        this.source = source;\n        this.bufferSize = bufferSize;\n        this.maxWaitTime = maxWaitTime;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            const buffer = [];\n            const timer = interval(this.maxWaitTime).pipe(map(() => timerEvent));\n            const source = concat(this.source, of(ended));\n            const merged = merge(source, timer);\n            try {\n                for (var _e = true, _f = __asyncValues(wrapWithAbort(merged, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                    _d = _g.value;\n                    _e = false;\n                    const item = _d;\n                    if (item === ended) {\n                        break;\n                    }\n                    if (item !== timerEvent) {\n                        buffer.push(item);\n                    }\n                    if (buffer.length >= this.bufferSize || (buffer.length && item === timerEvent)) {\n                        yield yield __await(buffer.slice());\n                        buffer.length = 0;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (buffer.length) {\n                yield yield __await(buffer);\n            }\n        });\n    }\n}\n/**\n * Projects each element of an async-iterable sequence into consecutive buffers\n * which are emitted when either the threshold count or time is met.\n *\n * @template TSource The type of elements in the source sequence.\n * @param {number} count The size of the buffer.\n * @param {number} time The threshold number of milliseconds to wait before flushing a non-full buffer\n * @returns {OperatorAsyncFunction<TSource, TSource[]>} An operator which returns an async-iterable sequence\n * of buffers\n */\nexport function bufferCountOrTime(count, time) {\n    return function bufferOperatorFunction(source) {\n        return new BufferCountOrTime(source, count, time);\n    };\n}\n\n//# sourceMappingURL=buffercountortime.mjs.map\n","import { isFunction } from './isiterable.mjs';\nconst noop = (_) => {\n    /**/\n};\n// eslint-disable-next-line complexity\nexport function toObserver(next, error, complete) {\n    const observer = next;\n    if (observer && typeof observer === 'object') {\n        return {\n            next: isFunction(observer.next) ? (x) => observer.next(x) : noop,\n            error: isFunction(observer.error) ? (e) => observer.error(e) : noop,\n            complete: isFunction(observer.complete) ? () => observer.complete() : noop,\n        };\n    }\n    return {\n        next: isFunction(next) ? next : noop,\n        error: isFunction(error) ? error : noop,\n        complete: isFunction(complete) ? complete : noop,\n    };\n}\n\n//# sourceMappingURL=toobserver.mjs.map\n","import { __awaiter } from \"tslib\";\n/**\n * @ignore\n */\nexport function returnIterator(it) {\n    if (typeof (it === null || it === void 0 ? void 0 : it.return) === 'function') {\n        it.return();\n    }\n}\n/**\n * @ignore\n */\nexport function returnAsyncIterator(it) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof (it === null || it === void 0 ? void 0 : it.return) === 'function') {\n            yield it.return();\n        }\n    });\n}\n\n//# sourceMappingURL=returniterator.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { toObserver } from '../../util/toobserver.mjs';\nimport { AbortError, throwIfAborted } from '../../aborterror.mjs';\nimport { returnAsyncIterator } from '../../util/returniterator.mjs';\n/** @ignore */\nexport class TapAsyncIterable extends AsyncIterableX {\n    constructor(source, observer) {\n        super();\n        this._source = source;\n        this._observer = observer;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const obs = this._observer;\n            const it = this._source[Symbol.asyncIterator](signal);\n            try {\n                for (let res; !(res = yield __await(it.next())).done;) {\n                    if (obs.next) {\n                        yield __await(obs.next(res.value));\n                    }\n                    yield yield __await(res.value);\n                }\n                if (obs.complete) {\n                    yield __await(obs.complete());\n                }\n            }\n            catch (e) {\n                if (!(e instanceof AbortError) && obs.error) {\n                    yield __await(obs.error(e));\n                }\n                throw e;\n            }\n            finally {\n                yield __await(returnAsyncIterator(it));\n            }\n        });\n    }\n}\n/**\n * Invokes an action for each element in the async-iterable sequence, and propagates all observer\n * messages through the result sequence. This method can be used for debugging, logging, etc. by\n * intercepting the message stream to run arbitrary actions for messages on the pipeline.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {(PartialAsyncObserver<TSource> | ((value: TSource) => any) | null)} [observerOrNext] Observer whose methods to invoke as\n * part of the source sequence's observation or a function to invoke for each element in the async-iterable sequence.\n * @param {(((err: any) => any) | null)} [error] Function to invoke upon exceptional termination of the async-iterable sequence.\n * @param {((() => any) | null)} [complete] Function to invoke upon graceful termination of the async-iterable sequence.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} The source sequence with the side-effecting behavior applied.\n */\nexport function tap(observerOrNext, error, complete) {\n    return function tapOperatorFunction(source) {\n        return new TapAsyncIterable(source, toObserver(observerOrNext, error, complete));\n    };\n}\n\n//# sourceMappingURL=tap.mjs.map\n","import React from 'react';\n\nimport { DataSourceRuleGroupIdentifier, Rule, RuleIdentifier } from 'app/types/unified-alerting';\nimport { PromRuleType, RulerRuleDTO, RulesSourceApplication } from 'app/types/unified-alerting-dto';\n\nimport { Annotation } from '../utils/constants';\nimport { fromRule, fromRulerRule, stringifyIdentifier } from '../utils/rule-id';\nimport { getRuleName, getRulePluginOrigin, rulerRuleType } from '../utils/rules';\nimport { createRelativeUrl } from '../utils/url';\n\nimport {\n  AlertRuleListItem,\n  RecordingRuleListItem,\n  RuleListItemCommonProps,\n  UnknownRuleListItem,\n} from './components/AlertRuleListItem';\n\nexport interface DataSourceRuleListItemProps {\n  rule: Rule;\n  rulerRule?: RulerRuleDTO;\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n  application?: RulesSourceApplication;\n  actions?: React.ReactNode;\n}\n\nexport function DataSourceRuleListItem({\n  rule,\n  rulerRule,\n  groupIdentifier,\n  application,\n  actions,\n}: DataSourceRuleListItemProps) {\n  const { rulesSource, namespace, groupName } = groupIdentifier;\n\n  const ruleIdentifier = rulerRule\n    ? fromRulerRule(rulesSource.name, namespace.name, groupName, rulerRule)\n    : fromRule(rulesSource.name, namespace.name, groupName, rule);\n  const href = createViewLinkFromIdentifier(ruleIdentifier);\n  const originMeta = getRulePluginOrigin(rule);\n\n  // If ruler rule is available, we should use it as it contains fresh data\n  const ruleName = rulerRule ? getRuleName(rulerRule) : rule.name;\n  const labels = rulerRule ? rulerRule.labels : rule.labels;\n\n  const commonProps: RuleListItemCommonProps = {\n    name: ruleName,\n    rulesSource: rulesSource,\n    application: application,\n    group: groupName,\n    namespace: namespace.name,\n    href,\n    health: rule.health,\n    error: rule.lastError,\n    labels,\n    actions,\n    origin: originMeta,\n  };\n\n  switch (rule.type) {\n    case PromRuleType.Alerting:\n      const annotations = (rulerRuleType.any.alertingRule(rulerRule) ? rulerRule.annotations : rule.annotations) ?? {};\n      const summary = annotations[Annotation.summary];\n\n      return (\n        <AlertRuleListItem {...commonProps} summary={summary} state={rule.state} instancesCount={rule.alerts?.length} />\n      );\n    case PromRuleType.Recording:\n      return <RecordingRuleListItem {...commonProps} />;\n    default:\n      return <UnknownRuleListItem ruleName={ruleName} groupIdentifier={groupIdentifier} ruleDefinition={rule} />;\n  }\n}\n\nexport function createViewLinkFromIdentifier(identifier: RuleIdentifier, returnTo?: string) {\n  const paramId = encodeURIComponent(stringifyIdentifier(identifier));\n  const paramSource = encodeURIComponent(identifier.ruleSourceName);\n\n  return createRelativeUrl(`/alerting/${paramSource}/${paramId}/view`, returnTo ? { returnTo } : {});\n}\n","import { useState } from 'react';\n\nimport { LinkButton, Stack } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport AlertRuleMenu from 'app/features/alerting/unified/components/rule-viewer/AlertRuleMenu';\nimport { useDeleteModal } from 'app/features/alerting/unified/components/rule-viewer/DeleteModal';\nimport { RedirectToCloneRule } from 'app/features/alerting/unified/components/rules/CloneRule';\nimport SilenceGrafanaRuleDrawer from 'app/features/alerting/unified/components/silences/SilenceGrafanaRuleDrawer';\nimport { Rule, RuleGroupIdentifierV2, RuleIdentifier } from 'app/types/unified-alerting';\nimport { RulerRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { AlertRuleAction, useRulerRuleAbility } from '../../hooks/useAbilities';\nimport * as ruleId from '../../utils/rule-id';\nimport { isProvisionedRule, rulerRuleType } from '../../utils/rules';\nimport { createRelativeUrl } from '../../utils/url';\n\ninterface Props {\n  rule: RulerRuleDTO;\n  promRule?: Rule;\n  groupIdentifier: RuleGroupIdentifierV2;\n  /**\n   * Should we show the buttons in a \"compact\" state?\n   * i.e. without text and using smaller button sizes\n   */\n  compact?: boolean;\n}\n\n// For now this is just a copy of RuleActionsButtons.tsx but with the View button removed.\n// This is only done to keep the new list behind a feature flag and limit changes in the existing components\nexport function RuleActionsButtons({ compact, rule, promRule, groupIdentifier }: Props) {\n  const redirectToListView = compact ? false : true;\n  const [deleteModal, showDeleteModal] = useDeleteModal(redirectToListView);\n\n  const [showSilenceDrawer, setShowSilenceDrawer] = useState<boolean>(false);\n\n  const [redirectToClone, setRedirectToClone] = useState<\n    { identifier: RuleIdentifier; isProvisioned: boolean } | undefined\n  >(undefined);\n\n  const isProvisioned = isProvisionedRule(rule);\n\n  const [editRuleSupported, editRuleAllowed] = useRulerRuleAbility(rule, groupIdentifier, AlertRuleAction.Update);\n\n  const canEditRule = editRuleSupported && editRuleAllowed;\n\n  const buttons: JSX.Element[] = [];\n  const buttonSize = compact ? 'sm' : 'md';\n\n  const identifier = ruleId.fromRulerRuleAndGroupIdentifierV2(groupIdentifier, rule);\n\n  if (canEditRule) {\n    const editURL = createRelativeUrl(`/alerting/${encodeURIComponent(ruleId.stringifyIdentifier(identifier))}/edit`);\n\n    buttons.push(\n      <LinkButton\n        title={t('alerting.rule-actions-buttons.title-edit', 'Edit')}\n        size={buttonSize}\n        key=\"edit\"\n        variant=\"secondary\"\n        icon=\"pen\"\n        href={editURL}\n      >\n        <Trans i18nKey=\"common.edit\">Edit</Trans>\n      </LinkButton>\n    );\n  }\n\n  return (\n    <Stack gap={1} alignItems=\"center\" wrap=\"nowrap\">\n      {buttons}\n      <AlertRuleMenu\n        buttonSize={buttonSize}\n        rulerRule={rule}\n        promRule={promRule}\n        groupIdentifier={groupIdentifier}\n        identifier={identifier}\n        handleDelete={() => showDeleteModal(identifier, groupIdentifier)}\n        handleSilence={() => setShowSilenceDrawer(true)}\n        handleDuplicateRule={() => setRedirectToClone({ identifier, isProvisioned })}\n      />\n      {deleteModal}\n      {rulerRuleType.grafana.alertingRule(rule) && showSilenceDrawer && (\n        <SilenceGrafanaRuleDrawer rulerRule={rule} onClose={() => setShowSilenceDrawer(false)} />\n      )}\n      {redirectToClone?.identifier && (\n        <RedirectToCloneRule\n          identifier={redirectToClone.identifier}\n          isProvisioned={redirectToClone.isProvisioned}\n          onDismiss={() => setRedirectToClone(undefined)}\n        />\n      )}\n    </Stack>\n  );\n}\n","import Skeleton from 'react-loading-skeleton';\n\nexport function RuleActionsSkeleton() {\n  return <Skeleton width={50} height={16} />;\n}\n","import { Rule } from 'app/types/unified-alerting';\nimport {\n  PromRuleDTO,\n  PromRuleGroupDTO,\n  RulerCloudRuleDTO,\n  RulerRuleDTO,\n  RulerRuleGroupDTO,\n} from 'app/types/unified-alerting-dto';\n\nimport { getPromRuleFingerprint, getRulerRuleFingerprint } from '../utils/rule-id';\nimport { getRuleName } from '../utils/rules';\n\nexport function getMatchingRulerRule(rulerRuleGroup: RulerRuleGroupDTO<RulerCloudRuleDTO>, rule: Rule) {\n  // If all rule names are unique, we can use the rule name to find the rule. We don't need to hash the rule\n  const rulesByName = rulerRuleGroup.rules.filter((r) => getRuleName(r) === rule.name);\n  if (rulesByName.length === 1) {\n    return rulesByName[0];\n  }\n\n  // If we don't have a unique rule name, try to compare by labels and annotations\n  const rulesByLabelsAndAnnotations = rulesByName.filter((r) => {\n    return getRulerRuleFingerprint(r, false).join('-') === getPromRuleFingerprint(rule, false).join('-');\n  });\n\n  if (rulesByLabelsAndAnnotations.length === 1) {\n    return rulesByLabelsAndAnnotations[0];\n  }\n\n  // As a last resort, compare including the query\n  const rulesByLabelsAndAnnotationsAndQuery = rulesByName.filter((r) => {\n    return getRulerRuleFingerprint(r, true).join('-') === getPromRuleFingerprint(rule, true).join('-');\n  });\n\n  if (rulesByLabelsAndAnnotationsAndQuery.length === 1) {\n    return rulesByLabelsAndAnnotationsAndQuery[0];\n  }\n\n  return undefined;\n}\n\nexport function getMatchingPromRule(promRuleGroup: PromRuleGroupDTO<PromRuleDTO>, rule: RulerCloudRuleDTO) {\n  // If all rule names are unique, we can use the rule name to find the rule. We don't need to hash the rule\n  const rulesByName = promRuleGroup.rules.filter((r) => r.name === getRuleName(rule));\n  if (rulesByName.length === 1) {\n    return rulesByName[0];\n  }\n\n  // If we don't have a unique rule name, try to compare by labels and annotations\n  const rulesByLabelsAndAnnotations = rulesByName.filter((r) => {\n    return getPromRuleFingerprint(r, false).join('-') === getRulerRuleFingerprint(rule, false).join('-');\n  });\n\n  if (rulesByLabelsAndAnnotations.length === 1) {\n    return rulesByLabelsAndAnnotations[0];\n  }\n\n  // As a last resort, compare including the query\n  const rulesByLabelsAndAnnotationsAndQuery = rulesByName.filter((r) => {\n    return getPromRuleFingerprint(r, true).join('-') === getRulerRuleFingerprint(rule, true).join('-');\n  });\n\n  if (rulesByLabelsAndAnnotationsAndQuery.length === 1) {\n    return rulesByLabelsAndAnnotationsAndQuery[0];\n  }\n\n  return undefined;\n}\n\ninterface GroupMatchingResult {\n  matches: Map<RulerRuleDTO, PromRuleDTO>;\n  promOnlyRules: PromRuleDTO[];\n}\n\nexport function matchRulesGroup(\n  rulerGroup: RulerRuleGroupDTO<RulerCloudRuleDTO>,\n  promGroup: PromRuleGroupDTO<PromRuleDTO>\n): GroupMatchingResult {\n  const matchingResult = rulerGroup.rules.reduce(\n    (acc, rulerRule) => {\n      const { matches, unmatchedPromRules } = acc;\n\n      const promRule = getMatchingPromRule(promGroup, rulerRule);\n      if (promRule) {\n        matches.set(rulerRule, promRule);\n        unmatchedPromRules.delete(promRule);\n      }\n      return acc;\n    },\n    { matches: new Map<RulerRuleDTO, PromRuleDTO>(), unmatchedPromRules: new Set(promGroup.rules) }\n  );\n\n  return { matches: matchingResult.matches, promOnlyRules: Array.from(matchingResult.unmatchedPromRules) };\n}\n","import { skipToken } from '@reduxjs/toolkit/query';\nimport { memo, useMemo } from 'react';\n\nimport { DataSourceRuleGroupIdentifier, Rule } from 'app/types/unified-alerting';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { featureDiscoveryApi } from '../api/featureDiscoveryApi';\nimport { isCloudRulerGroup } from '../utils/rules';\n\nimport { DataSourceRuleListItem } from './DataSourceRuleListItem';\nimport { RuleActionsButtons } from './components/RuleActionsButtons.V2';\nimport { RuleActionsSkeleton } from './components/RuleActionsSkeleton';\nimport { getMatchingRulerRule } from './ruleMatching';\n\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\nconst { useGetRuleGroupForNamespaceQuery } = alertRuleApi;\n\ninterface DataSourceRuleLoaderProps {\n  rule: Rule;\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n}\n\nexport const DataSourceRuleLoader = memo(function DataSourceRuleLoader({\n  rule,\n  groupIdentifier,\n}: DataSourceRuleLoaderProps) {\n  const { rulesSource, namespace, groupName } = groupIdentifier;\n\n  const { data: dsFeatures } = useDiscoverDsFeaturesQuery({ uid: rulesSource.uid });\n\n  const { isLoading, data: rulerRuleGroup } = useGetRuleGroupForNamespaceQuery(\n    dsFeatures?.rulerConfig\n      ? { namespace: namespace.name, group: groupName, rulerConfig: dsFeatures?.rulerConfig }\n      : skipToken\n  );\n\n  const rulerRule = useMemo(() => {\n    if (!rulerRuleGroup) {\n      return;\n    }\n\n    if (!isCloudRulerGroup(rulerRuleGroup)) {\n      return;\n    }\n\n    return getMatchingRulerRule(rulerRuleGroup, rule);\n  }, [rulerRuleGroup, rule]);\n\n  // 1. get the rule from the ruler API with \"ruleWithLocation\"\n  // 1.1 skip this if this datasource does not have a ruler\n  //\n  // 2.1 render action buttons\n  // 2.2 render provisioning badge and contact point metadata, etc.\n  const actions = useMemo(() => {\n    if (isLoading) {\n      return <RuleActionsSkeleton />;\n    }\n\n    if (rulerRule) {\n      return <RuleActionsButtons rule={rulerRule} promRule={rule} groupIdentifier={groupIdentifier} compact />;\n    }\n\n    return null;\n  }, [groupIdentifier, isLoading, rule, rulerRule]);\n\n  return (\n    <DataSourceRuleListItem\n      rule={rule}\n      rulerRule={rulerRule}\n      groupIdentifier={groupIdentifier}\n      application={dsFeatures?.application}\n      actions={actions}\n    />\n  );\n});\n","import { Button, Card, Text } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nexport type FilterProgressState = 'searching' | 'done' | 'aborted';\ninterface FilterStatusProps {\n  numberOfRules: number;\n  state: FilterProgressState;\n  onCancel: () => void;\n}\n\nexport function FilterStatus({ state, numberOfRules, onCancel }: FilterStatusProps) {\n  return (\n    <Card>\n      <Text color=\"secondary\">\n        {/* done searching everything and found some results */}\n        {state === 'done' && (\n          <Trans i18nKey=\"alerting.rule-list.filter-view.no-more-results\">\n            No more results – found {{ numberOfRules }} rules\n          </Trans>\n        )}\n        {/* user has cancelled the search */}\n        {state === 'aborted' && (\n          <Trans i18nKey=\"alerting.rule-list.filter-view.results-with-cancellation\">\n            Search cancelled – found {{ numberOfRules }} rules\n          </Trans>\n        )}\n        {/* search is in progress */}\n        {state === 'searching' && (\n          <Trans i18nKey=\"alerting.rule-list.filter-view.results-loading\">\n            Searching – found {{ numberOfRules }} rules\n          </Trans>\n        )}\n      </Text>\n      {state === 'searching' && (\n        <Button variant=\"secondary\" size=\"sm\" onClick={() => onCancel()}>\n          {t('alerting.rule-list.filter-view.cancel-search', 'Cancel search')}\n        </Button>\n      )}\n    </Card>\n  );\n}\n","import Skeleton from 'react-loading-skeleton';\n\nimport { t } from 'app/core/internationalization';\nimport { PromRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { ListItem } from './ListItem';\nimport { RuleActionsSkeleton } from './RuleActionsSkeleton';\nimport { RuleListIcon } from './RuleListIcon';\n\nexport function AlertRuleListItemSkeleton() {\n  return (\n    <ListItem\n      title={<Skeleton width={64} />}\n      icon={<RuleListIcon isPaused={false} />}\n      description={<Skeleton width={256} />}\n      actions={<RuleActionsSkeleton />}\n      data-testid=\"alert-rule-list-item-loader\"\n    />\n  );\n}\n\nexport function RulerRuleLoadingError({ rule }: { rule: PromRuleDTO }) {\n  return (\n    <ListItem\n      title={rule.name}\n      description={t('alerting.rule-list.rulerrule-loading-error', 'Failed to load the rule')}\n      data-testid=\"ruler-rule-loading-error\"\n    />\n  );\n}\n","import { Alert } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { GrafanaRuleGroupIdentifier } from 'app/types/unified-alerting';\nimport { GrafanaPromRuleDTO, PromRuleType, RulerGrafanaRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { GrafanaRulesSource } from '../utils/datasource';\nimport { rulerRuleType } from '../utils/rules';\nimport { createRelativeUrl } from '../utils/url';\n\nimport {\n  AlertRuleListItem,\n  RecordingRuleListItem,\n  RuleListItemCommonProps,\n  UnknownRuleListItem,\n} from './components/AlertRuleListItem';\nimport { AlertRuleListItemSkeleton, RulerRuleLoadingError } from './components/AlertRuleListItemLoader';\nimport { RuleActionsButtons } from './components/RuleActionsButtons.V2';\nimport { RuleOperation } from './components/RuleListIcon';\n\nconst { useGetGrafanaRulerGroupQuery } = alertRuleApi;\n\ninterface GrafanaRuleLoaderProps {\n  rule: GrafanaPromRuleDTO;\n\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  namespaceName: string;\n}\n\nexport function GrafanaRuleLoader({ rule, groupIdentifier, namespaceName }: GrafanaRuleLoaderProps) {\n  const {\n    data: rulerRuleGroup,\n    isError,\n    isLoading,\n  } = useGetGrafanaRulerGroupQuery({\n    folderUid: groupIdentifier.namespace.uid,\n    groupName: groupIdentifier.groupName,\n  });\n\n  const rulerRule = rulerRuleGroup?.rules.find((rulerRule) => rulerRule.grafana_alert.uid === rule.uid);\n\n  if (isError) {\n    return <RulerRuleLoadingError rule={rule} />;\n  }\n\n  if (isLoading) {\n    return <AlertRuleListItemSkeleton />;\n  }\n\n  if (!rulerRule) {\n    return (\n      <Alert\n        title={t('alerting.rule-list.cannot-load-rule-details-for', 'Cannot load rule details for {{name}}', {\n          name: rule.name,\n        })}\n        severity=\"error\"\n      >\n        <Trans i18nKey=\"alerting.rule-list.cannot-find-rule-details-for\">\n          Cannot find rule details for {{ uid: rule.uid ?? '<empty uid>' }}\n        </Trans>\n      </Alert>\n    );\n  }\n\n  return (\n    <GrafanaRuleListItem\n      rule={rule}\n      rulerRule={rulerRule}\n      groupIdentifier={groupIdentifier}\n      namespaceName={namespaceName}\n    />\n  );\n}\n\ninterface GrafanaRuleListItemProps {\n  rule?: GrafanaPromRuleDTO;\n  rulerRule: RulerGrafanaRuleDTO;\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  namespaceName: string;\n  operation?: RuleOperation;\n}\n\nexport function GrafanaRuleListItem({\n  rule,\n  rulerRule,\n  groupIdentifier,\n  namespaceName,\n  operation,\n}: GrafanaRuleListItemProps) {\n  const {\n    grafana_alert: { uid, title, provenance, is_paused },\n    annotations = {},\n    labels = {},\n  } = rulerRule;\n\n  const commonProps: RuleListItemCommonProps = {\n    name: title,\n    rulesSource: GrafanaRulesSource,\n    group: groupIdentifier.groupName,\n    namespace: namespaceName,\n    href: createRelativeUrl(`/alerting/grafana/${uid}/view`),\n    health: rule?.health,\n    error: rule?.lastError,\n    labels: labels,\n    isProvisioned: Boolean(provenance),\n    isPaused: is_paused,\n    application: 'grafana' as const,\n    actions: <RuleActionsButtons rule={rulerRule} promRule={rule} groupIdentifier={groupIdentifier} compact />,\n  };\n\n  if (rulerRuleType.grafana.alertingRule(rulerRule)) {\n    const promAlertingRule = rule && rule.type === PromRuleType.Alerting ? rule : undefined;\n\n    return (\n      <AlertRuleListItem\n        {...commonProps}\n        summary={annotations.summary}\n        state={promAlertingRule?.state}\n        instancesCount={promAlertingRule?.alerts?.length}\n        operation={operation}\n      />\n    );\n  }\n\n  if (rulerRuleType.grafana.recordingRule(rulerRule)) {\n    return <RecordingRuleListItem {...commonProps} />;\n  }\n\n  return <UnknownRuleListItem ruleName={title} groupIdentifier={groupIdentifier} ruleDefinition={rulerRule} />;\n}\n","import { useEffect, useState } from 'react';\nvar useIntersection = function (ref, options) {\n    var _a = useState(null), intersectionObserverEntry = _a[0], setIntersectionObserverEntry = _a[1];\n    useEffect(function () {\n        if (ref.current && typeof IntersectionObserver === 'function') {\n            var handler = function (entries) {\n                setIntersectionObserverEntry(entries[0]);\n            };\n            var observer_1 = new IntersectionObserver(handler, options);\n            observer_1.observe(ref.current);\n            return function () {\n                setIntersectionObserverEntry(null);\n                observer_1.disconnect();\n            };\n        }\n        return function () { };\n    }, [ref.current, options.threshold, options.root, options.rootMargin]);\n    return intersectionObserverEntry;\n};\nexport default useIntersection;\n","import { useEffect, useRef } from 'react';\nimport { useIntersection } from 'react-use';\n\ntype Props = {\n  handleLoad: () => void;\n};\n\nfunction LoadMoreHelper({ handleLoad }: Props) {\n  const intersectionRef = useRef<HTMLDivElement>(null);\n  const intersection = useIntersection(intersectionRef, {\n    root: null,\n    threshold: 1,\n  });\n\n  useEffect(() => {\n    const completelyInView = intersection && intersection.intersectionRatio > 0;\n    if (completelyInView) {\n      handleLoad();\n    }\n  }, [intersection, handleLoad]);\n\n  return <div ref={intersectionRef} data-testid=\"load-more-helper\" />;\n}\n\nexport default LoadMoreHelper;\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\nclass EmptyAsyncIterable extends AsyncIterableX {\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n        });\n    }\n}\n/**\n * Returns an empty async-iterable sequence.\n *\n * @template TSource The type used for the async-iterable type parameter of the resulting sequence.\n * @returns {AsyncIterableX<never>} An async-iterable sequence with no elements.\n */\nexport function empty() {\n    return new EmptyAsyncIterable();\n}\n\n//# sourceMappingURL=empty.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\nimport { isPromise } from '../../util/isiterable.mjs';\nclass ConcatMapAsyncIterable extends AsyncIterableX {\n    constructor(_source, _selector, _thisArg) {\n        super();\n        this._source = _source;\n        this._selector = _selector;\n        this._thisArg = _thisArg;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d, _e, e_2, _f, _g;\n            throwIfAborted(signal);\n            let outerIndex = 0;\n            const { _thisArg: thisArg, _selector: selector } = this;\n            try {\n                for (var _h = true, _j = __asyncValues(wrapWithAbort(this._source, signal)), _k; _k = yield __await(_j.next()), _b = _k.done, !_b; _h = true) {\n                    _d = _k.value;\n                    _h = false;\n                    const outer = _d;\n                    const result = selector.call(thisArg, outer, outerIndex++, signal);\n                    const values = (isPromise(result) ? yield __await(result) : result);\n                    try {\n                        for (var _l = true, _m = (e_2 = void 0, __asyncValues(wrapWithAbort(AsyncIterableX.as(values), signal))), _o; _o = yield __await(_m.next()), _e = _o.done, !_e; _l = true) {\n                            _g = _o.value;\n                            _l = false;\n                            const inner = _g;\n                            yield yield __await(inner);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (!_l && !_e && (_f = _m.return)) yield __await(_f.call(_m));\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_h && !_b && (_c = _j.return)) yield __await(_c.call(_j));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n}\n/**\n * Projects each element of an async-iterable sequence to an async-iterable sequence and merges\n * the resulting async-iterable sequences into one async-iterable sequence.\n *\n * @template TSource The type of the elements in the source sequence.\n * @template TResult The type of the elements in the projected inner sequences and the elements in the merged result sequence.\n * @param {((\n *     value: TSource,\n *     index: number,\n *     signal?: AbortSignal\n *   ) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>)} selector A transform function to apply to each element.\n * @param {*} [thisArg] Option this for binding to the selector.\n * @returns {OperatorAsyncFunction<TSource, TResult>} An operator that creates an async-iterable sequence whose\n * elements are the result of invoking the one-to-many transform function on each element of the input sequence.\n */\nexport function concatMap(selector, thisArg) {\n    return function concatMapOperatorFunction(source) {\n        return new ConcatMapAsyncIterable(source, selector, thisArg);\n    };\n}\n\n//# sourceMappingURL=concatmap.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { returnAsyncIterator } from '../../util/returniterator.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\n/** @ignore */\nexport class CatchWithAsyncIterable extends AsyncIterableX {\n    constructor(source, handler) {\n        super();\n        this._source = source;\n        this._handler = handler;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            let err;\n            let hasError = false;\n            const source = wrapWithAbort(this._source, signal);\n            const it = source[Symbol.asyncIterator]();\n            while (1) {\n                let c = {};\n                try {\n                    c = yield __await(it.next());\n                    if (c.done) {\n                        yield __await(returnAsyncIterator(it));\n                        break;\n                    }\n                }\n                catch (e) {\n                    err = yield __await(this._handler(e, signal));\n                    hasError = true;\n                    yield __await(returnAsyncIterator(it));\n                    break;\n                }\n                yield yield __await(c.value);\n            }\n            if (hasError) {\n                try {\n                    for (var _e = true, _f = __asyncValues(wrapWithAbort(err, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                        _d = _g.value;\n                        _e = false;\n                        const item = _d;\n                        yield yield __await(item);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    }\n}\n/**\n * Continues an async-iterable sequence that is terminated by an exception with the\n * async-iterable sequence produced by the handler.\n *\n * @template TSource The type of the elements in the source sequence.\n * @template TResult The type of elements from the handler function.\n * @param {((\n *     error: any,\n *     signal?: AbortSignal\n *   ) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>)} handler Error handler function, producing another async-iterable sequence.\n * @returns {(OperatorAsyncFunction<TSource, TSource | TResult>)} An operator which continues an async-iterable sequence that is terminated by\n * an exception with the specified handler.\n */\nexport function catchError(handler) {\n    return function catchWithOperatorFunction(source) {\n        return new CatchWithAsyncIterable(source, handler);\n    };\n}\n\n//# sourceMappingURL=catcherror.mjs.map\n","import { attempt, compact, isString } from 'lodash';\nimport memoize from 'micro-memoize';\n\nimport { Matcher } from 'app/plugins/datasource/alertmanager/types';\nimport { PromRuleDTO, PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { RulesFilter } from '../../search/rulesSearchParser';\nimport { labelsMatchMatchers } from '../../utils/alertmanager';\nimport { Annotation } from '../../utils/constants';\nimport { getDatasourceAPIUid } from '../../utils/datasource';\nimport { parseMatcher } from '../../utils/matchers';\nimport { isPluginProvidedRule, prometheusRuleType } from '../../utils/rules';\n\n/**\n * @returns True if the group matches the filter, false otherwise. Keeps rules intact\n */\nexport function groupFilter(group: PromRuleGroupDTO, filterState: RulesFilter): boolean {\n  const { name, file } = group;\n\n  // Add fuzzy search for namespace\n  if (filterState.namespace && !file.toLowerCase().includes(filterState.namespace)) {\n    return false;\n  }\n\n  // Add fuzzy search for group name\n  if (filterState.groupName && !name.toLowerCase().includes(filterState.groupName)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @returns True if the rule matches the filter, false otherwise\n */\nexport function ruleFilter(rule: PromRuleDTO, filterState: RulesFilter) {\n  const { name, labels = {}, health, type } = rule;\n\n  const nameLower = name.toLowerCase();\n\n  // Free form words filter (matches if any word is part of the rule name)\n  if (filterState.freeFormWords.length > 0 && !filterState.freeFormWords.some((word) => nameLower.includes(word))) {\n    return false;\n  }\n\n  // Rule name filter (exact match)\n  if (filterState.ruleName && !nameLower.includes(filterState.ruleName)) {\n    return false;\n  }\n\n  // Labels filter\n  if (filterState.labels.length > 0) {\n    const matchers = compact(filterState.labels.map(looseParseMatcher));\n    const doRuleLabelsMatchQuery = matchers.length > 0 && labelsMatchMatchers(labels, matchers);\n\n    // Also check alerts if they exist\n    const doAlertsContainMatchingLabels =\n      matchers.length > 0 &&\n      prometheusRuleType.alertingRule(rule) &&\n      rule.alerts &&\n      rule.alerts.some((alert) => labelsMatchMatchers(alert.labels || {}, matchers));\n\n    if (!doRuleLabelsMatchQuery && !doAlertsContainMatchingLabels) {\n      return false;\n    }\n  }\n\n  // Rule type filter\n  if (filterState.ruleType && type !== filterState.ruleType) {\n    return false;\n  }\n\n  // Rule state filter (for alerting rules only)\n  if (filterState.ruleState) {\n    if (!prometheusRuleType.alertingRule(rule)) {\n      return false;\n    }\n    if (rule.state !== filterState.ruleState) {\n      return false;\n    }\n  }\n\n  // Rule health filter\n  if (filterState.ruleHealth && health !== filterState.ruleHealth) {\n    return false;\n  }\n\n  // Dashboard UID filter\n  if (filterState.dashboardUid) {\n    if (!prometheusRuleType.alertingRule(rule)) {\n      return false;\n    }\n\n    const dashboardAnnotation = rule.annotations?.[Annotation.dashboardUID];\n    if (dashboardAnnotation !== filterState.dashboardUid) {\n      return false;\n    }\n  }\n\n  // Plugins filter - hide plugin-provided rules when set to 'hide'\n  if (filterState.plugins === 'hide' && isPluginProvidedRule(rule)) {\n    return false;\n  }\n\n  // Note: We can't implement these filters from reduceGroups because they rely on rulerRule property\n  // which is not available in PromRuleDTO:\n  // - contactPoint filter\n  // - dataSourceNames filter\n  if (filterState.dataSourceNames.length > 0) {\n    const isGrafanaRule = prometheusRuleType.grafana.rule(rule);\n    if (isGrafanaRule) {\n      try {\n        const filterDatasourceUids = mapDataSourceNamesToUids(filterState.dataSourceNames);\n        const queriedDatasourceUids = rule.queriedDatasourceUIDs || [];\n\n        const queryIncludesDataSource = queriedDatasourceUids.some((uid) => filterDatasourceUids.includes(uid));\n        if (!queryIncludesDataSource) {\n          return false;\n        }\n      } catch (error) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction looseParseMatcher(matcherQuery: string): Matcher | undefined {\n  try {\n    return parseMatcher(matcherQuery);\n  } catch {\n    // Try to createa a matcher than matches all values for a given key\n    return { name: matcherQuery, value: '', isRegex: true, isEqual: true };\n  }\n}\n\n// Memoize the function to avoid calling getDatasourceAPIUid for the filter values multiple times\nconst mapDataSourceNamesToUids = memoize(\n  (names: string[]): string[] => {\n    return names.map((name) => attempt(getDatasourceAPIUid, name)).filter(isString);\n  },\n  { maxSize: 1 }\n);\n","import { GrafanaPromRuleGroupDTO, PromRuleDTO, PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\n\nimport { WithNotificationOptions, alertingApi } from './alertingApi';\nimport { normalizeRuleGroup } from './prometheus';\n\nexport interface PromRulesResponse<TRuleGroup> {\n  status: string;\n  data: {\n    groups: TRuleGroup[];\n    groupNextToken?: string;\n  };\n  errorType?: string;\n  error?: string;\n}\n\ntype PromRulesOptions = WithNotificationOptions<{\n  ruleSource: { uid: string };\n  namespace?: string;\n  groupName?: string;\n  ruleName?: string;\n  groupLimit?: number;\n  excludeAlerts?: boolean;\n  groupNextToken?: string;\n}>;\n\ntype GrafanaPromRulesOptions = Omit<PromRulesOptions, 'ruleSource' | 'namespace'> & {\n  folderUid?: string;\n  dashboardUid?: string;\n  panelId?: number;\n};\n\nexport const prometheusApi = alertingApi.injectEndpoints({\n  endpoints: (build) => ({\n    getGroups: build.query<PromRulesResponse<PromRuleGroupDTO<PromRuleDTO>>, PromRulesOptions>({\n      query: ({\n        ruleSource,\n        namespace,\n        groupName,\n        ruleName,\n        groupLimit,\n        excludeAlerts,\n        groupNextToken,\n        notificationOptions,\n      }) => {\n        if (ruleSource.uid === GRAFANA_RULES_SOURCE_NAME) {\n          throw new Error('Please use getGrafanaGroups endpoint for grafana rules');\n        }\n        return {\n          url: `api/prometheus/${ruleSource.uid}/api/v1/rules`,\n          params: {\n            file: namespace, // Mimir\n            'file[]': namespace, // Prometheus\n            rule_group: groupName, // Mimir\n            'rule_group[]': groupName, // Prometheus\n            rule_name: ruleName, // Mimir\n            'rule_name[]': ruleName, // Prometheus\n            exclude_alerts: excludeAlerts?.toString(),\n            group_limit: groupLimit?.toFixed(0),\n            group_next_token: groupNextToken,\n          },\n          notificationOptions,\n        };\n      },\n      transformResponse: (response: PromRulesResponse<PromRuleGroupDTO<PromRuleDTO>>) => {\n        return { ...response, data: { ...response.data, groups: response.data.groups.map(normalizeRuleGroup) } };\n      },\n    }),\n    getGrafanaGroups: build.query<PromRulesResponse<GrafanaPromRuleGroupDTO>, GrafanaPromRulesOptions>({\n      query: ({ folderUid, groupName, ruleName, groupLimit, excludeAlerts, groupNextToken }) => ({\n        url: `api/prometheus/grafana/api/v1/rules`,\n        params: {\n          folder_uid: folderUid,\n          rule_group: groupName,\n          rule_name: ruleName,\n          exclude_alerts: excludeAlerts?.toString(),\n          group_limit: groupLimit?.toFixed(0),\n          group_next_token: groupNextToken,\n        },\n      }),\n    }),\n  }),\n});\n","import { useCallback } from 'react';\n\nimport { useDispatch } from 'app/types/store';\nimport { DataSourceRulesSourceIdentifier } from 'app/types/unified-alerting';\nimport { PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../../api/alertRuleApi';\nimport { PromRulesResponse, prometheusApi } from '../../api/prometheusApi';\n\nconst { useLazyGetGroupsQuery, useLazyGetGrafanaGroupsQuery } = prometheusApi;\n\ninterface UseGeneratorHookOptions {\n  populateCache?: boolean;\n}\n\ninterface FetchGroupsOptions {\n  groupLimit?: number;\n  groupNextToken?: string;\n}\n\nexport function usePrometheusGroupsGenerator(hookOptions: UseGeneratorHookOptions = {}) {\n  const dispatch = useDispatch();\n  const [getGroups] = useLazyGetGroupsQuery();\n\n  return useCallback(\n    async function* (ruleSource: DataSourceRulesSourceIdentifier, groupLimit: number) {\n      const getRuleSourceGroupsWithCache = async (fetchOptions: FetchGroupsOptions) => {\n        const response = await getGroups({\n          ruleSource: { uid: ruleSource.uid },\n          notificationOptions: { showErrorAlert: false },\n          ...fetchOptions,\n        }).unwrap();\n\n        if (hookOptions.populateCache) {\n          response.data.groups.forEach((group) => {\n            dispatch(\n              prometheusApi.util.upsertQueryData(\n                'getGroups',\n                { ruleSource: { uid: ruleSource.uid }, namespace: group.file, groupName: group.name },\n                { data: { groups: [group] }, status: 'success' }\n              )\n            );\n          });\n        }\n\n        return response;\n      };\n\n      yield* genericGroupsGenerator(getRuleSourceGroupsWithCache, groupLimit);\n    },\n    [getGroups, dispatch, hookOptions.populateCache]\n  );\n}\n\nexport function useGrafanaGroupsGenerator(hookOptions: UseGeneratorHookOptions = {}) {\n  const dispatch = useDispatch();\n  const [getGrafanaGroups] = useLazyGetGrafanaGroupsQuery();\n\n  const getGroupsAndProvideCache = useCallback(\n    async (fetchOptions: FetchGroupsOptions) => {\n      const response = await getGrafanaGroups(fetchOptions).unwrap();\n\n      // This is not mandatory to preload ruler rules, but it improves the UX\n      // Because the user waits a bit longer for the initial load but doesn't need to wait for each group to be loaded\n      if (hookOptions.populateCache) {\n        const cacheAndRulerPreload = response.data.groups.map(async (group) => {\n          dispatch(\n            alertRuleApi.util.prefetch(\n              'getGrafanaRulerGroup',\n              { folderUid: group.folderUid, groupName: group.name },\n              { force: true }\n            )\n          );\n          await dispatch(\n            prometheusApi.util.upsertQueryData(\n              'getGrafanaGroups',\n              { folderUid: group.folderUid, groupName: group.name },\n              { data: { groups: [group] }, status: 'success' }\n            )\n          );\n        });\n\n        await Promise.allSettled(cacheAndRulerPreload);\n      }\n\n      return response;\n    },\n    [getGrafanaGroups, dispatch, hookOptions.populateCache]\n  );\n\n  return useCallback(\n    async function* (groupLimit: number) {\n      yield* genericGroupsGenerator(getGroupsAndProvideCache, groupLimit);\n    },\n    [getGroupsAndProvideCache]\n  );\n}\n\n/**\n * Converts a Prometheus groups generator yielding arrays of groups to a generator yielding groups one by one\n * @param generator - The paginated generator to convert\n * @returns A non-paginated generator that yields all groups from the original generator one by one\n */\nexport function toIndividualRuleGroups<TGroup extends PromRuleGroupDTO>(\n  generator: AsyncGenerator<TGroup[], void, unknown>\n): AsyncGenerator<TGroup, void, unknown> {\n  return (async function* () {\n    for await (const batch of generator) {\n      for (const item of batch) {\n        yield item;\n      }\n    }\n  })();\n}\n\n// Generator lazily provides groups one by one only when needed\n// This might look a bit complex but it allows us to have one API for paginated and non-paginated Prometheus data sources\n// For unpaginated data sources we fetch everything in one go\n// For paginated we fetch the next page when needed\nasync function* genericGroupsGenerator<TGroup>(\n  fetchGroups: (options: FetchGroupsOptions) => Promise<PromRulesResponse<TGroup>>,\n  groupLimit: number\n) {\n  let response = await fetchGroups({ groupLimit });\n  yield response.data.groups;\n\n  let lastToken: string | undefined = response.data?.groupNextToken;\n\n  while (lastToken) {\n    response = await fetchGroups({ groupNextToken: lastToken, groupLimit: groupLimit });\n    yield response.data.groups;\n    lastToken = response.data?.groupNextToken;\n  }\n}\n","import { AsyncIterableX, empty, from } from 'ix/asynciterable';\nimport { merge } from 'ix/asynciterable/merge';\nimport { catchError, concatMap, withAbort } from 'ix/asynciterable/operators';\nimport { isEmpty } from 'lodash';\n\nimport {\n  DataSourceRuleGroupIdentifier,\n  DataSourceRulesSourceIdentifier,\n  GrafanaRuleGroupIdentifier,\n} from 'app/types/unified-alerting';\nimport {\n  GrafanaPromRuleDTO,\n  GrafanaPromRuleGroupDTO,\n  PromRuleDTO,\n  PromRuleGroupDTO,\n} from 'app/types/unified-alerting-dto';\n\nimport { RulesFilter } from '../../search/rulesSearchParser';\nimport {\n  getDataSourceByUid,\n  getDatasourceAPIUid,\n  getExternalRulesSources,\n  isSupportedExternalRulesSourceType,\n} from '../../utils/datasource';\n\nimport { groupFilter, ruleFilter } from './filters';\nimport { useGrafanaGroupsGenerator, usePrometheusGroupsGenerator } from './prometheusGroupsGenerator';\n\nexport type RuleWithOrigin = PromRuleWithOrigin | GrafanaRuleWithOrigin;\n\nexport interface GrafanaRuleWithOrigin {\n  rule: GrafanaPromRuleDTO;\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  /**\n   * The name of the namespace that contains the rule group\n   * groupIdentifier contains the uid of the namespace, but not the user-friendly display name\n   */\n  namespaceName: string;\n  origin: 'grafana';\n}\n\nexport interface PromRuleWithOrigin {\n  rule: PromRuleDTO;\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n  origin: 'datasource';\n}\n\ninterface GetIteratorResult {\n  iterable: AsyncIterableX<RuleWithOrigin>;\n  abortController: AbortController;\n}\n\nexport function useFilteredRulesIteratorProvider() {\n  const allExternalRulesSources = getExternalRulesSources();\n\n  const prometheusGroupsGenerator = usePrometheusGroupsGenerator();\n  const grafanaGroupsGenerator = useGrafanaGroupsGenerator();\n\n  const getFilteredRulesIterable = (filterState: RulesFilter, groupLimit: number): GetIteratorResult => {\n    /* this is the abort controller that allows us to stop an AsyncIterable */\n    const abortController = new AbortController();\n\n    const normalizedFilterState = normalizeFilterState(filterState);\n    const hasDataSourceFilterActive = Boolean(filterState.dataSourceNames.length);\n\n    const grafanaRulesGenerator = from(grafanaGroupsGenerator(groupLimit)).pipe(\n      withAbort(abortController.signal),\n      concatMap((groups) =>\n        groups\n          .filter((group) => groupFilter(group, normalizedFilterState))\n          .flatMap((group) => group.rules.map((rule) => [group, rule] as const))\n          .filter(([, rule]) => ruleFilter(rule, normalizedFilterState))\n          .map(([group, rule]) => mapGrafanaRuleToRuleWithOrigin(group, rule))\n      ),\n      catchError(() => empty())\n    );\n\n    // Determine which data sources to use\n    const externalRulesSourcesToFetchFrom = hasDataSourceFilterActive\n      ? getRulesSourcesFromFilter(filterState)\n      : allExternalRulesSources;\n\n    // If no data sources, just return Grafana rules\n    if (isEmpty(externalRulesSourcesToFetchFrom)) {\n      return { iterable: grafanaRulesGenerator, abortController };\n    }\n\n    // Create a generator for each data source\n    const dataSourceGenerators = externalRulesSourcesToFetchFrom.map((dataSourceIdentifier) => {\n      const promGroupsGenerator = from(prometheusGroupsGenerator(dataSourceIdentifier, groupLimit)).pipe(\n        withAbort(abortController.signal),\n        concatMap((groups) =>\n          groups\n            .filter((group) => groupFilter(group, normalizedFilterState))\n            .flatMap((group) => group.rules.map((rule) => [group, rule] as const))\n            .filter(([, rule]) => ruleFilter(rule, normalizedFilterState))\n            .map(([group, rule]) => mapRuleToRuleWithOrigin(dataSourceIdentifier, group, rule))\n        ),\n        catchError(() => empty())\n      );\n\n      return promGroupsGenerator;\n    });\n\n    // Merge all generators\n    return {\n      iterable: merge<RuleWithOrigin>(grafanaRulesGenerator, ...dataSourceGenerators),\n      abortController,\n    };\n  };\n\n  return getFilteredRulesIterable;\n}\n\n/**\n * Finds all data sources that the user might want to filter by.\n * Only allows Prometheus and Loki data source types.\n */\nfunction getRulesSourcesFromFilter(filter: RulesFilter): DataSourceRulesSourceIdentifier[] {\n  return filter.dataSourceNames.reduce<DataSourceRulesSourceIdentifier[]>((acc, dataSourceName) => {\n    // since \"getDatasourceAPIUid\" can throw we'll omit any non-existing data sources\n    try {\n      const uid = getDatasourceAPIUid(dataSourceName);\n      const type = getDataSourceByUid(uid)?.type;\n\n      if (type === undefined || isSupportedExternalRulesSourceType(type) === false) {\n        return acc;\n      }\n\n      acc.push({\n        name: dataSourceName,\n        uid,\n        ruleSourceType: 'datasource',\n      });\n    } catch {}\n\n    return acc;\n  }, []);\n}\n\nfunction mapRuleToRuleWithOrigin(\n  rulesSource: DataSourceRulesSourceIdentifier,\n  group: PromRuleGroupDTO,\n  rule: PromRuleDTO\n): PromRuleWithOrigin {\n  return {\n    rule,\n    groupIdentifier: {\n      rulesSource,\n      namespace: { name: group.file },\n      groupName: group.name,\n      groupOrigin: 'datasource',\n    },\n    origin: 'datasource',\n  };\n}\n\nfunction mapGrafanaRuleToRuleWithOrigin(\n  group: GrafanaPromRuleGroupDTO,\n  rule: GrafanaPromRuleDTO\n): GrafanaRuleWithOrigin {\n  return {\n    rule,\n    groupIdentifier: {\n      namespace: { uid: group.folderUid },\n      groupName: group.name,\n      groupOrigin: 'grafana',\n    },\n    namespaceName: group.file,\n    origin: 'grafana',\n  };\n}\n\n/**\n * Lowercase free form words, rule name, group name and namespace\n */\nfunction normalizeFilterState(filterState: RulesFilter): RulesFilter {\n  return {\n    ...filterState,\n    freeFormWords: filterState.freeFormWords.map((word) => word.toLowerCase()),\n    ruleName: filterState.ruleName?.toLowerCase(),\n    groupName: filterState.groupName?.toLowerCase(),\n    namespace: filterState.namespace?.toLowerCase(),\n  };\n}\n","import { bufferCountOrTime, tap } from 'ix/asynciterable/operators';\nimport { useCallback, useMemo, useRef, useState, useTransition } from 'react';\nimport { useUnmount } from 'react-use';\n\nimport { EmptyState, Stack } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { withPerformanceLogging } from '../Analytics';\nimport { isLoading, useAsync } from '../hooks/useAsync';\nimport { RulesFilter } from '../search/rulesSearchParser';\nimport { hashRule } from '../utils/rule-id';\n\nimport { DataSourceRuleLoader } from './DataSourceRuleLoader';\nimport { FilterProgressState, FilterStatus } from './FilterViewStatus';\nimport { GrafanaRuleLoader } from './GrafanaRuleLoader';\nimport LoadMoreHelper from './LoadMoreHelper';\nimport { UnknownRuleListItem } from './components/AlertRuleListItem';\nimport { AlertRuleListItemSkeleton } from './components/AlertRuleListItemLoader';\nimport {\n  GrafanaRuleWithOrigin,\n  PromRuleWithOrigin,\n  RuleWithOrigin,\n  useFilteredRulesIteratorProvider,\n} from './hooks/useFilteredRulesIterator';\n\ninterface FilterViewProps {\n  filterState: RulesFilter;\n}\n\nconst FRONTENT_PAGE_SIZE = 100;\nconst API_PAGE_SIZE = 2000;\n\nexport function FilterView({ filterState }: FilterViewProps) {\n  // ⚠️ We use a key to force the component to unmount and remount when the filter state changes\n  // filterState is a complex object including arrays and is constructed from URL params\n  // so even for the same params we get a new object or new properties in it\n  return <FilterViewResults filterState={filterState} key={JSON.stringify(filterState)} />;\n}\n\ntype KeyedRuleWithOrigin = RuleWithOrigin & {\n  /**\n   * Artificial frontend-only identifier for the rule.\n   * It's used as a key for the rule in the rule list to prevent key duplication\n   */\n  key: string;\n};\n\n/**\n * Renders the list of rules that match the filter.\n * It doesn't update results when the filter changes, use key property to force a remount with a new filter\n * Internally it needs to reset rules generator to get new results\n * While a bit counter-intuitive resetting using key simplifies a lot of logic in the component\n * The component implements infinite scrolling. It loads next page when the user scrolls to the bottom of the list\n */\nfunction FilterViewResults({ filterState }: FilterViewProps) {\n  const [transitionPending, startTransition] = useTransition();\n\n  /* this hook returns a function that creates an AsyncIterable<RuleWithOrigin> which we will use to populate the front-end */\n  const getFilteredRulesIterator = useFilteredRulesIteratorProvider();\n\n  const iteration = useRef<{\n    rulesBatchIterator: AsyncIterator<RuleWithOrigin[]>;\n    abortController: AbortController;\n  } | null>(null);\n\n  const [rules, setRules] = useState<KeyedRuleWithOrigin[]>([]);\n  const [doneSearching, setDoneSearching] = useState(false);\n\n  // Lazy initialization of useRef\n  // https://18.react.dev/reference/react/useRef#how-to-avoid-null-checks-when-initializing-use-ref-later\n  const getRulesBatchIterator = useCallback(() => {\n    if (!iteration.current) {\n      /**\n       * This an iterator that we can use to populate the search results.\n       * It also uses the signal from the AbortController above to cancel retrieving more results and sets up a\n       * callback function to detect when we've exhausted the source.\n       * This is the main AsyncIterable<RuleWithOrigin> we will use for the search results\n       *\n       * ⚠️ Make sure we are returning / using a \"iterator\" and not an \"iterable\" since the iterable is only a blueprint\n       * and the iterator will allow us to exhaust the iterable in a stateful way\n       */\n      const { iterable, abortController } = getFilteredRulesIterator(filterState, API_PAGE_SIZE);\n      const rulesBatchIterator = iterable\n        .pipe(\n          bufferCountOrTime(FRONTENT_PAGE_SIZE, 1000),\n          onFinished(() => setDoneSearching(true))\n        )\n        [Symbol.asyncIterator]();\n      iteration.current = { rulesBatchIterator: rulesBatchIterator, abortController };\n    }\n    return iteration.current.rulesBatchIterator;\n  }, [filterState, getFilteredRulesIterator]);\n\n  /* This function will fetch a page of results from the iterable */\n  const [{ execute: loadResultPage }, state] = useAsync(\n    withPerformanceLogging(async () => {\n      const rulesIterator = getRulesBatchIterator();\n\n      let loadedRulesCount = 0;\n\n      while (loadedRulesCount < FRONTENT_PAGE_SIZE) {\n        const nextRulesBatch = await rulesIterator.next();\n        if (nextRulesBatch.done) {\n          return;\n        }\n        if (nextRulesBatch.value) {\n          startTransition(() => {\n            setRules((rules) => rules.concat(nextRulesBatch.value.map((rule) => ({ key: getRuleKey(rule), ...rule }))));\n          });\n        }\n        loadedRulesCount += nextRulesBatch.value.length;\n      }\n    }, 'alerting.rule-list.filter-view.load-result-page')\n  );\n\n  const loading = isLoading(state) || transitionPending;\n  const numberOfRules = rules.length;\n  const noRulesFound = numberOfRules === 0 && !loading;\n  const loadingAborted = iteration.current?.abortController.signal.aborted;\n  const cancelSearch = useCallback(() => {\n    iteration.current?.abortController.abort();\n  }, []);\n\n  /* When we unmount the component we make sure to abort all iterables and stop making HTTP requests */\n  useUnmount(() => {\n    cancelSearch();\n  });\n\n  // track the state of the filter progress, which is either searching, done or aborted\n  const filterProgressState = useMemo<FilterProgressState>(() => {\n    if (loadingAborted) {\n      return 'aborted';\n    } else if (doneSearching) {\n      return 'done';\n    }\n    return 'searching';\n  }, [doneSearching, loadingAborted]);\n\n  /* If we don't have any rules and have exhausted all sources, show a EmptyState */\n  if (noRulesFound && doneSearching) {\n    return (\n      <EmptyState variant=\"not-found\" message=\"No matching rules found\">\n        <Trans i18nKey=\"alerting.rule-list.filter-view.no-rules-found\">\n          No alert or recording rules matched your current set of filters.\n        </Trans>\n      </EmptyState>\n    );\n  }\n\n  return (\n    <Stack direction=\"column\" gap={0}>\n      <ul aria-label={t('alerting.filter-view-results.aria-label-filteredrulelist', 'filtered-rule-list')}>\n        {rules.map((ruleWithOrigin) => {\n          const { key, rule, groupIdentifier, origin } = ruleWithOrigin;\n\n          switch (origin) {\n            case 'grafana':\n              return (\n                <GrafanaRuleLoader\n                  key={key}\n                  rule={rule}\n                  groupIdentifier={groupIdentifier}\n                  namespaceName={ruleWithOrigin.namespaceName}\n                />\n              );\n            case 'datasource':\n              return <DataSourceRuleLoader key={key} rule={rule} groupIdentifier={groupIdentifier} />;\n            default:\n              return (\n                <UnknownRuleListItem\n                  key={key}\n                  ruleName={t('alerting.rule-list.unknown-rule-type', 'Unknown rule type')}\n                  groupIdentifier={groupIdentifier}\n                  ruleDefinition={rule}\n                />\n              );\n          }\n        })}\n        {loading && (\n          <>\n            <AlertRuleListItemSkeleton />\n            <AlertRuleListItemSkeleton />\n          </>\n        )}\n      </ul>\n      {!noRulesFound && (\n        <FilterStatus state={filterProgressState} numberOfRules={numberOfRules} onCancel={cancelSearch} />\n      )}\n      {!doneSearching && !loading && !loadingAborted && <LoadMoreHelper handleLoad={loadResultPage} />}\n    </Stack>\n  );\n}\n\n// simple helper function to detect the end of the source async iterable\nfunction onFinished<T>(fn: () => void) {\n  return tap<T>(undefined, undefined, fn);\n}\n\nfunction getRuleKey(ruleWithOrigin: RuleWithOrigin): string {\n  if (ruleWithOrigin.origin === 'grafana') {\n    return getGrafanaRuleKey(ruleWithOrigin);\n  }\n  return getDataSourceRuleKey(ruleWithOrigin);\n}\n\nfunction getGrafanaRuleKey(ruleWithOrigin: GrafanaRuleWithOrigin) {\n  const {\n    groupIdentifier: { namespace, groupName },\n    rule,\n  } = ruleWithOrigin;\n  return `grafana-${namespace.uid}-${groupName}-${rule.uid}}`;\n}\n\nfunction getDataSourceRuleKey(ruleWithOrigin: PromRuleWithOrigin) {\n  const {\n    rule,\n    groupIdentifier: { rulesSource, namespace, groupName },\n  } = ruleWithOrigin;\n  return `${rulesSource.name}-${namespace.name}-${groupName}-${rule.name}-${rule.type}-${hashRule(rule)}`;\n}\n","import { skipToken } from '@reduxjs/toolkit/query';\nimport { useMemo } from 'react';\n\nimport { isFetchError } from '@grafana/runtime';\nimport { Alert } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { DataSourceRuleGroupIdentifier } from 'app/types/unified-alerting';\nimport {\n  PromRuleDTO,\n  PromRuleGroupDTO,\n  RulerCloudRuleDTO,\n  RulerRuleGroupDTO,\n  RulesSourceApplication,\n} from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { featureDiscoveryApi } from '../api/featureDiscoveryApi';\nimport { prometheusApi } from '../api/prometheusApi';\nimport { RULE_LIST_POLL_INTERVAL_MS } from '../utils/constants';\nimport { hashRule } from '../utils/rule-id';\nimport { getRuleName, isCloudRulerGroup } from '../utils/rules';\n\nimport { DataSourceRuleListItem } from './DataSourceRuleListItem';\nimport { RuleOperationListItem } from './components/AlertRuleListItem';\nimport { AlertRuleListItemSkeleton } from './components/AlertRuleListItemLoader';\nimport { RuleActionsButtons } from './components/RuleActionsButtons.V2';\nimport { RuleOperation } from './components/RuleListIcon';\nimport { matchRulesGroup } from './ruleMatching';\n\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\nconst { useGetGroupsQuery } = prometheusApi;\nconst { useGetRuleGroupForNamespaceQuery } = alertRuleApi;\n\nexport interface DataSourceGroupLoaderProps {\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n  /**\n   * Used to display the same number of skeletons as there are rules\n   * The number of rules is typically known from paginated Prometheus response\n   * Ruler response might contain different number of rules, but in most cases what we get from Prometheus is fine\n   */\n  expectedRulesCount?: number;\n}\n\n/**\n * Loads an evaluation group from Prometheus and Ruler endpoints.\n * Displays a loading skeleton while the data is being fetched.\n * Polls the Prometheus endpoint every 20 seconds to refresh the data.\n */\nexport function DataSourceGroupLoader({ groupIdentifier, expectedRulesCount = 3 }: DataSourceGroupLoaderProps) {\n  const { namespace, groupName } = groupIdentifier;\n  const namespaceName = namespace.name;\n\n  const {\n    data: promResponse,\n    isLoading: isPromResponseLoading,\n    isError: isPromResponseError,\n  } = useGetGroupsQuery(\n    {\n      ruleSource: { uid: groupIdentifier.rulesSource.uid },\n      namespace: namespaceName,\n      groupName: groupName,\n    },\n    { pollingInterval: RULE_LIST_POLL_INTERVAL_MS }\n  );\n\n  const {\n    data: dsFeatures,\n    isLoading: isDsFeaturesLoading,\n    isError: isDsFeaturesError,\n  } = useDiscoverDsFeaturesQuery({\n    uid: groupIdentifier.rulesSource.uid,\n  });\n\n  const {\n    data: rulerGroup,\n    error: rulerGroupError,\n    isFetching: isRulerGroupFetching,\n    isError: isRulerGroupError,\n  } = useGetRuleGroupForNamespaceQuery(\n    dsFeatures?.rulerConfig\n      ? {\n          rulerConfig: dsFeatures?.rulerConfig,\n          namespace: namespaceName,\n          group: groupName,\n        }\n      : skipToken\n  );\n\n  const isLoading = isPromResponseLoading || isDsFeaturesLoading || isRulerGroupFetching;\n  if (isLoading) {\n    return (\n      <>\n        {Array.from({ length: expectedRulesCount }).map((_, index) => (\n          <AlertRuleListItemSkeleton key={index} />\n        ))}\n      </>\n    );\n  }\n\n  const isError = isPromResponseError || isDsFeaturesError || isRulerGroupError;\n  if (isError) {\n    if (isFetchError(rulerGroupError) && rulerGroupError.status === 404) {\n      return (\n        <Alert severity=\"warning\" title={t('alerting.ds-group-loader.group-deleting', 'The group is being deleted')} />\n      );\n    }\n\n    return (\n      <Alert\n        title={t(\n          'alerting.ds-group-loader.group-load-failed',\n          'Failed to load rules from group {{ groupName }} in {{ namespaceName }}',\n          { groupName, namespaceName }\n        )}\n        severity=\"error\"\n      />\n    );\n  }\n\n  // There should be always only one group in the response but some Prometheus-compatible data sources\n  // implement different filter parameters\n  const promGroup = promResponse?.data.groups.find((g) => g.file === namespaceName && g.name === groupName);\n  if (dsFeatures?.rulerConfig && rulerGroup && isCloudRulerGroup(rulerGroup) && promGroup) {\n    return (\n      <RulerBasedGroupRules\n        groupIdentifier={groupIdentifier}\n        promGroup={promGroup}\n        rulerGroup={rulerGroup}\n        application={dsFeatures.application}\n      />\n    );\n  }\n\n  // Data source without ruler\n  if (promGroup) {\n    return (\n      <>\n        {promGroup.rules.map((rule) => (\n          <DataSourceRuleListItem\n            key={hashRule(rule)}\n            rule={rule}\n            groupIdentifier={groupIdentifier}\n            application={dsFeatures?.application}\n          />\n        ))}\n      </>\n    );\n  }\n\n  // This should never happen\n  return (\n    <Alert\n      title={t(\n        'alerting.ds-group-loader.group-load-failed',\n        'Failed to load rules from group {{ groupName }} in {{ namespaceName }}',\n        { groupName, namespaceName }\n      )}\n      severity=\"warning\"\n    />\n  );\n}\n\ninterface RulerBasedGroupRulesProps {\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n  promGroup: PromRuleGroupDTO<PromRuleDTO>;\n  rulerGroup: RulerRuleGroupDTO<RulerCloudRuleDTO>;\n  application: RulesSourceApplication;\n}\n\nexport function RulerBasedGroupRules({\n  groupIdentifier,\n  application,\n  promGroup,\n  rulerGroup,\n}: RulerBasedGroupRulesProps) {\n  const { namespace, groupName } = groupIdentifier;\n\n  const { matches, promOnlyRules } = useMemo(() => {\n    return matchRulesGroup(rulerGroup, promGroup);\n  }, [promGroup, rulerGroup]);\n\n  return (\n    <>\n      {rulerGroup.rules.map((rulerRule) => {\n        const promRule = matches.get(rulerRule);\n\n        return promRule ? (\n          <DataSourceRuleListItem\n            key={hashRule(promRule)}\n            rule={promRule}\n            rulerRule={rulerRule}\n            groupIdentifier={groupIdentifier}\n            application={application}\n            actions={\n              <RuleActionsButtons rule={rulerRule} promRule={promRule} groupIdentifier={groupIdentifier} compact />\n            }\n          />\n        ) : (\n          <RuleOperationListItem\n            key={getRuleName(rulerRule)}\n            name={getRuleName(rulerRule)}\n            namespace={namespace.name}\n            group={groupName}\n            rulesSource={groupIdentifier.rulesSource}\n            application={application}\n            operation={RuleOperation.Creating}\n          />\n        );\n      })}\n      {promOnlyRules.map((rule) => (\n        <RuleOperationListItem\n          key={rule.name}\n          name={rule.name}\n          namespace={namespace.name}\n          group={groupName}\n          rulesSource={groupIdentifier.rulesSource}\n          application={application}\n          operation={RuleOperation.Deleting}\n        />\n      ))}\n    </>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Badge, Button, Dropdown, Icon, Menu, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { MetaText } from '../../components/MetaText';\nimport MoreButton from '../../components/MoreButton';\nimport { Spacer } from '../../components/Spacer';\n\ninterface EvaluationGroupProps extends PropsWithChildren {\n  name: string;\n  interval?: string;\n  provenance?: string;\n  isOpen?: boolean;\n  onToggle: () => void;\n}\n\nexport const EvaluationGroup = ({\n  name,\n  provenance,\n  interval,\n  onToggle,\n  isOpen = false,\n  children,\n}: EvaluationGroupProps) => {\n  const styles = useStyles2(getStyles);\n  const isProvisioned = Boolean(provenance);\n\n  return (\n    <Stack direction=\"column\" role=\"treeitem\" aria-expanded={isOpen} aria-selected=\"false\" gap={0}>\n      <div className={styles.headerWrapper}>\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <button className={cx(styles.hiddenButton, styles.largerClickTarget)} type=\"button\" onClick={onToggle}>\n            <Stack alignItems=\"center\" gap={0.5}>\n              <Icon name={isOpen ? 'angle-down' : 'angle-right'} />\n              <Text truncate variant=\"body\">\n                {name}\n              </Text>\n            </Stack>\n          </button>\n          {isProvisioned && (\n            <Badge color=\"purple\" text={t('alerting.evaluation-group.text-provisioned', 'Provisioned')} />\n          )}\n          <Spacer />\n          {interval && <MetaText icon=\"history\">{interval}</MetaText>}\n          <Button size=\"sm\" icon=\"pen\" variant=\"secondary\" disabled={isProvisioned} data-testid=\"edit-group-action\">\n            <Trans i18nKey=\"common.edit\">Edit</Trans>\n          </Button>\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  label={t('alerting.evaluation-group.label-reorder-rules', 'Re-order rules')}\n                  icon=\"flip\"\n                  disabled={isProvisioned}\n                />\n                <Menu.Divider />\n                <Menu.Item label={t('alerting.evaluation-group.label-export', 'Export')} icon=\"download-alt\" />\n                <Menu.Item\n                  label={t('alerting.evaluation-group.label-delete', 'Delete')}\n                  icon=\"trash-alt\"\n                  destructive\n                  disabled={isProvisioned}\n                />\n              </Menu>\n            }\n          >\n            <MoreButton size=\"sm\" />\n          </Dropdown>\n        </Stack>\n      </div>\n      {isOpen && <div role=\"group\">{children}</div>}\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  headerWrapper: css({\n    padding: `${theme.spacing(1)} ${theme.spacing(1)}`,\n\n    background: theme.colors.background.secondary,\n\n    border: 'none',\n    borderBottom: `solid 1px ${theme.colors.border.weak}`,\n    borderTopLeftRadius: theme.shape.radius.default,\n    borderTopRightRadius: theme.shape.radius.default,\n  }),\n  hiddenButton: css({\n    border: 'none',\n    background: 'transparent',\n  }),\n  largerClickTarget: css({\n    padding: theme.spacing(0.5),\n    margin: `-${theme.spacing(0.5)}`,\n  }),\n});\n","import { useEffect } from 'react';\nimport { useMeasure, useToggle } from 'react-use';\n\nimport { Alert, LoadingBar, Pagination } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { RulerDataSourceConfig } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../../api/alertRuleApi';\nimport { usePagination } from '../../hooks/usePagination';\nimport { Annotation } from '../../utils/constants';\nimport { prometheusRuleType } from '../../utils/rules';\n\nimport { AlertRuleListItem } from './AlertRuleListItem';\nimport { EvaluationGroup } from './EvaluationGroup';\nimport { SkeletonListItem } from './ListItem';\n\ninterface EvaluationGroupLoaderProps {\n  name: string;\n  interval?: string;\n  provenance?: string;\n  namespace: string;\n  rulerConfig?: RulerDataSourceConfig;\n}\n\nconst ALERT_RULE_PAGE_SIZE = 15;\n\nexport const EvaluationGroupLoader = ({\n  name,\n  provenance,\n  interval,\n  namespace,\n  rulerConfig,\n}: EvaluationGroupLoaderProps) => {\n  const [isOpen, toggle] = useToggle(false);\n\n  // TODO use Prometheus endpoint here?\n  const [fetchRulerRuleGroup, { currentData: promNamespace, isLoading, error }] =\n    alertRuleApi.endpoints.prometheusRuleNamespaces.useLazyQuery();\n\n  const promRules = promNamespace?.flatMap((namespace) => namespace.groups).flatMap((groups) => groups.rules);\n  const { page, pageItems, onPageChange, numberOfPages } = usePagination(promRules ?? [], 1, ALERT_RULE_PAGE_SIZE);\n\n  useEffect(() => {\n    if (isOpen && rulerConfig) {\n      fetchRulerRuleGroup({\n        namespace,\n        groupName: name,\n        ruleSourceName: rulerConfig.dataSourceName,\n      });\n    }\n  }, [fetchRulerRuleGroup, isOpen, name, namespace, rulerConfig]);\n\n  return (\n    <EvaluationGroup name={name} interval={interval} provenance={provenance} isOpen={isOpen} onToggle={toggle}>\n      {/* @TODO nicer error handling */}\n      {error ? (\n        <Alert\n          title={t(\n            'alerting.evaluation-group-loader.title-something-wrong-trying-fetch-group-details',\n            'Something went wrong when trying to fetch group details'\n          )}\n        >\n          {String(error)}\n        </Alert>\n      ) : (\n        <>\n          {isLoading ? (\n            <GroupLoadingIndicator />\n          ) : (\n            pageItems.map((rule, index) => {\n              <AlertRuleListItem\n                key={index}\n                state={PromAlertingRuleState.Inactive}\n                name={rule.name}\n                href={'/'}\n                summary={prometheusRuleType.alertingRule(rule) ? rule.annotations?.[Annotation.summary] : undefined}\n              />;\n\n              return null;\n            })\n          )}\n          {numberOfPages > 1 && (\n            <Pagination currentPage={page} numberOfPages={numberOfPages} onNavigate={onPageChange} />\n          )}\n        </>\n      )}\n    </EvaluationGroup>\n  );\n};\n\nexport const LoadingIndicator = ({ datasourceUid }: { datasourceUid: string }) => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n\n  return (\n    <div ref={ref} data-testid={`ds-loading-indicator-${datasourceUid}`}>\n      <LoadingBar width={width} />\n    </div>\n  );\n};\n\nconst GroupLoadingIndicator = () => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      <LoadingBar width={width} />\n      <SkeletonListItem />\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, LinkButton, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { GrafanaRulesSourceSymbol, RulesSourceIdentifier } from 'app/types/unified-alerting';\nimport { RulesSourceApplication } from 'app/types/unified-alerting-dto';\n\nimport { Spacer } from '../../components/Spacer';\nimport { WithReturnButton } from '../../components/WithReturnButton';\nimport { supportedImportTypes } from '../../components/import-to-gma/ImportFromDSRules';\nimport { useRulesSourcesWithRuler } from '../../hooks/useRuleSourcesWithRuler';\nimport { isAdmin } from '../../utils/misc';\n\nimport { DataSourceIcon } from './Namespace';\nimport { LoadingIndicator } from './RuleGroup';\n\nexport interface DataSourceSectionProps extends PropsWithChildren {\n  uid: RulesSourceIdentifier['uid'];\n  name: string;\n  loader?: ReactNode;\n  application?: RulesSourceApplication;\n  isLoading?: boolean;\n  description?: ReactNode;\n}\n\nexport const DataSourceSection = ({\n  uid,\n  name,\n  application,\n  children,\n  loader,\n  isLoading = false,\n  description = null,\n}: DataSourceSectionProps) => {\n  const styles = useStyles2(getStyles);\n  const { rulesSourcesWithRuler } = useRulesSourcesWithRuler();\n\n  const showImportLink =\n    uid !== GrafanaRulesSourceSymbol &&\n    rulesSourcesWithRuler.some(({ uid: dsUid, type }) => dsUid === uid && supportedImportTypes.includes(type));\n\n  const [isCollapsed, toggleCollapsed] = useToggle(false);\n  const configureLink = (() => {\n    if (uid === GrafanaRulesSourceSymbol) {\n      const userIsAdmin = isAdmin();\n      if (!userIsAdmin) {\n        return;\n      }\n      return '/alerting/admin';\n    }\n    return `/connections/datasources/edit/${String(uid)}`;\n  })();\n  return (\n    <section aria-labelledby={`datasource-${String(uid)}-heading`} role=\"listitem\">\n      <Stack direction=\"column\" gap={1}>\n        <Stack direction=\"column\" gap={0}>\n          {isLoading && <LoadingIndicator datasourceUid={String(uid)} />}\n          <div className={styles.dataSourceSectionTitle}>\n            {loader ?? (\n              <Stack alignItems=\"center\">\n                <IconButton\n                  name={isCollapsed ? 'angle-right' : 'angle-down'}\n                  onClick={toggleCollapsed}\n                  aria-label={t('common.collapse', 'Collapse')}\n                />\n                {application && <DataSourceIcon application={application} />}\n\n                <Text variant=\"body\" weight=\"bold\" element=\"h2\" id={`datasource-${String(uid)}-heading`}>\n                  {name}\n                </Text>\n                {description && (\n                  <>\n                    {'·'}\n                    {description}\n                  </>\n                )}\n                <Spacer />\n                {showImportLink && (\n                  <LinkButton\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    href={`/alerting/import-datasource-managed-rules?datasourceUid=${String(uid)}`}\n                    icon=\"arrow-up\"\n                  >\n                    <Trans i18nKey=\"alerting.data-source-section.import-to-grafana\">Import to Grafana rules</Trans>\n                  </LinkButton>\n                )}\n                {configureLink && (\n                  <WithReturnButton\n                    title={t('alerting.rule-list.return-button.title', 'Alert rules')}\n                    component={\n                      <LinkButton variant=\"secondary\" size=\"sm\" href={configureLink}>\n                        <Trans i18nKey=\"alerting.rule-list.configure-datasource\">Configure</Trans>\n                      </LinkButton>\n                    }\n                  />\n                )}\n              </Stack>\n            )}\n          </div>\n        </Stack>\n        {!isCollapsed && <div className={styles.itemsWrapper}>{children}</div>}\n      </Stack>\n    </section>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  itemsWrapper: css({\n    position: 'relative',\n    marginLeft: theme.spacing(1.5),\n\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      height: '100%',\n\n      marginLeft: `-${theme.spacing(1.5)}`,\n      borderLeft: `solid 1px ${theme.colors.border.weak}`,\n    },\n  }),\n  dataSourceSectionTitle: css({\n    background: theme.colors.background.secondary,\n    padding: `${theme.spacing(1)} ${theme.spacing(1.5)}`,\n\n    border: `solid 1px ${theme.colors.border.weak}`,\n    borderRadius: theme.shape.radius.default,\n  }),\n});\n","import { Button, Icon, Stack } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\ninterface LazyPaginationProps {\n  canMoveForward: boolean;\n  canMoveBackward: boolean;\n  nextPage: () => void;\n  previousPage: () => void;\n}\n\nexport function LazyPagination({ canMoveForward, canMoveBackward, nextPage, previousPage }: LazyPaginationProps) {\n  return (\n    <Stack direction=\"row\" gap={1}>\n      <Button\n        aria-label={t('alerting.rule-list.pagination.previous-page', 'previous page')}\n        size=\"sm\"\n        variant=\"secondary\"\n        onClick={previousPage}\n        disabled={!canMoveBackward}\n      >\n        <Icon name=\"angle-left\" />\n      </Button>\n      <Button\n        aria-label={t('alerting.rule-list.pagination.next-page', 'next page')}\n        size=\"sm\"\n        variant=\"secondary\"\n        onClick={nextPage}\n        disabled={!canMoveForward}\n      >\n        <Icon name=\"angle-right\" />\n      </Button>\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, Stack, Text, TextLink, useStyles2 } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nimport { Spacer } from '../../components/Spacer';\n\ninterface GroupProps extends PropsWithChildren {\n  name: string;\n  description?: ReactNode;\n  metaRight?: ReactNode;\n  actions?: ReactNode;\n  isOpen?: boolean;\n  href?: string;\n}\n\nexport const ListGroup = ({\n  name,\n  description,\n  isOpen = true,\n  metaRight = null,\n  actions = null,\n  href,\n  children,\n}: GroupProps) => {\n  const styles = useStyles2(getStyles);\n  const [open, toggle] = useToggle(isOpen);\n\n  return (\n    <div className={styles.groupWrapper} role=\"treeitem\" aria-expanded={open} aria-selected=\"false\">\n      <GroupHeader\n        onToggle={() => toggle()}\n        isOpen={open}\n        description={description}\n        name={name}\n        metaRight={metaRight}\n        actions={actions}\n        href={href}\n      />\n      {open && <div role=\"group\">{children}</div>}\n    </div>\n  );\n};\n\ntype GroupHeaderProps = GroupProps & {\n  onToggle: () => void;\n};\n\nconst GroupHeader = (props: GroupHeaderProps) => {\n  const { name, description, metaRight = null, actions = null, isOpen = false, onToggle, href } = props;\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.headerWrapper}>\n      <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n        <Stack alignItems=\"center\" gap={0}>\n          <IconButton\n            name={isOpen ? 'angle-down' : 'angle-right'}\n            onClick={onToggle}\n            aria-label={t('common.collapse', 'Collapse')}\n          />\n          {href ? (\n            <TextLink href={href} color=\"primary\" inline={false}>\n              {name}\n            </TextLink>\n          ) : (\n            <Text truncate variant=\"body\" element=\"h4\">\n              {name}\n            </Text>\n          )}\n        </Stack>\n\n        {description}\n        <Spacer />\n        {metaRight}\n        {actions}\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  groupWrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n  }),\n  headerWrapper: css({\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`,\n\n    background: theme.colors.background.secondary,\n\n    border: 'none',\n    borderBottom: `solid 1px ${theme.colors.border.weak}`,\n    borderTopLeftRadius: theme.shape.radius.default,\n    borderTopRightRadius: theme.shape.radius.default,\n  }),\n});\n","import { css, keyframes } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Tooltip, useStyles2 } from '@grafana/ui';\n\ninterface GroupStatusProps {\n  status: 'deleting'; // We don't support other statuses yet\n}\n\nexport function GroupStatus({ status }: GroupStatusProps) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.loader} />\n      {status === 'deleting' && (\n        <Tooltip content=\"The group is being deleted\">\n          <div className={styles.iconWrapper}>\n            <Icon name=\"trash-alt\" size=\"sm\" />\n          </div>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst rotation = keyframes({\n  '0%': {\n    transform: 'rotate(0deg)',\n  },\n  '100%': {\n    transform: 'rotate(360deg)',\n  },\n});\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    position: 'relative',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: theme.spacing(0.5),\n  }),\n\n  loader: css({\n    position: 'absolute',\n    inset: `-${theme.spacing(0.5)}`,\n    border: '2px solid #FFF',\n    borderRadius: theme.shape.radius.circle,\n    boxSizing: 'border-box',\n    [theme.transitions.handleMotion('no-preference')]: {\n      animationName: rotation,\n      animationIterationCount: 'infinite',\n      animationDuration: '1s',\n      animationTimingFunction: 'linear',\n    },\n\n    '&::after': {\n      content: '\"\"',\n      boxSizing: 'border-box',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: 'calc(100% + 4px)',\n      height: 'calc(100% + 4px)',\n      borderRadius: theme.shape.radius.circle,\n      border: '2px solid transparent',\n      borderBottomColor: theme.colors.action.selectedBorder,\n    },\n  }),\n\n  iconWrapper: css({\n    position: 'relative',\n    zIndex: 1,\n    display: 'flex',\n  }),\n\n  '@keyframes rotation': {\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  },\n});\n","import { skipToken } from '@reduxjs/toolkit/query';\n\nimport { isFetchError } from '@grafana/runtime';\nimport { Dropdown, Icon, IconButton, LinkButton, Menu } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { DataSourceRuleGroupIdentifier, GrafanaRuleGroupIdentifier } from 'app/types/unified-alerting';\n\nimport { alertRuleApi } from '../../api/alertRuleApi';\nimport { featureDiscoveryApi } from '../../api/featureDiscoveryApi';\nimport { useFolder } from '../../hooks/useFolder';\nimport { useRulesAccess } from '../../utils/accessControlHooks';\nimport { GRAFANA_RULES_SOURCE_NAME, getRulesDataSourceByUID } from '../../utils/datasource';\nimport { groups } from '../../utils/navigation';\nimport { isFederatedRuleGroup, isPluginProvidedGroup, isProvisionedRuleGroup } from '../../utils/rules';\n\nimport { GroupStatus } from './GroupStatus';\nimport { RuleActionsSkeleton } from './RuleActionsSkeleton';\n\nconst { useGetGrafanaRulerGroupQuery, useGetRuleGroupForNamespaceQuery } = alertRuleApi;\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\n\ninterface DataSourceGroupsActionMenuProps {\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n}\n\ninterface GrafanaGroupsActionMenuProps {\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n}\n\ntype RuleGroupActionsMenuProps = DataSourceGroupsActionMenuProps | GrafanaGroupsActionMenuProps;\n\nexport function RuleGroupActionsMenu({ groupIdentifier }: RuleGroupActionsMenuProps) {\n  switch (groupIdentifier.groupOrigin) {\n    case 'grafana':\n      return <GrafanaGroupsActionMenu groupIdentifier={groupIdentifier} />;\n    case 'datasource':\n      return <DataSourceGroupsActionMenu groupIdentifier={groupIdentifier} />;\n    default:\n      return null;\n  }\n}\n\nfunction DataSourceGroupsActionMenu({ groupIdentifier }: DataSourceGroupsActionMenuProps) {\n  const { canEditRules } = useRulesAccess();\n  const { data: dataSourceInfo } = useDiscoverDsFeaturesQuery({ uid: groupIdentifier.rulesSource.uid });\n\n  const {\n    data: rulerRuleGroup,\n    error: rulerGroupError,\n    isLoading: isRulerGroupLoading,\n  } = useGetRuleGroupForNamespaceQuery(\n    dataSourceInfo?.rulerConfig\n      ? {\n          namespace: groupIdentifier.namespace.name,\n          group: groupIdentifier.groupName,\n          rulerConfig: dataSourceInfo?.rulerConfig!,\n        }\n      : skipToken\n  );\n\n  const isFederated = rulerRuleGroup ? isFederatedRuleGroup(rulerRuleGroup) : false;\n  const isPluginProvided = rulerRuleGroup ? isPluginProvidedGroup(rulerRuleGroup) : false;\n\n  const canEdit = !isFederated && !isPluginProvided && canEditRules(groupIdentifier.rulesSource.name);\n  const rulesSource = getRulesDataSourceByUID(groupIdentifier.rulesSource.uid);\n\n  if (!rulesSource) {\n    // This should never happen\n    return null;\n  }\n\n  // We don't provide any actions if the data source doesn't support ruler\n  if (!dataSourceInfo?.rulerConfig) {\n    return null;\n  }\n\n  if (isRulerGroupLoading) {\n    return <RuleActionsSkeleton />;\n  }\n\n  if (rulerGroupError) {\n    if (isFetchError(rulerGroupError) && rulerGroupError.status === 404) {\n      return <GroupStatus status=\"deleting\" />;\n    }\n\n    return (\n      <Icon\n        name=\"exclamation-triangle\"\n        title={t('alerting.group-actions-menu.group-load-failed', 'Failed to load group details')}\n      />\n    );\n  }\n\n  // This should never happen. Loading and error states are handled above\n  if (!rulerRuleGroup) {\n    return <Icon name=\"exclamation-triangle\" title={t('alerting.group-actions-menu.unknown-error', 'Unknown error')} />;\n  }\n\n  return (\n    <Dropdown\n      placement=\"right-start\"\n      overlay={\n        <Menu>\n          <Menu.Item\n            label={t('alerting.group-actions.details', 'Details')}\n            icon=\"info-circle\"\n            data-testid=\"details-group-action\"\n            url={groups.detailsPageLink(rulesSource.uid, groupIdentifier.namespace.name, groupIdentifier.groupName)}\n          />\n          {canEdit && (\n            <Menu.Item\n              label={t('alerting.group-actions.edit', 'Edit')}\n              icon=\"pen\"\n              data-testid=\"edit-group-action\"\n              url={groups.editPageLink(rulesSource.uid, groupIdentifier.namespace.name, groupIdentifier.groupName)}\n            />\n          )}\n        </Menu>\n      }\n    >\n      <IconButton name=\"ellipsis-h\" aria-label={t('alerting.group-actions.actions-trigger', 'Rule group actions')} />\n    </Dropdown>\n  );\n}\n\nfunction GrafanaGroupsActionMenu({ groupIdentifier }: GrafanaGroupsActionMenuProps) {\n  const { canEditRules } = useRulesAccess();\n  const { data: rulerRuleGroup } = useGetGrafanaRulerGroupQuery({\n    folderUid: groupIdentifier.namespace.uid,\n    groupName: groupIdentifier.groupName,\n  });\n\n  const isProvisioned = rulerRuleGroup ? isProvisionedRuleGroup(rulerRuleGroup) : false;\n  const isPluginProvided = rulerRuleGroup ? isPluginProvidedGroup(rulerRuleGroup) : false;\n\n  const folderUid = groupIdentifier.namespace.uid;\n  const { folder } = useFolder(folderUid);\n\n  const canEdit = folder?.canSave && !isProvisioned && !isPluginProvided && canEditRules(GRAFANA_RULES_SOURCE_NAME);\n\n  if (!canEdit) {\n    return null;\n  }\n\n  return (\n    <LinkButton\n      icon=\"pen\"\n      variant=\"secondary\"\n      size=\"sm\"\n      href={groups.editPageLink(GRAFANA_RULES_SOURCE_NAME, folderUid, groupIdentifier.groupName)}\n    >\n      {t('alerting.group-actions.edit', 'Edit')}\n    </LinkButton>\n  );\n}\n","import { useCallback, useMemo, useState } from 'react';\n\nimport { PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { isLoading, useAsync } from '../../hooks/useAsync';\n\n/**\n * Provides pagination functionality for rule groups with lazy loading.\n * Instead of loading all groups at once, it uses a generator to fetch them in batches as needed,\n * which helps with performance when dealing with large numbers of rules.\n *\n * @param groupsGenerator - An async generator that yields rule groups in batches\n * @param pageSize - Number of groups to display per page\n * @returns Pagination state and controls for navigating through rule groups\n */\nexport function usePaginatedPrometheusGroups<TGroup extends PromRuleGroupDTO>(\n  groupsGenerator: AsyncIterator<TGroup>,\n  pageSize: number\n) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [groups, setGroups] = useState<TGroup[]>([]);\n  const [lastPage, setLastPage] = useState<number | undefined>(undefined);\n\n  const [{ execute: fetchMoreGroups }, groupsRequestState] = useAsync(async (groupsCount: number) => {\n    let done = false;\n    const currentGroups: TGroup[] = [];\n\n    while (currentGroups.length < groupsCount) {\n      const generatorResult = await groupsGenerator.next();\n      if (generatorResult.done) {\n        done = true;\n        break;\n      }\n      const group = generatorResult.value;\n      currentGroups.push(group);\n    }\n\n    if (done) {\n      const groupsTotal = groups.length + currentGroups.length;\n      setLastPage(Math.ceil(groupsTotal / pageSize));\n    }\n\n    setGroups((groups) => [...groups, ...currentGroups]);\n  });\n\n  // lastPage could be computed from groups.length and pageSize\n  const fetchInProgress = isLoading(groupsRequestState);\n  const canMoveForward = !fetchInProgress && (!lastPage || currentPage < lastPage);\n  // When going backward we already have the groups loaded, so no need to check if fetchInProgress\n  const canMoveBackward = currentPage > 1;\n\n  const nextPage = useCallback(async () => {\n    if (canMoveForward) {\n      setCurrentPage((page) => page + 1);\n    }\n  }, [canMoveForward]);\n\n  const previousPage = useCallback(async () => {\n    if (canMoveBackward) {\n      setCurrentPage((page) => page - 1);\n    }\n  }, [canMoveBackward]);\n\n  // groups.length - pageSize to have one more page loaded to prevent flickering with loading state\n  // lastPage === undefined because 0 is falsy but a value which should stop fetching (e.g for broken data sources)\n  const shouldFetchNextPage = groups.length - pageSize < pageSize * currentPage && lastPage === undefined;\n\n  if (shouldFetchNextPage && !fetchInProgress) {\n    fetchMoreGroups(pageSize);\n  }\n\n  const groupsPage = useMemo(() => {\n    return groups.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  }, [groups, currentPage, pageSize]);\n\n  return { isLoading: fetchInProgress, page: groupsPage, nextPage, previousPage, canMoveForward, canMoveBackward };\n}\n","import { groupBy } from 'lodash';\nimport { useEffect, useMemo, useRef } from 'react';\n\nimport { Icon, Stack, Text } from '@grafana/ui';\nimport { DataSourceRuleGroupIdentifier, DataSourceRulesSourceIdentifier, RuleGroup } from 'app/types/unified-alerting';\n\nimport { groups } from '../utils/navigation';\n\nimport { DataSourceGroupLoader } from './DataSourceGroupLoader';\nimport { DataSourceSection, DataSourceSectionProps } from './components/DataSourceSection';\nimport { LazyPagination } from './components/LazyPagination';\nimport { ListGroup } from './components/ListGroup';\nimport { ListSection } from './components/ListSection';\nimport { RuleGroupActionsMenu } from './components/RuleGroupActionsMenu';\nimport { toIndividualRuleGroups, usePrometheusGroupsGenerator } from './hooks/prometheusGroupsGenerator';\nimport { usePaginatedPrometheusGroups } from './hooks/usePaginatedPrometheusGroups';\n\nconst DATA_SOURCE_GROUP_PAGE_SIZE = 40;\n\ninterface PaginatedDataSourceLoaderProps extends Required<Pick<DataSourceSectionProps, 'application'>> {\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n}\n\nexport function PaginatedDataSourceLoader({ rulesSourceIdentifier, application }: PaginatedDataSourceLoaderProps) {\n  const { uid, name } = rulesSourceIdentifier;\n  const prometheusGroupsGenerator = usePrometheusGroupsGenerator({ populateCache: true });\n\n  const groupsGenerator = useRef(\n    toIndividualRuleGroups(prometheusGroupsGenerator(rulesSourceIdentifier, DATA_SOURCE_GROUP_PAGE_SIZE))\n  );\n\n  useEffect(() => {\n    const currentGenerator = groupsGenerator.current;\n    return () => {\n      currentGenerator.return();\n    };\n  }, [groupsGenerator]);\n\n  const {\n    page: groupsPage,\n    nextPage,\n    previousPage,\n    canMoveForward,\n    canMoveBackward,\n    isLoading,\n  } = usePaginatedPrometheusGroups(groupsGenerator.current, DATA_SOURCE_GROUP_PAGE_SIZE);\n\n  const groupsByNamespace = useMemo(() => groupBy(groupsPage, 'file'), [groupsPage]);\n\n  return (\n    <DataSourceSection name={name} application={application} uid={uid} isLoading={isLoading}>\n      <Stack direction=\"column\" gap={1}>\n        {Object.entries(groupsByNamespace).map(([namespace, groups]) => (\n          <ListSection\n            key={namespace}\n            title={\n              <Stack direction=\"row\" gap={1} alignItems=\"center\">\n                <Icon name=\"folder\" />{' '}\n                <Text variant=\"body\" element=\"h3\">\n                  {namespace}\n                </Text>\n              </Stack>\n            }\n          >\n            {groups.map((group) => (\n              <RuleGroupListItem\n                key={`${rulesSourceIdentifier.uid}-${namespace}-${group.name}`}\n                group={group}\n                rulesSourceIdentifier={rulesSourceIdentifier}\n                namespaceName={namespace}\n              />\n            ))}\n          </ListSection>\n        ))}\n        <LazyPagination\n          nextPage={nextPage}\n          previousPage={previousPage}\n          canMoveForward={canMoveForward}\n          canMoveBackward={canMoveBackward}\n        />\n      </Stack>\n    </DataSourceSection>\n  );\n}\n\ninterface RuleGroupListItemProps {\n  group: RuleGroup;\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n  namespaceName: string;\n}\n\nfunction RuleGroupListItem({ rulesSourceIdentifier, group, namespaceName }: RuleGroupListItemProps) {\n  const groupIdentifier: DataSourceRuleGroupIdentifier = useMemo(\n    () => ({\n      rulesSource: rulesSourceIdentifier,\n      namespace: { name: namespaceName },\n      groupName: group.name,\n      groupOrigin: 'datasource',\n    }),\n    [rulesSourceIdentifier, namespaceName, group.name]\n  );\n\n  return (\n    <ListGroup\n      key={group.name}\n      name={group.name}\n      href={groups.detailsPageLink(rulesSourceIdentifier.uid, namespaceName, group.name)}\n      isOpen={false}\n      actions={<RuleGroupActionsMenu groupIdentifier={groupIdentifier} />}\n    >\n      <DataSourceGroupLoader groupIdentifier={groupIdentifier} expectedRulesCount={group.rules.length} />\n    </ListGroup>\n  );\n}\n","import { useMemo } from 'react';\n\nimport { Alert } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { GrafanaRuleGroupIdentifier } from 'app/types/unified-alerting';\nimport { GrafanaPromRuleDTO, RulerGrafanaRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { prometheusApi } from '../api/prometheusApi';\nimport { RULE_LIST_POLL_INTERVAL_MS } from '../utils/constants';\nimport { GrafanaRulesSource } from '../utils/datasource';\n\nimport { GrafanaRuleListItem } from './GrafanaRuleLoader';\nimport { RuleOperationListItem } from './components/AlertRuleListItem';\nimport { AlertRuleListItemSkeleton } from './components/AlertRuleListItemLoader';\nimport { RuleOperation } from './components/RuleListIcon';\n\nconst { useGetGrafanaRulerGroupQuery } = alertRuleApi;\nconst { useGetGrafanaGroupsQuery } = prometheusApi;\n\nexport interface GrafanaGroupLoaderProps {\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  namespaceName: string;\n  /**\n   * Used to display the same number of skeletons as there are rules\n   * The number of rules is typically known from paginated Prometheus response\n   * Ruler response might contain different number of rules, but in most cases what we get from Prometheus is fine\n   */\n  expectedRulesCount?: number;\n}\n\n/**\n * Loads an evaluation group from Prometheus and Ruler endpoints.\n * Displays a loading skeleton while the data is being fetched.\n * Polls the Prometheus endpoint every 20 seconds to refresh the data.\n */\nexport function GrafanaGroupLoader({\n  groupIdentifier,\n  namespaceName,\n  expectedRulesCount = 3, // 3 is a random number. Usually we get the number of rules from Prometheus response\n}: GrafanaGroupLoaderProps) {\n  const { data: promResponse, isLoading: isPromResponseLoading } = useGetGrafanaGroupsQuery(\n    {\n      folderUid: groupIdentifier.namespace.uid,\n      groupName: groupIdentifier.groupName,\n    },\n    { pollingInterval: RULE_LIST_POLL_INTERVAL_MS }\n  );\n  const { data: rulerResponse, isLoading: isRulerGroupLoading } = useGetGrafanaRulerGroupQuery({\n    folderUid: groupIdentifier.namespace.uid,\n    groupName: groupIdentifier.groupName,\n  });\n\n  const { matches, promOnlyRules } = useMemo(() => {\n    const promRules = promResponse?.data.groups.at(0)?.rules ?? [];\n    const rulerRules = rulerResponse?.rules ?? [];\n\n    return matchRules(promRules, rulerRules);\n  }, [promResponse, rulerResponse]);\n\n  const isLoading = isPromResponseLoading || isRulerGroupLoading;\n  if (isLoading) {\n    return (\n      <>\n        {Array.from({ length: expectedRulesCount }).map((_, index) => (\n          <AlertRuleListItemSkeleton key={index} />\n        ))}\n      </>\n    );\n  }\n\n  if (!rulerResponse || !promResponse) {\n    return (\n      <Alert\n        title={t(\n          'alerting.group-loader.group-load-failed',\n          'Failed to load rules from group {{ groupName }} in {{ namespaceName }}',\n          { groupName: groupIdentifier.groupName, namespaceName }\n        )}\n        severity=\"error\"\n      />\n    );\n  }\n\n  return (\n    <>\n      {rulerResponse.rules.map((rulerRule) => {\n        const promRule = matches.get(rulerRule);\n\n        if (!promRule) {\n          return (\n            <GrafanaRuleListItem\n              key={rulerRule.grafana_alert.uid}\n              rule={promRule}\n              rulerRule={rulerRule}\n              groupIdentifier={groupIdentifier}\n              namespaceName={namespaceName}\n              operation={RuleOperation.Creating}\n            />\n          );\n        }\n\n        return (\n          <GrafanaRuleListItem\n            key={promRule.uid}\n            rule={promRule}\n            rulerRule={rulerRule}\n            groupIdentifier={groupIdentifier}\n            namespaceName={namespaceName}\n          />\n        );\n      })}\n      {promOnlyRules.map((rule) => (\n        <RuleOperationListItem\n          key={rule.uid}\n          name={rule.name}\n          namespace={namespaceName}\n          group={groupIdentifier.groupName}\n          rulesSource={GrafanaRulesSource}\n          application=\"grafana\"\n          operation={RuleOperation.Deleting}\n        />\n      ))}\n    </>\n  );\n}\n\ninterface MatchingResult {\n  matches: Map<RulerGrafanaRuleDTO, GrafanaPromRuleDTO>;\n  /**\n   * Rules that were already removed from the Ruler but the changes has not been yet propagated to Prometheus\n   */\n  promOnlyRules: GrafanaPromRuleDTO[];\n}\n\nexport function matchRules(\n  promRules: GrafanaPromRuleDTO[],\n  rulerRules: RulerGrafanaRuleDTO[]\n): Readonly<MatchingResult> {\n  const promRulesMap = new Map(promRules.map((rule) => [rule.uid, rule]));\n\n  const matchingResult = rulerRules.reduce<MatchingResult>(\n    (acc, rulerRule) => {\n      const { matches } = acc;\n      const promRule = promRulesMap.get(rulerRule.grafana_alert.uid);\n      if (promRule) {\n        matches.set(rulerRule, promRule);\n        promRulesMap.delete(rulerRule.grafana_alert.uid);\n      }\n      return acc;\n    },\n    { matches: new Map(), promOnlyRules: [] }\n  );\n\n  matchingResult.promOnlyRules.push(...promRulesMap.values());\n\n  return matchingResult;\n}\n","import { groupBy } from 'lodash';\nimport { useEffect, useMemo, useRef } from 'react';\n\nimport { Icon, Stack, Text } from '@grafana/ui';\nimport { GrafanaRuleGroupIdentifier, GrafanaRulesSourceSymbol } from 'app/types/unified-alerting';\nimport { GrafanaPromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\nimport { groups } from '../utils/navigation';\n\nimport { GrafanaGroupLoader } from './GrafanaGroupLoader';\nimport { DataSourceSection } from './components/DataSourceSection';\nimport { LazyPagination } from './components/LazyPagination';\nimport { ListGroup } from './components/ListGroup';\nimport { ListSection } from './components/ListSection';\nimport { RuleGroupActionsMenu } from './components/RuleGroupActionsMenu';\nimport { toIndividualRuleGroups, useGrafanaGroupsGenerator } from './hooks/prometheusGroupsGenerator';\nimport { usePaginatedPrometheusGroups } from './hooks/usePaginatedPrometheusGroups';\n\nconst GRAFANA_GROUP_PAGE_SIZE = 40;\n\nexport function PaginatedGrafanaLoader() {\n  const grafanaGroupsGenerator = useGrafanaGroupsGenerator({ populateCache: true });\n\n  const groupsGenerator = useRef(toIndividualRuleGroups(grafanaGroupsGenerator(GRAFANA_GROUP_PAGE_SIZE)));\n\n  useEffect(() => {\n    const currentGenerator = groupsGenerator.current;\n    return () => {\n      currentGenerator.return();\n    };\n  }, []);\n\n  const {\n    page: groupsPage,\n    nextPage,\n    previousPage,\n    canMoveForward,\n    canMoveBackward,\n    isLoading,\n  } = usePaginatedPrometheusGroups(groupsGenerator.current, GRAFANA_GROUP_PAGE_SIZE);\n\n  const groupsByFolder = useMemo(() => groupBy(groupsPage, 'folderUid'), [groupsPage]);\n\n  return (\n    <DataSourceSection name=\"Grafana\" application=\"grafana\" uid={GrafanaRulesSourceSymbol} isLoading={isLoading}>\n      <Stack direction=\"column\" gap={1}>\n        {Object.entries(groupsByFolder).map(([folderUid, groups]) => {\n          // Groups are grouped by folder, so we can use the first group to get the folder name\n          const folderName = groups[0].file;\n          return (\n            <ListSection\n              key={folderUid}\n              title={\n                <Stack direction=\"row\" gap={1} alignItems=\"center\">\n                  <Icon name=\"folder\" />{' '}\n                  <Text variant=\"body\" element=\"h3\">\n                    {folderName}\n                  </Text>\n                </Stack>\n              }\n            >\n              {groups.map((group) => (\n                <GrafanaRuleGroupListItem\n                  key={`grafana-ns-${folderUid}-${group.name}`}\n                  group={group}\n                  namespaceName={folderName}\n                />\n              ))}\n            </ListSection>\n          );\n        })}\n        <LazyPagination\n          nextPage={nextPage}\n          previousPage={previousPage}\n          canMoveForward={canMoveForward}\n          canMoveBackward={canMoveBackward}\n        />\n      </Stack>\n    </DataSourceSection>\n  );\n}\n\ninterface GrafanaRuleGroupListItemProps {\n  group: GrafanaPromRuleGroupDTO;\n  namespaceName: string;\n}\n\nexport function GrafanaRuleGroupListItem({ group, namespaceName }: GrafanaRuleGroupListItemProps) {\n  const groupIdentifier: GrafanaRuleGroupIdentifier = useMemo(\n    () => ({\n      groupName: group.name,\n      namespace: {\n        uid: group.folderUid,\n      },\n      groupOrigin: 'grafana',\n    }),\n    [group.name, group.folderUid]\n  );\n\n  return (\n    <ListGroup\n      key={group.name}\n      name={group.name}\n      href={groups.detailsPageLink(GRAFANA_RULES_SOURCE_NAME, group.folderUid, group.name)}\n      isOpen={false}\n      actions={<RuleGroupActionsMenu groupIdentifier={groupIdentifier} />}\n    >\n      <GrafanaGroupLoader groupIdentifier={groupIdentifier} namespaceName={namespaceName} />\n    </ListGroup>\n  );\n}\n","import { Alert, ErrorBoundary, ErrorWithStack, Text } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { RulesSourceIdentifier } from 'app/types/unified-alerting';\n\nimport { DataSourceSection } from './DataSourceSection';\n\n/**\n * Some more exotic Prometheus data sources might not be 100% compatible with Prometheus API\n * We don't want them to break the whole page, so we wrap them in an error boundary\n */\n\nexport function DataSourceErrorBoundary({\n  children,\n  rulesSourceIdentifier,\n}: {\n  children: React.ReactNode;\n  rulesSourceIdentifier: RulesSourceIdentifier;\n}) {\n  return (\n    <ErrorBoundary>\n      {({ error, errorInfo }) => {\n        if (error || errorInfo) {\n          const { uid, name } = rulesSourceIdentifier;\n          return (\n            <DataSourceSection uid={uid} name={name}>\n              <Alert\n                title={t('alerting.rule-list.ds-error-boundary.title', 'Unable to load rules from this data source')}\n              >\n                <Text>\n                  <Trans i18nKey=\"alerting.rule-list.ds-error-boundary.description\">\n                    Check the data source configuration. Does the data source support Prometheus API?\n                  </Trans>\n                </Text>\n                <ErrorWithStack\n                  error={error}\n                  errorInfo={errorInfo}\n                  title={t('alerting.rule-list.ds-error-boundary.title', 'Unable to load rules from this data source')}\n                />\n              </Alert>\n            </DataSourceSection>\n          );\n        }\n        return children;\n      }}\n    </ErrorBoundary>\n  );\n}\n","import { useMemo } from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { Stack } from '@grafana/ui';\nimport { DataSourceRulesSourceIdentifier } from 'app/types/unified-alerting';\n\nimport { featureDiscoveryApi } from '../api/featureDiscoveryApi';\nimport { GrafanaRulesSource, getExternalRulesSources } from '../utils/datasource';\n\nimport { PaginatedDataSourceLoader } from './PaginatedDataSourceLoader';\nimport { PaginatedGrafanaLoader } from './PaginatedGrafanaLoader';\nimport { DataSourceErrorBoundary } from './components/DataSourceErrorBoundary';\nimport { DataSourceSection } from './components/DataSourceSection';\n\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\n\nexport function GroupedView() {\n  const externalRuleSources = useMemo(() => getExternalRulesSources(), []);\n\n  return (\n    <Stack direction=\"column\" gap={1} role=\"list\">\n      <DataSourceErrorBoundary rulesSourceIdentifier={GrafanaRulesSource}>\n        <PaginatedGrafanaLoader />\n      </DataSourceErrorBoundary>\n      {externalRuleSources.map((ruleSource) => {\n        return <DataSourceLoader key={ruleSource.uid} rulesSourceIdentifier={ruleSource} />;\n      })}\n    </Stack>\n  );\n}\n\ninterface DataSourceLoaderProps {\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n}\n\nexport function GrafanaDataSourceLoader() {\n  return <DataSourceSection name=\"Grafana\" application=\"grafana\" uid=\"grafana\" isLoading={true} />;\n}\n\nfunction DataSourceLoader({ rulesSourceIdentifier }: DataSourceLoaderProps) {\n  const { data: dataSourceInfo, isLoading } = useDiscoverDsFeaturesQuery({ uid: rulesSourceIdentifier.uid });\n\n  const { uid, name } = rulesSourceIdentifier;\n\n  if (isLoading) {\n    return <DataSourceSection loader={<Skeleton width={250} height={16} />} uid={uid} name={name} />;\n  }\n\n  // 2. grab prometheus rule groups with max_groups if supported\n  if (dataSourceInfo) {\n    return (\n      <DataSourceErrorBoundary rulesSourceIdentifier={rulesSourceIdentifier}>\n        <PaginatedDataSourceLoader\n          key={rulesSourceIdentifier.uid}\n          rulesSourceIdentifier={rulesSourceIdentifier}\n          application={dataSourceInfo.application}\n        />\n      </DataSourceErrorBoundary>\n    );\n  }\n\n  return null;\n}\n","import { useMemo } from 'react';\n\nimport { Button, Dropdown, Icon, LinkButton, Menu, Stack } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { AlertingPageWrapper } from '../components/AlertingPageWrapper';\nimport RulesFilter from '../components/rules/Filter/RulesFilter';\nimport { SupportedView } from '../components/rules/Filter/RulesViewModeSelector';\nimport { AlertingAction, useAlertingAbility } from '../hooks/useAbilities';\nimport { useRulesFilter } from '../hooks/useFilteredRules';\nimport { useURLSearchParams } from '../hooks/useURLSearchParams';\n\nimport { FilterView } from './FilterView';\nimport { GroupedView } from './GroupedView';\n\nfunction RuleList() {\n  const [queryParams] = useURLSearchParams();\n  const { filterState, hasActiveFilters } = useRulesFilter();\n\n  const view: SupportedView = queryParams.get('view') === 'list' ? 'list' : 'grouped';\n  const showListView = hasActiveFilters || view === 'list';\n\n  return (\n    <>\n      <RulesFilter onClear={() => {}} />\n      {showListView ? <FilterView filterState={filterState} /> : <GroupedView />}\n    </>\n  );\n}\n\nexport function RuleListActions() {\n  const [createGrafanaRuleSupported, createGrafanaRuleAllowed] = useAlertingAbility(AlertingAction.CreateAlertRule);\n  const [createCloudRuleSupported, createCloudRuleAllowed] = useAlertingAbility(AlertingAction.CreateExternalAlertRule);\n\n  const canCreateGrafanaRules = createGrafanaRuleSupported && createGrafanaRuleAllowed;\n  const canCreateCloudRules = createCloudRuleSupported && createCloudRuleAllowed;\n\n  const canCreateRules = canCreateGrafanaRules || canCreateCloudRules;\n\n  const moreActionsMenu = useMemo(\n    () => (\n      <Menu>\n        <Menu.Group>\n          <Menu.Item\n            label={t('alerting.rule-list.draft-new-rule', 'Draft a new rule')}\n            icon=\"file-export\"\n            url=\"/alerting/export-new-rule\"\n          />\n        </Menu.Group>\n        <Menu.Group label={t('alerting.rule-list.recording-rules', 'Recording rules')}>\n          {canCreateGrafanaRules && (\n            <Menu.Item\n              label={t('alerting.rule-list.new-grafana-recording-rule', 'New Grafana recording rule')}\n              icon=\"grafana\"\n              url=\"/alerting/new/grafana-recording\"\n            />\n          )}\n          {canCreateCloudRules && (\n            <Menu.Item\n              label={t('alerting.rule-list.new-datasource-recording-rule', 'New Data source recording rule')}\n              icon=\"gf-prometheus\"\n              url=\"/alerting/new/recording\"\n            />\n          )}\n        </Menu.Group>\n      </Menu>\n    ),\n    [canCreateGrafanaRules, canCreateCloudRules]\n  );\n\n  return (\n    <Stack direction=\"row\" gap={1}>\n      {canCreateRules && (\n        <LinkButton variant=\"primary\" icon=\"plus\" href=\"/alerting/new/alerting\">\n          <Trans i18nKey=\"alerting.rule-list.new-alert-rule\">New alert rule</Trans>\n        </LinkButton>\n      )}\n      <Dropdown overlay={moreActionsMenu}>\n        <Button variant=\"secondary\">\n          <Trans i18nKey=\"alerting.rule-list.more\">More</Trans> <Icon name=\"angle-down\" />\n        </Button>\n      </Dropdown>\n    </Stack>\n  );\n}\n\nexport default function RuleListPage() {\n  return (\n    <AlertingPageWrapper navId=\"alert-list\" isLoading={false} actions={<RuleListActions />}>\n      <RuleList />\n    </AlertingPageWrapper>\n  );\n}\n"],"names":["RulesFilterV2","props","newView","config","bindCallback","func","thisArg","argCount","arg","value","index","collection","identity","x","identityAsync","isNumber","isBoolean","isFunction","isObject","isPromise","isArrayLike","isIterable","isIterator","isAsyncIterable","isObservable","isReadableNodeStream","isWritableNodeStream","isReadableDOMStream","isWritableDOMStream","isFetchResponse","toInteger","number","maxSafeInteger","toLength","len","AbortError","message","throwIfAborted","signal","AsyncIterableX","projection","_a","e_1","_b","_c","source","WithAbortAsyncIterable","i","_d","source_1","source_1_1","item","e_1_1","args","acc","selector","fn","FromAsyncIterable","FromPromiseIterable","FromObservableAsyncIterable","FromArrayIterable","inst","ARRAY_VALUE","ARRAY_ERROR","AsyncSink","error","resolve","reject","type","length","e_2","_e","e_3","_f","_g","_h","_j","_k","e_2_1","_l","_m","_o","e_3_1","observable","sink","subscription","err","onAbort","next","isBrowser","nodePipe","readableOpts","opts","end","n","prev","as","from","sleep","dueTime","id","IntervalAsyncIterable","interval","withAbort","wrapWithAbort","ConcatAsyncIterable","outer","_concatAll","concat","OfAsyncIterable","of","MapAsyncIterable","result","map","isPrimitive","wm","safeRace","contenders","deferred","contender","record","NEVER_PROMISE","wrapPromiseWithIndex","promise","done","MergeAsyncIterable","iterators","nexts","active","iterator","iterator$","merge","timerEvent","ended","BufferCountOrTime","bufferSize","maxWaitTime","buffer","timer","merged","bufferCountOrTime","count","time","noop","_","toObserver","complete","observer","e","returnIterator","it","returnAsyncIterator","TapAsyncIterable","obs","res","tap","observerOrNext","DataSourceRuleListItem","rule","rulerRule","groupIdentifier","application","actions","rulesSource","namespace","groupName","ruleIdentifier","href","createViewLinkFromIdentifier","originMeta","ruleName","labels","commonProps","summary","identifier","returnTo","paramId","paramSource","RuleActionsButtons","compact","promRule","redirectToListView","deleteModal","showDeleteModal","showSilenceDrawer","setShowSilenceDrawer","redirectToClone","setRedirectToClone","isProvisioned","editRuleSupported","editRuleAllowed","canEditRule","buttons","buttonSize","editURL","AlertRuleMenu","SilenceGrafanaRuleDrawer","RuleActionsSkeleton","getMatchingRulerRule","rulerRuleGroup","rulesByName","r","rulesByLabelsAndAnnotations","rulesByLabelsAndAnnotationsAndQuery","getMatchingPromRule","promRuleGroup","matchRulesGroup","rulerGroup","promGroup","matchingResult","matches","unmatchedPromRules","useDiscoverDsFeaturesQuery","featureDiscoveryApi","useGetRuleGroupForNamespaceQuery","DataSourceRuleLoader","dsFeatures","isLoading","FilterStatus","state","numberOfRules","onCancel","Card","AlertRuleListItemSkeleton","ListItem","RuleListIcon","RulerRuleLoadingError","useGetGrafanaRulerGroupQuery","GrafanaRuleLoader","namespaceName","isError","GrafanaRuleListItem","operation","uid","title","provenance","is_paused","annotations","promAlertingRule","useIntersection","ref","options","intersectionObserverEntry","setIntersectionObserverEntry","handler","entries","observer_1","LoadMoreHelper","handleLoad","intersectionRef","intersection","EmptyAsyncIterable","empty","ConcatMapAsyncIterable","_source","_selector","_thisArg","outerIndex","values","inner","concatMap","CatchWithAsyncIterable","hasError","c","catchError","groupFilter","group","filterState","name","file","ruleFilter","health","nameLower","word","matchers","looseParseMatcher","doRuleLabelsMatchQuery","doAlertsContainMatchingLabels","alert","filterDatasourceUids","mapDataSourceNamesToUids","matcherQuery","names","prometheusApi","alertingApi","build","ruleSource","groupLimit","excludeAlerts","groupNextToken","notificationOptions","response","folderUid","useLazyGetGroupsQuery","useLazyGetGrafanaGroupsQuery","usePrometheusGroupsGenerator","hookOptions","dispatch","getGroups","genericGroupsGenerator","fetchOptions","useGrafanaGroupsGenerator","getGrafanaGroups","getGroupsAndProvideCache","cacheAndRulerPreload","toIndividualRuleGroups","generator","batch","fetchGroups","lastToken","useFilteredRulesIteratorProvider","allExternalRulesSources","prometheusGroupsGenerator","grafanaGroupsGenerator","abortController","normalizedFilterState","normalizeFilterState","hasDataSourceFilterActive","grafanaRulesGenerator","groups","mapGrafanaRuleToRuleWithOrigin","externalRulesSourcesToFetchFrom","getRulesSourcesFromFilter","dataSourceGenerators","dataSourceIdentifier","mapRuleToRuleWithOrigin","filter","dataSourceName","FRONTENT_PAGE_SIZE","API_PAGE_SIZE","FilterView","FilterViewResults","transitionPending","startTransition","getFilteredRulesIterator","iteration","rules","setRules","doneSearching","setDoneSearching","getRulesBatchIterator","iterable","rulesBatchIterator","onFinished","loadResultPage","useAsync","rulesIterator","loadedRulesCount","nextRulesBatch","getRuleKey","loading","noRulesFound","loadingAborted","cancelSearch","useUnmount","filterProgressState","EmptyState","ruleWithOrigin","key","origin","getGrafanaRuleKey","getDataSourceRuleKey","useGetGroupsQuery","DataSourceGroupLoader","expectedRulesCount","promResponse","isPromResponseLoading","isPromResponseError","isDsFeaturesLoading","isDsFeaturesError","rulerGroupError","isRulerGroupFetching","isRulerGroupError","g","RulerBasedGroupRules","promOnlyRules","onToggle","isOpen","children","styles","getStyles","theme","ALERT_RULE_PAGE_SIZE","EvaluationGroupLoader","rulerConfig","toggle","fetchRulerRuleGroup","promNamespace","promRules","page","pageItems","onPageChange","numberOfPages","GroupLoadingIndicator","LoadingIndicator","datasourceUid","width","loader","description","rulesSourcesWithRuler","showImportLink","dsUid","isCollapsed","toggleCollapsed","configureLink","IconButton","WithReturnButton","LazyPagination","canMoveForward","canMoveBackward","nextPage","previousPage","ListGroup","metaRight","open","GroupHeader","TextLink","GroupStatus","status","Tooltip","rotation","RuleGroupActionsMenu","GrafanaGroupsActionMenu","DataSourceGroupsActionMenu","canEditRules","dataSourceInfo","isRulerGroupLoading","isFederated","isPluginProvided","canEdit","folder","useFolder","usePaginatedPrometheusGroups","groupsGenerator","pageSize","currentPage","setCurrentPage","setGroups","lastPage","setLastPage","fetchMoreGroups","groupsRequestState","groupsCount","currentGroups","generatorResult","groupsTotal","fetchInProgress","groupsPage","DATA_SOURCE_GROUP_PAGE_SIZE","PaginatedDataSourceLoader","rulesSourceIdentifier","currentGenerator","groupsByNamespace","ListSection","RuleGroupListItem","useGetGrafanaGroupsQuery","GrafanaGroupLoader","rulerResponse","rulerRules","matchRules","promRulesMap","GRAFANA_GROUP_PAGE_SIZE","PaginatedGrafanaLoader","groupsByFolder","folderName","GrafanaRuleGroupListItem","DataSourceErrorBoundary","ErrorBoundary","errorInfo","ErrorWithStack","GroupedView","externalRuleSources","DataSourceLoader","GrafanaDataSourceLoader","RuleList","queryParams","useURLSearchParams","hasActiveFilters","view","showListView","RuleListActions","createGrafanaRuleSupported","createGrafanaRuleAllowed","createCloudRuleSupported","createCloudRuleAllowed","canCreateGrafanaRules","canCreateCloudRules","canCreateRules","moreActionsMenu","RuleListPage","AlertingPageWrapper"],"sourceRoot":""}