{"version":3,"file":"UserCreatePage.b2f1841a08ac65a3d1b6.js","mappings":"mPAiBA,MAAMA,EAAa,MAAOC,MAAkB,MAAc,EAAE,KAAK,mBAAoBA,CAAI,EAEnFC,EAAwB,CAC5B,KAAM,OACN,GAAI,WACJ,KAAM,WACN,SAAU,4BACZ,EA8DA,EA5DuB,IAAM,CAC3B,MAAMC,KAAW,MAAY,EACvB,CACJ,aAAAC,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACtB,KAAI,MAAiB,CAAE,KAAM,QAAS,CAAC,EAEjCC,KAAW,eACf,MAAOC,GAAkB,CACvB,KAAM,CAAE,IAAAC,CAAI,EAAI,MAAMT,EAAWQ,CAAI,EAErCL,EAAS,qBAAqBM,CAAG,EAAE,CACrC,EACA,CAACN,CAAQ,CACX,EAEA,SACE,OAAC,IAAI,CAAC,MAAM,eAAe,QAAAD,EACzB,mBAAC,IAAK,SAAL,CACC,oBAAC,QAAK,SAAUE,EAAaG,CAAQ,EAAG,MAAO,CAAE,SAAU,OAAQ,EACjE,oBAAC,KACC,SAAO,KAAE,oCAAqC,MAAM,EACpD,SAAQ,GACR,QAAS,CAAC,CAACD,EAAO,KAClB,MAAOA,EAAO,KAAO,mBAAqB,OAE1C,mBAAC,IAAK,CAAC,GAAG,aAAc,GAAGD,EAAS,OAAQ,CAAE,SAAU,EAAK,CAAC,EAAG,EACnE,KAEA,OAAC,IAAK,CAAC,SAAO,KAAE,qCAAsC,OAAO,EAC3D,mBAAC,IAAK,CAAC,GAAG,cAAe,GAAGA,EAAS,OAAO,EAAG,EACjD,KAEA,OAAC,IAAK,CAAC,SAAO,KAAE,wCAAyC,UAAU,EACjE,mBAAC,IAAK,CAAC,GAAG,iBAAkB,GAAGA,EAAS,OAAO,EAAG,EACpD,KACA,OAAC,KACC,SAAO,KAAE,wCAAyC,UAAU,EAC5D,SAAQ,GACR,QAAS,CAAC,CAACC,EAAO,SAClB,MAAOA,EAAO,SAAW,8DAAgE,OAEzF,mBAAC,KACC,GAAG,iBACF,GAAGD,EAAS,WAAY,CACvB,SAAWK,GAAUA,EAAM,KAAK,IAAM,IAAMA,EAAM,QAAU,CAC9D,CAAC,EACD,KAAK,WACP,EACF,KACA,OAAC,KAAM,CAAC,KAAK,SACX,mBAAC,KAAK,CAAC,QAAQ,mCAAmC,uBAAW,EAC/D,GACF,EACF,EACF,CAEJ,C","sources":["webpack://grafana/./public/app/features/admin/UserCreatePage.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom-v5-compat';\n\nimport { NavModelItem } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Button, Input, Field } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { Trans, t } from 'app/core/internationalization';\n\ninterface UserDTO {\n  name: string;\n  password: string;\n  email?: string;\n  login?: string;\n}\n\nconst createUser = async (user: UserDTO) => getBackendSrv().post('/api/admin/users', user);\n\nconst pageNav: NavModelItem = {\n  icon: 'user',\n  id: 'user-new',\n  text: 'New user',\n  subTitle: 'Create a new Grafana user.',\n};\n\nconst UserCreatePage = () => {\n  const navigate = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<UserDTO>({ mode: 'onBlur' });\n\n  const onSubmit = useCallback(\n    async (data: UserDTO) => {\n      const { uid } = await createUser(data);\n\n      navigate(`/admin/users/edit/${uid}`);\n    },\n    [navigate]\n  );\n\n  return (\n    <Page navId=\"global-users\" pageNav={pageNav}>\n      <Page.Contents>\n        <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '600px' }}>\n          <Field\n            label={t('admin.user-create-page.label-name', 'Name')}\n            required\n            invalid={!!errors.name}\n            error={errors.name ? 'Name is required' : undefined}\n          >\n            <Input id=\"name-input\" {...register('name', { required: true })} />\n          </Field>\n\n          <Field label={t('admin.user-create-page.label-email', 'Email')}>\n            <Input id=\"email-input\" {...register('email')} />\n          </Field>\n\n          <Field label={t('admin.user-create-page.label-username', 'Username')}>\n            <Input id=\"username-input\" {...register('login')} />\n          </Field>\n          <Field\n            label={t('admin.user-create-page.label-password', 'Password')}\n            required\n            invalid={!!errors.password}\n            error={errors.password ? 'Password is required and must contain at least 4 characters' : undefined}\n          >\n            <Input\n              id=\"password-input\"\n              {...register('password', {\n                validate: (value) => value.trim() !== '' && value.length >= 4,\n              })}\n              type=\"password\"\n            />\n          </Field>\n          <Button type=\"submit\">\n            <Trans i18nKey=\"admin.users-create.create-button\">Create user</Trans>\n          </Button>\n        </form>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default UserCreatePage;\n"],"names":["createUser","user","pageNav","navigate","handleSubmit","register","errors","onSubmit","data","uid","value"],"sourceRoot":""}