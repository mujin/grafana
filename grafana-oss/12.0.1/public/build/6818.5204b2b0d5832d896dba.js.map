{"version":3,"file":"6818.5204b2b0d5832d896dba.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/components/Authorize.tsx","webpack://grafana/./public/app/features/alerting/unified/components/notification-policies/Matchers.tsx","webpack://grafana/./public/app/plugins/datasource/parca/QueryEditor/Stack.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/route.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/NotificationPolicyMatchers.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/NotificationRouteDetailsModal.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/NotificationRoute.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/useAlertmanagerNotificationRoutingPreview.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/notificaton-preview/NotificationPreviewByAlertManager.tsx","webpack://grafana/./node_modules/comlink/dist/esm/comlink.mjs","webpack://grafana/./public/app/features/alerting/unified/createRouteGroupsMatcherWorker.ts","webpack://grafana/./public/app/features/alerting/unified/useRouteGroupsMatcher.ts"],"sourcesContent":["import { chain, filter } from 'lodash';\nimport { PropsWithChildren } from 'react';\n\nimport {\n  Abilities,\n  Action,\n  AlertingAction,\n  AlertmanagerAction,\n  useAlertingAbilities,\n  useAllAlertmanagerAbilities,\n} from '../hooks/useAbilities';\n\ninterface AuthorizeProps extends PropsWithChildren {\n  actions: AlertmanagerAction[] | AlertingAction[];\n}\n\nexport const Authorize = ({ actions, children }: AuthorizeProps) => {\n  const alertmanagerActions = filter(actions, isAlertmanagerAction) as AlertmanagerAction[];\n  const alertSourceActions = filter(actions, isAlertingAction) as AlertingAction[];\n\n  if (alertmanagerActions.length) {\n    return <AuthorizeAlertmanager actions={alertmanagerActions}>{children}</AuthorizeAlertmanager>;\n  }\n\n  if (alertSourceActions.length) {\n    return <AuthorizeAlertsource actions={alertSourceActions}>{children}</AuthorizeAlertsource>;\n  }\n\n  return null;\n};\n\ninterface ActionsProps<T extends Action> extends PropsWithChildren {\n  actions: T[];\n}\n\nconst AuthorizeAlertmanager = ({ actions, children }: ActionsProps<AlertmanagerAction>) => {\n  const alertmanagerAbilties = useAllAlertmanagerAbilities();\n  const allowed = actionsAllowed(alertmanagerAbilties, actions);\n\n  if (allowed) {\n    return <>{children}</>;\n  } else {\n    return null;\n  }\n};\n\nconst AuthorizeAlertsource = ({ actions, children }: ActionsProps<AlertingAction>) => {\n  const alertSourceAbilities = useAlertingAbilities();\n  const allowed = actionsAllowed(alertSourceAbilities, actions);\n\n  if (allowed) {\n    return <>{children}</>;\n  } else {\n    return null;\n  }\n};\n\n// TODO add some authorize helper components for alert source and individual alert rules\n\n// check if some action is allowed from the abilities\nfunction actionsAllowed<T extends Action>(abilities: Abilities<T>, actions: T[]) {\n  return chain(abilities)\n    .pick(actions)\n    .values()\n    .value()\n    .some(([_supported, allowed]) => allowed === true);\n}\n\nfunction isAlertmanagerAction(action: AlertmanagerAction) {\n  return Object.values(AlertmanagerAction).includes(action);\n}\n\nfunction isAlertingAction(action: AlertingAction) {\n  return Object.values(AlertingAction).includes(action);\n}\n","import { css } from '@emotion/css';\nimport { take, takeRight, uniqueId } from 'lodash';\nimport { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack, getTagColorsFromName, useStyles2 } from '@grafana/ui';\nimport { ObjectMatcher } from 'app/plugins/datasource/alertmanager/types';\n\nimport { MatcherFormatter, matcherFormatter } from '../../utils/matchers';\nimport { PopupCard } from '../HoverCard';\n\ntype MatchersProps = { matchers: ObjectMatcher[]; formatter?: MatcherFormatter };\n\n// renders the first N number of matchers\nconst Matchers: FC<MatchersProps> = ({ matchers, formatter = 'default' }) => {\n  const styles = useStyles2(getStyles);\n\n  const NUM_MATCHERS = 5;\n\n  const firstFew = take(matchers, NUM_MATCHERS);\n  const rest = takeRight(matchers, matchers.length - NUM_MATCHERS);\n  const hasMoreMatchers = rest.length > 0;\n\n  return (\n    <span data-testid=\"label-matchers\">\n      <Stack direction=\"row\" gap={1} alignItems=\"center\" wrap={'wrap'}>\n        {firstFew.map((matcher) => (\n          <MatcherBadge key={uniqueId()} matcher={matcher} formatter={formatter} />\n        ))}\n        {/* TODO hover state to show all matchers we're not showing */}\n        {hasMoreMatchers && (\n          <PopupCard\n            arrow\n            placement=\"top\"\n            content={\n              <>\n                {rest.map((matcher) => (\n                  <MatcherBadge key={uniqueId()} matcher={matcher} />\n                ))}\n              </>\n            }\n          >\n            <span>\n              <div className={styles.metadata}>{`and ${rest.length} more`}</div>\n            </span>\n          </PopupCard>\n        )}\n      </Stack>\n    </span>\n  );\n};\n\ninterface MatcherBadgeProps {\n  matcher: ObjectMatcher;\n  formatter?: MatcherFormatter;\n}\n\nconst MatcherBadge: FC<MatcherBadgeProps> = ({ matcher, formatter = 'default' }) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.matcher(matcher[0]).wrapper}>\n      <Stack direction=\"row\" gap={0} alignItems=\"baseline\">\n        {matcherFormatter[formatter](matcher)}\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  matcher: (label: string) => {\n    const { color, borderColor } = getTagColorsFromName(label);\n\n    return {\n      wrapper: css({\n        color: '#fff',\n        background: color,\n        padding: `${theme.spacing(0.33)} ${theme.spacing(0.66)}`,\n        fontSize: theme.typography.bodySmall.fontSize,\n\n        border: `solid 1px ${borderColor}`,\n        borderRadius: theme.shape.borderRadius(2),\n\n        // Ensure we preserve whitespace, as otherwise it's not noticeable _at all_\n        // when rendering the matcher, and is only noticeable when editing\n        whiteSpace: 'pre',\n      }),\n    };\n  },\n  metadata: css({\n    color: theme.colors.text.secondary,\n\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.bodySmall.fontWeight,\n  }),\n});\n\nexport { Matchers };\n","import { css } from '@emotion/css';\nimport { CSSProperties } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface StackProps {\n  direction?: CSSProperties['flexDirection'];\n  alignItems?: CSSProperties['alignItems'];\n  wrap?: boolean;\n  gap?: number;\n  flexGrow?: CSSProperties['flexGrow'];\n  children: React.ReactNode;\n}\n\nexport function Stack(props: StackProps) {\n  const styles = useStyles2(getStyles, props);\n  return <div className={styles.root}>{props.children}</div>;\n}\n\nconst getStyles = (theme: GrafanaTheme2, props: StackProps) => ({\n  root: css({\n    display: 'flex',\n    flexDirection: props.direction ?? 'row',\n    flexWrap: (props.wrap ?? true) ? 'wrap' : undefined,\n    alignItems: props.alignItems,\n    gap: theme.spacing(props.gap ?? 2),\n    flexGrow: props.flexGrow,\n  }),\n});\n","import { RouteWithID } from '../../../../../../plugins/datasource/alertmanager/types';\n\nexport interface RouteWithPath extends RouteWithID {\n  path: string[]; // path from root route to this route\n}\n\nexport function isDefaultPolicy(route: RouteWithPath) {\n  return route.path?.length === 0;\n}\n\n// we traverse the whole tree and we create a map with <id , RouteWithPath>\nexport function getRoutesByIdMap(rootRoute: RouteWithID): Map<string, RouteWithPath> {\n  const map = new Map<string, RouteWithPath>();\n\n  function addRoutesToMap(route: RouteWithID, path: string[] = []) {\n    map.set(route.id, { ...route, path: path });\n    route.routes?.forEach((r) => addRoutesToMap(r, [...path, route.id]));\n  }\n\n  addRoutesToMap(rootRoute, []);\n  return map;\n}\n\nexport function hasEmptyMatchers(route: RouteWithID) {\n  return route.object_matchers?.length === 0;\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nimport { MatcherFormatter } from '../../../utils/matchers';\nimport { Matchers } from '../../notification-policies/Matchers';\n\nimport { RouteWithPath, hasEmptyMatchers, isDefaultPolicy } from './route';\n\ninterface Props {\n  route: RouteWithPath;\n  matcherFormatter: MatcherFormatter;\n}\n\nexport function NotificationPolicyMatchers({ route, matcherFormatter }: Props) {\n  const styles = useStyles2(getStyles);\n  if (isDefaultPolicy(route)) {\n    return (\n      <div className={styles.defaultPolicy}>\n        <Trans i18nKey=\"alerting.notification-policy-matchers.default-policy\">Default policy</Trans>\n      </div>\n    );\n  } else if (hasEmptyMatchers(route)) {\n    return (\n      <div className={styles.textMuted}>\n        <Trans i18nKey=\"alerting.notification-policy-matchers.no-matchers\">No matchers</Trans>\n      </div>\n    );\n  } else {\n    return <Matchers matchers={route.object_matchers ?? []} formatter={matcherFormatter} />;\n  }\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  defaultPolicy: css({\n    padding: theme.spacing(0.5),\n    background: theme.colors.background.secondary,\n    width: 'fit-content',\n  }),\n  textMuted: css({\n    color: theme.colors.text.secondary,\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport { compact } from 'lodash';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Modal, Stack, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { Receiver } from '../../../../../../plugins/datasource/alertmanager/types';\nimport { AlertmanagerAction } from '../../../hooks/useAbilities';\nimport { AlertmanagerProvider } from '../../../state/AlertmanagerContext';\nimport { getAmMatcherFormatter } from '../../../utils/alertmanager';\nimport { MatcherFormatter } from '../../../utils/matchers';\nimport { createContactPointSearchLink } from '../../../utils/misc';\nimport { Authorize } from '../../Authorize';\nimport { Matchers } from '../../notification-policies/Matchers';\n\nimport { RouteWithPath, hasEmptyMatchers, isDefaultPolicy } from './route';\n\ninterface Props {\n  routesByIdMap: Map<string, RouteWithPath>;\n  route: RouteWithPath;\n  matcherFormatter: MatcherFormatter;\n}\n\nfunction PolicyPath({ route, routesByIdMap, matcherFormatter }: Props) {\n  const styles = useStyles2(getStyles);\n  const routePathIds = route.path?.slice(1) ?? [];\n  const routePathObjects = [...compact(routePathIds.map((id) => routesByIdMap.get(id))), route];\n\n  return (\n    <div className={styles.policyPathWrapper}>\n      <div className={styles.defaultPolicy}>\n        <Trans i18nKey=\"alerting.policy-path.default-policy\">Default policy</Trans>\n      </div>\n      {routePathObjects.map((pathRoute, index) => {\n        return (\n          <div key={pathRoute.id}>\n            <div className={styles.policyInPath(index, index === routePathObjects.length - 1)}>\n              {hasEmptyMatchers(pathRoute) ? (\n                <div className={styles.textMuted}>\n                  <Trans i18nKey=\"alerting.policy-path.no-matchers\">No matchers</Trans>\n                </div>\n              ) : (\n                <Matchers matchers={pathRoute.object_matchers ?? []} formatter={matcherFormatter} />\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\ninterface NotificationRouteDetailsModalProps {\n  onClose: () => void;\n  route: RouteWithPath;\n  receiver: Receiver;\n  routesByIdMap: Map<string, RouteWithPath>;\n  alertManagerSourceName: string;\n}\n\nexport function NotificationRouteDetailsModal({\n  onClose,\n  route,\n  receiver,\n  routesByIdMap,\n  alertManagerSourceName,\n}: NotificationRouteDetailsModalProps) {\n  const styles = useStyles2(getStyles);\n  const isDefault = isDefaultPolicy(route);\n\n  return (\n    <AlertmanagerProvider accessType=\"notification\" alertmanagerSourceName={alertManagerSourceName}>\n      <Modal\n        className={styles.detailsModal}\n        isOpen={true}\n        title={t('alerting.notification-route-details-modal.title-routing-details', 'Routing details')}\n        onDismiss={onClose}\n        onClickBackdrop={onClose}\n      >\n        <Stack gap={0} direction=\"column\">\n          <div className={cx(styles.textMuted, styles.marginBottom(2))}>\n            <Trans i18nKey=\"alerting.notification-route-details-modal.alert-instances-routed-follows\">\n              Your alert instances are routed as follows.\n            </Trans>\n          </div>\n          <div>\n            <Trans i18nKey=\"alerting.notification-route-details-modal.notification-policy-path\">\n              Notification policy path\n            </Trans>\n          </div>\n          {isDefault && (\n            <div className={styles.textMuted}>\n              <Trans i18nKey=\"alerting.notification-route-details-modal.default-policy\">Default policy</Trans>\n            </div>\n          )}\n          <div className={styles.separator(1)} />\n          {!isDefault && (\n            <PolicyPath\n              route={route}\n              routesByIdMap={routesByIdMap}\n              matcherFormatter={getAmMatcherFormatter(alertManagerSourceName)}\n            />\n          )}\n          <div className={styles.separator(4)} />\n          <div className={styles.contactPoint}>\n            <Stack gap={1} direction=\"row\" alignItems=\"center\">\n              Contact point:\n              <span className={styles.textMuted}>{receiver.name}</span>\n            </Stack>\n            <Authorize actions={[AlertmanagerAction.UpdateContactPoint]}>\n              <Stack gap={1} direction=\"row\" alignItems=\"center\">\n                <a\n                  href={createContactPointSearchLink(receiver.name, alertManagerSourceName)}\n                  className={styles.link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  See details <Icon name=\"external-link-alt\" />\n                </a>\n              </Stack>\n            </Authorize>\n          </div>\n          <div className={styles.button}>\n            <Button variant=\"primary\" type=\"button\" onClick={onClose}>\n              <Trans i18nKey=\"alerting.notification-route-details-modal.close\">Close</Trans>\n            </Button>\n          </div>\n        </Stack>\n      </Modal>\n    </AlertmanagerProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  textMuted: css({\n    color: theme.colors.text.secondary,\n  }),\n  link: css({\n    display: 'block',\n    color: theme.colors.text.link,\n  }),\n  button: css({\n    justifyContent: 'flex-end',\n    display: 'flex',\n  }),\n  detailsModal: css({\n    maxWidth: '560px',\n  }),\n  defaultPolicy: css({\n    padding: theme.spacing(0.5),\n    background: theme.colors.background.secondary,\n    width: 'fit-content',\n  }),\n  contactPoint: css({\n    display: 'flex',\n    flexDirection: 'row',\n    gap: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n  }),\n  policyPathWrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.spacing(1),\n  }),\n  separator: (units: number) =>\n    css({\n      marginTop: theme.spacing(units),\n    }),\n  marginBottom: (units: number) =>\n    css({\n      marginBottom: theme.spacing(theme.spacing(units)),\n    }),\n  policyInPath: (index = 0, highlight = false) =>\n    css({\n      marginLeft: `${30 + index * 30}px`,\n      padding: theme.spacing(1),\n      marginTop: theme.spacing(1),\n      border: `solid 1px ${highlight ? theme.colors.info.border : theme.colors.border.weak}`,\n      background: theme.colors.background.secondary,\n      width: 'fit-content',\n      position: 'relative',\n      '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        height: 'calc(100% - 10px)',\n        width: theme.spacing(1),\n        borderLeft: `solid 1px ${theme.colors.border.weak}`,\n        borderBottom: `solid 1px ${theme.colors.border.weak}`,\n        marginTop: theme.spacing(-2),\n        marginLeft: `-17px`,\n      },\n    }),\n});\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport pluralize from 'pluralize';\nimport { useState } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, TagList, getTagColorIndexFromName, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { Receiver } from '../../../../../../plugins/datasource/alertmanager/types';\nimport { Stack } from '../../../../../../plugins/datasource/parca/QueryEditor/Stack';\nimport { getAmMatcherFormatter } from '../../../utils/alertmanager';\nimport { AlertInstanceMatch } from '../../../utils/notification-policies';\nimport { CollapseToggle } from '../../CollapseToggle';\nimport { MetaText } from '../../MetaText';\nimport { Spacer } from '../../Spacer';\n\nimport { NotificationPolicyMatchers } from './NotificationPolicyMatchers';\nimport { NotificationRouteDetailsModal } from './NotificationRouteDetailsModal';\nimport { RouteWithPath } from './route';\n\nfunction NotificationRouteHeader({\n  route,\n  receiver,\n  routesByIdMap,\n  instancesCount,\n  alertManagerSourceName,\n  expandRoute,\n  onExpandRouteClick,\n}: {\n  route: RouteWithPath;\n  receiver: Receiver;\n  routesByIdMap: Map<string, RouteWithPath>;\n  instancesCount: number;\n  alertManagerSourceName: string;\n  expandRoute: boolean;\n  onExpandRouteClick: (expand: boolean) => void;\n}) {\n  const styles = useStyles2(getStyles);\n  const [showDetails, setShowDetails] = useState(false);\n\n  const onClickDetails = () => {\n    setShowDetails(true);\n  };\n\n  // @TODO: re-use component ContactPointsHoverDetails from Policy once we have it for cloud AMs.\n\n  return (\n    <div className={styles.routeHeader}>\n      <CollapseToggle\n        isCollapsed={!expandRoute}\n        onToggle={(isCollapsed) => onExpandRouteClick(!isCollapsed)}\n        aria-label={t('alerting.notification-route-header.aria-label-expand-policy-route', 'Expand policy route')}\n      />\n\n      <Stack flexGrow={1} gap={1}>\n        {/* TODO: fix keyboard a11y */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n        <div onClick={() => onExpandRouteClick(!expandRoute)} className={styles.expandable}>\n          <Stack gap={1} direction=\"row\" alignItems=\"center\">\n            Notification policy\n            <NotificationPolicyMatchers\n              route={route}\n              matcherFormatter={getAmMatcherFormatter(alertManagerSourceName)}\n            />\n          </Stack>\n        </div>\n        <Spacer />\n        <Stack gap={2} direction=\"row\" alignItems=\"center\">\n          <MetaText icon=\"layers-alt\" data-testid=\"matching-instances\">\n            {instancesCount ?? '-'} {pluralize('instance', instancesCount)}\n          </MetaText>\n          <Stack gap={1} direction=\"row\" alignItems=\"center\">\n            <div>\n              <span className={styles.textMuted}>\n                <Trans i18nKey=\"alerting.notification-route-header.delivered-to\">@ Delivered to</Trans>\n              </span>{' '}\n              {receiver.name}\n            </div>\n\n            <div className={styles.verticalBar} />\n\n            <Button type=\"button\" onClick={onClickDetails} variant=\"secondary\" fill=\"outline\" size=\"sm\">\n              <Trans i18nKey=\"alerting.notification-route-header.see-details\">See details</Trans>\n            </Button>\n          </Stack>\n        </Stack>\n      </Stack>\n      {showDetails && (\n        <NotificationRouteDetailsModal\n          onClose={() => setShowDetails(false)}\n          route={route}\n          receiver={receiver}\n          routesByIdMap={routesByIdMap}\n          alertManagerSourceName={alertManagerSourceName}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface NotificationRouteProps {\n  route: RouteWithPath;\n  receiver: Receiver;\n  instanceMatches: AlertInstanceMatch[];\n  routesByIdMap: Map<string, RouteWithPath>;\n  alertManagerSourceName: string;\n}\n\nexport function NotificationRoute({\n  route,\n  instanceMatches,\n  receiver,\n  routesByIdMap,\n  alertManagerSourceName,\n}: NotificationRouteProps) {\n  const styles = useStyles2(getStyles);\n  const [expandRoute, setExpandRoute] = useToggle(false);\n  // @TODO: The color index might be updated at some point in the future.Maybe we should roll our own tag component,\n  // one that supports a custom function to define the color and allow manual color overrides\n  const GREY_COLOR_INDEX = 9;\n\n  return (\n    <div data-testid=\"matching-policy-route\">\n      <NotificationRouteHeader\n        route={route}\n        receiver={receiver}\n        routesByIdMap={routesByIdMap}\n        instancesCount={instanceMatches.length}\n        alertManagerSourceName={alertManagerSourceName}\n        expandRoute={expandRoute}\n        onExpandRouteClick={setExpandRoute}\n      />\n      {expandRoute && (\n        <Stack gap={1} direction=\"column\">\n          <div className={styles.routeInstances} data-testid=\"route-matching-instance\">\n            {instanceMatches.map((instanceMatch) => {\n              const matchArray = Array.from(instanceMatch.labelsMatch);\n              const matchResult = matchArray.map(([label, matchResult]) => ({\n                label: `${label[0]}=${label[1]}`,\n                match: matchResult.match,\n                colorIndex: matchResult.match ? getTagColorIndexFromName(label[0]) : GREY_COLOR_INDEX,\n              }));\n\n              const matchingLabels = matchResult.filter((mr) => mr.match);\n              const nonMatchingLabels = matchResult.filter((mr) => !mr.match);\n\n              return (\n                <div className={styles.tagListCard} key={uniqueId()}>\n                  {matchArray.length > 0 ? (\n                    <>\n                      {matchingLabels.length > 0 ? (\n                        <TagList\n                          tags={matchingLabels.map((mr) => mr.label)}\n                          className={styles.labelList}\n                          getColorIndex={(_, index) => matchingLabels[index].colorIndex}\n                        />\n                      ) : (\n                        <div className={cx(styles.textMuted, styles.textItalic)}>\n                          <Trans i18nKey=\"alerting.notification-route.no-matching-labels\">No matching labels</Trans>\n                        </div>\n                      )}\n                      <div className={styles.labelSeparator} />\n                      <TagList\n                        tags={nonMatchingLabels.map((mr) => mr.label)}\n                        className={styles.labelList}\n                        getColorIndex={(_, index) => nonMatchingLabels[index].colorIndex}\n                      />\n                    </>\n                  ) : (\n                    <div className={styles.textMuted}>\n                      <Trans i18nKey=\"alerting.notification-route.no-labels\">No labels</Trans>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </Stack>\n      )}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  textMuted: css({\n    color: theme.colors.text.secondary,\n  }),\n  textItalic: css({\n    fontStyle: 'italic',\n  }),\n  expandable: css({\n    cursor: 'pointer',\n  }),\n  routeHeader: css({\n    display: 'flex',\n    flexDirection: 'row',\n    gap: theme.spacing(1),\n    alignItems: 'center',\n    borderBottom: `1px solid ${theme.colors.border.weak}`,\n    padding: theme.spacing(0.5, 0.5, 0.5, 0),\n    '&:hover': {\n      backgroundColor: theme.components.table.rowHoverBackground,\n    },\n  }),\n  labelList: css({\n    flex: '0 1 auto',\n    justifyContent: 'flex-start',\n  }),\n  labelSeparator: css({\n    width: '1px',\n    backgroundColor: theme.colors.border.weak,\n  }),\n  tagListCard: css({\n    display: 'flex',\n    flexDirection: 'row',\n    gap: theme.spacing(2),\n\n    position: 'relative',\n    background: theme.colors.background.secondary,\n    padding: theme.spacing(1),\n\n    borderRadius: theme.shape.borderRadius(2),\n    border: `solid 1px ${theme.colors.border.weak}`,\n  }),\n  routeInstances: css({\n    padding: theme.spacing(1, 0, 1, 4),\n    position: 'relative',\n\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      left: theme.spacing(2),\n      height: `calc(100% - ${theme.spacing(2)})`,\n      width: theme.spacing(4),\n      borderLeft: `solid 1px ${theme.colors.border.weak}`,\n    },\n  }),\n  verticalBar: css({\n    width: '1px',\n    height: '20px',\n    backgroundColor: theme.colors.secondary.main,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  }),\n});\n","import { useMemo } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { useContactPointsWithStatus } from 'app/features/alerting/unified/components/contact-points/useContactPoints';\nimport { useNotificationPolicyRoute } from 'app/features/alerting/unified/components/notification-policies/useNotificationPolicyRoute';\n\nimport { Receiver } from '../../../../../../plugins/datasource/alertmanager/types';\nimport { Labels } from '../../../../../../types/unified-alerting-dto';\nimport { useRouteGroupsMatcher } from '../../../useRouteGroupsMatcher';\nimport { addUniqueIdentifierToRoute } from '../../../utils/amroutes';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../../utils/datasource';\nimport { AlertInstanceMatch, computeInheritedTree, normalizeRoute } from '../../../utils/notification-policies';\n\nimport { RouteWithPath, getRoutesByIdMap } from './route';\n\nexport const useAlertmanagerNotificationRoutingPreview = (alertmanager: string, potentialInstances: Labels[]) => {\n  const {\n    data: currentData,\n    isLoading: isPoliciesLoading,\n    error: policiesError,\n  } = useNotificationPolicyRoute({ alertmanager });\n\n  const {\n    contactPoints,\n    isLoading: contactPointsLoading,\n    error: contactPointsError,\n  } = useContactPointsWithStatus({\n    alertmanager,\n    fetchPolicies: false,\n    fetchStatuses: false,\n  });\n\n  const { matchInstancesToRoute } = useRouteGroupsMatcher();\n\n  const [defaultPolicy] = currentData ?? [];\n  const rootRoute = useMemo(() => {\n    if (!defaultPolicy) {\n      return;\n    }\n    return normalizeRoute(addUniqueIdentifierToRoute(defaultPolicy));\n  }, [defaultPolicy]);\n\n  // create maps for routes to be get by id, this map also contains the path to the route\n  // ⚠️ don't forget to compute the inherited tree before using this map\n  const routesByIdMap = rootRoute\n    ? getRoutesByIdMap(computeInheritedTree(rootRoute))\n    : new Map<string, RouteWithPath>();\n\n  // to create the list of matching contact points we need to first get the rootRoute\n  const receiversByName = useMemo(() => {\n    if (!contactPoints) {\n      return new Map<string, Receiver>();\n    }\n\n    // create map for receivers to be get by name\n    return contactPoints.reduce((map, receiver) => {\n      return map.set(receiver.name, receiver);\n    }, new Map<string, Receiver>());\n  }, [contactPoints]);\n\n  // match labels in the tree => map of notification policies and the alert instances (list of labels) in each one\n  const {\n    value: matchingMap = new Map<string, AlertInstanceMatch[]>(),\n    loading: matchingLoading,\n    error: matchingError,\n  } = useAsync(async () => {\n    if (!rootRoute) {\n      return;\n    }\n\n    return await matchInstancesToRoute(rootRoute, potentialInstances, {\n      unquoteMatchers: alertmanager !== GRAFANA_RULES_SOURCE_NAME,\n    });\n  }, [rootRoute, potentialInstances]);\n\n  return {\n    routesByIdMap,\n    receiversByName,\n    matchingMap,\n    loading: isPoliciesLoading || contactPointsLoading || matchingLoading,\n    error: policiesError ?? contactPointsError ?? matchingError,\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, LoadingPlaceholder, useStyles2, withErrorBoundary } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { stringifyErrorLike } from 'app/features/alerting/unified/utils/misc';\n\nimport { Stack } from '../../../../../../plugins/datasource/parca/QueryEditor/Stack';\nimport { Labels } from '../../../../../../types/unified-alerting-dto';\nimport { AlertManagerDataSource } from '../../../utils/datasource';\n\nimport { NotificationRoute } from './NotificationRoute';\nimport { useAlertmanagerNotificationRoutingPreview } from './useAlertmanagerNotificationRoutingPreview';\n\nfunction NotificationPreviewByAlertManager({\n  alertManagerSource,\n  potentialInstances,\n  onlyOneAM,\n}: {\n  alertManagerSource: AlertManagerDataSource;\n  potentialInstances: Labels[];\n  onlyOneAM: boolean;\n}) {\n  const styles = useStyles2(getStyles);\n\n  const { routesByIdMap, receiversByName, matchingMap, loading, error } = useAlertmanagerNotificationRoutingPreview(\n    alertManagerSource.name,\n    potentialInstances\n  );\n\n  if (error) {\n    const title = t('alerting.notification-preview.error', 'Could not load routing preview for {{alertmanager}}', {\n      alertmanager: alertManagerSource.name,\n    });\n    return (\n      <Alert title={title} severity=\"error\">\n        {stringifyErrorLike(error)}\n      </Alert>\n    );\n  }\n\n  if (loading) {\n    return (\n      <LoadingPlaceholder\n        text={t(\n          'alerting.notification-preview-by-alert-manager.text-loading-routing-preview',\n          'Loading routing preview...'\n        )}\n      />\n    );\n  }\n\n  const matchingPoliciesFound = matchingMap.size > 0;\n\n  return matchingPoliciesFound ? (\n    <div className={styles.alertManagerRow}>\n      {!onlyOneAM && (\n        <Stack direction=\"row\" alignItems=\"center\">\n          <div className={styles.firstAlertManagerLine} />\n          <div className={styles.alertManagerName}>\n            <Trans i18nKey=\"alerting.notification-preview.alertmanager\">Alertmanager:</Trans>\n            <img src={alertManagerSource.imgUrl} alt=\"\" className={styles.img} />\n            {alertManagerSource.name}\n          </div>\n          <div className={styles.secondAlertManagerLine} />\n        </Stack>\n      )}\n      <Stack gap={1} direction=\"column\">\n        {Array.from(matchingMap.entries()).map(([routeId, instanceMatches]) => {\n          const route = routesByIdMap.get(routeId);\n          const receiver = route?.receiver && receiversByName.get(route.receiver);\n\n          if (!route) {\n            return null;\n          }\n          if (!receiver) {\n            throw new Error('Receiver not found');\n          }\n          return (\n            <NotificationRoute\n              instanceMatches={instanceMatches}\n              route={route}\n              receiver={receiver}\n              key={routeId}\n              routesByIdMap={routesByIdMap}\n              alertManagerSourceName={alertManagerSource.name}\n            />\n          );\n        })}\n      </Stack>\n    </div>\n  ) : null;\n}\n\n// export default because we want to load the component dynamically using React.lazy\n// Due to loading of the web worker we don't want to load this component when not necessary\nexport default withErrorBoundary(NotificationPreviewByAlertManager);\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  alertManagerRow: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    width: '100%',\n  }),\n  firstAlertManagerLine: css({\n    height: '1px',\n    width: theme.spacing(4),\n    backgroundColor: theme.colors.secondary.main,\n  }),\n  alertManagerName: css({\n    width: 'fit-content',\n  }),\n  secondAlertManagerLine: css({\n    height: '1px',\n    width: '100%',\n    flex: 1,\n    backgroundColor: theme.colors.secondary.main,\n  }),\n  img: css({\n    marginLeft: theme.spacing(2),\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  }),\n});\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { CorsWorker as Worker } from 'app/core/utils/CorsWorker';\n\n// CorsWorker is needed as a workaround for CORS issue caused\n// by static assets served from an url different from origin\nexport const createWorker = () => new Worker(new URL('./routeGroupsMatcher.worker.ts', import.meta.url));\n","import * as comlink from 'comlink';\nimport { useCallback, useEffect } from 'react';\n\nimport { AlertmanagerGroup, RouteWithID } from '../../../plugins/datasource/alertmanager/types';\nimport { Labels } from '../../../types/unified-alerting-dto';\n\nimport { logError, logInfo } from './Analytics';\nimport { createWorker } from './createRouteGroupsMatcherWorker';\nimport type { MatchOptions, RouteGroupsMatcher } from './routeGroupsMatcher';\n\nlet routeMatcher: comlink.Remote<RouteGroupsMatcher> | undefined;\n\n// Load worker loads the worker if it's not loaded yet\n// and returns a function to dispose of the worker\n// We do it to enable feature toggling. If the feature is disabled we don't wont to load the worker code at all\n// An alternative way would be to move all this code to the hook below, but it will create and terminate the worker much more often\nfunction loadWorker() {\n  let worker: Worker | undefined;\n\n  if (routeMatcher === undefined) {\n    try {\n      worker = createWorker();\n      routeMatcher = comlink.wrap<RouteGroupsMatcher>(worker);\n    } catch (e: unknown) {\n      if (e instanceof Error) {\n        logError(e);\n      }\n    }\n  }\n\n  const disposeWorker = () => {\n    if (worker && routeMatcher) {\n      routeMatcher[comlink.releaseProxy]();\n      worker.terminate();\n\n      routeMatcher = undefined;\n      worker = undefined;\n    }\n  };\n\n  return { disposeWorker };\n}\n\nfunction validateWorker(matcher: typeof routeMatcher): asserts matcher is comlink.Remote<RouteGroupsMatcher> {\n  if (!routeMatcher) {\n    throw new Error('Route Matcher has not been initialized');\n  }\n}\n\nexport function useRouteGroupsMatcher() {\n  useEffect(() => {\n    const { disposeWorker } = loadWorker();\n    return disposeWorker;\n  }, []);\n\n  const getRouteGroupsMap = useCallback(\n    async (rootRoute: RouteWithID, alertGroups: AlertmanagerGroup[], options?: MatchOptions) => {\n      validateWorker(routeMatcher);\n\n      const startTime = performance.now();\n\n      const result = await routeMatcher.getRouteGroupsMap(rootRoute, alertGroups, options);\n\n      const timeSpent = performance.now() - startTime;\n\n      logInfo(`Route Groups Matched in  ${timeSpent} ms`, {\n        matchingTime: timeSpent.toString(),\n        alertGroupsCount: alertGroups.length.toString(),\n        // Counting all nested routes might be too time-consuming, so we only count the first level\n        topLevelRoutesCount: rootRoute.routes?.length.toString() ?? '0',\n      });\n\n      return result;\n    },\n    []\n  );\n\n  const matchInstancesToRoute = useCallback(\n    async (rootRoute: RouteWithID, instancesToMatch: Labels[], options?: MatchOptions) => {\n      validateWorker(routeMatcher);\n\n      const startTime = performance.now();\n\n      const result = await routeMatcher.matchInstancesToRoute(rootRoute, instancesToMatch, options);\n\n      const timeSpent = performance.now() - startTime;\n\n      logInfo(`Instances Matched in  ${timeSpent} ms`, {\n        matchingTime: timeSpent.toString(),\n        instancesToMatchCount: instancesToMatch.length.toString(),\n        // Counting all nested routes might be too time-consuming, so we only count the first level\n        topLevelRoutesCount: rootRoute.routes?.length.toString() ?? '0',\n      });\n\n      return result;\n    },\n    []\n  );\n\n  return { getRouteGroupsMap, matchInstancesToRoute };\n}\n"],"names":["Authorize","actions","children","alertmanagerActions","isAlertmanagerAction","alertSourceActions","isAlertingAction","AuthorizeAlertmanager","AuthorizeAlertsource","alertmanagerAbilties","actionsAllowed","alertSourceAbilities","abilities","_supported","allowed","action","Matchers","matchers","formatter","styles","getStyles","NUM_MATCHERS","firstFew","rest","hasMoreMatchers","matcher","MatcherBadge","theme","label","color","borderColor","Stack","props","isDefaultPolicy","route","getRoutesByIdMap","rootRoute","map","addRoutesToMap","path","r","hasEmptyMatchers","NotificationPolicyMatchers","matcherFormatter","PolicyPath","routesByIdMap","routePathIds","routePathObjects","id","pathRoute","index","NotificationRouteDetailsModal","onClose","receiver","alertManagerSourceName","isDefault","Modal","Icon","Button","units","highlight","NotificationRouteHeader","instancesCount","expandRoute","onExpandRouteClick","showDetails","setShowDetails","onClickDetails","CollapseToggle","isCollapsed","Spacer","MetaText","NotificationRoute","instanceMatches","setExpandRoute","useToggle","GREY_COLOR_INDEX","instanceMatch","matchArray","matchResult","matchingLabels","mr","nonMatchingLabels","TagList","_","useAlertmanagerNotificationRoutingPreview","alertmanager","potentialInstances","currentData","isPoliciesLoading","policiesError","useNotificationPolicyRoute","contactPoints","contactPointsLoading","contactPointsError","useContactPoints","matchInstancesToRoute","useRouteGroupsMatcher","defaultPolicy","receiversByName","matchingMap","matchingLoading","matchingError","useAsync","NotificationPreviewByAlertManager","alertManagerSource","onlyOneAM","loading","error","title","Alert","LoadingPlaceholder","routeId","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","type","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","isMessagePort","endpoint","target","pendingListeners","data","resolver","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","windowEndpoint","w","context","targetOrigin","msg","name","handler","serializedValue","resolve","generateUUID","createWorker","routeMatcher","loadWorker","worker","e","validateWorker","disposeWorker","getRouteGroupsMap","alertGroups","options","startTime","result","timeSpent","instancesToMatch"],"sourceRoot":""}