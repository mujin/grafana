{"version":3,"file":"PluginExtensionsLog.2eb11ad3226bc7dd71ba.js","mappings":"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","sources":["webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/utils.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/contexts/SceneContextObject.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/contexts/SceneContextProvider.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/hooks.js","webpack://grafana/./node_modules/@grafana/scenes-react/node_modules/lru-cache/dist/esm/index.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/caching/SceneObjectCache.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useSceneObject.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useQueryRunner.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useDataTransformer.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/TimeRangePicker.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/VariableControl.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/VizPanel.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/RefreshPicker.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/DataLayerControl.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/variables/CustomVariable.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/variables/DataSourceVariable.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/variables/QueryVariable.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/contexts/BreadcrumbContext.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useVariableValues.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useQueryVariable.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/hooks/useVariableValue.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/AnnotationLayer.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/interoperability/EmbeddedSceneWithContext.js","webpack://grafana/./node_modules/@grafana/scenes-react/dist/esm/components/VizGridLayout.js","webpack://grafana/./public/app/features/plugins/extensions/logs/LogViewFilters.tsx","webpack://grafana/./public/app/features/plugins/extensions/logs/dataSource.ts","webpack://grafana/./public/app/features/plugins/extensions/logs/filterTransformation.ts","webpack://grafana/./public/app/features/plugins/extensions/logs/LogViewer.tsx"],"sourcesContent":["function writeSceneLog(logger, message, ...rest) {\n  let loggingEnabled = false;\n  if (typeof window !== \"undefined\") {\n    loggingEnabled = localStorage.getItem(\"grafana.debug.scenes\") === \"true\";\n  }\n  if (loggingEnabled) {\n    console.log(`${logger}: `, message, ...rest);\n  }\n}\n\nexport { writeSceneLog };\n//# sourceMappingURL=utils.js.map\n","import { SceneObjectBase, NewSceneObjectAddedEvent, SceneVariableSet } from '@grafana/scenes';\nimport { writeSceneLog } from '../utils.js';\n\nclass SceneContextObject extends SceneObjectBase {\n  constructor(state) {\n    var _a, _b;\n    super({\n      ...state,\n      children: (_a = state == null ? void 0 : state.children) != null ? _a : [],\n      childContexts: (_b = state == null ? void 0 : state.childContexts) != null ? _b : []\n    });\n  }\n  addToScene(obj) {\n    this.publishEvent(new NewSceneObjectAddedEvent(obj), true);\n    this.setState({ children: [...this.state.children, obj] });\n    writeSceneLog(\"SceneContext\", `Adding to scene: ${obj.constructor.name} key: ${obj.state.key}`);\n    const deactivate = obj.activate();\n    return () => {\n      writeSceneLog(\"SceneContext\", `Removing from scene: ${obj.constructor.name} key: ${obj.state.key}`);\n      this.setState({ children: this.state.children.filter((x) => x !== obj) });\n      deactivate();\n    };\n  }\n  findByKey(key) {\n    return this.state.children.find((x) => x.state.key === key);\n  }\n  findVariable(name) {\n    const variables = this.state.$variables;\n    if (!variables) {\n      return;\n    }\n    return variables.getByName(name);\n  }\n  addVariable(variable) {\n    let set = this.state.$variables;\n    this.publishEvent(new NewSceneObjectAddedEvent(variable), true);\n    if (set) {\n      set.setState({ variables: [...set.state.variables, variable] });\n    } else {\n      set = new SceneVariableSet({ variables: [variable] });\n      this.setState({ $variables: set });\n    }\n    writeSceneLog(\"SceneContext\", `Adding variable: ${variable.constructor.name} key: ${variable.state.key}`);\n    return () => {\n      set.setState({ variables: set.state.variables.filter((x) => x !== variable) });\n      writeSceneLog(\"SceneContext\", `Removing variable: ${variable.constructor.name} key: ${variable.state.key}`);\n    };\n  }\n  addChildContext(ctx) {\n    var _a;\n    this.publishEvent(new NewSceneObjectAddedEvent(ctx), true);\n    this.setState({ childContexts: [...(_a = this.state.childContexts) != null ? _a : [], ctx] });\n    writeSceneLog(\"SceneContext\", `Adding child context: ${ctx.constructor.name} key: ${ctx.state.key}`);\n  }\n  removeChildContext(ctx) {\n    var _a;\n    this.setState({\n      childContexts: (_a = this.state.childContexts) == null ? void 0 : _a.filter((context) => ctx !== context)\n    });\n    writeSceneLog(\"SceneContext\", `Remvoing child context: ${ctx.constructor.name} key: ${ctx.state.key}`);\n  }\n}\n\nexport { SceneContextObject };\n//# sourceMappingURL=SceneContextObject.js.map\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { behaviors, SceneTimeRange, UrlSyncContextProvider } from '@grafana/scenes';\nimport { SceneContextObject } from './SceneContextObject.js';\n\nconst SceneContext = createContext(null);\nfunction SceneContextProvider({ children, timeRange, withQueryController }) {\n  const parentContext = useContext(SceneContext);\n  const [childContext, setChildContext] = useState();\n  const initialTimeRange = timeRange;\n  useEffect(() => {\n    const state = { children: [] };\n    if (withQueryController) {\n      state.$behaviors = [new behaviors.SceneQueryController()];\n    }\n    if (initialTimeRange) {\n      state.$timeRange = new SceneTimeRange(initialTimeRange);\n    }\n    const childContext2 = new SceneContextObject(state);\n    if (parentContext) {\n      parentContext.addChildContext(childContext2);\n    }\n    const deactivate = childContext2.activate();\n    setChildContext(childContext2);\n    return () => {\n      deactivate();\n      if (parentContext) {\n        parentContext.removeChildContext(childContext2);\n      }\n    };\n  }, [parentContext, withQueryController]);\n  if (!childContext) {\n    return null;\n  }\n  const innerProvider = /* @__PURE__ */ React.createElement(SceneContext.Provider, { value: childContext }, children);\n  if (parentContext) {\n    return innerProvider;\n  }\n  return /* @__PURE__ */ React.createElement(UrlSyncContextProvider, { scene: childContext, updateUrlOnInit: true, createBrowserHistorySteps: true }, innerProvider);\n}\n\nexport { SceneContext, SceneContextProvider };\n//# sourceMappingURL=SceneContextProvider.js.map\n","import { useContext, useState, useEffect, useCallback } from 'react';\nimport { SceneContext } from '../contexts/SceneContextProvider.js';\nimport { sceneGraph, SceneVariableValueChangedEvent } from '@grafana/scenes';\nimport { Subscription } from 'rxjs';\n\nfunction useSceneContext() {\n  const scene = useContext(SceneContext);\n  if (!scene) {\n    throw new Error(\"Cannot find a SceneContext\");\n  }\n  return scene;\n}\nfunction useTimeRange() {\n  const scene = useSceneContext();\n  const sceneTimeRange = sceneGraph.getTimeRange(scene);\n  const { value } = sceneTimeRange.useState();\n  return [value, sceneTimeRange];\n}\nfunction useVariables() {\n  const scene = useSceneContext();\n  const variables = sceneGraph.getVariables(scene);\n  return variables.useState().variables;\n}\nfunction useUpdateWhenSceneChanges({ timeRange, variables = [] }) {\n  const scene = useSceneContext();\n  const [updateReason, setUpdateReason] = useState();\n  useEffect(() => {\n    const subscriptions = new Subscription();\n    if (variables && variables.length > 0) {\n      for (const v of variables) {\n        const variable = sceneGraph.lookupVariable(v, scene);\n        if (variable) {\n          subscriptions.add(\n            variable.subscribeToEvent(SceneVariableValueChangedEvent, () => {\n              setUpdateReason({ variableName: variable.state.name, variableValue: variable.getValue() });\n            })\n          );\n        }\n      }\n    }\n    if (timeRange) {\n      const tr = sceneGraph.getTimeRange(scene);\n      tr.subscribeToState((newState, oldState) => {\n        if (newState.value !== oldState.value) {\n          setUpdateReason({ timeRange: newState.value });\n        }\n      });\n    }\n    return () => subscriptions.unsubscribe();\n  }, [scene, timeRange, ...variables]);\n  return updateReason;\n}\nfunction useVariableInterpolator(options) {\n  const scene = useSceneContext();\n  useUpdateWhenSceneChanges(options);\n  return useCallback(\n    (str) => {\n      return sceneGraph.interpolate(scene, str);\n    },\n    [scene]\n  );\n}\n\nexport { useSceneContext, useTimeRange, useUpdateWhenSceneChanges, useVariableInterpolator, useVariables };\n//# sourceMappingURL=hooks.js.map\n","/**\n * @module LRUCache\n */\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache {\n    // options that cannot be changed without disaster\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    #memoMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    get memoMethod() {\n        return this.#memoMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (memoMethod !== undefined &&\n            typeof memoMethod !== 'function') {\n            throw new TypeError('memoMethod must be a function if defined');\n        }\n        this.#memoMethod = memoMethod;\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the number of ms left in the item's TTL. If item is not in cache,\n     * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.#delete(this.#keyList[index], 'expire');\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string\n     * description of an object. Called by the built-in method\n     * `Object.prototype.toString`.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from most\n     * recently used to least recently used.\n     *\n     * `fn` is called as `fn(value, key, cache)`.\n     *\n     * If `thisp` is provided, function will be called in the `this`-context of\n     * the provided object, or the cache if no `thisp` object is provided.\n     *\n     * Does not update age or recenty of use, or iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.#delete(this.#keyList[i], 'expire');\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Returns `undefined` if the key is not present.\n     *\n     * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n     * serialization, the `start` value is always the current timestamp, and the\n     * `ttl` is a calculated remaining time to live (negative if expired).\n     *\n     * Always returns stale values, if their info is found in the cache, so be\n     * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n     * if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to {@link LRLUCache#load}.\n     *\n     * The `start` fields are calculated relative to a portable `Date.now()`\n     * timestamp, even if `performance.now()` is available.\n     *\n     * Stale entries are always included in the `dump`, even if\n     * {@link LRUCache.OptionsBase.allowStale} is false.\n     *\n     * Note: this returns an actual array, not a generator, so it can be more\n     * easily passed around.\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     *\n     * The shape of the resulting cache may be different if the same options are\n     * not used in both caches.\n     *\n     * The `start` fields are assumed to be calculated relative to a portable\n     * `Date.now()` timestamp, even if `performance.now()` is available.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     *\n     * Fields on the {@link LRUCache.SetOptions} options param will override\n     * their corresponding values in the constructor options for the scope\n     * of this single `set()` operation.\n     *\n     * If `start` is provided, then that will set the effective start\n     * time for the TTL calculation. Note that this must be a previous\n     * value of `performance.now()` if supported, or a previous value of\n     * `Date.now()` if not.\n     *\n     * Options object may also include `size`, which will prevent\n     * calling the `sizeCalculation` function and just use the specified\n     * number if it is a positive integer, and `noDisposeOnSet` which\n     * will prevent calling a `dispose` function in the case of\n     * overwrites.\n     *\n     * If the `size` (or return value of `sizeCalculation`) for a given\n     * entry is greater than `maxEntrySize`, then the item will not be\n     * added to the cache.\n     *\n     * Will update the recency of the entry.\n     *\n     * If the value is `undefined`, then this is an alias for\n     * `cache.delete(key)`. `undefined` is never stored in the cache.\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.#delete(k, 'set');\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Check if a key is in the cache, without updating the recency of\n     * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n     * to `true` in either the options or the constructor.\n     *\n     * Will return `false` if the item is stale, even though it is technically in\n     * the cache. The difference can be determined (if it matters) by using a\n     * `status` argument, and inspecting the `has` field.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.#delete(k, 'fetch');\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.#delete(k, 'fetch');\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    async forceFetch(k, fetchOptions = {}) {\n        const v = await this.fetch(k, fetchOptions);\n        if (v === undefined)\n            throw new Error('fetch() returned undefined');\n        return v;\n    }\n    memo(k, memoOptions = {}) {\n        const memoMethod = this.#memoMethod;\n        if (!memoMethod) {\n            throw new Error('no memoMethod provided to constructor');\n        }\n        const { context, forceRefresh, ...options } = memoOptions;\n        const v = this.get(k, options);\n        if (!forceRefresh && v !== undefined)\n            return v;\n        const vv = memoMethod(k, v, {\n            options,\n            context,\n        });\n        this.set(k, vv, options);\n        return vv;\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.#delete(k, 'expire');\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     *\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        return this.#delete(k, 'delete');\n    }\n    #delete(k, reason) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.#clear(reason);\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, reason);\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, reason]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        return this.#clear('delete');\n    }\n    #clear(reason) {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, reason);\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, reason]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { isPlainObject } from 'lodash';\nimport { LRUCache } from 'lru-cache';\n\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), member.set(obj, value), value);\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar _cache, _objectRefIds, _objectRefIdCounter;\nclass SceneObjectCache {\n  constructor() {\n    __privateAdd(this, _cache);\n    __privateAdd(this, _objectRefIds, /* @__PURE__ */ new WeakMap());\n    __privateAdd(this, _objectRefIdCounter, 0);\n    __privateSet(this, _cache, new LRUCache({\n      max: 500,\n      ttl: 1e3 * 60 * 5\n    }));\n  }\n  add(keyHash, object) {\n    __privateGet(this, _cache).set(keyHash, object);\n  }\n  get(keyHash) {\n    return __privateGet(this, _cache).get(keyHash);\n  }\n  getHashKey(key, type) {\n    if (Array.isArray(key)) {\n      return `${type.name}-${key.map((k) => this.getHashKeyElement(k)).join()}`;\n    }\n    return `${type.name}-${this.getHashKeyElement(key)}`;\n  }\n  getByRefHashKey(obj) {\n    let objectRefId = __privateGet(this, _objectRefIds).get(obj);\n    if (objectRefId == null) {\n      objectRefId = __privateWrapper(this, _objectRefIdCounter)._++;\n      __privateGet(this, _objectRefIds).set(obj, objectRefId);\n    }\n    return objectRefId;\n  }\n  getHashKeyElement(key) {\n    if (typeof key === \"string\" || typeof key === \"boolean\" || typeof key === \"number\") {\n      return key;\n    }\n    return getObjectHash(key);\n  }\n}\n_cache = new WeakMap();\n_objectRefIds = new WeakMap();\n_objectRefIdCounter = new WeakMap();\nlet cache;\nfunction getSceneObjectCache() {\n  if (cache) {\n    return cache;\n  }\n  return cache = new SceneObjectCache();\n}\nfunction getObjectHash(obj) {\n  return JSON.stringify(\n    obj,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\n\nexport { SceneObjectCache, getObjectHash, getSceneObjectCache };\n//# sourceMappingURL=SceneObjectCache.js.map\n","import { useId, useEffect } from 'react';\nimport { sceneGraph } from '@grafana/scenes';\nimport { useSceneContext } from './hooks.js';\nimport { getSceneObjectCache } from '../caching/SceneObjectCache.js';\n\nfunction useSceneObject(options) {\n  const scene = useSceneContext();\n  const key = useId();\n  const cache = getSceneObjectCache();\n  let cacheKeyHash = options.cacheKey ? cache.getHashKey(options.cacheKey, options.objectConstructor) : void 0;\n  let obj = scene.findByKey(key);\n  if (!obj && cacheKeyHash) {\n    obj = cache.get(cacheKeyHash);\n    if (obj && obj.parent !== scene) {\n      if (sceneGraph.findObject(scene, (sceneObj) => sceneObj === obj)) {\n        console.error(\"A scene object cache key matched an object that is already in the scene\");\n        obj = void 0;\n        cacheKeyHash = void 0;\n      } else {\n        obj.clearParent();\n      }\n    }\n  }\n  if (!obj) {\n    obj = options.factory(key);\n    if (cacheKeyHash) {\n      cache.add(cacheKeyHash, obj);\n    }\n  }\n  useEffect(() => scene.addToScene(obj), [obj, scene]);\n  return obj;\n}\n\nexport { useSceneObject };\n//# sourceMappingURL=useSceneObject.js.map\n","import { useEffect } from 'react';\nimport { SceneQueryRunner } from '@grafana/scenes';\nimport { isEqual } from 'lodash';\nimport { useSceneObject } from './useSceneObject.js';\n\nfunction useQueryRunner(options) {\n  const queryRunner = useSceneObject({\n    factory: (key) => new SceneQueryRunner({\n      key,\n      queries: options.queries,\n      maxDataPoints: options.maxDataPoints,\n      datasource: options.datasource,\n      liveStreaming: options.liveStreaming,\n      maxDataPointsFromWidth: options.maxDataPointsFromWidth\n    }),\n    objectConstructor: SceneQueryRunner,\n    cacheKey: options.cacheKey\n  });\n  useEffect(() => {\n    if (!isEqual(queryRunner.state.queries, options.queries)) {\n      queryRunner.setState({ queries: options.queries });\n      queryRunner.runQueries();\n    }\n  }, [queryRunner, options]);\n  return queryRunner;\n}\n\nexport { useQueryRunner };\n//# sourceMappingURL=useQueryRunner.js.map\n","import { SceneDataTransformer, DataProviderProxy } from '@grafana/scenes';\nimport { useSceneContext } from './hooks.js';\nimport { useId, useEffect } from 'react';\nimport { isEqual } from 'lodash';\n\nfunction useDataTransformer(options) {\n  const scene = useSceneContext();\n  const key = useId();\n  let dataTransformer = scene.findByKey(key);\n  if (!dataTransformer) {\n    dataTransformer = new SceneDataTransformer({\n      key,\n      $data: new DataProviderProxy({ source: options.data.getRef() }),\n      transformations: options.transformations\n    });\n  }\n  useEffect(() => scene.addToScene(dataTransformer), [dataTransformer, scene]);\n  useEffect(() => {\n    if (!isEqual(dataTransformer.state.transformations, options.transformations)) {\n      dataTransformer.setState({ transformations: options.transformations });\n      dataTransformer.reprocessTransformations();\n    }\n  }, [dataTransformer, options.transformations]);\n  return dataTransformer;\n}\n\nexport { useDataTransformer };\n//# sourceMappingURL=useDataTransformer.js.map\n","import { TimeRangePicker as TimeRangePicker$1 } from '@grafana/ui';\nimport React from 'react';\nimport { useTimeRange } from '../hooks/hooks.js';\n\nfunction TimeRangePicker(props) {\n  const [value, sceneTimeRange] = useTimeRange();\n  return /* @__PURE__ */ React.createElement(\n    TimeRangePicker$1,\n    {\n      isOnCanvas: true,\n      value,\n      onChange: sceneTimeRange.onTimeRangeChange,\n      timeZone: sceneTimeRange.getTimeZone(),\n      onMoveBackward: () => {\n      },\n      onMoveForward: () => {\n      },\n      onZoom: () => {\n      },\n      onChangeTimeZone: () => {\n      },\n      onChangeFiscalYearStartMonth: () => {\n      }\n    }\n  );\n}\n\nexport { TimeRangePicker };\n//# sourceMappingURL=TimeRangePicker.js.map\n","import React from 'react';\nimport { sceneGraph, VariableValueSelectWrapper } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks.js';\n\nfunction VariableControl({ name, hideLabel, layout }) {\n  const scene = useSceneContext();\n  const variable = sceneGraph.lookupVariable(name, scene);\n  if (!variable) {\n    return /* @__PURE__ */ React.createElement(\"div\", null, \"Variable \", name, \" not found\");\n  }\n  return /* @__PURE__ */ React.createElement(VariableValueSelectWrapper, { key: variable.state.key, variable, hideLabel, layout });\n}\n\nexport { VariableControl };\n//# sourceMappingURL=VariableControl.js.map\n","import React, { useId, useEffect } from 'react';\nimport { VizPanel as VizPanel$1, SceneDataNode, DataProviderProxy } from '@grafana/scenes';\nimport { usePrevious } from 'react-use';\nimport { getPanelOptionsWithDefaults } from '@grafana/data';\nimport { writeSceneLog } from '../utils.js';\nimport { useSceneContext } from '../hooks/hooks.js';\n\nfunction VizPanel(props) {\n  const {\n    title,\n    description,\n    viz,\n    dataProvider,\n    displayMode,\n    hoverHeader,\n    hoverHeaderOffset,\n    headerActions,\n    menu,\n    titleItems,\n    extendPanelContext,\n    seriesLimit,\n    seriesLimitShowAll,\n    collapsible,\n    collapsed\n  } = props;\n  const scene = useSceneContext();\n  const key = useId();\n  const prevProps = usePrevious(props);\n  let panel = scene.findByKey(key);\n  if (!panel) {\n    panel = new VizPanel$1({\n      key,\n      pluginId: viz.pluginId,\n      title,\n      titleItems,\n      description,\n      options: viz.options,\n      fieldConfig: viz.fieldConfig,\n      pluginVersion: viz.pluginVersion,\n      $data: getDataProviderForVizPanel(dataProvider),\n      displayMode,\n      hoverHeader,\n      hoverHeaderOffset,\n      headerActions,\n      menu,\n      extendPanelContext,\n      collapsible,\n      collapsed,\n      seriesLimit,\n      seriesLimitShowAll\n    });\n  }\n  useEffect(() => scene.addToScene(panel), [panel, scene]);\n  useEffect(() => {\n    const stateUpdate = {};\n    if (!prevProps) {\n      return;\n    }\n    if (title !== prevProps.title) {\n      stateUpdate.title = title;\n    }\n    if (description !== prevProps.description) {\n      stateUpdate.description = description;\n    }\n    if (displayMode !== prevProps.displayMode) {\n      stateUpdate.displayMode = displayMode;\n    }\n    if (hoverHeader !== prevProps.hoverHeader) {\n      stateUpdate.hoverHeader = hoverHeader;\n    }\n    if (hoverHeaderOffset !== prevProps.hoverHeaderOffset) {\n      stateUpdate.hoverHeaderOffset = hoverHeaderOffset;\n    }\n    if (menu !== prevProps.menu) {\n      stateUpdate.menu = menu;\n    }\n    if (titleItems !== prevProps.titleItems) {\n      stateUpdate.titleItems = titleItems;\n    }\n    if (headerActions !== prevProps.headerActions) {\n      stateUpdate.headerActions = headerActions;\n    }\n    if (dataProvider !== prevProps.dataProvider) {\n      stateUpdate.$data = getDataProviderForVizPanel(dataProvider);\n    }\n    if (seriesLimit !== prevProps.seriesLimit) {\n      stateUpdate.seriesLimit = seriesLimit;\n    }\n    if (seriesLimitShowAll !== prevProps.seriesLimitShowAll) {\n      stateUpdate.seriesLimitShowAll = seriesLimitShowAll;\n    }\n    if (collapsible !== prevProps.collapsible) {\n      stateUpdate.collapsible = collapsible;\n    }\n    if (collapsed !== prevProps.collapsed) {\n      stateUpdate.collapsed = collapsed;\n    }\n    if (viz !== prevProps.viz) {\n      if (viz.pluginId === prevProps.viz.pluginId) {\n        const plugin = panel.getPlugin();\n        if (plugin) {\n          const optionsWithDefaults = getPanelOptionsWithDefaults({\n            plugin,\n            currentOptions: viz.options,\n            currentFieldConfig: viz.fieldConfig,\n            isAfterPluginChange: false\n          });\n          stateUpdate.options = optionsWithDefaults.options;\n          stateUpdate.fieldConfig = optionsWithDefaults.fieldConfig;\n          panel.clearFieldConfigCache();\n        }\n      }\n    }\n    if (Object.keys(stateUpdate).length > 0) {\n      panel.setState(stateUpdate);\n      writeSceneLog(\"VizPanel\", \"Updating VizPanel state\", stateUpdate);\n    }\n  }, [\n    panel,\n    title,\n    description,\n    displayMode,\n    hoverHeader,\n    hoverHeaderOffset,\n    headerActions,\n    menu,\n    titleItems,\n    viz,\n    dataProvider,\n    seriesLimit,\n    seriesLimitShowAll,\n    collapsible,\n    collapsed,\n    prevProps\n  ]);\n  return /* @__PURE__ */ React.createElement(panel.Component, { model: panel });\n}\nfunction getDataProviderForVizPanel(data) {\n  if (data && !(data instanceof SceneDataNode)) {\n    return new DataProviderProxy({ source: data.getRef() });\n  }\n  return data;\n}\n\nexport { VizPanel };\n//# sourceMappingURL=VizPanel.js.map\n","import React, { useId, useEffect } from 'react';\nimport { useSceneContext } from '../hooks/hooks.js';\nimport { SceneRefreshPicker } from '@grafana/scenes';\nimport { usePrevious } from 'react-use';\n\nfunction RefreshPicker(props) {\n  const scene = useSceneContext();\n  const key = useId();\n  const prevProps = usePrevious(props);\n  let picker = scene.findByKey(key);\n  if (!picker) {\n    picker = new SceneRefreshPicker({\n      key,\n      ...props\n    });\n  }\n  useEffect(() => scene.addToScene(picker), [picker, scene]);\n  useEffect(() => {\n    const stateUpdate = {};\n    if (!prevProps) {\n      return;\n    }\n    if (props.refresh !== prevProps.refresh) {\n      stateUpdate.refresh = props.refresh;\n    }\n    if (props.withText !== prevProps.withText) {\n      stateUpdate.withText = props.withText;\n    }\n    picker.setState(stateUpdate);\n  }, [picker, props, prevProps]);\n  return /* @__PURE__ */ React.createElement(picker.Component, { model: picker });\n}\n\nexport { RefreshPicker };\n//# sourceMappingURL=RefreshPicker.js.map\n","import React from 'react';\nimport { sceneGraph } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks.js';\n\nfunction DataLayerControl({ name }) {\n  const scene = useSceneContext();\n  const layerSets = sceneGraph.getDataLayers(scene);\n  const layer = getLayer(layerSets, name);\n  if (!layer) {\n    return /* @__PURE__ */ React.createElement(\"div\", null, \"Annotation \", name, \" not found\");\n  }\n  return /* @__PURE__ */ React.createElement(layer.Component, { model: layer });\n}\nfunction getLayer(layers, name) {\n  for (let i = 0; i < layers.length; i++) {\n    const layer = layers[i].state.layers.find((layer2) => layer2.state.name === name);\n    if (layer) {\n      return layer;\n    }\n  }\n  return void 0;\n}\n\nexport { DataLayerControl };\n//# sourceMappingURL=DataLayerControl.js.map\n","import { useState, useEffect } from 'react';\nimport { CustomVariable as CustomVariable$1 } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks.js';\n\nfunction CustomVariable({\n  query,\n  name,\n  label,\n  hide,\n  initialValue,\n  isMulti,\n  includeAll,\n  children\n}) {\n  const scene = useSceneContext();\n  const [variableAdded, setVariableAdded] = useState();\n  let variable = scene.findVariable(name);\n  if (!variable) {\n    variable = new CustomVariable$1({ name, label, query, value: initialValue, isMulti, includeAll, hide });\n  }\n  useEffect(() => {\n    const removeFn = scene.addVariable(variable);\n    setVariableAdded(true);\n    return removeFn;\n  }, [variable, scene, name]);\n  useEffect(() => {\n    variable == null ? void 0 : variable.setState({\n      label,\n      query,\n      hide,\n      isMulti,\n      includeAll\n    });\n  }, [hide, includeAll, isMulti, label, query, variable]);\n  if (!variableAdded) {\n    return null;\n  }\n  return children;\n}\n\nexport { CustomVariable };\n//# sourceMappingURL=CustomVariable.js.map\n","import { useState, useEffect } from 'react';\nimport { DataSourceVariable as DataSourceVariable$1 } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks.js';\n\nfunction DataSourceVariable({\n  pluginId,\n  regex,\n  name,\n  label,\n  hide,\n  initialValue,\n  isMulti,\n  includeAll,\n  children\n}) {\n  const scene = useSceneContext();\n  const [variableAdded, setVariableAdded] = useState();\n  let variable = scene.findVariable(name);\n  if (!variable) {\n    variable = new DataSourceVariable$1({\n      pluginId,\n      regex,\n      name,\n      label,\n      value: initialValue,\n      isMulti,\n      hide,\n      includeAll\n    });\n  }\n  useEffect(() => {\n    const removeFn = scene.addVariable(variable);\n    setVariableAdded(true);\n    return removeFn;\n  }, [variable, scene, name]);\n  useEffect(() => {\n    if (!variableAdded) {\n      return;\n    }\n    if (variable.state.pluginId === pluginId && variable.state.regex === regex && variable.state.label === label && variable.state.hide === hide && variable.state.includeAll === includeAll) {\n      return;\n    }\n    variable.setState({\n      pluginId,\n      regex,\n      label,\n      hide,\n      includeAll\n    });\n    variable.refreshOptions();\n  }, [hide, includeAll, label, pluginId, regex, variable, variableAdded]);\n  if (!variableAdded) {\n    return null;\n  }\n  return children;\n}\n\nexport { DataSourceVariable };\n//# sourceMappingURL=DataSourceVariable.js.map\n","import { useState, useEffect } from 'react';\nimport { QueryVariable as QueryVariable$1 } from '@grafana/scenes';\nimport { useSceneContext } from '../hooks/hooks.js';\nimport { isEqual } from 'lodash';\n\nfunction QueryVariable({\n  query,\n  name,\n  datasource,\n  label,\n  hide,\n  regex,\n  refresh,\n  sort,\n  initialValue,\n  isMulti,\n  includeAll,\n  children\n}) {\n  const scene = useSceneContext();\n  const [variableAdded, setVariableAdded] = useState();\n  let variable = scene.findVariable(name);\n  if (!variable) {\n    variable = new QueryVariable$1({\n      name,\n      label,\n      query,\n      datasource,\n      refresh,\n      sort,\n      regex,\n      value: initialValue,\n      isMulti,\n      hide,\n      includeAll\n    });\n  }\n  useEffect(() => {\n    const removeFn = scene.addVariable(variable);\n    setVariableAdded(true);\n    return removeFn;\n  }, [variable, scene, name]);\n  useEffect(() => {\n    if (!variableAdded) {\n      return;\n    }\n    if (isEqual(variable.state.query, query) && isEqual(variable.state.datasource, datasource) && variable.state.regex === regex && variable.state.label === label && variable.state.hide === hide && variable.state.includeAll === includeAll && variable.state.refresh === refresh && variable.state.sort === sort) {\n      return;\n    }\n    variable.setState({\n      label,\n      query,\n      datasource,\n      refresh,\n      sort,\n      regex,\n      hide,\n      includeAll\n    });\n    variable.refreshOptions();\n  }, [datasource, hide, includeAll, label, query, refresh, regex, sort, variable, variableAdded]);\n  if (!variableAdded) {\n    return null;\n  }\n  return children;\n}\n\nexport { QueryVariable };\n//# sourceMappingURL=QueryVariable.js.map\n","import { urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService } from '@grafana/runtime';\nimport React, { createContext, useContext, useEffect, useState, useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useVariables, useTimeRange } from '../hooks/hooks.js';\n\nconst BreadcrumbContext = createContext({\n  breadcrumbs: [],\n  addBreadcrumb: () => {\n  },\n  removeBreadcrumb: () => {\n  }\n});\nfunction BreadcrumbProvider({ children }) {\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  return /* @__PURE__ */ React.createElement(\n    BreadcrumbContext.Provider,\n    {\n      value: {\n        breadcrumbs,\n        addBreadcrumb: useCallback((breadcrumb) => setBreadcrumbs((prev) => [...prev, breadcrumb]), []),\n        removeBreadcrumb: useCallback(\n          (breadcrumb) => setBreadcrumbs((prev) => prev.filter((b) => b.url !== breadcrumb.url)),\n          []\n        )\n      }\n    },\n    children\n  );\n}\nfunction Breadcrumb({ text, path, extraKeys }) {\n  const { addBreadcrumb, removeBreadcrumb } = useContext(BreadcrumbContext);\n  const buildUrl = useUrlBuilder();\n  useEffect(() => {\n    const breadcrumb = {\n      text,\n      url: buildUrl(path, extraKeys)\n    };\n    addBreadcrumb(breadcrumb);\n    return () => {\n      removeBreadcrumb(breadcrumb);\n    };\n  }, [text, path, extraKeys, addBreadcrumb, buildUrl, removeBreadcrumb]);\n  return null;\n}\nfunction useUrlBuilder() {\n  const queryParams = useQueryParams()[0];\n  const variables = useVariables();\n  const [_, timeRange] = useTimeRange();\n  return useCallback(\n    (urlBase, extraKeys) => {\n      const params = {};\n      for (const v of variables) {\n        if (v.urlSync && !v.state.skipUrlSync) {\n          const state = v.urlSync.getUrlState();\n          Object.assign(params, state);\n        }\n      }\n      if (timeRange.urlSync) {\n        const state = timeRange.urlSync.getUrlState();\n        Object.assign(params, state);\n      }\n      if (extraKeys) {\n        for (const extra of extraKeys) {\n          if (queryParams[extra]) {\n            params[extra] = queryParams[extra];\n          }\n        }\n      }\n      return urlUtil.renderUrl(urlBase, params);\n    },\n    [variables, queryParams, timeRange]\n  );\n}\nfunction useQueryParams() {\n  const { search } = useLocation();\n  const queryParams = useMemo(() => locationSearchToObject(search || \"\"), [search]);\n  const update = useCallback((values, replace) => locationService.partial(values, replace), []);\n  return [queryParams, update];\n}\n\nexport { Breadcrumb, BreadcrumbContext, BreadcrumbProvider };\n//# sourceMappingURL=BreadcrumbContext.js.map\n","import { sceneGraph } from '@grafana/scenes';\nimport { useSceneContext } from './hooks.js';\n\nfunction useVariableValues(name) {\n  const scene = useSceneContext();\n  const variable = sceneGraph.lookupVariable(name, scene);\n  if (!variable) {\n    return [void 0, false];\n  }\n  variable.useState();\n  const set = variable.parent;\n  const isLoading = set.isVariableLoadingOrWaitingToUpdate(variable);\n  let value = variable.getValue();\n  if (value == null) {\n    return [void 0, isLoading];\n  }\n  if (!Array.isArray(value)) {\n    value = [value];\n  }\n  return [value, isLoading];\n}\n\nexport { useVariableValues };\n//# sourceMappingURL=useVariableValues.js.map\n","import { sceneGraph, QueryVariable } from '@grafana/scenes';\nimport { useSceneContext } from './hooks.js';\nimport { useEffect } from 'react';\nimport { isEqual } from 'lodash';\n\nfunction useQueryVariable(options) {\n  const scene = useSceneContext();\n  let variable = sceneGraph.lookupVariable(options.name, scene);\n  if (!variable) {\n    variable = new QueryVariable({\n      name: options.name,\n      datasource: { uid: options.datasource },\n      query: options.query,\n      regex: options.regex\n    });\n  }\n  if (!(variable instanceof QueryVariable)) {\n    variable = null;\n  }\n  useEffect(() => {\n    if (variable) {\n      scene.addVariable(variable);\n    }\n  }, [variable, scene]);\n  useEffect(() => {\n    var _a;\n    if (((_a = variable == null ? void 0 : variable.state.datasource) == null ? void 0 : _a.uid) !== options.datasource || !isEqual(variable == null ? void 0 : variable.state.query, options.query) || (variable == null ? void 0 : variable.state.regex) !== options.regex) {\n      variable == null ? void 0 : variable.setState({ datasource: { uid: options.datasource }, query: options.query, regex: options.regex });\n      variable == null ? void 0 : variable.refreshOptions();\n    }\n  }, [options, variable]);\n  return variable;\n}\n\nexport { useQueryVariable };\n//# sourceMappingURL=useQueryVariable.js.map\n","import { sceneGraph, MultiValueVariable } from '@grafana/scenes';\nimport { useSceneContext } from './hooks.js';\n\nfunction useVariableValue(name) {\n  const scene = useSceneContext();\n  const variable = sceneGraph.lookupVariable(name, scene);\n  if (!variable || variable instanceof MultiValueVariable && variable.state.isMulti === true) {\n    return [void 0, false];\n  }\n  variable.useState();\n  const set = variable.parent;\n  const isLoading = set.isVariableLoadingOrWaitingToUpdate(variable);\n  let value = variable.getValue();\n  if (value == null) {\n    return [void 0, isLoading];\n  }\n  return [value, isLoading];\n}\n\nexport { useVariableValue };\n//# sourceMappingURL=useVariableValue.js.map\n","import { useState, useEffect } from 'react';\nimport { useSceneContext } from '../hooks/hooks.js';\nimport { dataLayers, SceneDataLayerSet } from '@grafana/scenes';\nimport { writeSceneLog } from '../utils.js';\n\nfunction AnnotationLayer({ name, query, children }) {\n  const scene = useSceneContext();\n  const [annotationAdded, setAnnotationAdded] = useState();\n  let annotation = findAnnotationLayer(scene, name);\n  if (!annotation) {\n    annotation = new dataLayers.AnnotationsDataLayer({ name, query });\n  }\n  useEffect(() => {\n    const removeFn = addAnnotationLayer(scene, annotation);\n    setAnnotationAdded(true);\n    return removeFn;\n  }, [scene, name, annotation]);\n  useEffect(() => {\n  }, [annotationAdded]);\n  if (!annotationAdded) {\n    return null;\n  }\n  return children;\n}\nfunction findAnnotationLayer(scene, name) {\n  const annotations = scene.state.$data;\n  if (!annotations) {\n    return;\n  }\n  return annotations.state.layers.find((anno) => anno.state.name === name);\n}\nfunction addAnnotationLayer(scene, layer) {\n  let set = scene.state.$data;\n  if (set) {\n    set.setState({ layers: [...set.state.layers, layer] });\n  } else {\n    set = new SceneDataLayerSet({ layers: [layer] });\n    scene.setState({ $data: set });\n  }\n  writeSceneLog(\"SceneContext\", `Adding annotation data layer: ${layer.state.name} key: ${layer.state.key}`);\n  return () => {\n    set.setState({ layers: set.state.layers.filter((x) => x !== layer) });\n    writeSceneLog(\"SceneContext\", `Removing annotation data layer: ${layer.state.name} key: ${layer.state.key}`);\n  };\n}\n\nexport { AnnotationLayer };\n//# sourceMappingURL=AnnotationLayer.js.map\n","import React from 'react';\nimport { EmbeddedScene } from '@grafana/scenes';\nimport { SceneContext } from '../contexts/SceneContextProvider.js';\nimport { SceneContextObject } from '../contexts/SceneContextObject.js';\n\nclass EmbeddedSceneWithContext extends EmbeddedScene {\n  constructor(state) {\n    super({ ...state, context: new SceneContextObject() });\n  }\n}\nEmbeddedSceneWithContext.Component = ({ model }) => {\n  return /* @__PURE__ */ React.createElement(SceneContext.Provider, { value: model.state.context }, /* @__PURE__ */ React.createElement(EmbeddedScene.Component, { model }));\n};\n\nexport { EmbeddedSceneWithContext };\n//# sourceMappingURL=EmbeddedSceneWithContext.js.map\n","import { useTheme2 } from '@grafana/ui';\nimport React from 'react';\n\nfunction VizGridLayout({ children, minWidth = 400, minHeight = 320 }) {\n  const theme = useTheme2();\n  const style = {\n    display: \"grid\",\n    flexGrow: 1,\n    gridTemplateColumns: `repeat(auto-fit, minmax(${minWidth}px, 1fr))`,\n    gridAutoRows: `minmax(${minHeight}px, auto)`,\n    columnGap: theme.spacing(1),\n    rowGap: theme.spacing(1)\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", { style }, children);\n}\n\nexport { VizGridLayout };\n//# sourceMappingURL=VizGridLayout.js.map\n","import { isEmpty } from 'lodash';\nimport { ReactElement, useMemo } from 'react';\n\nimport { DataFrame, MatcherConfig, SelectableValue } from '@grafana/data';\nimport { SceneDataProvider } from '@grafana/scenes';\nimport { InlineField, InlineFieldRow, MultiSelect } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nexport type LogFilter = {\n  pluginIds?: Set<string>;\n  extensionPointIds?: Set<string>;\n  severity?: Set<string>;\n  initial?: string;\n};\n\ntype LogViewFiltersProps = {\n  provider: SceneDataProvider;\n  filteredProvider: SceneDataProvider;\n  filter: LogFilter;\n  onChange: (filter: LogFilter) => void;\n};\n\nexport function LogViewFilters({ provider, filteredProvider, filter, onChange }: LogViewFiltersProps): ReactElement {\n  const { pluginIds, extensionPointIds, severity } = useLogFilters(provider, filteredProvider, filter);\n\n  const onChangePluginIds = (values: Array<SelectableValue<string>>) => {\n    const update = {\n      ...filter,\n      pluginIds: mapToSet(values),\n    };\n\n    if (isEmpty(filter.extensionPointIds) && isEmpty(filter.severity)) {\n      update.initial = isEmpty(values) ? undefined : 'pluginId';\n    }\n\n    onChange(update);\n  };\n\n  const onChangeExtensionPointIds = (values: Array<SelectableValue<string>>) => {\n    const update = {\n      ...filter,\n      extensionPointIds: mapToSet(values),\n    };\n\n    if (isEmpty(filter.pluginIds) && isEmpty(filter.severity)) {\n      update.initial = isEmpty(values) ? undefined : 'extensionPointId';\n    }\n\n    onChange(update);\n  };\n\n  const onChangeSeverity = (values: Array<SelectableValue<string>>) => {\n    const update = {\n      ...filter,\n      severity: mapToSet(values),\n    };\n\n    if (isEmpty(filter.pluginIds) && isEmpty(filter.extensionPointIds)) {\n      update.initial = isEmpty(values) ? undefined : 'severity';\n    }\n\n    onChange(update);\n  };\n\n  return (\n    <InlineFieldRow>\n      <InlineField label={t('plugins.log-view-filters.label-plugin-id', 'Plugin Id')}>\n        <MultiSelect options={pluginIds} onChange={onChangePluginIds} />\n      </InlineField>\n      <InlineField label={t('plugins.log-view-filters.label-extension', 'Extension')}>\n        <MultiSelect options={extensionPointIds} onChange={onChangeExtensionPointIds} />\n      </InlineField>\n      <InlineField label={t('plugins.log-view-filters.label-severity', 'Severity')}>\n        <MultiSelect options={severity} onChange={onChangeSeverity} />\n      </InlineField>\n    </InlineFieldRow>\n  );\n}\n\nexport type FilterConfig = {\n  fieldName: string;\n  config: MatcherConfig;\n};\n\ntype LogFilterOptions = {\n  pluginIds: Array<SelectableValue<string>>;\n  extensionPointIds: Array<SelectableValue<string>>;\n  severity: Array<SelectableValue<string>>;\n};\n\nfunction useLogFilters(\n  provider: SceneDataProvider,\n  filteredProvider: SceneDataProvider,\n  filter: LogFilter\n): LogFilterOptions {\n  const { data } = provider.useState();\n  const { data: filteredData } = filteredProvider.useState();\n\n  return useMemo(() => {\n    if (data && data?.series.length > 1) {\n      console.warn('LogViewFilter does not support multiple series in query result.');\n    }\n\n    const frame = data?.series[0];\n    const filteredFrame = filteredData?.series[0];\n\n    if (!frame) {\n      return {\n        pluginIds: [],\n        extensionPointIds: [],\n        severity: [],\n      };\n    }\n\n    if (!filteredFrame) {\n      return toFilterOptions({\n        severity: frame,\n        pluginId: frame,\n        extensionPointId: frame,\n      });\n    }\n\n    switch (filter.initial) {\n      case 'extensionPointId':\n        return toFilterOptions({\n          severity: filteredFrame,\n          pluginId: filteredFrame,\n          extensionPointId: frame,\n        });\n\n      case 'severity':\n        return toFilterOptions({\n          severity: frame,\n          pluginId: filteredFrame,\n          extensionPointId: filteredFrame,\n        });\n\n      case 'pluginId':\n        return toFilterOptions({\n          severity: filteredFrame,\n          pluginId: frame,\n          extensionPointId: filteredFrame,\n        });\n\n      default:\n        return toFilterOptions({\n          severity: frame,\n          pluginId: frame,\n          extensionPointId: frame,\n        });\n    }\n  }, [data, filteredData, filter]);\n}\n\nfunction mapToSet(selected: Array<SelectableValue<string>>): Set<string> | undefined {\n  if (selected.length <= 0) {\n    return undefined;\n  }\n\n  return selected.reduce((set, selectable) => {\n    if (selectable.value) {\n      set.add(selectable.value);\n    }\n    return set;\n  }, new Set<string>());\n}\n\nfunction toSelectableArray(source: Set<string>): Array<SelectableValue<string>> {\n  return Array.from(source).reduce((all: Array<SelectableValue<string>>, current) => {\n    if (!current) {\n      return all;\n    }\n    all.push({\n      value: current,\n      label: current,\n    });\n    return all;\n  }, []);\n}\n\nfunction toFilterOptions(sources: {\n  severity: DataFrame;\n  pluginId: DataFrame;\n  extensionPointId: DataFrame;\n}): LogFilterOptions {\n  const { severity, pluginId, extensionPointId } = sources;\n  const severityIndex = severity.fields.findIndex((f) => f.name === 'severity');\n  const pluginIdIndex = pluginId.fields.findIndex((f) => f.name === 'pluginId');\n  const extensionPointIdIndex = extensionPointId.fields.findIndex((f) => f.name === 'extensionPointId');\n\n  const severities = new Set<string>(severity.fields[severityIndex].values);\n  const pluginIds = new Set<string>(pluginId.fields[pluginIdIndex].values);\n  const extensionPointIds = new Set<string>(extensionPointId.fields[extensionPointIdIndex].values);\n\n  return {\n    severity: toSelectableArray(severities),\n    pluginIds: toSelectableArray(pluginIds),\n    extensionPointIds: toSelectableArray(extensionPointIds),\n  };\n}\n","import { Observable, scan } from 'rxjs';\n\nimport {\n  createDataFrame,\n  DataFrame,\n  DataFrameType,\n  DataQueryRequest,\n  DataQueryResponse,\n  FieldType,\n  LoadingState,\n  TestDataSourceResponse,\n} from '@grafana/data';\nimport { RuntimeDataSource, SceneDataQuery } from '@grafana/scenes';\n\nimport { ExtensionsLog, ExtensionsLogItem } from './log';\n\nexport class ExtensionsLogDataSource extends RuntimeDataSource {\n  constructor(\n    public readonly pluginId: string,\n    public readonly uid: string,\n    private readonly extensionsLog: ExtensionsLog\n  ) {\n    super(pluginId, uid);\n  }\n\n  query(request: DataQueryRequest): Observable<DataQueryResponse> {\n    const [query] = request.targets;\n\n    return this.extensionsLog.asObservable().pipe(\n      scan<ExtensionsLogItem, DataQueryResponse>(\n        (response, item) => {\n          const [existing] = response.data;\n\n          return {\n            data: [createFrame(query, item, existing)],\n            key: query.key ?? query.refId,\n            state: LoadingState.Streaming,\n          };\n        },\n        {\n          data: [],\n          key: query.key ?? query.refId,\n          state: LoadingState.Streaming,\n        }\n      )\n    );\n  }\n\n  testDatasource(): Promise<TestDataSourceResponse> {\n    return Promise.resolve({ status: 'success', message: 'OK' });\n  }\n}\n\nfunction createFrame(query: SceneDataQuery, item: ExtensionsLogItem, existing?: DataFrame): DataFrame {\n  const timestamps = existing?.fields?.[0]?.values ?? [];\n  const messages = existing?.fields?.[1]?.values ?? [];\n  const levels = existing?.fields?.[2]?.values ?? [];\n  const ids = existing?.fields?.[3]?.values ?? [];\n  const labels = existing?.fields?.[4]?.values ?? [];\n  const pluginIds = existing?.fields?.[5]?.values ?? [];\n  const extensionPointIds = existing?.fields?.[6]?.values ?? [];\n\n  return createDataFrame({\n    refId: query.refId,\n    meta: { type: DataFrameType.LogLines },\n    fields: [\n      {\n        name: 'timestamp',\n        type: FieldType.time,\n        values: [item.timestamp, ...timestamps],\n      },\n      {\n        name: 'body',\n        type: FieldType.string,\n        values: [item.message, ...messages],\n      },\n      {\n        name: 'severity',\n        type: FieldType.string,\n        values: [item.level, ...levels],\n      },\n      {\n        name: 'id',\n        type: FieldType.string,\n        values: [item.id, ...ids],\n      },\n      {\n        name: 'labels',\n        type: FieldType.other,\n        values: [item.labels, ...labels],\n      },\n      {\n        name: 'pluginId',\n        type: FieldType.string,\n        values: [item.pluginId ?? null, ...pluginIds],\n      },\n      {\n        name: 'extensionPointId',\n        type: FieldType.string,\n        values: [item.extensionPointId ?? null, ...extensionPointIds],\n      },\n    ],\n  });\n}\n","import { isEmpty } from 'lodash';\nimport { Observable, scan } from 'rxjs';\n\nimport { createDataFrame, CustomTransformOperator, DataFrame, PartialDataFrame } from '@grafana/data';\n\nimport { LogFilter } from './LogViewFilters';\n\nexport function createFilterTransformation(filter: LogFilter): CustomTransformOperator {\n  return function cascadingFilterTransformation() {\n    return function (source: Observable<DataFrame[]>) {\n      return source.pipe(\n        scan((filtered: DataFrame[], current) => {\n          if (isEmpty(filter.extensionPointIds) && isEmpty(filter.pluginIds) && isEmpty(filter.severity)) {\n            return current;\n          }\n\n          for (const frame of current) {\n            const pluginIdIndex = frame.fields.findIndex((f) => f.name === 'pluginId');\n            const extensionPointIdIndex = frame.fields.findIndex((f) => f.name === 'extensionPointId');\n            const severityIndex = frame.fields.findIndex((f) => f.name === 'severity');\n\n            if (pluginIdIndex === -1 && !isEmpty(filter.pluginIds)) {\n              continue;\n            }\n\n            if (extensionPointIdIndex === -1 && !isEmpty(filter.extensionPointIds)) {\n              continue;\n            }\n\n            if (severityIndex === -1 && !isEmpty(filter.severity)) {\n              continue;\n            }\n\n            const target: PartialDataFrame = {\n              ...frame,\n              fields: frame.fields.map((f) => ({\n                ...f,\n                values: [],\n              })),\n            };\n\n            for (let index = 0; index < frame.length; index++) {\n              const pluginId = frame.fields[pluginIdIndex].values[index];\n              const extensionPointId = frame.fields[extensionPointIdIndex].values[index];\n              const severity = frame.fields[severityIndex].values[index];\n\n              if (!isEmpty(filter.pluginIds) && !filter.pluginIds?.has(pluginId)) {\n                continue;\n              }\n\n              if (!isEmpty(filter.extensionPointIds) && !filter.extensionPointIds?.has(extensionPointId)) {\n                continue;\n              }\n\n              if (!isEmpty(filter.severity) && !filter.severity?.has(severity)) {\n                continue;\n              }\n\n              copyRow(frame, target, index);\n            }\n\n            filtered.push(createDataFrame(target));\n          }\n\n          return filtered;\n        }, [])\n      );\n    };\n  };\n}\n\nfunction copyRow(source: DataFrame, target: PartialDataFrame, rowIndex: number) {\n  for (let index = 0; index < source.fields.length; index++) {\n    const field = source.fields[index];\n\n    if (!target.fields[index]) {\n      target.fields[index] = {\n        ...field,\n        values: [],\n      };\n    }\n\n    const value = source.fields[index].values[rowIndex];\n    target.fields[index].values?.push(value);\n  }\n}\n","import { nanoid } from 'nanoid';\nimport { ReactElement, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { sceneUtils, VizConfigBuilders } from '@grafana/scenes';\nimport {\n  SceneContextProvider,\n  useDataTransformer,\n  useQueryRunner,\n  VizGridLayout,\n  VizPanel,\n} from '@grafana/scenes-react';\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { LogFilter, LogViewFilters } from './LogViewFilters';\nimport { ExtensionsLogDataSource } from './dataSource';\nimport { createFilterTransformation } from './filterTransformation';\nimport { log } from './log';\n\nconst DATASOURCE_REF = {\n  uid: nanoid(),\n  type: 'grafana-extensionslog-datasource',\n};\n\nconst logsViz = VizConfigBuilders.logs().setOption('wrapLogMessage', true).build();\n\nsceneUtils.registerRuntimeDataSource({\n  dataSource: new ExtensionsLogDataSource(DATASOURCE_REF.type, DATASOURCE_REF.uid, log),\n});\n\nexport default function LogViewer(): ReactElement {\n  return (\n    <SceneContextProvider>\n      <LogViewScene />\n    </SceneContextProvider>\n  );\n}\n\nfunction LogViewScene(): ReactElement | null {\n  const [filter, setFilter] = useState<LogFilter>({});\n\n  const data = useQueryRunner({\n    datasource: DATASOURCE_REF,\n    queries: [{ refId: 'A' }],\n    liveStreaming: true,\n  });\n\n  const filteredData = useDataTransformer({\n    transformations: [createFilterTransformation(filter)],\n    data: data,\n  });\n\n  return (\n    <Page\n      navId=\"extensions\"\n      actions={<LogViewFilters provider={data} filteredProvider={filteredData} filter={filter} onChange={setFilter} />}\n    >\n      <AutoSizer>\n        {({ height, width }) => (\n          <VizGridLayout minHeight={height} minWidth={width}>\n            <VizPanel title=\"\" viz={logsViz} dataProvider={filteredData} />\n          </VizGridLayout>\n        )}\n      </AutoSizer>\n    </Page>\n  );\n}\n"],"names":["logger","message","rest","loggingEnabled","SceneContextObject","state","_a","_b","obj","deactivate","x","key","name","variables","variable","set","ctx","context","SceneContext","SceneContextProvider","children","timeRange","withQueryController","parentContext","childContext","setChildContext","initialTimeRange","childContext2","innerProvider","scene","sceneTimeRange","value","useUpdateWhenSceneChanges","updateReason","setUpdateReason","subscriptions","v","newState","oldState","useVariableInterpolator","options","str","perf","warned","PROCESS","emitWarning","msg","type","code","fn","AC","AS","_","warnACPolyfill","reason","printACPolyfillWarning","shouldWarn","TYPE","isPosInt","n","getUintArray","max","ZeroArray","size","Stack","#constructing","HeapCls","s","LRUCache","#max","#maxSize","#dispose","#disposeAfter","#fetchMethod","#memoMethod","#size","#calculatedSize","#keyMap","#keyList","#valList","#next","#prev","#head","#tail","#free","#disposed","#sizes","#starts","#ttls","#hasDispose","#hasFetchMethod","#hasDisposeAfter","c","p","#isBackgroundFetch","k","index","#backgroundFetch","#moveToTail","#indexes","#rindexes","#isStale","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","dispose","disposeAfter","noDisposeOnSet","noUpdateTTL","maxSize","maxEntrySize","sizeCalculation","fetchMethod","memoMethod","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchRejection","allowStaleOnFetchAbort","ignoreFetchAbort","UintArray","#initializeSizeTracking","#initializeTTLTracking","ttls","starts","#setItemTTL","start","t","#delete","#updateItemAge","#statusTTL","status","cachedNow","getNow","age","sizes","#removeItemSize","#requireSize","#addItemSize","#evict","_i","_s","_st","_k","_v","i","#isValidIndex","getOptions","thisp","deleted","entry","remain","arr","setOptions","oldVal","oldValue","dt","task","val","free","head","hasOptions","peekOptions","ac","signal","fetchOpts","cb","updateCache","aborted","ignoreAbort","fetchFail","bf","eb","er","allowStaleAborted","noDelete","pcall","res","rej","fmp","b","fetchOptions","forceRefresh","stale","isStale","staleVal","memoOptions","vv","fetching","#connect","#clear","pi","ni","__typeError","__accessCheck","member","__privateGet","getter","__privateAdd","__privateSet","setter","__privateWrapper","_cache","_objectRefIds","_objectRefIdCounter","SceneObjectCache","keyHash","object","objectRefId","getObjectHash","cache","getSceneObjectCache","result","useSceneObject","cacheKeyHash","sceneObj","useQueryRunner","queryRunner","useDataTransformer","dataTransformer","TimeRangePicker","props","VariableControl","hideLabel","layout","VizPanel","title","description","viz","dataProvider","displayMode","hoverHeader","hoverHeaderOffset","headerActions","menu","titleItems","extendPanelContext","seriesLimit","seriesLimitShowAll","collapsible","collapsed","prevProps","panel","getDataProviderForVizPanel","stateUpdate","plugin","optionsWithDefaults","getPanelOptionsWithDefaults","data","RefreshPicker","picker","DataLayerControl","layerSets","layer","getLayer","layers","layer2","CustomVariable","query","label","hide","initialValue","isMulti","includeAll","variableAdded","setVariableAdded","removeFn","DataSourceVariable","pluginId","regex","datasource","refresh","sort","BreadcrumbContext","BreadcrumbProvider","breadcrumbs","setBreadcrumbs","breadcrumb","prev","Breadcrumb","text","path","extraKeys","addBreadcrumb","removeBreadcrumb","buildUrl","useUrlBuilder","queryParams","useQueryParams","urlBase","params","extra","search","update","values","replace","useVariableValues","isLoading","useQueryVariable","useVariableValue","AnnotationLayer","annotationAdded","setAnnotationAdded","annotation","findAnnotationLayer","addAnnotationLayer","annotations","anno","EmbeddedSceneWithContext","model","VizGridLayout","minWidth","minHeight","theme","style","LogViewFilters","provider","filteredProvider","filter","onChange","pluginIds","extensionPointIds","severity","useLogFilters","onChangePluginIds","mapToSet","onChangeExtensionPointIds","onChangeSeverity","InlineFieldRow","InlineField","filteredData","frame","filteredFrame","toFilterOptions","selected","selectable","toSelectableArray","source","all","current","sources","extensionPointId","severityIndex","f","pluginIdIndex","extensionPointIdIndex","severities","ExtensionsLogDataSource","uid","extensionsLog","request","scan","response","item","existing","createFrame","timestamps","messages","levels","ids","labels","createFilterTransformation","filtered","target","copyRow","rowIndex","field","DATASOURCE_REF","logsViz","log","LogViewer","LogViewScene","setFilter","Page","height","width"],"sourceRoot":""}