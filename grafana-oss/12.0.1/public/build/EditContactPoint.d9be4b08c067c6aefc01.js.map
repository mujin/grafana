{"version":3,"file":"EditContactPoint.d9be4b08c067c6aefc01.js","mappings":"6RAaO,MAAMA,EAAmB,CAAC,CAAE,aAAAC,EAAc,iBAAAC,CAAiB,IAAa,CAC7E,KAAM,CAACC,EAAeC,CAAW,KAAI,MAAuB,KAAmB,kBAAkB,EAE3FC,EAAW,CAACF,GAAiB,CAACC,EAEpC,OAAIF,IAAqB,QAChB,OAACI,EAAA,EAAmB,CAAC,aAAAL,EAA4B,SAAAI,EAAoB,SAAQ,GAAC,KAGnF,OAACE,EAAA,GACC,uBAAwBL,EACxB,aAAAD,EACA,SAAAI,EACA,SAAQ,GACV,CAGN,EClBMG,EAAmB,IAAM,CAC7B,KAAM,CAAE,qBAAAC,CAAqB,KAAI,MAAgB,EAC3C,CAAE,KAAAC,EAAO,EAAG,KAAI,KAAU,EAE1BC,EAAmB,mBAAmBD,CAAI,EAC1C,CACJ,UAAAE,EACA,MAAAC,EACA,KAAMZ,CACR,KAAI,MAAmB,CAAE,KAAMU,EAAkB,aAAcF,CAAsB,CAAC,EAEtF,OAAIG,KACK,OAACE,EAAA,EAAkB,CAAC,QAAM,KAAE,2CAA4C,YAAY,EAAG,EAG5FD,KAEA,OAACE,EAAA,GACC,SAAS,QACT,SAAO,KAAE,kEAAmE,+BAA+B,EAE1G,kBAAmBF,CAAK,EAC3B,EAICZ,KAQE,OAACD,EAAgB,CAAC,iBAAkBS,EAAuB,aAAAR,CAAA,CAA4B,KAN1F,OAACc,EAAA,EAAK,CAAC,SAAS,QAAQ,SAAO,KAAE,uDAAwD,oBAAoB,EAC1G,6DACH,CAKN,EAEA,SAASC,GAAuB,CAC9B,SACE,OAAC,IAAuB,CAAC,MAAM,YAAY,WAAW,eACpD,mBAACR,EAAA,EAAiB,EACpB,CAEJ,CAEA,WAAeS,EAAA,GAAsBD,CAAoB,C","sources":["webpack://grafana/./public/app/features/alerting/unified/components/receivers/EditReceiverView.tsx","webpack://grafana/./public/app/features/alerting/unified/components/contact-points/EditContactPoint.tsx"],"sourcesContent":["import { GrafanaManagedContactPoint, Receiver } from 'app/plugins/datasource/alertmanager/types';\n\nimport { AlertmanagerAction, useAlertmanagerAbility } from '../../hooks/useAbilities';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../utils/datasource';\n\nimport { CloudReceiverForm } from './form/CloudReceiverForm';\nimport { GrafanaReceiverForm } from './form/GrafanaReceiverForm';\n\ninterface Props {\n  alertmanagerName: string;\n  contactPoint: GrafanaManagedContactPoint | Receiver;\n}\n\nexport const EditReceiverView = ({ contactPoint, alertmanagerName }: Props) => {\n  const [editSupported, editAllowed] = useAlertmanagerAbility(AlertmanagerAction.UpdateContactPoint);\n\n  const readOnly = !editSupported || !editAllowed;\n\n  if (alertmanagerName === GRAFANA_RULES_SOURCE_NAME) {\n    return <GrafanaReceiverForm contactPoint={contactPoint} readOnly={readOnly} editMode />;\n  } else {\n    return (\n      <CloudReceiverForm\n        alertManagerSourceName={alertmanagerName}\n        contactPoint={contactPoint}\n        readOnly={readOnly}\n        editMode\n      />\n    );\n  }\n};\n","import { useParams } from 'react-router-dom-v5-compat';\n\nimport { Alert, LoadingPlaceholder } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\nimport { useGetContactPoint } from 'app/features/alerting/unified/components/contact-points/useContactPoints';\nimport { stringifyErrorLike } from 'app/features/alerting/unified/utils/misc';\n\nimport { useAlertmanager } from '../../state/AlertmanagerContext';\nimport { withPageErrorBoundary } from '../../withPageErrorBoundary';\nimport { AlertmanagerPageWrapper } from '../AlertingPageWrapper';\nimport { EditReceiverView } from '../receivers/EditReceiverView';\n\nconst EditContactPoint = () => {\n  const { selectedAlertmanager } = useAlertmanager();\n  const { name = '' } = useParams();\n\n  const contactPointName = decodeURIComponent(name);\n  const {\n    isLoading,\n    error,\n    data: contactPoint,\n  } = useGetContactPoint({ name: contactPointName, alertmanager: selectedAlertmanager! });\n\n  if (isLoading) {\n    return <LoadingPlaceholder text={t('alerting.edit-contact-point.text-loading', 'Loading...')} />;\n  }\n\n  if (error) {\n    return (\n      <Alert\n        severity=\"error\"\n        title={t('alerting.edit-contact-point.title-failed-to-fetch-contact-point', 'Failed to fetch contact point')}\n      >\n        {stringifyErrorLike(error)}\n      </Alert>\n    );\n  }\n\n  if (!contactPoint) {\n    return (\n      <Alert severity=\"error\" title={t('alerting.edit-contact-point.title-receiver-not-found', 'Receiver not found')}>\n        {'Sorry, this contact point does not seem to exist.'}\n      </Alert>\n    );\n  }\n\n  return <EditReceiverView alertmanagerName={selectedAlertmanager!} contactPoint={contactPoint} />;\n};\n\nfunction EditContactPointPage() {\n  return (\n    <AlertmanagerPageWrapper navId=\"receivers\" accessType=\"notification\">\n      <EditContactPoint />\n    </AlertmanagerPageWrapper>\n  );\n}\n\nexport default withPageErrorBoundary(EditContactPointPage);\n"],"names":["EditReceiverView","contactPoint","alertmanagerName","editSupported","editAllowed","readOnly","GrafanaReceiverForm","CloudReceiverForm","EditContactPoint","selectedAlertmanager","name","contactPointName","isLoading","error","LoadingPlaceholder","Alert","EditContactPointPage","withPageErrorBoundary"],"sourceRoot":""}