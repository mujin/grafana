(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[5610],{21397:(de,K,E)=>{"use strict";E.r(K),E.d(K,{AFTER_SELECT_KEYWORDS:()=>ut,AGGREGATE_FUNCTIONS:()=>kt,ALL:()=>w,ALL_FUNCTIONS:()=>zt,ALL_KEYWORDS:()=>dt,ALL_OPERATORS:()=>ir,AND:()=>O,ANY:()=>y,ARRAY_FUNCTIONS:()=>Nt,AS:()=>a,ASC:()=>N,BETWEEN:()=>H,BY:()=>P,CASE:()=>A,CONDITIONAL_FUNCTIONS:()=>mt,CONVERSION_FUNCTIONS:()=>pt,CUBE:()=>W,DATE_AND_TIMESTAMP_FUNCTIONS:()=>vt,DESC:()=>D,DISTINCT:()=>Y,DOUBLE_EQUALS:()=>Dt,ELSE:()=>j,END:()=>U,EQUAL:()=>Xt,ESCAPE:()=>$,EXISTS:()=>J,FALSE:()=>ee,FILTER:()=>re,FIRST:()=>oe,FROM:()=>Te,GREATER_THAN:()=>Zt,GREATER_THAN_EQUAL:()=>Jt,GROUP:()=>Ie,GROUPING:()=>se,HAVING:()=>Ne,ILIKE:()=>Fe,IN:()=>we,INNER:()=>T,IS:()=>Ce,JOIN:()=>me,JSON_FUNCTIONS:()=>xt,KEYWORDS:()=>st,LAST:()=>Pe,LEFT:()=>Ye,LESS_THAN:()=>er,LESS_THAN_EQUAL:()=>tr,LIKE:()=>_e,LIMIT:()=>ve,LOGICAL_OPERATORS:()=>rr,MATHEMATICAL_FUNCTIONS:()=>Qt,MATH_OPERATORS:()=>sr,NOT:()=>We,NOT_EQUAL:()=>qt,NULL:()=>ze,NULL_SAFE_EQUAL:()=>be,ON:()=>Ue,OR:()=>Ge,ORDER:()=>Xe,OUTER:()=>ne,PREDICATE_FUNCTIONS:()=>Yt,PREDICATE_OPERATORS:()=>nr,ROLLUP:()=>Je,SELECT:()=>qe,SETS:()=>pe,SOME:()=>Ke,STRING_FUNCTIONS:()=>bt,THEN:()=>Be,TRUE:()=>he,USING:()=>et,WHEN:()=>ae,WHERE:()=>tt,WINDOW_FUNCTIONS:()=>xe,WITH:()=>rt,conf:()=>Pr,language:()=>wr});const w="ALL",O="AND",y="ANY",a="AS",N="ASC",H="BETWEEN",P="BY",A="CASE",W="CUBE",D="DESC",Y="DISTINCT",j="ELSE",U="END",$="ESCAPE",J="EXISTS",ee="FALSE",re="FILTER",oe="FIRST",Te="FROM",Ie="GROUP",se="GROUPING",Ne="HAVING",Fe="ILIKE",we="IN",T="INNER",Ce="IS",me="JOIN",Pe="LAST",Ye="LEFT",_e="LIKE",ve="LIMIT",We="NOT",ze="NULL",Ue="ON",Ge="OR",Xe="ORDER",ne="OUTER",Je="ROLLUP",qe="SELECT",pe="SETS",Ke="SOME",Be="THEN",he="TRUE",et="USING",ae="WHEN",tt="WHERE",rt="WITH",st=[w,O,y,a,N,H,P,A,W,D,Y,j,U,$,J,ee,re,oe,Te,Ie,se,Ne,Fe,we,T,Ce,me,Pe,Ye,_e,ve,We,ze,Ue,Ge,Xe,ne,Je,qe,pe,Ke,Be,he,et,ae,tt,rt],ut=[w,Y],dt=[...st,...ut],kt=["any","any_value","approx_count_distinct","approx_percentile","array_agg","avg","bit_and","bit_or","bit_xor","bitmap_construct_agg","bitmap_or_agg","bool_and","bool_or","collect_list","collect_set","count","count_if","count_min_sketch","covar_pop","covar_samp","every","first","first_value","grouping","grouping_id","histogram_numeric","hll_sketch_agg","hll_union_agg","kurtosis","last","last_value","max","max_by","mean","median","min","min_by","mode","percentile","percentile_approx","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","skewness","some","std","stddev","stddev_pop","stddev_samp","sum","try_avg","try_sum","var_pop","var_samp","variance"],Nt=["array","array_append","array_compact","array_contains","array_distinct","array_except","array_insert","array_intersect","array_join","array_max","array_min","array_position","array_prepend","array_remove","array_repeat","array_union","arrays_overlap","arrays_zip","flatten","get","sequence","shuffle","slice","sort_array"],mt=["coalesce","if","ifnull","nanvl","nullif","nvl","nvl2"],pt=["bigint","binary","boolean","cast","date","decimal","double","float","int","smallint","string","timestamp","tinyint"],vt=["add_months","convert_timezone","curdate","current_date","current_timestamp","current_timezone","date_add","date_diff","date_format","date_from_unix_date","date_part","date_sub","date_trunc","dateadd","datediff","datepart","day","dayofmonth","dayofweek","dayofyear","extract","from_unixtime","from_utc_timestamp","hour","last_day","localtimestamp","localtimestamp","make_date","make_dt_interval","make_interval","make_timestamp","make_timestamp_ltz","make_timestamp_ntz","make_ym_interval","minute","month","months_between","next_day","now","quarter","second","session_window","timestamp_micros","timestamp_millis","timestamp_seconds","to_date","to_timestamp","to_timestamp_ltz","to_timestamp_ntz","to_unix_timestamp","to_utc_timestamp","trunc","try_to_timestamp","unix_date","unix_micros","unix_millis","unix_seconds","unix_timestamp","weekday","weekofyear","window","window_time","year"],xt=["from_json","get_json_object","json_array_length","json_object_keys","json_tuple","schema_of_json","to_json"],Qt=["abs","acos","acosh","asin","asinh","atan","atan2","atanh","bin","bround","cbrt","ceil","ceiling","conv","cos","cosh","cot","csc","degrees","e","exp","expm1","factorial","floor","greatest","hex","hypot","least","ln","log","log10","log1p","log2","negative","pi","pmod","positive","pow","power","radians","rand","randn","random","rint","round","sec","shiftleft","sign","signum","sin","sinh","sqrt","tan","tanh","try_add","try_divide","try_multiply","try_subtract","unhex","width_bucket"],Yt=["isnan","isnotnull","isnull","regexp","regexp_like","rlike"],bt=["ascii","base64","bit_length","btrim","char","char_length","character_length","chr","concat_ws","contains","decode","elt","encode","endswith","find_in_set","format_number","format_string","initcap","instr","lcase","left","len","length","levenshtein","locate","lower","lpad","ltrim","luhn_check","mask","octet_length","overlay","position","printf","regexp_count","regexp_extract","regexp_extract_all","regexp_instr","regexp_replace","regexp_substr","repeat","replace","right","rpad","rtrim","sentences","soundex","space","split","split_part","startswith","substr","substring","substring_index","to_binary","to_char","to_number","to_varchar","translate","trim","try_to_binary","try_to_number","ucase","unbase64","upper"],xe=["cume_dist","dense_rank","lag","lead","nth_value","ntile","percent_rank","rank","row_number"],zt=[...kt,...Nt,...mt,...pt,...vt,...xt,...Qt,...Yt,...bt,...xe],Xt="=",Dt="==",be="<=>",qt="!=",Zt=">",Jt=">=",er="<",tr="<=",rr=[Ge,O],sr=["*","/","+","-","%","div","mod"],nr=[We,Ce,Xt,Dt,be,qt,Zt,Jt,er,tr,_e,Fe,we],ir=[...sr,...rr,...nr],wr={defaultToken:"",ignoreCase:!0,brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"{",close:"}",token:"delimiter.curly"}],keywords:dt,operators:ir,builtinFunctions:zt,tokenizer:{root:[{include:"@comments"},{include:"@whitespace"},{include:"@customParams"},{include:"@numbers"},{include:"@binaries"},{include:"@strings"},{include:"@strings"},{include:"@complexIdentifiers"},[/[;,.]/,"delimiter"],[/[\(\)\[\]\{\}]/,"@brackets"],[/[\w@#$]+/,{cases:{"@operators":"operator","@builtinFunctions":"predefined","@keywords":"keyword","@default":"identifier"}}],[/[<>=!%&+\-*/|~^]/,"operator"]],whitespace:[[/[\s\t\r\n]+/,"white"]],comments:[[/--+.*/,"comment"],[/\/\*/,{token:"comment.quote",next:"@comment"}]],comment:[[/[^*/]+/,"comment"],[/\*\//,{token:"comment.quote",next:"@pop"}],[/./,"comment"]],customParams:[[/\${[A-Za-z0-9._-]*}/,"variable"],[/\@\@{[A-Za-z0-9._-]*}/,"variable"]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],binaries:[[/X'/i,{token:"binary",next:"@binarySingle"}],[/X"/i,{token:"binary",next:"@binaryDouble"}]],binarySingle:[[/\d+/,"binary.escape"],[/''/,"binary"],[/'/,{token:"binary",next:"@pop"}]],binaryDouble:[[/\d+/,"binary.escape"],[/""/,"binary"],[/"/,{token:"binary",next:"@pop"}]],strings:[[/'/,{token:"string",next:"@stringSingle"}],[/R'/i,{token:"string",next:"@stringSingle"}],[/"/,{token:"string",next:"@stringDouble"}],[/R"/i,{token:"string",next:"@stringDouble"}]],stringSingle:[[/[^']+/,"string.escape"],[/''/,"string"],[/'/,{token:"string",next:"@pop"}]],stringDouble:[[/[^"]+/,"string.escape"],[/""/,"string"],[/"/,{token:"string",next:"@pop"}]],complexIdentifiers:[[/`/,{token:"identifier",next:"@quotedIdentifier"}]],quotedIdentifier:[[/[^`]+/,"identifier"],[/``/,"identifier"],[/`/,{token:"identifier",next:"@pop"}]]}},Pr={comments:{lineComment:"--",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}]}},97969:(de,K,E)=>{"use strict";E.r(K),E.d(K,{ALL_FUNCTIONS:()=>pe,ALL_KEYWORDS:()=>Ye,ARITHMETIC_OPERATORS:()=>ae,AS:()=>$,BETWEEN:()=>ee,BOOLEAN_LITERALS:()=>me,BY:()=>J,CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID:()=>w,COMPARISON_OPERATORS:()=>tt,CONDITION_FUNCTIONS:()=>Ge,DATE_TIME_FUNCTIONS:()=>ve,DEDUP:()=>a,DEDUP_PARAMETERS:()=>T,EVAL:()=>A,EVAL_FUNCTIONS:()=>Je,EVENTSTATS:()=>H,FIELDS:()=>y,FIELD_OPERATORS:()=>et,FROM:()=>re,HEAD:()=>W,IN:()=>Pe,LOGICAL_EXPRESSION_OPERATORS:()=>rt,MATH_FUNCTIONS:()=>_e,MINUS:()=>Be,NOT:()=>he,PARAMETERS_WITH_BOOLEAN_VALUES:()=>Ce,PARSE:()=>j,PLUS:()=>Ke,POSITION:()=>Ue,PPL_COMMANDS:()=>U,PPL_FUNCTIONS:()=>ne,PPL_OPERATORS:()=>st,RARE:()=>Y,SORT:()=>P,SORT_FIELD_FUNCTIONS:()=>Xe,SPAN:()=>ze,STATS:()=>N,STATS_FUNCTIONS:()=>qe,STATS_PARAMETERS:()=>we,TEXT_FUNCTIONS:()=>We,TOP:()=>D,WHERE:()=>O,conf:()=>dt,language:()=>ut});const w="logs-ppl",O="where",y="fields",a="dedup",N="stats",H="eventstats",P="sort",A="eval",W="head",D="top",Y="rare",j="parse",U=[O,y,N,H,a,P,D,Y,W,A,j],$="as",J="by",ee="between",re="from",oe="keepempty",Te="consecutive",Ie="partitions",se="allnum",Ne="delim",Fe="dedup_splitvalues",we=[Ie,se,Ne,Fe],T=[oe,Te],Ce=[se,Fe,oe,Te],me=["true","false"],Pe="in",Ye=[...we,...T,...me,$,J,Pe,ee,re],_e=["abs","acos","asin","atan","atan2","ceil","ceiling","conv","cos","cot","crc32","degrees","e","exp","floor","ln","log","log2","log10","mod","pi","pow","power","radians","rand","round","sign","sin","sqrt","cbrt"],ve=["datediff","day","dayofmonth","dayofweek","dayofyear","hour","minute","second","month","quarter","weekday","weekofyear","year","now","curdate","current_date"],We=["concat","concat_ws","length","lower","ltrim","reverse","rtrim","right","substring","substr","trim","upper"],ze="span",Ue="position",Ge=["like","isnull","isnotnull","exists","ifnull","nullif","if","ispresent"],Xe=["auto","str","ip","num"],ne=[..._e,...ve,...We],Je=[...ne,Ue],qe=["avg","count","sum","min","max","stddev_samp","stddev_pop","percentile","percentile_approx","distinct_count","dc"],pe=[...ne,...qe,...Ge,...Xe,Ue,ze],Ke="+",Be="-",he="not",et=[Ke,Be],ae=[Ke,Be,"*","/","%"],tt=[">",">=","<","!=","<=","="],rt=["and","or","xor",he],st=[...ae,...rt,...tt],ut={defaultToken:"",id:w,ignoreCase:!0,commands:U,operators:st,keywords:Ye,builtinFunctions:pe,brackets:[{open:"(",close:")",token:"delimiter.parenthesis"}],tokenizer:{root:[{include:"@comments"},{include:"@regexes"},{include:"@whitespace"},{include:"@variables"},{include:"@strings"},{include:"@numbers"},[/[,.:]/,"delimiter"],[/\|/,"delimiter.pipe"],[/[()\[\]]/,"delimiter.parenthesis"],[/[\w@#$]+/,{cases:{"@commands":"keyword.command","@keywords":"keyword","@builtinFunctions":"predefined","@operators":"operator","@default":"identifier"}}],[/[+\-*/^%=!<>]/,"operator"],[/[,.:]/,"operator"]],variables:[[/\${/,{token:"variable",next:"@variable_bracket"}],[/\$[a-zA-Z0-9-_]+/,"variable"]],variable_bracket:[[/[a-zA-Z0-9-_:]+/,"variable"],[/}/,{token:"variable",next:"@pop"}]],whitespace:[[/\s+/,"white"]],comments:[[/^#.*/,"comment"],[/\s+#.*/,"comment"]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],strings:[[/'/,{token:"string",next:"@string"}],[/"/,{token:"string",next:"@string_double"}],[/`/,{token:"string.backtick",next:"@string_backtick"}]],string:[[/[^']+/,"string"],[/''/,"string"],[/'/,{token:"string",next:"@pop"}]],string_double:[[/[^\\"]+/,"string"],[/"/,"string","@pop"]],string_backtick:[[/[^\\`]+/,"string.backtick"],[/`/,"string.backtick","@pop"]],regexes:[[/\/.*?\/(?!\s*\d)/,"regexp"]]}},dt={brackets:[["(",")"]],autoClosingPairs:[{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}]}},58969:(de,K,E)=>{"use strict";E.r(K),E.d(K,{AND:()=>$,ASC:()=>A,BY:()=>H,COMPARISON_OPERATORS:()=>oe,DESC:()=>P,EQUALS:()=>ee,FROM:()=>O,GROUP:()=>a,KEYWORDS:()=>j,LIMIT:()=>W,LOGICAL_OPERATORS:()=>J,NOT_EQUALS:()=>re,ORDER:()=>N,SCHEMA:()=>Y,SELECT:()=>w,STATISTICS:()=>U,WHERE:()=>y,WITH:()=>D,conf:()=>Ie,language:()=>Te});const w="SELECT",O="FROM",y="WHERE",a="GROUP",N="ORDER",H="BY",P="DESC",A="ASC",W="LIMIT",D="WITH",Y="SCHEMA",j=[w,O,y,a,N,H,P,A,W,D,Y],U=["AVG","COUNT","MAX","MIN","SUM"],$="AND",J=[$],ee="=",re="!=",oe=[ee,re],Te={defaultToken:"",tokenPostfix:".sql",ignoreCase:!0,brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"}],keywords:j,operators:J,builtinFunctions:U,tokenizer:{root:[[/\$[a-zA-Z0-9-_]+/,"variable"],{include:"@comments"},{include:"@whitespace"},{include:"@numbers"},{include:"@strings"},{include:"@complexIdentifiers"},[/[;,.]/,"delimiter"],[/[()]/,"@brackets"],[/[\w@#$]+/,{cases:{"@keywords":"keyword","@operators":"operator","@builtinFunctions":"predefined","@default":"identifier"}}],[/[=!%&+\-*/|~^]/,"operator"]],whitespace:[[/\s+/,"white"]],comments:[[/--+.*/,"comment"]],comment:[[/[^*/]+/,"comment"],[/./,"comment"]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],strings:[[/N'/,{token:"string",next:"@string"}],[/'/,{token:"string",next:"@string"}],[/"/,{token:"type",next:"@string_double"}]],string:[[/[^']+/,"string"],[/''/,"string"],[/'/,{token:"string",next:"@pop"}]],string_double:[[/[^\\"]+/,"type"],[/"/,"type","@pop"]],complexIdentifiers:[[/\[/,{token:"identifier.quote",next:"@bracketedIdentifier"}],[/"/,{token:"identifier.quote",next:"@quotedIdentifier"}]],bracketedIdentifier:[[/[^\]]+/,"identifier"],[/]]/,"identifier"],[/]/,{token:"identifier.quote",next:"@pop"}]],quotedIdentifier:[[/[^"]+/,"identifier"],[/""/,"identifier"],[/"/,{token:"identifier.quote",next:"@pop"}]]}},Ie={comments:{lineComment:"--",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}},87667:(de,K,E)=>{"use strict";E.r(K),E.d(K,{DYNAMIC_LABEL_PATTERNS:()=>O,conf:()=>a,language:()=>y});var w=E(43173);const O=["${DATAPOINT_COUNT}","${FIRST}","${FIRST_LAST_RANGE}","${FIRST_LAST_TIME_RANGE}","${FIRST_TIME}","${FIRST_TIME_RELATIVE}","${LABEL}","${LAST}","${LAST_TIME}","${LAST_TIME_RELATIVE}","${MAX}","${MAX_TIME}","${MAX_TIME_RELATIVE}","${MIN}","${MIN_MAX_RANGE}","${MIN_MAX_TIME_RANGE}","${MIN_TIME}","${MIN_TIME_RELATIVE}","${PROP('AccountId')}","${PROP('MetricName')}","${PROP('Namespace')}","${PROP('Period')}","${PROP('Region')}","${PROP('Stat')}","${SUM}",...w.$.featureToggles.cloudWatchCrossAccountQuerying?["${PROP('AccountLabel')}"]:[]],y={id:"dynamicLabels",ignoreCase:!1,tokenizer:{root:[{include:"@whitespace"},{include:"@builtInFunctions"},{include:"@string"},[/\$\{PROP\('Dim.[a-zA-Z0-9-_]?.*'\)\}+/,"predefined"]],builtInFunctions:[[O.map(N).join("|"),"predefined"]],whitespace:[[/\s+/,"white"]],string:[]}},a={};function N(H){return H.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}},44419:(de,K,E)=>{"use strict";E.r(K),E.d(K,{DEDUP:()=>W,DISPLAY:()=>w,FIELDS:()=>O,FILTER:()=>y,LIMIT:()=>P,LOGS_COMMANDS:()=>D,LOGS_FUNCTION_OPERATORS:()=>j,LOGS_KEYWORDS:()=>$,LOGS_LOGIC_OPERATORS:()=>Y,PARSE:()=>A,PATTERN:()=>a,SORT:()=>H,SORT_DIRECTION_KEYWORDS:()=>U,STATS:()=>N,conf:()=>ee,language:()=>J});const w="display",O="fields",y="filter",a="pattern",N="stats",H="sort",P="limit",A="parse",W="dedup",D=[w,O,y,a,N,H,P,A,W],Y=["and","or","not"],j=["abs","ceil","floor","greatest","least","log","sqrt","bin","datefloor","dateceil","fromMillis","toMillis","ispresent","coalesce","isValidIp","isValidIpV4","isValidIpV6","isIpInSubnet","isIpv4InSubnet","isIpv6InSubnet","avg","count","count_distinct","max","min","pct","stddev","sum","earliest","latest","sortsFirst","sortsLast","isempty","isblank","concat","ltrim","rtrim","trim","strlen","toupper","tolower","substr","replace","strcontains","unmask"],U=["asc","desc"],$=["like","by","in","as",...U],J={defaultToken:"invalid",id:"logs",ignoreCase:!0,brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"}],commands:[...D,...$],operators:Y,builtinFunctions:j,tokenizer:{root:[{include:"@comments"},{include:"@regexes"},{include:"@whitespace"},{include:"@fieldNames"},{include:"@variables"},{include:"@strings"},{include:"@numbers"},[/\|\|/,"operator"],[/[,.:\|]/,"delimiter"],[/[()\[\]]/,"delimiter.parenthesis"],[/[\w@#$]+/,{cases:{"@commands":"keyword","@builtinFunctions":"predefined","@operators":"operator","@default":"identifier"}}],[/[+\-*/^%=!<>]/,"operator"]],variables:[[/\${/,{token:"variable",next:"@variable_bracket"}],[/\$[a-zA-Z0-9-_]+/,"variable"]],variable_bracket:[[/[a-zA-Z0-9-_:]+/,"variable"],[/}/,{token:"variable",next:"@pop"}]],fieldNames:[[/(@[_a-zA-Z]+[_.0-9a-zA-Z]*)|(`((\\`)|([^`]))*?`)/,"identifier"]],whitespace:[[/\s+/,"white"]],comments:[[/^#.*/,"comment"],[/\s+#.*/,"comment"]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],strings:[[/'/,{token:"string",next:"@string"}],[/"/,{token:"string",next:"@string_double"}],[/`/,{token:"identifier",next:"@string_backtick"}]],string:[[/[^']+/,"string"],[/''/,"string"],[/'/,{token:"string",next:"@pop"}]],string_double:[[/[^\\"]+/,"string"],[/"/,"string","@pop"]],string_backtick:[[/[^\\`]+/,"identifier"],[/`/,"identifier","@pop"]],regexes:[[/\/.*?\/(?=\s*\||\s*$|,)/,"regexp"]]}},ee={comments:{lineComment:"#"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}]}},49921:(de,K,E)=>{"use strict";E.r(K),E.d(K,{METRIC_MATH_FNS:()=>w,METRIC_MATH_KEYWORDS:()=>y,METRIC_MATH_OPERATORS:()=>a,METRIC_MATH_PERIODS:()=>N,METRIC_MATH_STATISTIC_KEYWORD_STRINGS:()=>O,conf:()=>P,language:()=>H});const w=["ABS","ANOMALY_DETECTION_BAND","AVG","CEIL","DATAPOINT_COUNT","DB_PERF_INSIGHTS","DIFF","DIFF_TIME","FILL","FIRST","LAST","FLOOR","IF","INSIGHT_RULE_METRIC","LOG","LOG10","MAX","METRIC_COUNT","METRICS","MIN","MINUTE","HOUR","DAY","DATE","MONTH","YEAR","EPOCH","PERIOD","RATE","REMOVE_EMPTY","RUNNING_SUM","SEARCH","SERVICE_QUOTA","SLICE","SORT","STDDEV","SUM","TIME_SERIES"],O=["Average","Maximum","Minimum","Sum","SampleCount"],y=["REPEAT","LINEAR","ASC","DSC"],a=["+","-","*","/","^","==","!=","<=",">=","<",">","AND","&&","OR","||"],N=[10,60,300,900,3e3,21600,86400],H={id:"metricMath",ignoreCase:!1,brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"{",close:"}",token:"delimiter.curly"}],tokenizer:{root:[{include:"@nonNestableStates"},{include:"@strings"}],nonNestableStates:[{include:"@variables"},{include:"@macros"},{include:"@whitespace"},{include:"@numbers"},{include:"@assignment"},{include:"@keywords"},{include:"@operators"},{include:"@builtInFunctions"},[/[;,.]/,"delimiter"],[/[(){}\[\]]/,"@brackets"]],keywords:[[y.map(A).join("|"),"keyword"]],operators:[[a.map(A).join("|"),"operator"]],builtInFunctions:[[w.map(A).join("|"),"predefined"]],variables:[[/\$[a-zA-Z0-9-_]+/,"variable"]],macros:[[/\$__[a-zA-Z0-9-_]+/,"type"]],whitespace:[[/\s+/,"white"]],assignment:[[/=/,"tag"]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],strings:[[/'/,{token:"string",next:"@string"}],[/"/,{token:"type",next:"@string_double"}]],string:[[/{/,{token:"delimiter.curly",next:"@nestedCurly"}],[/\(/,{token:"delimiter.parenthesis",next:"@nestedParens"}],[/"/,{token:"type",next:"@string_double"}],[/'/,{token:"string",next:"@pop"}],{include:"@nonNestableStates"},[/[^']/,"string"]],string_double:[[/[^"]/,"type"],[/"/,{token:"type",next:"@pop"}]],nestedCurly:[[/}/,{token:"delimiter.curly",next:"@pop"}],[/'/,{token:"string",next:"@string"}],[/"/,{token:"type",next:"@string_double"}]],nestedParens:[[/\)/,{token:"delimiter.parenthesis",next:"@pop"}],[/'/,{token:"string",next:"@string"}],[/"/,{token:"type",next:"@string_double"}]]}},P={brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]};function A(W){return W.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}},65610:(de,K,E)=>{"use strict";E.r(K),E.d(K,{plugin:()=>xo});var w=E(94644),O=E(57852),y=E(75234),a=E(74848),N=E(22803),H=E(28848),P=E.n(H),A=E(96540),W=E(89599),D=E(63142),Y=E(66404),j=E(56103),U=E(43173),$=E(27489);const J=t=>t.queryMode==="Logs",ee=t=>t.queryMode==="Metrics"||!t.hasOwnProperty("queryMode"),re=t=>t.queryMode==="Annotations",oe=t=>t.target?.queryMode==="Annotations";var Te=E(32017),Ie=E.n(Te);function se(t){const e=Fe(t);return Ie()(e,t)?t:e}const Ne={metric:"PROP('MetricName')",namespace:"PROP('Namespace')",period:"PROP('Period')",region:"PROP('Region')",stat:"PROP('Stat')",label:"LABEL"};function Fe(t){if(!t.hasOwnProperty("label")){const e={...t};if(!t.hasOwnProperty("label")){const r=/{{\s*(.+?)\s*}}/g;e.label=t.alias?.replace(r,(s,n)=>Ne.hasOwnProperty(n)?`\${${Ne[n]}}`:`\${PROP('Dim.${n}')}`)??""}return e}return t}var we=E(42809),T=E(51515);const Ce=t=>({label:t,value:t}),me=(t,e)=>[...e,{label:"Template Variables",options:t.getVariables().map(Ce)}],Pe=t=>{const{region:e,metricQueryType:r,metricEditorMode:s,expression:n,metricName:i,namespace:o,sqlExpression:l,statistic:d}=t;return e?r===T.d$.Search&&s===T.Rx.Builder?!!o&&!!i&&!!d:r===T.d$.Search&&s===T.Rx.Code?!!n:r===T.d$.Insights?!!l:!1:!1},Ye=({payload:{dashboardId:t,orgId:e,grafanaVersion:r,queries:s}})=>{try{const n=s[we.id];if(!n?.length)return;let i=[],o=[];for(const d of n)if(!d.hide){if(J(d))d.logGroupNames?.length&&i.push(d);else if(ee(d)){const g=se(d);Pe(g)&&o.push(d)}}const l={grafana_version:r,dashboard_id:t,org_id:e,logs_queries_count:i?.length,logs_cwli_queries_count:i?.filter(d=>!d.queryLanguage||d.queryLanguage===T._M.CWLI).length,logs_sql_queries_count:i?.filter(d=>d.queryLanguage===T._M.SQL).length,logs_ppl_queries_count:i?.filter(d=>d.queryLanguage===T._M.PPL).length,metrics_queries_count:o?.length,metrics_search_count:0,metrics_search_builder_count:0,metrics_search_code_count:0,metrics_search_match_exact_count:0,metrics_query_count:0,metrics_query_builder_count:0,metrics_query_code_count:0,metrics_queries_with_account_count:0};for(const d of o)l.metrics_search_count+=+(d.metricQueryType===T.d$.Search),l.metrics_search_builder_count+=+ve(d),l.metrics_search_code_count+=+(d.metricQueryType===T.d$.Search&&d.metricEditorMode===T.Rx.Code),l.metrics_search_match_exact_count+=+!!(ve(d)&&d.matchExact),l.metrics_query_count+=+(d.metricQueryType===T.d$.Insights),l.metrics_query_builder_count+=+(d.metricQueryType===T.d$.Insights&&d.metricEditorMode===T.Rx.Builder),l.metrics_query_code_count+=+(d.metricQueryType===T.d$.Insights&&d.metricEditorMode===T.Rx.Code),l.metrics_queries_with_account_count+=+!!(U.$.featureToggles.cloudWatchCrossAccountQuerying&&ve(d)&&d.accountId);(0,$.rR)("grafana_ds_cloudwatch_dashboard_loaded",l)}catch(n){console.error("error in cloudwatch tracking handler",n)}},_e=t=>{const{queryLanguage:e,queryCategory:r}=t;(0,$.rR)("cloudwatch-logs-cheat-sheet-query-clicked",{queryLanguage:e,queryCategory:r})},ve=t=>t.metricQueryType===T.d$.Search&&t.metricEditorMode===T.Rx.Builder;var We=function(){function t(e,r){for(var s=0;s<r.length;s++){var n=r[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,r,s){return r&&t(e.prototype,r),s&&t(e,s),e}}(),ze=Ue(["",""],["",""]);function Ue(t,e){return Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function Ge(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Xe=function(){function t(){for(var e=this,r=arguments.length,s=Array(r),n=0;n<r;n++)s[n]=arguments[n];return Ge(this,t),this.tag=function(i){for(var o=arguments.length,l=Array(o>1?o-1:0),d=1;d<o;d++)l[d-1]=arguments[d];return typeof i=="function"?e.interimTag.bind(e,i):typeof i=="string"?e.transformEndResult(i):(i=i.map(e.transformString.bind(e)),e.transformEndResult(i.reduce(e.processSubstitutions.bind(e,l))))},s.length>0&&Array.isArray(s[0])&&(s=s[0]),this.transformers=s.map(function(i){return typeof i=="function"?i():i}),this.tag}return We(t,[{key:"interimTag",value:function(r,s){for(var n=arguments.length,i=Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];return this.tag(ze,r.apply(void 0,[s].concat(i)))}},{key:"processSubstitutions",value:function(r,s,n){var i=this.transformSubstitution(r.shift(),s);return"".concat(s,i,n)}},{key:"transformString",value:function(r){var s=function(i,o){return o.onString?o.onString(i):i};return this.transformers.reduce(s,r)}},{key:"transformSubstitution",value:function(r,s){var n=function(o,l){return l.onSubstitution?l.onSubstitution(o,s):o};return this.transformers.reduce(n,r)}},{key:"transformEndResult",value:function(r){var s=function(i,o){return o.onEndResult?o.onEndResult(i):i};return this.transformers.reduce(s,r)}}]),t}();const ne=Xe;var Je={separator:"",conjunction:"",serial:!1},qe=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:Je;return{onSubstitution:function(s,n){if(Array.isArray(s)){var i=s.length,o=e.separator,l=e.conjunction,d=e.serial,g=n.match(/(\n?[^\S\n]+)$/);if(g?s=s.join(o+g[1]):s=s.join(o+" "),l&&i>1){var c=s.lastIndexOf(o);s=s.slice(0,c)+(d?o:"")+" "+l+s.slice(c+1)}}return s}}};const pe=qe;function Ke(t){if(Array.isArray(t)){for(var e=0,r=Array(t.length);e<t.length;e++)r[e]=t[e];return r}else return Array.from(t)}var Be=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"initial";return{onEndResult:function(s){if(e==="initial"){var n=s.match(/^[^\S\n]*(?=\S)/gm),i=n&&Math.min.apply(Math,Ke(n.map(function(l){return l.length})));if(i){var o=new RegExp("^.{"+i+"}","gm");return s.replace(o,"")}return s}if(e==="all")return s.replace(/^[^\S\n]+/gm,"");throw new Error("Unknown type: "+e)}}};const he=Be;var et=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"";return{onEndResult:function(s){if(e==="")return s.trim();if(e=e.toLowerCase(),e==="start"||e==="left")return s.replace(/^\s*/,"");if(e==="end"||e==="right")return s.replace(/\s*$/,"");throw new Error("Side not supported: "+e)}}};const ae=et;var tt=new ne(pe({separator:","}),he,ae);const rt=null;var st=new ne(pe({separator:",",conjunction:"and"}),he,ae);const ut=null;var dt=new ne(pe({separator:",",conjunction:"or"}),he,ae);const kt=null;var Nt=function(e){return{onSubstitution:function(s,n){if(e!=null&&typeof e=="string")typeof s=="string"&&s.includes(e)&&(s=s.split(e));else throw new Error("You need to specify a string character to split by.");return s}}};const mt=Nt;var pt=function(e){return e!=null&&!Number.isNaN(e)&&typeof e!="boolean"},vt=function(){return{onSubstitution:function(r){return Array.isArray(r)?r.filter(pt):pt(r)?r:""}}};const xt=vt;var Qt=new ne(mt(`
`),xt,pe,he,ae);const Yt=null;var bt=function(e,r){return{onSubstitution:function(n,i){if(e==null||r==null)throw new Error("replaceSubstitutionTransformer requires at least 2 arguments.");return n==null?n:n.toString().replace(e,r)}}};const xe=bt;var zt=new ne(mt(`
`),pe,he,ae,xe(/&/g,"&amp;"),xe(/</g,"&lt;"),xe(/>/g,"&gt;"),xe(/"/g,"&quot;"),xe(/'/g,"&#x27;"),xe(/`/g,"&#x60;"));const Xt=null;var Dt=function(e,r){return{onEndResult:function(n){if(e==null||r==null)throw new Error("replaceResultTransformer requires at least 2 arguments.");return n.replace(e,r)}}};const be=Dt;var qt=new ne(be(/(?:\n(?:\s*))+/g," "),ae);const Zt=null;var Jt=new ne(be(/(?:\n\s*)/g,""),ae);const er=null;var tr=new ne(pe({separator:","}),be(/(?:\s+)/g," "),ae);const rr=null;var sr=new ne(pe({separator:",",conjunction:"or"}),be(/(?:\s+)/g," "),ae);const nr=null;var ir=new ne(pe({separator:",",conjunction:"and"}),be(/(?:\s+)/g," "),ae);const wr=null;var Pr=new ne(pe,he,ae);const bo=null;var Do=new ne(pe,be(/(?:\s+)/g," "),ae);const Mo=null;var Fo=new ne(he,ae);const wo=null;var Ds=new ne(he("all"),ae);const I=Ds,Ms=[{title:"Use the JOIN command to match events between two log groups (LogGroupA, LogGroupB), based on common user IDs across the logs.\xA0",expr:{SQL:I`SELECT A.transaction_id as txn_id_a, A.userId , A.instance_id as inst_id_a, B.instance_id as inst_id_b FROM \`LogGroupA\` as A INNER JOIN \`LogGroupB\` as B ON A.userId = B.userId WHERE B.Status='ERROR'`}},{title:"Find logs where duration is greater than the average duration of all log groups, using a sub-query",expr:{SQL:I`SELECT \`@duration\` FROM \`LogGroupA\`
 WHERE \`@duration\` > (
 SELECT avg(\`@duration\`) FROM \`LogGroupA\`
 WHERE \`@type\` = 'REPORT')`}},{title:"Find all logs relating to a Lambda function where level is ERROR, and order these logs by request id using a sub-query",expr:{SQL:I`select requestId, level, \`@timestamp\`, \`@message\` from \`LogGroupA\` where requestId IN (SELECT distinct
  requestId FROM \`LogGroupA\` where level = 'ERROR') order by requestId`}},{title:"Find error logs from high-volume log streams using a sub-query.\xA0",expr:{SQL:I`SELECT 
 \`@logStream\`,
 COUNT(*) as error_count
 FROM \`LogGroupA\`
 WHERE 
 \`start\` >= date_sub(current_timestamp(), 1)
 AND lower(\`@message\`) LIKE '%error%'
 AND \`@logStream\` IN (
 SELECT \`@logStream\`
 FROM \`logs\`
 GROUP BY \`@logStream\`
 HAVING COUNT(*) > 1000
 )
 GROUP BY \`@logStream\`
 ORDER BY error_count DESC`}},{title:"Extract parameter values from a JSON log group",expr:{SQL:I`SELECT query_name, get_json_object(\`@message\`, '$.answers[*].Rdata')
  AS answers FROM \`LogGroupA\` Where query_type = 'A'`}},{title:"Find the intersection of elements for two columns based on eventName.",expr:{SQL:I`SELECT array_intersect(
 array(get_json_object(\`column1\`, '$.eventName')),
 array(get_json_object(\`column2\`, '$.eventName'))
 ) as matching_events
 FROM \`LogGroupA\`;`}},{title:"Return the top 25 most recently added log events.",expr:{SQL:"SELECT `@timestamp`, `@message` FROM `LogGroupA` ORDER BY `@timestamp` DESC LIMIT 25;"}},{title:"Find the number of exceptions logged every five minutes.",expr:{SQL:"SELECT window.start, COUNT(*) AS exceptionCount FROM `LogGroupA` WHERE `@message` LIKE '%Exception%' GROUP BY window(`@timestamp`, '5 minute') ORDER BY exceptionCount DESC"}},{title:"Return a list of log events that are not exceptions.",expr:{SQL:"SELECT `@message` FROM `LogGroupA` WHERE `@message` NOT LIKE '%Exception%'"}},{title:"Identify faults on API calls.",expr:{SQL:'Select @timestamp, @logStream as instanceId, ExceptionMessage from `LogGroupA` where Operation = "x" and Fault > 0'}},{title:"Return the number of exceptions logged every five minutes using regex where exception is not case sensitive.",expr:{SQL:"SELECT window.start, COUNT(*) AS exceptionCount FROM `LogGroupA` WHERE `@message` LIKE '%Exception%' GROUP BY window(`@timestamp`, '5 minute') ORDER BY exceptionCount DESC"}},{title:"Count the number of logs per minute over the last 24 hours, grouping them into one-minute time buckets and sorting from newest to oldest, and only consider those groups that have error_count greater than zero.",expr:{SQL:I`SELECT 
 date(\`@timestamp\`) as log_date,
 \`@logStream\`,
 COUNT(*) as total_messages,
 SUM(CASE WHEN lower(\`@message\`) LIKE '%error%' THEN 1 ELSE 0 END) as error_count,
 SUM(CASE WHEN lower(\`@message\`) LIKE '%warn%' THEN 1 ELSE 0 END) as warning_count
 FROM \`LogGroupA\`
 WHERE \`@timestamp\` >= date_sub(current_timestamp(), 7)
 GROUP BY date(\`startTime\`), \`@logStream\`
 HAVING error_count > 0
 ORDER BY error_count DESC`}},{title:"Calculate the total count of logs and unique streams, along with the earliest and latest timestamps for all logs from the past 24 hours.",expr:{SQL:I`SELECT 
 COUNT(*) as total_logs,
 COUNT(DISTINCT \`@logStream\`) as unique_streams,
 MIN(\`@timestamp\`) as earliest_log,
 MAX(\`startTime\`) as latest_log
 FROM \`LogGroupA\`
 WHERE \`startTime\` >= date_sub(current_timestamp(), 1)`}},{title:"Show the top 10 most active log streams from the past 24 hours, displaying each stream's total log count and its first and last log timestamps, sorted by highest log count first.",expr:{SQL:I`SELECT \`@logStream\`, COUNT(*) as log_count, MIN(\`@timestamp\`) as first_seen, MAX(\`@timestamp\`) as last_seen FROM \`LogGroupA\`WHERE \`startTime\` >= date_sub(current_timestamp(), 24)GROUP BY \`@logStream\`ORDER BY log_count DESC LIMIT 10`}},{title:"Count the number of error messages per hour over the last 24 hours, sorted chronologically by hour.",expr:{SQL:I`SELECT 
 hour(\`@timestamp\`) as hour_of_day,
 COUNT(*) as error_count
 FROM \`LogGroupA\`
 WHERE lower(\`@message\`) LIKE '%error%'
 AND \`@timestamp\` >= date_sub(current_timestamp(), 24)
 GROUP BY hour(\`@timestamp\`)
 ORDER BY hour_of_day`}},{title:"Categorize and count all log messages from the last 24 hours into different log levels (ERROR, WARNING, INFO, OTHER), based on message content.",expr:{SQL:I`SELECT 
 CASE 
 WHEN lower(\`@message\`) LIKE '%error%' THEN 'ERROR'
 WHEN lower(\`@message\`) LIKE '%warn%' THEN 'WARNING'
 WHEN lower(\`@message\`) LIKE '%info%' THEN 'INFO'
 ELSE 'OTHER'
 END as log_level,
 COUNT(*) as message_count
 FROM \`LogGroupA\`
 WHERE \`startTime\` >= date_sub(current_timestamp(), 1)
 GROUP BY CASE 
 WHEN lower(\`@message\`) LIKE '%error%' THEN 'ERROR'
 WHEN lower(\`@message\`) LIKE '%warn%' THEN 'WARNING'
 WHEN lower(\`@message\`) LIKE '%info%' THEN 'INFO'
 ELSE 'OTHER'
 END
 ORDER BY message_count DESC`}},{title:"Count the number of logs per minute over the last 24 hours, and group them into one-minute time buckets and sort from newest to oldest.",expr:{SQL:I`SELECT 
 date_trunc('minute', startTime) as time_bucket,
 COUNT(*) as log_count
 FROM \`LogGroupA\`
 WHERE startTime >= date_sub(current_timestamp(), 1)
 GROUP BY date_trunc('minute', \`startTime\`)
 ORDER BY time_bucket DESC`}},{title:"Find log messages that were truncated, based on analysis of the length of the @message field in the log events.",expr:{SQL:I`SELECT 
 length(\`@message\`) as msg_length,
 COUNT(*) as count,
 MIN(\`@message\`) as sample_message
 FROM \`LogGroupA\`
 WHERE \`startTime\` >= date_sub(current_timestamp(), 1)
 GROUP BY length(\`@message\`)
 HAVING count > 10
 ORDER BY msg_length DESC
 LIMIT 10`}},{title:"Show the top 10 most common message lengths from the last 24 hours. It displays the length, count, and a sample message for each message length that appears more than 10 times, sorted by longest messages first.",expr:{SQL:"SELECT `@logStream`, MAX(`startTime`) as last_log_time, UNIX_TIMESTAMP() - UNIX_TIMESTAMP(MAX(`startTime`)) as seconds_since_last_log FROM `LogGroupA`GROUP BY `@logStream`HAVING seconds_since_last_log > 3600 ORDER BY seconds_since_last_log DESC"}},{title:"Find duplicate log messages that occurred more than 10 times in the last 24 hours, showing their count, first and last occurrence times, and number of streams they appeared in, sorted by most frequent messages first",expr:{SQL:I`SELECT 
 \`@message\`,
 COUNT(*) as occurrence_count,
 MIN(\`@timestamp\`) as first_seen,
 MAX(\`@timestamp\`) as last_seen,
 COUNT(DISTINCT \`@logStream\`) as stream_count
 FROM \`LogGroupA\`
 WHERE \`@timestamp\` >= date_sub(current_timestamp(), 1)
 GROUP BY \`@message\`
 HAVING occurrence_count > 10
 ORDER BY occurrence_count DESC"`}},{title:"Count unique message patterns per hour over the last 24 hours. When doing this, it considers only the first 50 characters of longer messages. Results are sorted from most recent hour to oldest.",expr:{SQL:I`SSELECT 
 date_trunc('hour', startTime) as hour_window,
 COUNT(DISTINCT 
 CASE 
 WHEN length(\`@message\`) < 50 THEN substr(\`@message\`, 1, length(\`@message\`))
 ELSE substr(\`@message\`, 1, 50)
 END
 ) as unique_patterns
 FROM \`LogGroupA\`
 WHERE startTime >= date_sub(current_timestamp(), 24)
 GROUP BY date_trunc('hour', startTime)
 ORDER BY hour_window DESC"`}},{title:"Calculate the success and failure rates of requests, based on occurrence of success or failure keywords in the log.",expr:{SQL:I`SELECT 
 date_trunc('minute', \`@timestamp\`) as minute,
 COUNT(*) as total_requests,
 SUM(CASE WHEN lower(\`@message\`) LIKE '%success%' THEN 1 ELSE 0 END) as successful_requests,
 SUM(CASE WHEN lower(\`@message\`) LIKE '%fail%' OR lower(\`@message\`) LIKE '%error%' THEN 1 ELSE 0 END) as failed_requests,
 ROUND(SUM(CASE WHEN lower(\`@message\`) LIKE '%success%' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) as success_rate
 FROM \`LogGroupA\`
 WHERE startTime >= date_sub(current_timestamp(), 1)
 GROUP BY date_trunc('minute', startTime)
 ORDER BY minute DESC"`}},{title:"Identify and extract specific patterns from messages.",expr:{SQL:I`SELECT 
 \`@logStream\`,
 regexp_extract(\`@message\`, '([A-Z0-9]{8})', 1) as id_pattern,
 substring_index(\`@message\`, ' ', 2) as first_two_words,
 left(\`@message\`, 10) as message_start,
 right(\`@message\`, 10) as message_end,
 length(trim(\`@message\`)) - length(replace(lower(\`@message\`), ' ', '')) + 1 as word_count
 FROM \`LogGroupA\`
 WHERE startTime >= date_sub(current_timestamp(), 1)"`}},{title:"Mask numbers in the log events, replacing them with asterisks.",expr:{SQL:I`SELECT 
 \`@logStream\`,
 translate(\`@message\`, '{}[]()',' ') as cleaned_message,
 regexp_replace(\`@message\`, '[0-9]', '*') as numbers_masked,
 concat_ws(' - ', \`@logStream\`, substr(\`@message\`, 1, 50)) as combined_log,
 repeat('*', length(\`@message\`)) as message_mask
 FROM \`LogGroupA\`
 WHERE startTime >= date_sub(current_timestamp(), 1)"`}},{title:"Find log streams that have more than 50 error logs in the last 24 hours",expr:{SQL:I`SELECT 
 \`@logStream\`,
 COUNT(*) as total_logs,
 COUNT(CASE WHEN lower(\`@message\`) LIKE '%error%' THEN 1 END) as error_count
 FROM \`LogGroupA\`
 WHERE \`@timestamp\` >= date_sub(current_timestamp(), 1)
 GROUP BY \`@logStream\`
 HAVING error_count > 50
 ORDER BY error_count DESC"`}}],Fs=[{title:"Calculate the total message length over five-minute intervals, and then find the average value across the five-minute intervals.	",expr:{PPL:"eval len_message = length(`@message`) | stats count(len_message) as log_bytes by span(`@timestamp`, 5m) | stats avg(log_bytes) | head 10"}},{title:"Return the top 25 most recently added log events.	",expr:{PPL:"fields `@timestamp`, `@message` | sort - `@timestamp` | head 25"}},{title:"Return a list of log events that are not exceptions.	",expr:{PPL:"eval result = LIKE(`@message`, '%Exception%') | where result = false"}},{title:"Identify faults on API calls.	",expr:{PPL:I`"where Operation = <operation> AND Fault > 0
 | fields \`@timestamp\`, \`@logStream\` as instanceId, ExceptionMessage"`}},{title:"Return the number of exceptions logged every five minutes using regex where exception is not case sensitive.	",expr:{PPL:"eval result = LIKE(`@message`, '%Exception%') | where result = true | stats count() as exceptionCount by span(`@timestamp`, \"5m\") | sort -exceptionCount"}},{title:"Parse the data and counts the number of fields.	",expr:{PPL:I`"eval result = LIKE(\`@message\`, 'EndTime') | eval result = true |
 parse \`@message\` '.+=(?<day>[A-Za-z]{3}), \d+' | stats count() by day | head 25"`}},{title:"Examine message length patterns per log stream to identify potential truncation issues or abnormal logging behavior that might indicate problems.	",expr:{PPL:I`eval msg_length = length(\`@message\`)| stats avg(msg_length) as avg_length, max(msg_length) as max_length, min(msg_length) as min_length by \`@logStream\`| sort - avg_length`}},{title:"Analyze log volume trends over time to identify patterns and potential issues in system behavior.	",expr:{PPL:I`"eval date = ADDDATE(CURRENT_DATE(), -1) | eval result = TIMESTAMP(date) | where \`@timestamp\` > result | 
 stats count() as log_count by span(\`@timestamp\`, 1h) 
 | sort - log_count
 | head 10"`}},{title:"Group and count error messages to identify the most frequent issues affecting the system.	",expr:{PPL:I`eval result = LIKE(\`@message\`, "%Error%") | where result = true | stats count() by \`@logStream\` | head 10`}},{title:"Find the top causes of error logs.	",expr:{PPL:I`eval result = LIKE(\`@message\`, "%Error%") | where result = true | top 2 \`@logStream\` | head 10`}},{title:"Find the log streams that contribute the least error log events.	",expr:{PPL:I`eval result = LIKE(\`@message\`, "%Error%") | where result = true | rare \`@logStream\` | head 10`}},{title:"Calculate the total message length over five-minute intervals, and then find the average value across the five-minute intervals.	",expr:{PPL:I`eval len_message = length(\`@message\`) | stats count(len_message) as log_bytes by span(\`@timestamp\`, 5m) | stats avg(log_bytes) | head 10`}},{title:"Find the log events that are not exceptions.	",expr:{PPL:I`eval isException = LIKE(\`@message\`, '%exception%') | where isException = false | fields \`@logStream\`, \`@message\` | head 10`}},{title:"Return the top 25 log events sorted by timestamp.	",expr:{PPL:I`fields \`@logStream\`, \`@message\` | sort -\`@timestamp\` | head 25`}},{title:"Find and display the error count.	",expr:{PPL:I`where Operation = "x" and Fault > 0 | fields \`@timestamp\`, \`@logStream\`, ExceptionMessage | head 20`}}],ws=[{title:"Find the 25 most recently added log events",expr:{CWLI:"fields @timestamp, @message | sort @timestamp desc | limit 25",SQL:I`SELECT \`@timestamp\`, \`@message\`
      FROM \`log_group\`
      ORDER BY \`@timestamp\` DESC
      LIMIT 25`,PPL:I`fields \`@timestamp\`, \`@message\`
| sort - \`@timestamp\`
| head 25
`}},{title:"Get a list of the number of exceptions per hour",expr:{CWLI:I`filter @message like /Exception/
| stats count(*) as exceptionCount by bin(1h)
| sort exceptionCount desc`,SQL:I`SELECT window.start, COUNT(*) AS exceptionCount
FROM \`log_group\`
WHERE \`@message\` LIKE '%Exception%'
GROUP BY window(\`@timestamp\`, '1 hour')
ORDER BY exceptionCount DESC`,PPL:I`where abs(\`@message\`, "%Exception%")
| stats count() as exceptionCount by span(\`@timestamp\`, 1h)
| sort - exceptionCount`}},{title:"Get a list of log events that aren't exceptions.",expr:{CWLI:"fields @message | filter @message not like /Exception/",SQL:I`SELECT \`@message\`
FROM \`log_group\`
WHERE \`@message\` NOT LIKE '%Exception%'`,PPL:I`fields \`@message\`
| where not like(\`@message\`, "%Exception%")`}},{title:"Get the most recent log event for each unique value of the server field",expr:{CWLI:I`fields @timestamp, server, severity, message
| sort @timestamp asc
| dedup server`,PPL:I`fields \`@timestamp\`, server, severity, message
| sort \`@timestamp\`
| dedup server`}},{title:"Get the most recent log event for each unique value of the server field for each severity type",expr:{CWLI:I`fields @timestamp, server, severity, message
| sort @timestamp desc
| dedup server, severity`,PPL:I`fields \`@timestamp\`, server, severity, message
| sort - \`@timestamp\`
| dedup server`}},{title:"Number of exceptions logged every 5 minutes",expr:{CWLI:"filter @message like /Exception/ | stats count(*) as exceptionCount by bin(5m) | sort exceptionCount desc",SQL:I`SELECT window.start, COUNT(*) AS exceptionCount
FROM \`log_group\`
WHERE \`@message\` LIKE '%Exception%'
GROUP BY window(\`@timestamp\`, '5 minute')
ORDER BY exceptionCount DESC`,PPL:I`where like(\`@message\`, "%Exception%")
| stats count() as exceptionCount by span(\`@timestamp\`, 5m)
| sort - exceptionCount`}},...Ms,...Fs],Ps=[{title:"View latency statistics for 5-minute intervals",expr:{CWLI:I`filter @type = "REPORT" |
                           stats avg(@duration), max(@duration), min(@duration) by bin(5m)`,SQL:I`SELECT window.start, AVG(\`@duration\`) AS averageDuration,
                            MAX(\`@duration\`) AS maxDuration,
                            MIN(\`@duration\`) AS minDuration
                            FROM \`log_group\`
                            WHERE \`@type\` = 'REPORT'
                            GROUP BY window(\`@timestamp\`, '5 minute')`}},{title:"Determine the amount of overprovisioned memory",expr:{CWLI:I`filter @type = "REPORT"
          | stats max(@memorySize / 1000 / 1000) as provisionedMemoryMB,
            min(@maxMemoryUsed / 1000 / 1000) as smallestMemoryRequestMB,
            avg(@maxMemoryUsed / 1000 / 1000) as avgMemoryUsedMB,
            max(@maxMemoryUsed / 1000 / 1000) as maxMemoryUsedMB,
            provisionedMemoryMB - maxMemoryUsedMB as overProvisionedMB
        `,SQL:I`SELECT MAX(\`@memorySize\` / 1000 / 1000) AS provisonedMemoryMB,
          MIN(\`@maxMemoryUsed\` / 1000 / 1000) AS smallestMemoryRequestMB,
          AVG(\`@maxMemoryUsed\` / 1000 / 1000) AS avgMemoryUsedMB,
          MAX(\`@maxMemoryUsed\` / 1000 / 1000) AS maxMemoryUsedMB,
          MAX(\`@memorySize\` / 1000 / 1000) - MAX(\`@maxMemoryUsed\` / 1000 / 1000) AS overProvisionedMB
          FROM \`log_group\`
          WHERE \`@type\` = 'REPORT'`}},{title:"Find the most expensive requests",expr:{CWLI:I`filter @type = "REPORT"
        | fields @requestId, @billedDuration
        | sort by @billedDuration desc`,SQL:I`SELECT\`@requestId\`, \`@billedDuration\`
              FROM \`log_group\`
              WHERE \`@type\` = 'REPORT'
              ORDER BY \`@billedDuration\` DESC`,PPL:I`where \`@type\` = 'REPORT'
            | fields \`@requestId\`, \`@billedDuration\`
            | sort - \`@billedDuration\``}}],_s=[{title:"Find the top 15 packet transfers across hosts",expr:{CWLI:I`stats sum(packets) as packetsTransferred by srcAddr, dstAddr
          | sort packetsTransferred  desc
          | limit 15`,SQL:I`SELECT \`srcAddr\`, \`dstAddr\`, SUM(\`packets\`) AS packetsTransferred
                FROM \`log_group\`
                GROUP BY \`srcAddr\`, \`dstAddr\`
                ORDER BY packetsTransferred DESC
                LIMIT 15;`}},{title:"Find the IP addresses that use UDP as a data transfer protocol",expr:{CWLI:"filter protocol=17 | stats count(*) by srcAddr",SQL:I`SELECT \`srcAddr\`, COUNT(*) AS totalCount
                FROM \`log_group\`
                WHERE \`protocol\` = 17
                GROUP BY srcAddr;`}},{title:"Find the IP addresses where flow records were skipped during the capture window",expr:{CWLI:I`filter logStatus="SKIPDATA"
                | stats count(*) by bin(1h) as t
                | sort t`,SQL:I`SELECT window.start, COUNT(*) AS totalCount
              FROM \`log_group\`
              WHERE \`logStatus\` = 'SKIPDATA'
              GROUP BY window(\`@timestamp\`, '1 minute')
              ORDER BY window.start`,PPL:I`where logStatus="SKIPDATA"
              | stats count() by span(\`@timestamp\`, 1h) as t
              | sort t`}},{title:"Average, min, and max byte transfers by source and destination IP addresses",expr:{CWLI:"stats sum(bytes) as bytesTransferred by srcAddr, dstAddr | sort bytesTransferred desc | limit 10",SQL:I`SELECT \`srcAddr\`, \`dstAddr\`, AVG(\`bytes\`),
    MIN(\`bytes\`), MAX(\`bytes\`)
    FROM \`log_group\`
    GROUP BY \`srcAddr\`, \`dstAddr\``}},{title:"Top 10 byte transfers by source and destination IP addresses",expr:{CWLI:"stats sum(bytes) as bytesTransferred by srcAddr, dstAddr | sort bytesTransferred desc | limit 10",SQL:I`SELECT \`srcAddr\`, \`dstAddr\`, SUM(\`bytes\`) as bytesTransferred
    FROM \`log_group\`
    GROUP BY \`srcAddr\`, \`dstAddr\`
    ORDER BY bytesTransferred DESC
    LIMIT 10`}},{title:"Top 20 source IP addresses with highest number of rejected requests",expr:{CWLI:'filter action="REJECT" | stats count(*) as numRejections by srcAddr | sort numRejections desc | limit 20',SQL:I`SELECT \`srcAddr\`, COUNT(*) AS numRejections
              FROM \`log_group\`
              WHERE \`action\` = 'REJECT'
              GROUP BY \`srcAddr\`
              ORDER BY numRejections DESC
              LIMIT 20`}},{title:"Find the 10 DNS resolvers with the highest number of requests.",expr:{CWLI:I`stats count(*) as numRequests by resolverIp
            | sort numRequests desc
            | limit 10`,SQL:I`SELECT \`resolverIp\`, COUNT(*) AS numRequests
                FROM \`log_group\`
                GROUP BY \`resolverIp\`
                ORDER BY numRequests DESC
                LIMIT 10`}},{title:"Find the number of records by domain and subdomain where the server failed to complete the DNS request.",expr:{CWLI:I`filter responseCode="SERVFAIL" | stats count(*) by queryName`,SQL:I`SELECT \`queryName\`, COUNT(*)
    FROM \`log_group\`
    WHERE \`responseCode\` = 'SERVFAIL'
    GROUP BY \`queryName\``,PPL:I`where \`responseCode\` = 'SERVFAIL'
    | stats count() by \`queryName\``}},{title:"Number of requests received every 10 minutes by edge location",expr:{CWLI:"stats count(*) by queryType, bin(10m)",SQL:I`SELECT window.start, \`queryType\`,
    COUNT(*) AS totalCount
    FROM \`log_group\`
    GROUP BY window(\`@timestamp\`, '10 minute'), \`queryType\``,PPL:"stats count() by queryType, span(`@timestamp`, 10m)"}}],Ws=[{title:"Find the number of log entries for each service, event type, and AWS Region",expr:{CWLI:"stats count(*) by eventSource, eventName, awsRegion",PPL:"stats count() by `eventSource`, `eventName`, `awsRegion`",SQL:I`SELECT \`eventSource\`, \`eventName\`,
    \`awsRegion\`, COUNT(*)
    FROM \`log_group\`
    GROUP BY \`eventSource\`, \`eventName\`,
    \`awsRegion\``}},{title:"Find the Amazon EC2 hosts that were started or stopped in a given AWS Region",expr:{CWLI:'filter (eventName="StartInstances" or eventName="StopInstances") and awsRegion="us-east-2',PPL:I`where \`eventName\` = 'StartInstances'
    OR \`eventName\` = 'StopInstances'
    AND \`awsRegion\` = 'us-east-2'`,SQL:I`SELECT \`@timestamp\`, \`@message\`
    FROM \`log_group\`
    WHERE \`eventName\` = 'StartInstances'
    OR \`eventName\` = 'StopInstances'
    AND \`awsRegion\` = 'us-east-2'`}},{title:"Find the AWS Regions, user names, and ARNs of newly created IAM users",expr:{CWLI:I`filter eventName="CreateUser"
            | fields awsRegion, requestParameters.userName, responseElements.user.arn`,PPL:I`where \`eventName\` = 'CreateUser'
    | fields \`awsRegion\`, \`requestParameters.userName\`, \`responseElements.user.arn\``,SQL:I`SELECT \`awsRegion\`, \`requestParameters.userName\`,
            \`responseElements.user.arn\`
            FROM \`log_group\`
            WHERE \`eventName\` = 'CreateUser'`}},{title:"Find the number of records where an exception occurred while invoking the API UpdateTrail",expr:{CWLI:I`filter eventName="UpdateTrail" and ispresent(errorCode)
    | stats count(*) by errorCode, errorMessage`,PPL:I`where eventName = "UpdateTrail" and isnotnull(errorCode)
    | stats count() by errorCode, errorMessage`,SQL:I`SELECT \`errorCode\`, \`errorMessage\`, COUNT(*)
    FROM \`log_group\`
    WHERE \`eventName\` = 'UpdateTrail'
    AND \`errorCode\` IS NOT NULL
    GROUP BY \`errorCode\`, \`errorMessage\``}},{title:"Find log entries where TLS 1.0 or 1.1 was used",expr:{CWLI:I`filter tlsDetails.tlsVersion in [ "TLSv1", "TLSv1.1" ]
    | stats count(*) as numOutdatedTlsCalls by userIdentity.accountId, recipientAccountId, eventSource, eventName, awsRegion, tlsDetails.tlsVersion, tlsDetails.cipherSuite, userAgent
    | sort eventSource, eventName, awsRegion, tlsDetails.tlsVersion`,PPL:I`where tlsDetails.tlsVersion in ('TLSv1', 'TLSv1.1')
    | stats count() as numOutdatedTlsCalls by
    \`userIdentity.accountId\`, \`recipientAccountId\`,
    \`eventSource\`, \`eventName\`, \`awsRegion\`
    \`tlsDetails.tlsVersion\`, \`tlsDetails.cipherSuite\`
    \`userAgent\`
    | sort \`eventSource\`, \`eventName\`, \`awsRegion\`, \`tlsDetails.tlsVersion\``,SQL:I`SELECT \`userIdentity.accountId\`, \`recipientAccountId\`, \`eventSource\`,
    \`eventName\`, \`awsRegion\`, \`tlsDetails.tlsVersion\`,
    \`tlsDetails.cipherSuite\`, \`userAgent\`, COUNT(*) AS numOutdatedTlsCalls
    FROM \`log_group\`
    WHERE \`tlsDetails.tlsVersion\` IN ('TLSv1', 'TLSv1.1')
    GROUP BY \`userIdentity.accountId\`, \`recipientAccountId\`, \`eventSource\`,
    \`eventName\`, \`awsRegion\`, \`tlsDetails.tlsVersion\`,
    \`tlsDetails.cipherSuite\`, \`userAgent\`
    ORDER BY \`eventSource\`, \`eventName\`, \`awsRegion\`, \`tlsDetails.tlsVersion\``}},{title:"Find the number of calls per service that used TLS versions 1.0 or 1.1",expr:{CWLI:I`filter tlsDetails.tlsVersion in [ "TLSv1", "TLSv1.1" ]
    | stats count(*) as numOutdatedTlsCalls by eventSource
    | sort numOutdatedTlsCalls desc`,PPL:I`where \`tlsDetails.tlsVersion\` in ('TLSv1', 'TLSv1.1')
    | stats count() as numOutdatedTlsCalls by \`eventSource\`
    | sort - numOutdatedTlsCalls`,SQL:I`SELECT \`eventSource\`, COUNT(*) AS numOutdatedTlsCalls
    FROM \`log_group\`
    WHERE \`tlsDetails.tlsVersion\` IN ('TLSv1', 'TLSv1.1')
    GROUP BY \`eventSource\`
    ORDER BY numOutdatedTlsCalls DESC`}},{title:"Number of log entries by region and EC2 event type",expr:{CWLI:'filter eventSource="ec2.amazonaws.com" | stats count(*) as eventCount by eventName, awsRegion | sort eventCount desc',PPL:I`where \`eventSource\` = 'ec2.amazonaws.com'
    | stats count() as eventCount by \`eventName\`, \`awsRegion\`
    | sort - eventCount
    `,SQL:I`SELECT \`eventName\`, \`awsRegion\`,
    COUNT(*) AS eventCount
    FROM \`log_group\`
    WHERE \`eventSource\` = 'ec2.amazonaws.com'
    GROUP BY \`eventName\`, \`awsRegion\`
    ORDER BY eventCount DESC`}}],Us=[{title:"Find the instances that are sending the most traffic through your NAT gateway",expr:{CWLI:I`filter (dstAddr like 'x.x.x.x' and srcAddr like 'y.y.')
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort bytesTransferred desc
    | limit 10`,PPL:I`where like(dstAddr, "x.x.x.x") and like(srcAddr like "y.y.")
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort - bytesTransferred
    | head 10`,SQL:I`SELECT \`srcAddr\`, \`dstAddr\`,
    SUM(\`bytes\`) AS bytesTransferred
    FROM \`log_group\`
    WHERE \`dstAddr\` LIKE 'x.x.x.x'
    AND \`srcAddr\` LIKE \`y.y.%\`
    GROUP BY \`srcAddr\`, \`dstAddr\`
    ORDER BY bytesTransferred DESC
    LIMIT 10`}},{title:"Determine the traffic that's going to and from the instances in your NAT gateways",expr:{CWLI:I`filter (dstAddr like 'x.x.x.x' and srcAddr like 'y.y.') or (srcAddr like 'xxx.xx.xx.xx' and dstAddr like 'y.y.')
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort bytesTransferred desc
    | limit 10`,PPL:I`where (like(dstAddr, "x.x.x.x") and like(srcAddr, "y.y.")) or (like(srcAddr, "xxx.xx.xx.xx") and like(dstAddr, "y.y.")
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort - bytesTransferred
    | limit 10`,SQL:I`SELECT \`srcAddr\`, \`dstAddr\`,
    SUM (\`bytes\`) AS bytesTransferred
    FROM \`log_group\`
    WHERE (\`dstAddr\` LIKE 'x.x.x.x' AND \`srcAddr\` LIKE 'y.y.%')
    OR (\`srcAddr\` LIKE 'xxx.xx.xx.xx' AND \`dstAddr\` LIKE 'y.y.%')
    GROUP BY \`srcAddr\`, \`dstAddr\`
    ORDER BY \`bytesTransferred\` DESC
    LIMIT 10`}},{title:"Determine the internet destinations that the instances in your VPC communicate with most often for uploads and downloads - for uploads",expr:{CWLI:I`filter (srcAddr like 'x.x.x.x' and dstAddr not like 'y.y.')
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort bytesTransferred desc
    | limit 10`,PPL:I`where like(srcAddr like "y.y.") and not like(dstAddr, "x.x.x.x")
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort - bytesTransferred
    | head 10`,SQL:I`SELECT \`srcAddr\`, \`dstAddr\`,
    SUM(\`bytes\`) AS bytesTransferred
    FROM \`log_group\`
    WHERE \`srcAddr\` LIKE 'x.x.x.x'
    AND \`dstAddr\` NOT LIKE \`y.y.%\`
    GROUP BY \`srcAddr\`, \`dstAddr\`
    ORDER BY bytesTransferred DESC
    LIMIT 10`}},{title:"Determine the internet destinations that the instances in your VPC communicate with most often for uploads and downloads - for downloads",expr:{CWLI:I`filter (dstAddr like 'x.x.x.x' and srcAddr not like 'y.y.')
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort bytesTransferred desc
    | limit 10`,PPL:I`where like(dstAddr, "x.x.x.x") and not like(srcAddr like "y.y.")
    | stats sum(bytes) as bytesTransferred by srcAddr, dstAddr
    | sort - bytesTransferred
    | head 10`,SQL:I`SELECT \`srcAddr\`, \`dstAddr\`,
    SUM(\`bytes\`) AS bytesTransferred
    FROM \`log_group\`
    WHERE \`dstAddr\` LIKE 'x.x.x.x'
    AND \`srcAddr\` NOT LIKE \`y.y.%\`
    GROUP BY \`srcAddr\`, \`dstAddr\`
    ORDER BY bytesTransferred DESC
    LIMIT 10`}}],Gs=[{title:"Number of unique HTTP status codes",expr:{CWLI:'fields ispresent(graphQLAPIId) as isApi | filter isApi | filter logType = "RequestSummary" | stats count() as statusCount by statusCode | sort statusCount desc',SQL:I`SELECT \`graphQLAPIId\`, \`statusCode\`,
    COUNT(*) AS statusCount
    FROM \`log_group\`
    WHERE \`logType\` = 'RequestSummary'
    AND \`graphQLAPIId\` IS NOT NULL
    GROUP BY \`graphQLAPIId\`, \`statusCode\`
    ORDER BY statusCount DESC`}},{title:"Most frequently invoked resolvers",expr:{CWLI:'fields ispresent(resolverArn) as isRes | stats count() as invocationCount by resolverArn | filter isRes | filter logType = "Tracing" | sort invocationCount desc | limit 10',PPL:I`where \`logType\` = 'Tracing'
    | fields \`resolverArn\`, \`duration\`
    | sort - duration
    | head 10`,SQL:I`SELECT \`resolverArn\`, COUNT(*) AS invocationCount
    FROM \`log_group\`
    WHERE \`logType\` = 'Tracing'
    AND \`resolverArn\` IS NOT NULL
    GROUP BY \`resolverArn\`
    ORDER BY invocationCount DESC
    LIMIT 10`}},{title:"Top 10 resolvers with maximum latency",expr:{CWLI:'fields resolverArn, duration | filter logType = "Tracing" | sort duration desc | limit 10',PPL:I`where \`logType\` = 'Tracing'
    | fields \`resolverArn\`, \`duration\`
    | sort - duration
    | head 10`,SQL:I`SELECT \`resolverArn\`, \`duration\`
    FROM \`log_group\`
    WHERE \`logType\` = 'Tracing'
    ORDER BY \`duration\` DESC
    LIMIT 10`}},{title:"Resolvers with most errors in mapping templates",expr:{CWLI:'fields ispresent(resolverArn) as isRes | stats count() as errorCount by resolverArn, logType | filter isRes and (logType = "RequestMapping" or logType = "ResponseMapping") and fieldInError | sort errorCount desc | limit 10',SQL:I`SELECT resolverArn, COUNT(*) AS errorCount
    FROM \`log_group\`
    WHERE ISNOTNULL(resolverArn) AND (logType = "RequestMapping" OR logType = "ResponseMapping") AND fieldInError
    GROUP BY resolverArn
    ORDER BY errorCount DESC
    LIMIT 10`}},{title:"Field latency statistics",expr:{CWLI:`stats min(duration), max(duration), avg(duration) as avgDur by concat(parentType, '/', fieldName) as fieldKey | filter logType = "Tracing" | sort avgDur desc | limit 10`,SQL:I`SELECT CONCAT(parentType, "/", fieldName) AS fieldKey, MIN(duration), MAX(duration), AVG(duration) as avgDur
    FROM \`log_group\`
    ORDER BY fieldKey
    WHERE logType="Tracing"
    SORTY BY avgDur DESC
    LIMIT 10`}},{title:"Resolver latency statistics",expr:{CWLI:'fields ispresent(resolverArn) as isRes | filter isRes | filter logType = "Tracing" | stats min(duration), max(duration), avg(duration) as avgDur by resolverArn | sort avgDur desc | limit 10 ',SQL:I`SELECT \`resolverArn\`, MIN(\`duration\`),
    MAX(\`duration\`), AVG(\`duration\`) as avgDur
    FROM \`log_group\`
    WHERE \`resolverArn\` IS NOT NULL
    AND \`logType\` = 'Tracing'
    GROUP BY \`resolverArn\`
    ORDER BY avgDur DESC
    LIMIT 10`}},{title:"Top 10 requests with maximum latency",expr:{CWLI:'fields requestId, latency | filter logType = "RequestSummary" | sort latency desc | limit 10',PPL:I`where \`logType\` = 'RequestSummary'
    | fields \`requestId\`, \`latency\`
    | sort - \`latency\`
    | head 10`,SQL:I`SELECT \`requestId\`, \`latency\`
    FROM \`log_group\`
    WHERE \`logType\` = 'RequestSummary'
    ORDER BY \`latency\` DESC
    LIMIT 10`}}],Ks=[{title:"Count IoT Events and status including errors",expr:{CWLI:"fields @timestamp, @message | stats count(*) by eventType, status",SQL:I`SELECT \`eventType\`, \`status\`, COUNT(*)
    FROM \`log_group\`
    GROUP BY \`eventType\`, \`status\``}},{title:"Count of Disconnect reasons",expr:{CWLI:'filter eventType="Disconnect" | stats count(*) by disconnectReason | sort disconnectReason desc',PPL:I`where \`eventType\` = \`Disconnect\`
    | stats count() by \`disconnectReason\`
    | sort - \`disconnectReason\``,SQL:I`SELECT \`disconnectReason\`, COUNT(*)
    FROM \`log_group\`
    WHERE \`eventType\` = 'Disconnect'
    GROUP BY \`disconnectReason\`
    ORDER BY \`disconnectReason\` DESC`}},{title:"Top 50 devices with Duplicate ClientId disconnect error",expr:{CWLI:'filter eventType="Disconnect" and disconnectReason="DUPLICATE_CLIENTID" | stats count(*) by clientId | sort numPublishIn desc | limit 50',SQL:I`SELECT \`clientId\`, COUNT(*) AS duplicateCount
    FROM \`log_group\`
    WHERE \`eventType\` = 'Disconnect'
    AND \`disconnectReason\` = 'DUPLICATE_CLIENTID'
    GROUP BY \`clientId\`
    ORDER BY duplicateCount DESC
    LIMIT 50`}},{title:"Top 10 failed connections by ClientId",expr:{CWLI:'filter eventType="Connect" and status="Failure" | stats count(*) by clientId | sort numPublishIn desc | limit 10',SQL:I`SELECT \`clientId\`, COUNT(*) AS failedConnectionCount
    FROM \`log_group\`
    WHERE \`eventType\` = 'Connect'
    AND \`status\` = 'Failure'
    GROUP BY \`clientId\`
    ORDER BY failedConnectionCount DESC
    LIMIT 10`}},{title:"Connectivity activity for a device",expr:{CWLI:"fields @timestamp, eventType, reason, clientId | filter clientId like /sampleClientID/ | filter eventType like /Connect|Disconnect/ | sort @timestamp desc | limit 20",PPL:I`fields \`@timestamp\`, eventType, reason, clientId
    | where like(clientId, "%sampleClientID%")
    | where like(eventType, "%Connect%") or like(eventType, "%Disconnect%")
    | sort - \`@timestamp\`
    | head 20`,SQL:I`SELECT \`@timestamp\`, \`eventType\`,
    \`reason\`, \`clientId\`
    FROM \`log_group\`
    WHERE \`clientId\` LIKE '%sampleClientID%'
    AND \`eventType\` LIKE ANY ('%Connect%', '%Disconnect%')
    ORDER BY \`@timestamp\` DESC
    LIMIT 20`}},{title:"View messages published to a topic",expr:{CWLI:`fields @timestamp, @message | sort @timestamp desc | filter ( eventType="Publish-In" ) and topicName like 'your/topic/here'`,PPL:I`fields \`@timestamp\`, \`@message\`
    | where eventType = "Publish-In" and like(topicName, "%your/topic/here%")
    | sort - \`@timestamp\``,SQL:I`SELECT \`@timestamp\`, \`@message\`
    FROM \`log_group\`
    WHERE \`eventType\` = 'Publish-In'
    AND \`topicName\` LIKE '%your/topic/here%'`}}],ar=[{label:"fields",documentation:"Retrieves the specified fields from log events"},{label:"display",documentation:"Specifies which fields to display in the query results"},{label:"filter",documentation:"Filters the results of a query based on one or more conditions"},{label:"stats",documentation:"Calculates aggregate statistics based on the values of log fields"},{label:"sort",documentation:"Sorts the retrieved log events"},{label:"limit",documentation:"Specifies the number of log events returned by the query"},{label:"parse",documentation:"Extracts data from a log field, creating one or more ephemeral fields that you can process further in the query"}],Po=null,_o=null,_r=[{label:"abs",detail:"abs(a)",documentation:"Absolute value."},{label:"ceil",detail:"ceil(a)",documentation:"Round to ceiling (the smallest integer that is greater than the value of a)."},{label:"floor",detail:"floor(a)",documentation:"Round to floor (the largest integer that is smaller than the value of a)."},{label:"greatest",detail:"greatest(a,b, ... z)",documentation:"Returns the largest value."},{label:"least",detail:"least(a, b, ... z)",documentation:"Returns the smallest value."},{label:"log",detail:"log(a)",documentation:"Natural logarithm."},{label:"sqrt",detail:"sqrt(a)",documentation:"Square root."}],Bs=[{label:"ispresent",detail:"ispresent(fieldname)",documentation:"Returns true if the field exists."},{label:"coalesce",detail:"coalesce(fieldname1, fieldname2, ... fieldnamex)",documentation:"Returns the first non-null value from the list."}],Wr=[{label:"isempty",detail:"isempty(fieldname)",documentation:"Returns true if the field is missing or is an empty string."},{label:"isblank",detail:"isblank(fieldname)",documentation:"Returns true if the field is missing, an empty string, or contains only white space."},{label:"concat",detail:"concat(string1, string2, ... stringz)",documentation:"Concatenates the strings."},{label:"ltrim",detail:"ltrim(string) or ltrim(string1, string2)",documentation:"Remove white space from the left of the string. If the function has a second string argument, it removes the characters of string2 from the left of string1."},{label:"rtrim",detail:"rtrim(string) or rtrim(string1, string2)",documentation:"Remove white space from the right of the string. If the function has a second string argument, it removes the characters of string2 from the right of string1."},{label:"trim",detail:"trim(string) or trim(string1, string2)",documentation:"Remove white space from both ends of the string. If the function has a second string argument, it removes the characters of string2 from both sides of string1."},{label:"strlen",detail:"strlen(string)",documentation:"Returns the length of the string in Unicode code points."},{label:"toupper",detail:"toupper(string)",documentation:"Converts the string to uppercase."},{label:"tolower",detail:"tolower(string)",documentation:"Converts the string to lowercase."},{label:"substr",detail:"substr(string1, x), or substr(string1, x, y)",documentation:"Returns a substring from the index specified by the number argument to the end of the string. If the function has a second number argument, it contains the length of the substring to be retrieved."},{label:"replace",detail:"replace(string1, string2, string3)",documentation:"Replaces all instances of string2 in string1 with string3."},{label:"strcontains",detail:"strcontains(string1, string2)",documentation:"Returns 1 if string1 contains string2 and 0 otherwise."}],Ur=[{label:"bin",detail:"bin(period)",documentation:"Rounds the value of @timestamp to the given period and then truncates."},{label:"datefloor",detail:"datefloor(a, period)",documentation:"Truncates the timestamp to the given period."},{label:"dateceil",detail:"dateceil(a, period)",documentation:"Rounds up the timestamp to the given period and then truncates."},{label:"fromMillis",detail:"fromMillis(fieldname)",documentation:"Interprets the input field as the number of milliseconds since the Unix epoch and converts it to a timestamp."},{label:"toMillis",detail:"toMillis(fieldname)",documentation:"Converts the timestamp found in the named field into a number representing the milliseconds since the Unix epoch."}],or=[{label:"isValidIp",detail:"isValidIp(fieldname)",documentation:"Returns true if the field is a valid v4 or v6 IP address."},{label:"isValidIpV4",detail:"isValidIpV4(fieldname)",documentation:"Returns true if the field is a valid v4 IP address."},{label:"isValidIpV6",detail:"isValidIpV6(fieldname)",documentation:"Returns true if the field is a valid v6 IP address."},{label:"isIpInSubnet",detail:"isIpInSubnet(fieldname, string)",documentation:"Returns true if the field is a valid v4 or v6 IP address within the specified v4 or v6 subnet."},{label:"isIpv4InSubnet",detail:"isIpv4InSubnet(fieldname, string)",documentation:"Returns true if the field is a valid v4 IP address within the specified v4 subnet."},{label:"isIpv6InSubnet",detail:"isIpv6InSubnet(fieldname, string)",documentation:"Returns true if the field is a valid v6 IP address within the specified v6 subnet."}],Gr=[{label:"ispresent",detail:"ispresent(fieldname)",documentation:"Returns true if the field exists."},{label:"isempty",detail:"isempty(fieldname)",documentation:"Returns true if the field is missing or is an empty string."},{label:"isblank",detail:"isblank(fieldname)",documentation:"Returns true if the field is missing, an empty string, or contains only white space."},{label:"strcontains",detail:"strcontains(string1, string2)",documentation:"Returns 1 if string1 contains string2 and 0 otherwise."},...or],Kr=[{label:"avg",detail:"avg(NumericFieldname)",documentation:"The average of the values in the specified field."},{label:"count",detail:"count(fieldname) or count(*)",documentation:"Counts the log records."},{label:"count_distinct",detail:"count_distinct(fieldname)",documentation:"Returns the number of unique values for the field."},{label:"max",detail:"max(fieldname)",documentation:"The maximum of the values for this log field in the queried logs."},{label:"min",detail:"min(fieldname)",documentation:"The minimum of the values for this log field in the queried logs."},{label:"pct",detail:"pct(fieldname, value)",documentation:"A percentile indicates the relative standing of a value in a datas."},{label:"stddev",detail:"stddev(NumericFieldname)",documentation:"The standard deviation of the values in the specified field."},{label:"sum",detail:"sum(NumericFieldname)",documentation:"The sum of the values in the specified field."}],Hs=[{label:"earliest",detail:"earliest(fieldname)",documentation:"Returns the value of fieldName from the log event that has the earliest time stamp in the queried logs."},{label:"latest",detail:"latest(fieldname)",documentation:"Returns the value of fieldName from the log event that has the latest time stamp in the queried logs."},{label:"sortsFirst",detail:"sortsFirst(fieldname)",documentation:"Returns the value of fieldName that sorts first in the queried logs."},{label:"sortsLast",detail:"sortsLast(fieldname)",documentation:"Returns the value of fieldName that sorts last in the queried logs."}],Vs=[...Kr,...Hs],Br=["as","like","by","in","desc","asc"],Hr=[..._r,...Bs,...Wr,...Ur,...or],Vr=[...Hr,...Vs],js={comment:{pattern:/^#.*/,greedy:!0},backticks:{pattern:/`.*?`/,alias:"string",greedy:!0},quote:{pattern:/".*?"/,alias:"string",greedy:!0},regex:{pattern:/\/.*?\/(?=\||\s*$|,)/,greedy:!0},"query-command":{pattern:new RegExp(`\\b(?:${ar.map(t=>t.label).join("|")})\\b`,"i"),alias:"function"},function:{pattern:new RegExp(`\\b(?:${Vr.map(t=>t.label).join("|")})\\b`,"i")},keyword:{pattern:new RegExp(`(\\s+)(${Br.join("|")})(?=\\s+)`,"i"),lookbehind:!0},"field-name":{pattern:/(@?[_a-zA-Z]+[_.0-9a-zA-Z]*)|(`((\\`)|([^`]))*?`)/,greedy:!0},number:/\b-?\d+((\.\d*)?([eE][+-]?\d+)?)?\b/,"command-separator":{pattern:/\|/,alias:"punctuation"},"comparison-operator":{pattern:/([<>]=?)|(!?=)/},punctuation:/[{}()`,.]/,whitespace:/\s+/};var f=E(21397),L=E(97969);const lr=t=>({comment:{pattern:/^#.*/,greedy:!0},backticks:{pattern:/`.*?`/,alias:"string",greedy:!0},quote:{pattern:/[\"'].*?[\"']/,alias:"string",greedy:!0},regex:{pattern:/\/.*?\/(?=\||\s*$|,)/,greedy:!0},...t,"field-name":{pattern:/(@?[_a-zA-Z]+[_.0-9a-zA-Z]*)|(`((\\`)|([^`]))*?`)/,greedy:!0},number:/\b-?\d+((\.\d*)?([eE][+-]?\d+)?)?\b/,"command-separator":{pattern:/\|/,alias:"punctuation"},"comparison-operator":{pattern:/([<>]=?)|(!?=)/},punctuation:/[{}()`,.]/,whitespace:/\s+/}),$s={...lr({"query-command":{pattern:new RegExp(`\\b(?:${ar.map(t=>t.label).join("|")})\\b`,"i"),alias:"function"},function:{pattern:new RegExp(`\\b(?:${Vr.map(t=>t.label).join("|")})\\b`,"i")},keyword:{pattern:new RegExp(`(\\s+)(${Br.join("|")})(?=\\s+)`,"i"),lookbehind:!0}})},ks={...lr({"query-command":{pattern:new RegExp(`\\b(?:${L.PPL_COMMANDS.join("|")})\\b`,"i"),alias:"function"},function:{pattern:new RegExp(`\\b(?:${L.ALL_FUNCTIONS.join("|")})\\b`,"i")},keyword:{pattern:new RegExp(`(\\s+)(${L.ALL_KEYWORDS.join("|")})(?=\\s+)`,"i"),lookbehind:!0},operator:{pattern:new RegExp(`\\b(?:${L.PPL_OPERATORS.map(t=>`\\${t}`).join("|")})\\b`,"i")}})},Qs={...lr({function:{pattern:new RegExp(`\\b(?:${f.ALL_FUNCTIONS.join("|")})\\b(?!\\.)`,"i")},keyword:{pattern:new RegExp(`\\b(?:${f.ALL_KEYWORDS.join("|")})\\b(?=\\s)`,"i"),lookbehind:!0},operator:{pattern:new RegExp(`\\b(?:${f.ALL_OPERATORS.map(t=>`\\${t}`).join("|")})\\b`,"i")}})},Ys=[{category:"General queries",examples:ws},{category:"Lambda",examples:Ps},{category:"VPC Flow Logs",examples:_s},{category:"CloudTrail Logs",examples:Ws},{category:"NAT Gateway",examples:Us},{category:"AWS App Sync",examples:Gs},{category:"IOT queries",examples:Ks}];function zs(t,e,r=T._M.CWLI){const s=en(r),i=(0,j.R)(P().tokenize(t,s)).filter(o=>typeof o!="string").map((o,l)=>(0,a.jsx)("span",{className:`prism-token token ${o.types.join(" ")} ${o.aliases.join(" ")}`,children:o.content},`${e}-token-${l}`));return(0,a.jsx)("div",{className:"slate-query-field",children:i})}const Xs=t=>{const[e,r]=(0,A.useState)(!1);return(0,a.jsx)(W.S,{label:t.label,isOpen:e,onToggle:r,collapsible:!0,children:t.children},t.key)},qs=t=>t.queryMode==="Logs",Zs=t=>{const e=(0,D.of)(Js),r=qs(t.query)&&t.query.queryLanguage||T._M.CWLI,s=(n,i)=>{t.onClickExample({...t.query,refId:t.query.refId??"A",expression:n.expr[r],queryMode:"Logs",region:t.query.region,id:t.query.refId??"A",logGroupNames:"logGroupNames"in t.query?t.query.logGroupNames:[],logGroups:"logGroups"in t.query?t.query.logGroups:[]}),_e({queryLanguage:r,queryCategory:i})};return(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:e.heading,children:(0,a.jsx)(Y.E,{variant:"h3",weight:"bold",children:"CloudWatch Logs cheat sheet"})}),Ys.map((n,i)=>(0,a.jsx)(Xs,{label:n.category,children:(0,a.jsx)("div",{children:n.examples.map((o,l)=>(0,a.jsx)(a.Fragment,{children:o.expr[r]&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Y.E,{variant:"h6",weight:"bold",children:o.title}),(0,a.jsx)("button",{type:"button",className:e.cheatSheetExample,onClick:()=>s(o,n.category),children:(0,a.jsx)("pre",{children:zs(o.expr[r],`item-${l}`,r)})},o.expr[r])]})}))},`cat-${i}`)},n.category)),(0,a.jsxs)("div",{children:["Note: If you are seeing masked data, you may have CloudWatch logs data protection enabled."," ",(0,a.jsx)("a",{className:e.link,href:"https://grafana.com/docs/grafana/latest/datasources/aws-cloudwatch/#cloudwatch-logs-data-protection",target:"_blank",rel:"noreferrer",children:"See documentation for details"}),"."]})]})},Js=t=>({heading:(0,N.css)({marginBottom:t.spacing(2)}),link:(0,N.css)({textDecoration:"underline"}),cheatSheetExample:(0,N.css)({margin:t.spacing(.5,0),textAlign:"left",border:"none",background:"transparent",display:"block"})}),en=t=>{switch(t){case T._M.CWLI:return $s;case T._M.PPL:return ks;case T._M.SQL:return Qs}};var tn=E(40996),rn=E(65074),gt=E(48480),cr=E(17548),ur=E(6370),sn=E(77010),dr=E(78282),De=E(34999),ht=E(37386),ye=E(63527),jr=E(3271),ie=E(2543),Et=E(62467),nn=E(44240),He=E(28105),an=E(36580),Se=E(2863),$r=E(6904),ft=E(75686),Ve=E(32300),X=E(30048),mr=E(78246),Me=E(35137),on=E(45214),pr=E(41053),le=E(47184);const gr=t=>{const[e,r]=(0,A.useState)(!1),[s,n]=(0,A.useState)([{label:"default",value:"default"}]);return(0,A.useEffect)(()=>{r(!0);const i={label:"Template Variables",options:t.getVariables().map(le.z)};t.resources.getRegions().then(o=>n([...o,i])).finally(()=>r(!1))},[t]),[s,e]},hr=t=>{const[e,r]=(0,A.useState)([]);return(0,A.useEffect)(()=>{t.resources.getNamespaces().then(s=>{r(me(t,s))})},[t]),e},Er=(t,{region:e,namespace:r,accountId:s})=>{const[n,i]=(0,A.useState)([]);return e&&(e=t.templateSrv.replace(e,{})),r&&(r=t.templateSrv.replace(r,{})),s&&(s=t.templateSrv.replace(s,{})),(0,A.useEffect)(()=>{t.resources.getMetrics({namespace:r,region:e,accountId:s}).then(o=>{i(me(t,o))})},[t,e,r,s]),n},At=(t,{region:e,namespace:r,metricName:s,dimensionFilters:n,accountId:i})=>{const[o,l]=(0,A.useState)([]);return e&&(e=t.templateSrv.replace(e,{})),r&&(r=t.templateSrv.replace(r,{})),s&&(s=t.templateSrv.replace(s,{})),i&&(i=t.templateSrv.replace(i,{})),n&&(n=t.resources.convertDimensionFormat(n,{},!1)),(0,on.A)(()=>{t.resources.getDimensionKeys({namespace:r,region:e,metricName:s,accountId:i,dimensionFilters:n},!1).then(d=>{l(me(t,d))})},[t,r,e,s,i,n]),o},Tt=(t,e)=>{const[r,s]=(0,A.useState)(""),n=t.templateSrv.replace(e);return(0,A.useEffect)(()=>{if(t.resources.isVariableWithMultipleOptionsSelected(e)){const i=`Template variables with multiple selected options are not supported for ${e}`;r!==i&&s(i);return}r&&s("")},[t.resources,e,n,r]),r},kr=(t,e)=>{const[r,s]=(0,A.useState)(!1);return e&&(e=t.templateSrv.replace(e,{})),(0,A.useEffect)(()=>{U.$.featureToggles.cloudWatchCrossAccountQuerying&&t.isMonitoringAccount(e).then(n=>s(n))},[e,t]),r},Mt=(t,e)=>{e&&(e=t?.templateSrv.replace(e,{})??"");const r=async()=>{if(!U.$.featureToggles.cloudWatchCrossAccountQuerying)return Promise.resolve([]);const i=await t?.getAccounts({region:e})??[];if(i.length===0)return[];const o=i.map(g=>({label:g.label,value:g.id,description:g.id})),d={label:"Template Variables",options:t?.getVariables().map(le.z)||[]};return[...o,d]},[s,n]=(0,pr.A)(r,[t,e]);return(0,A.useEffect)(()=>{n()},[t,e,n]),s};var Qr=E(1667),Ft=E(75349),ce=E(18857);const wt=["Average","Maximum","Minimum","Sum","SampleCount","IQM"],nt={label:"All",value:"all",description:"Target all linked accounts"};function fr({accountId:t,onChange:e,accountOptions:r}){const s=(0,A.useMemo)(()=>r.find(n=>n.options?n.options.find(o=>o.value===t):n.value===t),[r,t]);return r.length===0?null:(0,a.jsx)(X.c,{label:"Account",width:26,tooltip:"A CloudWatch monitoring account views data from source accounts so you can centralize monitoring and troubleshooting activities across multiple accounts. Go to the CloudWatch settings page in the AWS console for more details.",children:(0,a.jsx)(ce.l6,{"aria-label":"Account Selection",value:s?t:nt.value,options:[nt,...r],onChange:({value:n})=>{e(n)}})})}var Pt=E(26774),It=E(72500),yt=E(20301);const Yr={value:"*",label:"*"},ln=(t,e)=>Object.entries(t??{}).reduce((r,[s,n])=>s!==e?{...r,[s]:n}:r,{}),cn=({filter:t,metricStat:e,datasource:r,disableExpressions:s,onChange:n,onDelete:i})=>{const{region:o,namespace:l,metricName:d,dimensions:g,accountId:c}=e,h=Tt(r,t.key),m=(0,A.useMemo)(()=>ln(g??{},t.key),[g,t]),R=At(r,{...e,dimensionFilters:m}),C=async()=>t.key?r.resources.getDimensionValues({dimensionKey:t.key,dimensionFilters:m,region:o,namespace:l,metricName:d,accountId:c}).then(F=>(F.length&&!s&&!F.some(V=>V.value===Yr.value)&&F.unshift(Yr),me(r,F))):[],[M,b]=(0,pr.A)(C,[t.key,g,o,l,d,c]),S=(0,D.of)(un);return(0,a.jsxs)("div",{className:S.container,"data-testid":"cloudwatch-dimensions-filter-item",children:[(0,a.jsxs)(It.M,{children:[(0,a.jsx)(ce.l6,{"aria-label":"Dimensions filter key",inputId:"cloudwatch-dimensions-filter-item-key",width:"auto",value:t.key?(0,le.z)(t.key):null,allowCustomValue:!0,options:R,onChange:F=>{F.label&&n({key:F.label,value:void 0})}}),(0,a.jsx)("span",{className:(0,N.cx)(S.root),children:"="}),(0,a.jsx)(ce.l6,{"aria-label":"Dimensions filter value",inputId:"cloudwatch-dimensions-filter-item-value",onOpenMenu:b,width:"auto",value:t.value?(0,le.z)(t.value):null,allowCustomValue:!0,isLoading:M.loading,options:M.value,onChange:F=>{F.value&&n({...t,value:F.value})}}),(0,a.jsx)(yt.Z,{"aria-label":"remove",icon:"times",variant:"secondary",onClick:i,type:"button"})]}),h&&(0,a.jsx)(De.F,{className:S.alert,title:h,severity:"error",topSpacing:1})]})},un=t=>({root:(0,N.css)({padding:t.spacing(0,1),alignSelf:"center"}),container:(0,N.css)({display:"inline-block"}),alert:(0,N.css)({minWidth:"100%",width:"min-content"})}),dn=t=>Object.entries(t??{}).reduce((e,[r,s])=>{if(!s)return e;let n="";if(typeof s=="string"?n=s:Array.isArray(s)&&typeof s[0]=="string"&&(n=s[0]),!n)return e;const i={key:r,value:n,operator:"="};return[...e,i]},[]),mn=t=>t.reduce((e,{key:r,value:s})=>r&&s?{...e,[r]:s}:e,{}),zr=({metricStat:t,datasource:e,disableExpressions:r,onChange:s})=>{const n=(0,A.useMemo)(()=>dn(t.dimensions),[t.dimensions]),[i,o]=(0,A.useState)(n),l=d=>{o(d);const g=mn(d);(0,ie.isEqual)(g,t.dimensions)||s(g)};return(0,a.jsx)(Pt.o,{items:i,onChange:l,renderItem:pn(e,t,r)})};function pn(t,e,r){function s(n,i,o){return(0,a.jsx)(cn,{filter:n,onChange:l=>i(l),datasource:t,metricStat:e,disableExpressions:r,onDelete:o})}return s}const gn=/^(p|tm|tc|ts|wm)\d{2}(?:\.\d{1,2})?$/,hn="\\d*(\\.\\d+)?%?:\\d*(\\.\\d+)?%?",En=new RegExp(`^(PR|TM|TC|TS|WM)\\((${hn})\\)$`),Xr=({refId:t,metricStat:e,datasource:r,disableExpressions:s=!1,onChange:n})=>{const i=hr(r),o=Er(r,e),l=Mt(r.resources,e.region);(0,A.useEffect)(()=>{r.resources.isMonitoringAccount(e.region).then(c=>{c&&!l.loading&&l.value?.length&&!e.accountId&&n({...e,accountId:"all"}),!l.loading&&l.value&&!l.value.length&&e.accountId&&n({...e,accountId:void 0})})},[l,e,n,r.resources]);const d=async c=>{const h=await g(c);n(h)},g=async c=>{let{metricName:h,namespace:m,region:R}=c;return h?(await r.resources.getMetrics({namespace:m,region:R}).then(C=>{C.find(M=>M.value===h)||(h="")}),{...c,metricName:h}):c};return(0,a.jsxs)(Qr.D,{children:[(0,a.jsxs)(Ve.U,{children:[!s&&U.$.featureToggles.cloudWatchCrossAccountQuerying&&(0,a.jsx)(fr,{accountId:e.accountId,onChange:c=>{n({...e,accountId:c})},accountOptions:l?.value||[]}),(0,a.jsxs)(Ft.B,{children:[(0,a.jsx)(X.c,{label:"Namespace",width:26,children:(0,a.jsx)(ce.l6,{"aria-label":"Namespace",value:e?.namespace&&Ce(e.namespace),allowCustomValue:!0,options:i,onChange:({value:c})=>{c&&d({...e,namespace:c})}})}),(0,a.jsx)(X.c,{label:"Metric name",width:16,children:(0,a.jsx)(ce.l6,{"aria-label":"Metric name",value:e?.metricName&&Ce(e.metricName),allowCustomValue:!0,options:o,onChange:({value:c})=>{c&&n({...e,metricName:c})}})}),(0,a.jsx)(X.c,{label:"Statistic",width:16,children:(0,a.jsx)(ce.l6,{inputId:`${t}-metric-stat-editor-select-statistic`,allowCustomValue:!0,value:Ce(e.statistic??wt[0]),options:me(r,wt.filter(c=>c!==e.statistic).map(Ce)),onChange:({value:c})=>{!c||!wt.includes(c)&&!(gn.test(c)||En.test(c))&&!r.templateSrv.containsTemplate(c)||n({...e,statistic:c})}})})]})]}),(0,a.jsxs)(Ve.U,{children:[(0,a.jsx)(X.c,{label:"Dimensions",children:(0,a.jsx)(zr,{metricStat:e,onChange:c=>n({...e,dimensions:c}),disableExpressions:s,datasource:r})}),!s&&(0,a.jsx)(X.c,{label:"Match exact",optional:!0,tooltip:(0,a.jsxs)(a.Fragment,{children:["Only show metrics that contain exactly the dimensions defined in the query and match the specified values. If this is enabled, all dimensions of the metric being queried must be specified so that the ",(0,a.jsx)("a",{href:"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/search-expression-syntax.html",target:"_blank",rel:"noreferrer",children:"metric schema"})," matches exactly. If this is disabled, metrics that match the schema and have additional dimensions will also be returned."]}),tooltipInteractive:!0,children:(0,a.jsx)(mr.C,{id:`${t}-cloudwatch-match-exact`,value:!!e.matchExact,onChange:c=>{n({...e,matchExact:c.currentTarget.checked})}})})]})]})},fn=t=>{const{query:e,onChange:r,datasource:s}=t,[n,i]=gr(s);return re(e)?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)($r.X,{children:(0,a.jsx)(ft.W,{label:"Region",value:n.find(o=>o.value===e.region),placeholder:"Select region",allowCustomValue:!0,onChange:({value:o})=>o&&r({...e,region:o}),options:n,isLoading:i})}),(0,a.jsx)(Me.$,{v:.5}),(0,a.jsx)(Xr,{...t,refId:e.refId,metricStat:e,disableExpressions:!0,onChange:o=>r({...e,...o})}),(0,a.jsx)(Me.$,{v:.5}),(0,a.jsxs)(Ve.U,{children:[(0,a.jsx)(X.c,{label:"Period",width:26,tooltip:"Minimum interval between points in seconds.",children:(0,a.jsx)(ye.p,{value:e.period||"",placeholder:"auto",onChange:o=>r({...e,period:o.target.value})})}),(0,a.jsx)(X.c,{label:"Enable Prefix Matching",optional:!0,children:(0,a.jsx)(mr.C,{value:e.prefixMatching,onChange:o=>{r({...e,prefixMatching:o.currentTarget.checked})}})}),(0,a.jsx)(X.c,{label:"Action",optional:!0,disabled:!e.prefixMatching,children:(0,a.jsx)(ye.p,{value:e.actionPrefix||"",onChange:o=>r({...e,actionPrefix:o.target.value})})}),(0,a.jsx)(X.c,{label:"Alarm Name",optional:!0,disabled:!e.prefixMatching,children:(0,a.jsx)(ye.p,{value:e.alarmNamePrefix||"",onChange:o=>r({...e,alarmNamePrefix:o.target.value})})})]})]}):(0,a.jsx)(De.F,{severity:"error",title:"Invalid annotation query",topSpacing:2,children:JSON.stringify(e,null,4)})},qr={queryMode:"Metrics",namespace:"",metricName:"",expression:"",dimensions:{},region:"default",id:"",statistic:"Average",period:"",metricQueryType:T.d$.Search,metricEditorMode:T.Rx.Builder,sql:void 0,sqlExpression:"",matchExact:!0},Ar={queryMode:"Annotations",namespace:"",region:"default",statistic:"Average"},An=`fields @timestamp, @message |
sort @timestamp desc |
limit 20`,Tn="fields `@timestamp`, `@message`\n| sort - `@timestamp`\n| head 25s",In="SELECT `@timestamp`, `@message`\nFROM `log_group`\nORDER BY `@timestamp` DESC\nLIMIT 25;",yn=(t,e)=>({id:"",region:"default",logGroupNames:e,logGroups:t??[],queryLanguage:T._M.CWLI}),Sn={queryType:T.b4.Regions,region:"default"},Rn={prepareAnnotation:t=>oe(t)?t:{datasource:t.datasource,enable:t.enable,iconColor:t.iconColor,name:t.name,builtIn:t.builtIn,hide:t.hide,target:{...t.target,...t,statistic:t.statistic||Ar.statistic,region:t.region||Ar.region,queryMode:"Annotations",refId:t.refId||"annotationQuery"}},prepareQuery:t=>{if(!t.target)return;const{prefixMatching:e,actionPrefix:r,alarmNamePrefix:s,statistic:n,namespace:i,metricName:o}=t.target;if(!!e&&!!r&&!!s||!e&&!!i&&!!o&&!!n)return t.target},getDefaultQuery(){return Ar},QueryEditor:fn};var Zr=E(75505),Ze=E(59258);const Jr=/\$(\w+)|\[\[(\w+?)(?::(\w+))?\]\]|\${(\w+)(?:\.([^:^\}]+))?(?::([^\}]+))?}/g,Cn=t=>(Jr.lastIndex=0,Jr.exec(t)),_t=t=>{const e=Cn(t);return e?e.slice(1).find(s=>s!==void 0):null},Tr=(t,e,r,s)=>{s=s??"value";const n=s==="value"?"pipe":"text";let i=[];for(const o of e){const l=_t(o),d=t.getVariables().find(({name:g})=>g===l);if(d&&"current"in d&&Ln(d.current)){const g=d.current[s];if(Array.isArray(g)){const c=n==="text"?" + ":"|";i.push(...t.replace(o,r,n).split(c))}else typeof g=="string"&&i.push(t.replace(o,r,n))}else i.push(o)}return i},es=(t,e)=>{const r=_t(e);return t.getVariables().some(({name:s})=>s===r)},Ln=t=>t.hasOwnProperty("value")&&t.hasOwnProperty("text"),Wt=async(t,e,r,s)=>{if(t.length===0)return[];const n=Tr(r,t.map(o=>o.name),{},"text"),i=await Promise.all(n.map(o=>s.getLogGroupFields(e,o).then(l=>l.filter(d=>d).map(d=>d.value.name??""))));return[...new Set(i.flat())]};class On extends w.Is{constructor(e,r,s){super(),this.started=!1,this.cleanText=n=>n.replace(/[()]/g,"").trim(),this.request=(n,i)=>(0,Zr.s)(this.datasource.logsQueryRunner.awsRequest(n,i)),this.start=()=>(this.startTask||(this.startTask=Promise.resolve().then(()=>(this.started=!0,[]))),this.startTask),this.handleKeyword=async n=>{const i=await this.getFieldCompletionItems(n?.logGroups,n?.region||"default"),o=[{searchFunctionType:Ze.T.Prefix,label:"Functions",items:Wr.concat(Ur,or)}];return i.suggestions.push(...o),i},this.handleCommand=async(n,i,o)=>{const l=n.content.toLowerCase(),d=it(i),g=d===n;if(l==="sort")return this.handleSortCommand(g,i,o);if(l==="parse"&&g)return await this.getFieldCompletionItems(o?.logGroups??[],o?.region||"default");const c=je(n.next,"whitespace")&&!n.next?.next,h=c||Nn(n)===i,m=je(i,"punctuation",","),R=m||je(d,"punctuation",",");if(!(h||R))return{suggestions:[]};if(["display","fields"].includes(l)){const C=await this.getFieldCompletionItems(o?.logGroups??[],o?.region||"default");return C.suggestions.push(...this.getFieldAndFilterFunctionCompletionItems().suggestions),C}if(l==="stats"){const C=this.getStatsAggCompletionItems();return(m||c)&&C?.suggestions.forEach(M=>{M.skipFilter=!0}),C}if(l==="filter"&&g){const C=await this.getFieldCompletionItems(o?.logGroups,o?.region||"default"),M=this.getBoolFuncCompletionItems();return C.suggestions.push(...M.suggestions),C}return{suggestions:[]}},this.handleComparison=async n=>{const i=await this.getFieldCompletionItems(n?.logGroups,n?.region||"default"),o=this.getComparisonCompletionItems();return i.suggestions.push(...o.suggestions),i},this.getCommandCompletionItems=()=>({suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Commands",items:ar}]}),this.getFieldAndFilterFunctionCompletionItems=()=>({suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Functions",items:Hr}]}),this.getStatsAggCompletionItems=()=>({suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Functions",items:Kr}]}),this.getBoolFuncCompletionItems=()=>({suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Functions",items:Gr}]}),this.getComparisonCompletionItems=()=>({suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Functions",items:_r.concat(Gr)}]}),this.getFieldCompletionItems=async(n,i)=>n?{suggestions:[{label:"Fields",items:(await Wt(n,i,this.templateSrv,this.datasource.resources)).map(l=>({label:l,insertText:l.match(/@?[_a-zA-Z]+[_.0-9a-zA-Z]*/)?void 0:`\`${l}\``}))}]}:{suggestions:[]},this.datasource=e,this.templateSrv=r??(0,Se.w)(),Object.assign(this,s)}getSyntax(){return js}isStatsQuery(e){const r=this.getSyntax();return!!(P().tokenize(e,r)??[]).find(n=>typeof n!="string"&&n.content.toString().toLowerCase()==="stats"&&n.type==="query-command")}async provideCompletionItems(e,r){const{value:s}=e,n=s?.data.get("tokens");if(!n||!n.length)return{suggestions:[]};const i=n.filter(c=>c.offsets.start<=s.selection?.start?.offset&&c.offsets.end>=s.selection?.start?.offset)[0],o=!i.prev,l=it(i);if(o||!o&&l?.types.includes("command-separator"))return this.getCommandCompletionItems();if(bn(i))return await this.getFieldCompletionItems(r?.logGroups,r?.region||"default");if(Dn("by",i))return this.handleKeyword(r);if(l?.types.includes("comparison-operator"))return this.handleComparison(r);const g=vn(i);return g?await this.handleCommand(g,i,r):{suggestions:[]}}async handleSortCommand(e,r,s){return e?await this.getFieldCompletionItems(s?.logGroups,s?.region||"default"):je(it(r),"field-name")?{suggestions:[{searchFunctionType:Ze.T.Prefix,label:"Sort Order",items:[{label:"asc"},{label:"desc"}]}]}:{suggestions:[]}}}function Nn(t){let e=t;for(;e.next;)if(e.next.types.includes("whitespace"))e=e.next;else return e.next;return null}function it(t){let e=t;for(;e.prev;)if(je(e.prev,"whitespace"))e=e.prev;else return e.prev;return null}function vn(t){let e=t;for(;e.prev;)if(e=e.prev,e.types.includes("query-command")&&(!e.prev||je(it(e),"command-separator")))return e;return null}const xn=["avg","count","count_distinct","earliest","latest","sortsFirst","sortsLast","max","min","pct","stddev","ispresent","fromMillis","toMillis","isempty","isblank","isValidIp","isValidIpV4","isValidIpV6","isIpInSubnet","isIpv4InSubnet","isIpv6InSubnet"].map(t=>t.toLowerCase());function bn(t){const e=it(t);if(!e)return!1;const r=t.content==="("?t:e.content==="("?e:void 0;if(r){const s=it(r);if(s)return xn.includes(s.content.toLowerCase())&&s.types.includes("function")}return!1}function Dn(t,e){const r=ts(e,["whitespace","function","punctuation","field-name","number"]);if(je(r,"keyword","by")){const s=ts(e,["whitespace"]);if(s===r||je(s,"punctuation",","))return!0}return!1}function je(t,e,r){return!(!t?.types.includes(e)||r&&t?.content.toLowerCase()!==r)}function ts(t,e){let r=t.prev;e:for(;r;){for(const s of e)if(typeof s=="string"){if(r.types.includes(s)){r=r.prev;continue e}}else if(r.types.includes(s.type)&&r.content.toLowerCase()===s.value){r=r.prev;continue e}break}return r}class Mn{constructor(e,r,s,n,i,o){this.type=e,this.value=r,this.range=s,this.previous=n,this.next=i,this.tokenTypes=o}isKeyword(){return this.type===this.tokenTypes.Keyword}isWhiteSpace(){return this.type===this.tokenTypes.Whitespace}isParenthesis(){return this.type===this.tokenTypes.Parenthesis}isIdentifier(){return this.type===this.tokenTypes.Identifier}isString(){return this.type===this.tokenTypes.String}isDoubleQuotedString(){return this.type===this.tokenTypes.Type}isVariable(){return this.type===this.tokenTypes.Variable}isFunction(){return this.type===this.tokenTypes.Function}isNumber(){return this.type===this.tokenTypes.Number}is(e,r){const s=this.type===e;return r!==void 0?s&&this.value===r:s}endsWith(e){return this.value===e||this.value[this.value.length-1]===e}getPreviousNonWhiteSpaceToken(){let e=this.previous;for(;e!=null;){if(!e.isWhiteSpace())return e;e=e.previous}return null}getPreviousOfType(e,r){let s=this.previous;for(;s!=null;){const n=s.type===e;if(r!==void 0?n&&s.value===r:n)return s;s=s.previous}return null}getPreviousUntil(e,r,s){let n=[],i=this.previous;for(;i!=null;){if(r.some(l=>l===i?.type)){i=i.previous;continue}const o=i.type===e;if(s!==void 0?o&&i.value===s:o)return n;i.isWhiteSpace()||n.push(i),i=i.previous}return n}getNextUntil(e,r,s){let n=[],i=this.next;for(;i!=null;){if(r.some(l=>l===i?.type)){i=i.next;continue}const o=i.type===e;if(s!==void 0?o&&i.value===s:o)return n;i.isWhiteSpace()||n.push(i),i=i.next}return n}getPreviousKeyword(){let e=this.previous;for(;e!=null;){if(e.isKeyword())return e;e=e.previous}return null}getNextNonWhiteSpaceToken(){let e=this.next;for(;e!=null;){if(!e.isWhiteSpace())return e;e=e.next}return null}getNextOfType(e,r){let s=this.next;for(;s!=null;){const n=s.type===e;if(r!==void 0?n&&s.value===r:n)return s;s=s.next}return null}}function rs(t,e,r,s,n){let i=null,o=null;const l=t.editor.tokenize(r.getValue()??"",e.id);for(let d=0;d<l.length;d++){const g=l[d];if(!g.length&&o){const c={offset:0,type:n.Whitespace,language:e.id,_tokenBrand:void 0};g.push(c)}for(let c=0;c<g.length;c++){const h=g[c];let m=g.length>c+1?g[c+1].offset+1:r.getLineLength(d+1)+1;const R={startLineNumber:d+1,startColumn:h.offset===0?0:h.offset+1,endLineNumber:d+1,endColumn:m},C=r.getValueInRange(R),M=new Mn(h.type,C,R,o,null,n);t.Range.containsPosition(R,s)&&(i=M),o&&(o.next=M),o=M}}return i}var u=(t=>(t[t.Unknown=0]="Unknown",t[t.SelectKeyword=1]="SelectKeyword",t[t.AfterSelectKeyword=2]="AfterSelectKeyword",t[t.SelectExpression=3]="SelectExpression",t[t.AfterSelectExpression=4]="AfterSelectExpression",t[t.AfterSelectFuncFirstArgument=5]="AfterSelectFuncFirstArgument",t[t.PredefinedFunctionArgument=6]="PredefinedFunctionArgument",t[t.FromKeyword=7]="FromKeyword",t[t.AfterFrom=8]="AfterFrom",t[t.AfterFromKeyword=9]="AfterFromKeyword",t[t.AfterFromArguments=10]="AfterFromArguments",t[t.SchemaFuncFirstArgument=11]="SchemaFuncFirstArgument",t[t.SchemaFuncExtraArgument=12]="SchemaFuncExtraArgument",t[t.WhereKey=13]="WhereKey",t[t.WhereComparisonOperator=14]="WhereComparisonOperator",t[t.WhereValue=15]="WhereValue",t[t.AfterWhereValue=16]="AfterWhereValue",t[t.HavingKey=17]="HavingKey",t[t.HavingComparisonOperator=18]="HavingComparisonOperator",t[t.HavingValue=19]="HavingValue",t[t.AfterHavingValue=20]="AfterHavingValue",t[t.CaseKey=21]="CaseKey",t[t.CaseComparisonOperator=22]="CaseComparisonOperator",t[t.CaseValue=23]="CaseValue",t[t.AfterCaseValue=24]="AfterCaseValue",t[t.WhenKey=25]="WhenKey",t[t.WhenComparisonOperator=26]="WhenComparisonOperator",t[t.WhenValue=27]="WhenValue",t[t.AfterWhenValue=28]="AfterWhenValue",t[t.ThenExpression=29]="ThenExpression",t[t.AfterThenExpression=30]="AfterThenExpression",t[t.AfterElseKeyword=31]="AfterElseKeyword",t[t.OnKey=32]="OnKey",t[t.OnComparisonOperator=33]="OnComparisonOperator",t[t.OnValue=34]="OnValue",t[t.AfterOnValue=35]="AfterOnValue",t[t.AfterGroupByKeywords=36]="AfterGroupByKeywords",t[t.AfterGroupBy=37]="AfterGroupBy",t[t.AfterOrderByKeywords=38]="AfterOrderByKeywords",t[t.AfterOrderByFunction=39]="AfterOrderByFunction",t[t.AfterOrderByDirection=40]="AfterOrderByDirection",t[t.Subquery=41]="Subquery",t[t.PredefinedFunction=42]="PredefinedFunction",t[t.SearchFuncSecondArg=43]="SearchFuncSecondArg",t[t.SearchFuncThirdArg=44]="SearchFuncThirdArg",t[t.PredefinedFuncSecondArg=45]="PredefinedFuncSecondArg",t[t.AfterFunction=46]="AfterFunction",t[t.WithinString=47]="WithinString",t[t.NewCommand=48]="NewCommand",t[t.Comment=49]="Comment",t[t.DedupKeyword=50]="DedupKeyword",t[t.AfterDedupKeyword=51]="AfterDedupKeyword",t[t.DisplayKeyword=52]="DisplayKeyword",t[t.AfterDisplayKeyword=53]="AfterDisplayKeyword",t[t.FieldsKeyword=54]="FieldsKeyword",t[t.AfterFieldsKeyword=55]="AfterFieldsKeyword",t[t.FilterKeyword=56]="FilterKeyword",t[t.AfterFilterKeyword=57]="AfterFilterKeyword",t[t.FilterArg=58]="FilterArg",t[t.LimitKeyword=59]="LimitKeyword",t[t.AfterLimitKeyword=60]="AfterLimitKeyword",t[t.ParseKeyword=61]="ParseKeyword",t[t.AfterParseKeyword=62]="AfterParseKeyword",t[t.SortKeyword=63]="SortKeyword",t[t.AfterSortKeyword=64]="AfterSortKeyword",t[t.SortArg=65]="SortArg",t[t.StatsKeyword=66]="StatsKeyword",t[t.AfterStatsKeyword=67]="AfterStatsKeyword",t[t.AsKeyword=68]="AsKeyword",t[t.AfterAsKeyword=69]="AfterAsKeyword",t[t.ByKeyword=70]="ByKeyword",t[t.AfterByKeyword=71]="AfterByKeyword",t[t.InKeyword=72]="InKeyword",t[t.AfterInKeyword=73]="AfterInKeyword",t[t.LikeKeyword=74]="LikeKeyword",t[t.AfterLikeKeyword=75]="AfterLikeKeyword",t[t.Function=76]="Function",t[t.FunctionArg=77]="FunctionArg",t[t.CommandArg=78]="CommandArg",t[t.AfterCommand=79]="AfterCommand",t[t.ArithmeticOperator=80]="ArithmeticOperator",t[t.ArithmeticOperatorArg=81]="ArithmeticOperatorArg",t[t.BooleanOperator=82]="BooleanOperator",t[t.BooleanOperatorArg=83]="BooleanOperatorArg",t[t.ComparisonOperator=84]="ComparisonOperator",t[t.ComparisonOperatorArg=85]="ComparisonOperatorArg",t[t.BeforeLogicalExpression=86]="BeforeLogicalExpression",t[t.AfterArithmeticOperator=87]="AfterArithmeticOperator",t[t.AfterINKeyword=88]="AfterINKeyword",t[t.SortField=89]="SortField",t[t.AfterHeadCommand=90]="AfterHeadCommand",t[t.AfterFieldsCommand=91]="AfterFieldsCommand",t[t.FieldList=92]="FieldList",t[t.AfterDedupFieldNames=93]="AfterDedupFieldNames",t[t.AfterStatsCommand=94]="AfterStatsCommand",t[t.StatsFunctionArgument=95]="StatsFunctionArgument",t[t.AfterStatsBy=96]="AfterStatsBy",t[t.AfterBooleanArgument=97]="AfterBooleanArgument",t[t.EvalClause=98]="EvalClause",t[t.Expression=99]="Expression",t[t.SortFieldExpression=100]="SortFieldExpression",t))(u||{}),p=(t=>(t[t.SelectKeyword=0]="SelectKeyword",t[t.AfterSelectKeyword=1]="AfterSelectKeyword",t[t.AfterSelectExpression=2]="AfterSelectExpression",t[t.FunctionsWithArguments=3]="FunctionsWithArguments",t[t.Metrics=4]="Metrics",t[t.FromKeyword=5]="FromKeyword",t[t.AfterFromKeyword=6]="AfterFromKeyword",t[t.AfterFromArguments=7]="AfterFromArguments",t[t.JoinKeywords=8]="JoinKeywords",t[t.HavingKeywords=9]="HavingKeywords",t[t.SchemaKeyword=10]="SchemaKeyword",t[t.Namespaces=11]="Namespaces",t[t.LabelKeys=12]="LabelKeys",t[t.WhereKeyword=13]="WhereKeyword",t[t.GroupByKeywords=14]="GroupByKeywords",t[t.OrderByKeywords=15]="OrderByKeywords",t[t.FunctionsWithoutArguments=16]="FunctionsWithoutArguments",t[t.LimitKeyword=17]="LimitKeyword",t[t.SortOrderDirectionKeyword=18]="SortOrderDirectionKeyword",t[t.ComparisonOperators=19]="ComparisonOperators",t[t.LabelValues=20]="LabelValues",t[t.LogicalOperators=21]="LogicalOperators",t[t.CaseKeyword=22]="CaseKeyword",t[t.WhenKeyword=23]="WhenKeyword",t[t.ThenKeyword=24]="ThenKeyword",t[t.AfterThenExpression=25]="AfterThenExpression",t[t.KeywordArguments=26]="KeywordArguments",t[t.Operators=27]="Operators",t[t.Statistic=28]="Statistic",t[t.Period=29]="Period",t[t.Command=30]="Command",t[t.Function=31]="Function",t[t.InKeyword=32]="InKeyword",t[t.BooleanFunction=33]="BooleanFunction",t[t.LogicalExpression=34]="LogicalExpression",t[t.ValueExpression=35]="ValueExpression",t[t.FieldOperators=36]="FieldOperators",t[t.Field=37]="Field",t[t.BooleanLiteral=38]="BooleanLiteral",t[t.DedupParameter=39]="DedupParameter",t[t.StatsParameter=40]="StatsParameter",t[t.BooleanArgument=41]="BooleanArgument",t[t.StatsFunctions=42]="StatsFunctions",t[t.SpanClause=43]="SpanClause",t[t.SortFunctions=44]="SortFunctions",t))(p||{}),k=(t=>(t.High="a",t.MediumHigh="d",t.Medium="g",t.MediumLow="k",t.Low="q",t))(k||{});class St{constructor(e,r=(0,Se.w)()){this.resources=e,this.templateSrv=r,this.templateSrv=r,this.tokenTypes={Parenthesis:"delimiter.parenthesis",Whitespace:"white",Keyword:"keyword",Delimiter:"delimiter",Operator:"operator",Identifier:"identifier",Type:"type",Function:"predefined",Number:"number",String:"string",Variable:"variable",Comment:"comment",Regexp:"regexp"}}getStatementPosition(e){return u.Unknown}getSuggestionKinds(e){return[]}getSuggestions(e,r,s,n,i){return Promise.reject([])}getCompletionProvider(e,r){const s=r.id===L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID;return{triggerCharacters:[" ","$",",","(","'"].concat(s?["`"]:[]),provideCompletionItems:async(i,o)=>{const l=rs(e,r,i,o,this.tokenTypes),d=this.getStatementPosition(l),g=this.getSuggestionKinds(d);return{suggestions:await this.getSuggestions(e,l,g,d,o)}}}}}const v={id:"editor.action.triggerSuggest",title:""},Ee="cloudwatch-logs-sql",Ir={id:Ee,extensions:[],aliases:[],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,21397))},Q={Parenthesis:`delimiter.parenthesis.${Ee}`,Whitespace:`white.${Ee}`,Keyword:`keyword.${Ee}`,Delimiter:`delimiter.${Ee}`,Operator:`operator.${Ee}`,Identifier:`identifier.${Ee}`,Type:`type.${Ee}`,Function:`predefined.${Ee}`,Number:`number.${Ee}`,String:`string.${Ee}`,Variable:`variable.${Ee}`,Comment:`comment.${Ee}`,Regexp:`regexp.${Ee}`};function Fn(t){const e=t?.getPreviousNonWhiteSpaceToken(),r=t?.getPreviousKeyword(),s=e?.value?.toUpperCase()||"",n=r?.value?.toUpperCase()||"";let i=r,o=n;for(;o===f.AS;)i=i?.getPreviousKeyword(),o=i?.value.toUpperCase()||"";const l=o===f.SELECT||[f.ALL,f.DISTINCT].includes(o)&&i?.getPreviousKeyword()?.value.toUpperCase()===f.SELECT;if(t?.is(Q.Comment)||t?.is("comment.quote.cloudwatch-logs-sql"))return u.Comment;if(t===null||t.previous===null&&t.isIdentifier()||t.previous===null&&t.isWhiteSpace()||t.previous===null&&t.isKeyword()&&t.value.toUpperCase()===f.SELECT)return u.SelectKeyword;if((t.isWhiteSpace()||t.is(Q.Parenthesis,")"))&&s===f.SELECT)return u.AfterSelectKeyword;if(l&&(t.is(Q.Delimiter,",")||t.isWhiteSpace()&&e?.is(Q.Delimiter,",")||t.isWhiteSpace()&&e?.isKeyword()||t.is(Q.Parenthesis,")")&&(e?.isKeyword()||e?.is(Q.Delimiter,","))))return u.SelectExpression;if(l&&(t.isWhiteSpace()||t.is(Q.Parenthesis,")"))&&(e?.isIdentifier()||e?.is(Q.Parenthesis,")")||e?.is(Q.Parenthesis,"()")||e?.is(Q.Operator,"*")))return u.AfterSelectExpression;if(t.is(Q.Parenthesis,"()")&&o===f.WHERE&&s===f.IN)return u.Subquery;if((t.is(Q.Parenthesis,"()")||t.is(Q.Parenthesis,"())"))&&e?.isFunction()||t.is(Q.Delimiter,",")&&t.getPreviousOfType(Q.Parenthesis,"(")?.getPreviousNonWhiteSpaceToken()?.isFunction()||t.isWhiteSpace()&&e?.is(Q.Delimiter,",")&&t.getPreviousOfType(Q.Parenthesis,"(")?.getPreviousNonWhiteSpaceToken()?.isFunction()||t.is(Q.Parenthesis,")")&&e?.is(Q.Delimiter,",")&&t.getPreviousOfType(Q.Parenthesis,"(")?.getPreviousNonWhiteSpaceToken()?.isFunction())return u.PredefinedFunctionArgument;if((t.isWhiteSpace()||t.is(Q.Parenthesis,")"))&&s===f.FROM)return u.AfterFromKeyword;if(o===f.FROM&&(e?.isIdentifier()||e?.isDoubleQuotedString()||e?.isVariable()||e?.is(Q.Parenthesis,")")))return u.AfterFromArguments;if(f.LOGICAL_OPERATORS.includes(s)&&[f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(n)||(t.isWhiteSpace()||t.is(Q.Parenthesis,")"))&&[f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(s))switch(n){case f.WHERE:return u.WhereKey;case f.HAVING:return u.HavingKey;case f.ON:return u.OnKey;case f.CASE:return u.CaseKey;case f.WHEN:return u.WhenKey}if(f.LOGICAL_OPERATORS.includes(s)&&[f.NULL,f.TRUE,f.FALSE].includes(n)||(t.isWhiteSpace()||t.is(Q.Parenthesis,")"))&&[f.NULL,f.TRUE,f.FALSE].includes(s)){let d=r,g=n;for(;![f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(g);)d=d?.getPreviousKeyword(),g=d?.value.toUpperCase()||"";switch(g){case f.WHERE:return u.WhereKey;case f.HAVING:return u.HavingKey;case f.ON:return u.OnKey;case f.CASE:return u.CaseKey;case f.WHEN:return u.WhenKey}}if([f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(n)&&f.PREDICATE_OPERATORS.includes(s))switch(n){case f.WHERE:return u.WhereValue;case f.HAVING:return u.HavingValue;case f.ON:return u.OnValue;case f.CASE:return u.CaseValue;case f.WHEN:return u.WhenValue}if([f.NULL,f.TRUE,f.FALSE].includes(n)&&f.PREDICATE_OPERATORS.includes(s)){let d=r,g=n;for(;![f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(g);)d=d?.getPreviousKeyword(),g=d?.value.toUpperCase()||"";switch(g){case f.WHERE:return u.WhereValue;case f.HAVING:return u.HavingValue;case f.ON:return u.OnValue;case f.CASE:return u.CaseValue;case f.WHEN:return u.WhenValue}}if([f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(n)&&(e?.isIdentifier()||e?.isDoubleQuotedString()||e?.isFunction()||e?.isNumber()||e?.isString()||e?.is(Q.Parenthesis,")")||e?.is(Q.Parenthesis,"()"))){const d=t.getPreviousUntil(Q.Keyword,[],n),g=d?.filter(h=>f.PREDICATE_OPERATORS.includes(h.value.toUpperCase())).length||0,c=d?.filter(h=>f.LOGICAL_OPERATORS.includes(h.value.toUpperCase())).length||0;if(g-c===0)switch(n){case f.WHERE:return u.WhereComparisonOperator;case f.HAVING:return u.HavingComparisonOperator;case f.ON:return u.OnComparisonOperator;case f.CASE:return u.CaseComparisonOperator;case f.WHEN:return u.WhenComparisonOperator}else switch(n){case f.WHERE:return u.AfterWhereValue;case f.HAVING:return u.AfterHavingValue;case f.ON:return u.AfterOnValue;case f.CASE:return u.AfterCaseValue;case f.WHEN:return u.AfterWhenValue}}if([f.NULL,f.TRUE,f.FALSE].includes(n)&&f.PREDICATE_OPERATORS.includes(r?.getPreviousNonWhiteSpaceToken()?.value.toUpperCase()||"")){let d=r?.getPreviousKeyword(),g=d?.value.toUpperCase()||"";for(;![f.WHERE,f.HAVING,f.ON,f.CASE,f.WHEN].includes(g);)d=d?.getPreviousKeyword(),g=d?.value.toUpperCase()||"";const c=t.getPreviousUntil(Q.Keyword,[],g),h=c?.filter(R=>f.PREDICATE_OPERATORS.includes(R.value.toUpperCase())).length||0,m=c?.filter(R=>f.LOGICAL_OPERATORS.includes(R.value.toUpperCase())).length||0;if(h-m===0)switch(g){case f.WHERE:return u.WhereComparisonOperator;case f.HAVING:return u.HavingComparisonOperator;case f.ON:return u.OnComparisonOperator;case f.CASE:return u.CaseComparisonOperator;case f.WHEN:return u.WhenComparisonOperator}else switch(g){case f.WHERE:return u.AfterWhereValue;case f.HAVING:return u.AfterHavingValue;case f.ON:return u.AfterOnValue;case f.CASE:return u.AfterCaseValue;case f.WHEN:return u.AfterWhenValue}}if(t.isWhiteSpace()&&s===f.THEN)return u.ThenExpression;if(t.isWhiteSpace()&&n===f.THEN&&s!==f.THEN)return u.AfterThenExpression;if(t.isWhiteSpace()&&s===f.ELSE)return u.AfterElseKeyword;if(s===f.END&&t.isWhiteSpace()){let d=r;for(;f.CASE!==d?.value.toUpperCase();)d=d?.getPreviousKeyword();switch(d.getPreviousKeyword()?.value.toUpperCase()||""){case f.SELECT:return u.AfterSelectExpression;case f.WHERE:return u.AfterWhereValue}}return n===f.BY&&r?.getPreviousKeyword()?.value.toUpperCase()===f.GROUP&&(e?.value.toUpperCase()===f.BY||e?.is(Q.Delimiter,","))?u.AfterGroupByKeywords:n===f.BY&&r?.getPreviousKeyword()?.value.toUpperCase()===f.GROUP&&(e?.isIdentifier()||e?.is(Q.Parenthesis,")")||e?.is(Q.Parenthesis,"()"))?u.AfterGroupBy:n===f.BY&&r?.getPreviousKeyword()?.value.toUpperCase()===f.ORDER?u.AfterOrderByKeywords:[f.DESC,f.ASC].includes(n)?u.AfterOrderByDirection:u.Unknown}function wn(t){switch(t){case u.SelectKeyword:return[p.SelectKeyword];case u.AfterSelectKeyword:return[p.AfterSelectKeyword,p.FunctionsWithArguments,p.Field,p.CaseKeyword];case u.SelectExpression:return[p.FunctionsWithArguments,p.Field,p.CaseKeyword];case u.AfterSelectExpression:return[p.FromKeyword,p.FunctionsWithArguments,p.Field,p.CaseKeyword];case u.FromKeyword:return[p.FromKeyword,p.FunctionsWithArguments,p.Field];case u.AfterFromKeyword:return[p.AfterFromKeyword];case u.AfterFromArguments:return[p.WhereKeyword,p.GroupByKeywords,p.OrderByKeywords,p.LimitKeyword,p.JoinKeywords,p.HavingKeywords];case u.WhereKey:return[p.FunctionsWithArguments,p.Field,p.CaseKeyword];case u.WhereComparisonOperator:return[p.ComparisonOperators];case u.WhereValue:return[p.FunctionsWithArguments,p.Field];case u.AfterWhereValue:return[p.LogicalOperators,p.GroupByKeywords,p.OrderByKeywords,p.LimitKeyword];case u.HavingKey:return[p.FunctionsWithArguments,p.Field];case u.HavingComparisonOperator:return[p.ComparisonOperators];case u.HavingValue:return[p.FunctionsWithArguments,p.Field];case u.AfterHavingValue:return[p.LogicalOperators,p.OrderByKeywords,p.LimitKeyword];case u.OnKey:return[p.FunctionsWithArguments,p.Field];case u.OnComparisonOperator:return[p.ComparisonOperators];case u.OnValue:return[p.FunctionsWithArguments,p.Field];case u.AfterOnValue:return[p.LogicalOperators,p.GroupByKeywords,p.OrderByKeywords,p.LimitKeyword];case u.CaseKey:return[p.WhenKeyword,p.Field,p.FunctionsWithArguments];case u.CaseComparisonOperator:return[p.ComparisonOperators,p.WhenKeyword];case u.CaseValue:return[p.FunctionsWithArguments,p.Field];case u.AfterCaseValue:return[p.WhenKeyword];case u.WhenKey:return[p.Field,p.FunctionsWithArguments];case u.WhenComparisonOperator:return[p.ComparisonOperators,p.ThenKeyword];case u.WhenValue:return[p.FunctionsWithArguments,p.Field];case u.AfterWhenValue:return[p.ThenKeyword];case u.ThenExpression:return[p.FunctionsWithArguments,p.Field];case u.AfterThenExpression:return[p.WhenKeyword,p.AfterThenExpression];case u.AfterElseKeyword:return[p.FunctionsWithArguments,p.Field];case u.AfterGroupByKeywords:return[p.Field,p.FunctionsWithArguments];case u.AfterGroupBy:return[p.OrderByKeywords,p.LimitKeyword,p.HavingKeywords];case u.AfterOrderByKeywords:return[p.SortOrderDirectionKeyword,p.LimitKeyword,p.Field];case u.AfterOrderByDirection:return[p.LimitKeyword];case u.PredefinedFunctionArgument:return[p.Field];case u.Subquery:return[p.SelectKeyword,p.FunctionsWithArguments,p.Field]}return[]}function Pn(t,e=(0,Se.w)()){return r=>new _n(t,e,r)}class _n extends St{constructor(e,r=(0,Se.w)(),s){super(e,r),this.region=e.getActualRegion()??"",this.getStatementPosition=Fn,this.getSuggestionKinds=wn,this.tokenTypes=Q,this.queryContext=s}async getSuggestions(e,r,s,n,i){let o=[];const d=r?.isWhiteSpace()||r?.isParenthesis()||!r?.range?e.Range.fromPositions(i):r?.range,g=(h,m={})=>({label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:d,sortText:k.Medium,...m});function c(h,m={}){o=[...o,g(h,m)]}for(const h of s)switch(h){case p.SelectKeyword:c(f.SELECT,{insertText:`${f.SELECT} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.AfterSelectKeyword:c(f.ALL,{insertText:`${f.ALL} `,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Keyword}),c(f.DISTINCT,{insertText:`${f.DISTINCT} `,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Keyword});break;case p.FunctionsWithArguments:f.ALL_FUNCTIONS.map(R=>c(R,{insertText:`${R}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function}));break;case p.FromKeyword:c(f.FROM,{insertText:`${f.FROM} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v,sortText:k.MediumHigh}),c(`${f.FROM} \`logGroups(logGroupIdentifier: [...])\``,{insertText:`${f.FROM} \`logGroups(logGroupIdentifier: [$0])\``,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v,sortText:k.MediumHigh});break;case p.AfterFromKeyword:c("`logGroups(logGroupIdentifier: [...])`",{insertText:"`logGroups(logGroupIdentifier: [$0])`",insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v});break;case p.LogicalOperators:f.LOGICAL_OPERATORS.map(R=>c(`${R}`,{insertText:`${R} `,command:v,sortText:k.MediumHigh}));break;case p.WhereKeyword:c(`${f.WHERE}`,{insertText:`${f.WHERE} `,command:v,sortText:k.High});break;case p.HavingKeywords:c(`${f.HAVING}`,{insertText:`${f.HAVING} `,command:v});break;case p.ComparisonOperators:f.PREDICATE_OPERATORS.map(R=>c(`${R}`,{insertText:`${R} `,command:v}));break;case p.CaseKeyword:c(f.CASE,{insertText:`${f.CASE} `,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.WhenKeyword:c(f.WHEN,{insertText:`${f.WHEN} `,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.ThenKeyword:c(f.THEN,{insertText:`${f.THEN} `,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.AfterThenExpression:c(`${f.ELSE} ... ${f.END}`,{insertText:`${f.ELSE} $0 ${f.END}`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.GroupByKeywords:c(`${f.GROUP} ${f.BY}`,{insertText:`${f.GROUP} ${f.BY} `,command:v,sortText:k.MediumHigh});break;case p.OrderByKeywords:c(`${f.ORDER} ${f.BY}`,{insertText:`${f.ORDER} ${f.BY} `,command:v,sortText:k.Medium});break;case p.JoinKeywords:c(`${f.INNER} ${f.JOIN} <log group> ${f.ON} <field>`,{insertText:`${f.INNER} ${f.JOIN} $1 ${f.ON} $2`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v,sortText:k.MediumLow}),c(`${f.LEFT} ${f.OUTER} ${f.JOIN} <log group> ${f.ON} <field>`,{insertText:`${f.LEFT} ${f.OUTER} ${f.JOIN} $1 ${f.ON} $2`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v,sortText:k.MediumLow});break;case p.LimitKeyword:c(f.LIMIT,{insertText:`${f.LIMIT} `});break;case p.SortOrderDirectionKeyword:[f.ASC,f.DESC].map(R=>c(R,{insertText:`${R} `,command:v}));break;case p.Field:(await Wt(this.queryContext.logGroups||[],this.queryContext.region,this.templateSrv,this.resources)).forEach(R=>{R!==""&&c(R,{label:R,insertText:`\`${R}\``,kind:e.languages.CompletionItemKind.Field})});break}return this.templateSrv.getVariables().map(h=>{const m=`$${h.name}`;c(m,{range:d,label:m,insertText:m,kind:e.languages.CompletionItemKind.Variable,sortText:k.Low})}),o}}const q={Parenthesis:`delimiter.parenthesis.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Whitespace:`white.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Keyword:`keyword.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Command:`keyword.command.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Delimiter:`delimiter.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Pipe:`delimiter.pipe.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Operator:`operator.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Identifier:`identifier.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Type:`type.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Function:`predefined.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Number:`number.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,String:`string.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Variable:`variable.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Comment:`comment.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Regexp:`regexp.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`,Backtick:`string.backtick.${L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID}`},Wn=t=>{const e=t?.getPreviousNonWhiteSpaceToken(),r=t?.getNextNonWhiteSpaceToken(),s=e?.value?.toLowerCase();if(t===null||t?.isWhiteSpace()&&e===null&&r===null||e?.is(q.Pipe)&&t?.isWhiteSpace()||e?.is(q.Delimiter,"|"))return u.NewCommand;switch(s){case L.WHERE:return u.BeforeLogicalExpression;case L.DEDUP:return u.FieldList;case L.FIELDS:return u.AfterFieldsCommand;case L.EVENTSTATS:case L.STATS:return u.AfterStatsCommand;case L.SORT:return u.SortField;case L.PARSE:return u.Expression}if(t?.isWhiteSpace()||t?.is(q.Backtick)||t?.is(q.Delimiter,",")||t?.is(q.Parenthesis)){const n=t?.getPreviousOfType(q.Function)?.value.toLowerCase(),i=t?.getPreviousOfType(q.Keyword)?.value.toLowerCase(),o=t?.getPreviousOfType(q.Command)?.value.toLowerCase();if(s){if(o!==L.FIELDS&&o!==L.SORT&&L.ARITHMETIC_OPERATORS.includes(s))return u.AfterArithmeticOperator;if(L.PARAMETERS_WITH_BOOLEAN_VALUES.includes(s))return u.AfterBooleanArgument}const l=s&&(L.COMPARISON_OPERATORS.includes(s)||L.LOGICAL_EXPRESSION_OPERATORS.includes(s))||e?.is(q.Regexp)||s===L.NOT||n&&L.CONDITION_FUNCTIONS.includes(n)&&s===")";if(o!==L.SORT&&o!==L.EVAL&&o!==L.STATS&&(Gn(t)||t?.is(q.Backtick)))return u.FieldList;if(o!==L.EVAL&&l)return u.BeforeLogicalExpression;if(i===L.IN)return u.AfterINKeyword;if(i===L.BETWEEN)return u.FunctionArg;if(n&&(t?.is(q.Parenthesis)||t?.getNextNonWhiteSpaceToken()?.value===")")){if([...L.EVAL_FUNCTIONS,...L.CONDITION_FUNCTIONS].includes(n))return u.FunctionArg;if(L.STATS_FUNCTIONS.includes(n))return u.StatsFunctionArgument;if(L.SORT_FIELD_FUNCTIONS.includes(n))return u.SortFieldExpression}switch(o){case L.SORT:{if(e){if(e.is(q.Delimiter,","))return u.SortField;if(L.FIELD_OPERATORS.includes(e.value))return u.SortFieldExpression}break}case L.DEDUP:{const d=t.getPreviousUntil(q.Number,[q.Delimiter,q.Whitespace]);return d?.length&&!Un(d)?u.AfterDedupFieldNames:u.FieldList}case L.FIELDS:return u.FieldList;case L.STATS:case L.EVENTSTATS:return i===L.BY&&t.isWhiteSpace()?u.AfterStatsBy:n===L.SPAN&&t?.is(q.Parenthesis)?u.FieldList:u.AfterStatsCommand;case L.RARE:return u.FieldList;case L.TOP:return u.FieldList;case L.HEAD:return u.AfterHeadCommand;case L.EVAL:if(e?.value==="=")return u.Expression;if(t?.isWhiteSpace()&&(s===L.EVAL||e?.is(q.Delimiter,",")))return u.EvalClause;if(l)return u.BeforeLogicalExpression;break}}return u.Unknown},Un=t=>t?.some(e=>e.type===q.Pipe),Gn=t=>{const e=t?.getPreviousUntil(q.Identifier,[q.Whitespace]),r=t?.getPreviousUntil(q.Backtick,[q.Whitespace]),s=e?.length&&e.every(o=>o.is(q.Delimiter,","))||r?.length&&r.every(o=>o.is(q.Delimiter,",")),n=t?.isWhiteSpace()&&t?.getPreviousNonWhiteSpaceToken()?.is(q.Delimiter,","),i=t?.getNextNonWhiteSpaceToken()?.value===")";return n&&s&&!i};function Kn(t){switch(t){case u.NewCommand:return[p.Command];case u.AfterHeadCommand:return[p.FromKeyword];case u.AfterStatsCommand:return[p.StatsParameter,p.StatsFunctions];case u.SortField:return[p.FieldOperators,p.Field,p.SortFunctions];case u.EvalClause:case u.StatsFunctionArgument:return[p.Field];case u.AfterFieldsCommand:return[p.FieldOperators,p.Field];case u.FieldList:return[p.Field];case u.AfterBooleanArgument:return[p.BooleanLiteral];case u.AfterDedupFieldNames:return[p.DedupParameter];case u.AfterStatsBy:return[p.Field,p.SpanClause];case u.SortFieldExpression:return[p.Field,p.SortFunctions];case u.FunctionArg:case u.AfterArithmeticOperator:case u.AfterINKeyword:return[p.ValueExpression];case u.Expression:case u.BeforeLogicalExpression:return[p.LogicalExpression,p.ValueExpression]}return[]}function Bn(t,e=(0,Se.w)()){return r=>new Hn(t,e,r)}class Hn extends St{constructor(e,r=(0,Se.w)(),s){super(e,r),this.getStatementPosition=Wn,this.getSuggestionKinds=Kn,this.tokenTypes=q,this.queryContext=s}async getSuggestions(e,r,s,n,i){const o=[],d=r?.isWhiteSpace()||r?.isParenthesis()||r?.is(q.Backtick)||!r?.range?e.Range.fromPositions(i):r?.range;function g(h,m={}){return{label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:d,sortText:k.Medium,...m}}function c(h,m={}){o.push(g(h,m))}for(const h of s)switch(h){case p.Command:L.PPL_COMMANDS.forEach(m=>{c(m,{insertText:`${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Method,command:v})});break;case p.LogicalExpression:L.CONDITION_FUNCTIONS.forEach(m=>{c(m,{insertText:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v})}),c(L.NOT,{insertText:`${L.NOT} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Operator,command:v});break;case p.ValueExpression:L.EVAL_FUNCTIONS.forEach(m=>{c(m,{insertText:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v})}),await this.addFieldSuggestions(c,e,d,r);break;case p.FieldOperators:L.FIELD_OPERATORS.forEach(m=>{c(m,{insertText:`${m}$0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Operator,command:v})});break;case p.BooleanLiteral:L.BOOLEAN_LITERALS.forEach(m=>c(`= ${m}`,{insertText:`= ${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Value,command:v}));break;case p.DedupParameter:L.DEDUP_PARAMETERS.forEach(m=>c(m,{insertText:`${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Property,command:v}));break;case p.StatsParameter:L.STATS_PARAMETERS.forEach(m=>{c(m,{insertText:`${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Property,command:v})});break;case p.StatsFunctions:L.STATS_FUNCTIONS.forEach(m=>{c(m,{insertText:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v})});break;case p.LogicalOperators:L.LOGICAL_EXPRESSION_OPERATORS.forEach(m=>{c(m,{insertText:`${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Operator,command:v})});break;case p.InKeyword:c(L.IN,{insertText:`${L.IN} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.SpanClause:c(L.SPAN,{insertText:`${L.SPAN}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v});break;case p.Field:await this.addFieldSuggestions(c,e,d,r);break;case p.FromKeyword:c(L.FROM,{insertText:`${L.FROM} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.SortFunctions:L.SORT_FIELD_FUNCTIONS.forEach(m=>{c(m,{insertText:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Function,command:v})});break}return this.templateSrv.getVariables().map(h=>{const m=`$${h.name}`;c(m,{range:d,label:m,insertText:m,kind:e.languages.CompletionItemKind.Variable,sortText:k.Low})}),o}async addFieldSuggestions(e,r,s,n){if(this.queryContext.logGroups&&this.queryContext.logGroups.length>0)try{(await Wt(this.queryContext.logGroups,this.queryContext.region,this.templateSrv,this.resources)).forEach(o=>{o!==""&&e(o,{range:s,label:o,insertText:n?.is(q.Backtick)?o:`\`${o}\``,kind:r.languages.CompletionItemKind.Field,sortText:k.High})})}catch{return}}}var x=E(58969);const z={Parenthesis:"delimiter.parenthesis.sql",Whitespace:"white.sql",Keyword:"keyword.sql",Delimiter:"delimiter.sql",Operator:"operator.sql",Identifier:"identifier.sql",Type:"type.sql",Function:"predefined.sql",Number:"number.sql",String:"string.sql",Variable:"variable.sql",Comment:"comment.sql",Regexp:"regexp.sql"};function Vn(t){const e=t?.getPreviousNonWhiteSpaceToken(),r=t?.getPreviousKeyword(),s=t?.getPreviousNonWhiteSpaceToken()?.is(z.Operator,"/");return t===null||t.isWhiteSpace()&&t.previous===null||t.is(z.Keyword,x.SELECT)&&t.previous===null||s||t.isIdentifier()&&(s||t?.previous===null)?u.SelectKeyword:e?.value===x.SELECT?u.AfterSelectKeyword:(e?.is(z.Parenthesis,"(")||t?.is(z.Parenthesis,"()"))&&r?.value===x.SELECT?u.AfterSelectFuncFirstArgument:r?.value===x.SELECT&&e?.isParenthesis()?u.FromKeyword:e?.value===x.FROM?u.AfterFromKeyword:(e?.is(z.Parenthesis,"(")||t?.is(z.Parenthesis,"()"))&&r?.value===x.SCHEMA?u.SchemaFuncFirstArgument:r?.value===x.SCHEMA&&e?.is(z.Delimiter,",")?u.SchemaFuncExtraArgument:r?.value===x.FROM&&e?.isDoubleQuotedString()||r?.value===x.FROM&&e?.isVariable()||r?.value===x.SCHEMA&&e?.is(z.Parenthesis,")")?u.AfterFrom:r?.value===x.WHERE&&(e?.isKeyword()||e?.is(z.Parenthesis,"(")||e?.is(z.Operator,x.AND))?u.WhereKey:r?.value===x.WHERE&&(e?.isIdentifier()||e?.isDoubleQuotedString())?u.WhereComparisonOperator:r?.value===x.WHERE&&(e?.is(z.Operator,x.EQUALS)||e?.is(z.Operator,x.NOT_EQUALS))?u.WhereValue:r?.value===x.WHERE&&(e?.isString()||e?.is(z.Parenthesis,")"))?u.AfterWhereValue:r?.is(z.Keyword,x.BY)&&r?.getPreviousKeyword()?.is(z.Keyword,x.GROUP)&&(e?.is(z.Keyword,x.BY)||e?.is(z.Delimiter,","))?u.AfterGroupByKeywords:r?.is(z.Keyword,x.BY)&&r?.getPreviousKeyword()?.is(z.Keyword,x.GROUP)&&(e?.isIdentifier()||e?.isDoubleQuotedString())?u.AfterGroupBy:e?.is(z.Keyword,x.BY)&&e?.getPreviousKeyword()?.is(z.Keyword,x.ORDER)?u.AfterOrderByKeywords:r?.is(z.Keyword,x.BY)&&r?.getPreviousKeyword()?.is(z.Keyword,x.ORDER)&&e?.is(z.Parenthesis)&&e?.getPreviousNonWhiteSpaceToken()?.is(z.Function)?u.AfterOrderByFunction:r?.is(z.Keyword,x.DESC)||r?.is(z.Keyword,x.ASC)?u.AfterOrderByDirection:u.Unknown}function jn(t){switch(t){case u.SelectKeyword:return[p.SelectKeyword];case u.AfterSelectKeyword:return[p.FunctionsWithArguments];case u.AfterSelectFuncFirstArgument:return[p.Metrics];case u.AfterFromKeyword:return[p.Namespaces,p.SchemaKeyword];case u.SchemaFuncFirstArgument:return[p.Namespaces];case u.SchemaFuncExtraArgument:return[p.LabelKeys];case u.FromKeyword:return[p.FromKeyword];case u.AfterFrom:return[p.WhereKeyword,p.GroupByKeywords,p.OrderByKeywords,p.LimitKeyword];case u.WhereKey:return[p.LabelKeys];case u.WhereComparisonOperator:return[p.ComparisonOperators];case u.WhereValue:return[p.LabelValues];case u.AfterWhereValue:return[p.LogicalOperators,p.GroupByKeywords,p.OrderByKeywords,p.LimitKeyword];case u.AfterGroupByKeywords:return[p.LabelKeys];case u.AfterGroupBy:return[p.OrderByKeywords,p.LimitKeyword];case u.AfterOrderByKeywords:return[p.FunctionsWithoutArguments];case u.AfterOrderByFunction:return[p.SortOrderDirectionKeyword,p.LimitKeyword];case u.AfterOrderByDirection:return[p.LimitKeyword]}return[]}const ss=t=>t?.getPreviousOfType(z.Keyword,x.SELECT)??null,$n=t=>{const e=ss(t)?.getNextNonWhiteSpaceToken();return e?.isVariable()||e?.isFunction()?e:null},yr=t=>{const e=$n(t)?.next?.next;return e?.isVariable()||e?.isIdentifier()?e:null},kn=t=>ss(t)?.getNextOfType(z.Keyword,x.FROM),Sr=t=>{const r=kn(t)?.getNextNonWhiteSpaceToken();if(r?.isDoubleQuotedString()||r?.isVariable()&&r?.value.toUpperCase()!==x.SCHEMA)return r;if(r?.isKeyword()&&r.next?.is(z.Parenthesis,"(")){const s=r.next?.next;if(s?.isDoubleQuotedString()||s?.isVariable())return s}return null};class Qn extends St{constructor(e,r=(0,Se.w)()){super(e,r),this.region=e.getActualRegion()??"",this.getStatementPosition=Vn,this.getSuggestionKinds=jn,this.tokenTypes=z}setRegion(e){this.region=e}async getSuggestions(e,r,s,n,i){let o=[];const d=r?.isWhiteSpace()||r?.isParenthesis()||!r?.range?e.Range.fromPositions(i):r?.range,g=(h,m={})=>({label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:d,sortText:k.Medium,...m});function c(h,m={}){o=[...o,g(h,m)]}for(const h of s)switch(h){case p.SelectKeyword:c(x.SELECT,{insertText:`${x.SELECT} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Keyword,command:v});break;case p.FunctionsWithArguments:x.STATISTICS.map(C=>c(C,{insertText:`${C}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function}));break;case p.FunctionsWithoutArguments:x.STATISTICS.map(C=>c(C,{insertText:`${C}() `,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function}));break;case p.Metrics:{const C=Sr(r);if(C?.value)(await this.resources.getMetrics({namespace:C?.value.replace(/\"/g,""),region:this.region})).forEach(b=>b.value&&c(b.value));else{const M=await this.resources.getAllMetrics({region:this.region});(0,ie.uniq)(M.map(b=>b.metricName)).forEach(b=>b&&c(b,{insertText:b}))}}break;case p.FromKeyword:c(x.FROM,{insertText:`${x.FROM} `,command:v});break;case p.SchemaKeyword:c(x.SCHEMA,{sortText:k.High,insertText:`${x.SCHEMA}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function});break;case p.Namespaces:const m=yr(r);let R=[];if(m?.value){const C=await this.resources.getMetrics({region:this.region}),M=this.templateSrv.replace(m.value);R=C.filter(b=>b.metricName===M).map(b=>b.namespace)}else R=(await this.resources.getNamespaces()).map(M=>M.value);R.map(C=>c(`"${C}"`,{insertText:`"${C}"`}));break;case p.LabelKeys:{const C=yr(r),M=Sr(r);if(M?.value){let b={},S;n===u.SchemaFuncExtraArgument?S=M?.getNextUntil(this.tokenTypes.Parenthesis,[this.tokenTypes.Delimiter,this.tokenTypes.Whitespace]):n===u.AfterGroupByKeywords&&(S=r?.getPreviousUntil(this.tokenTypes.Keyword,[this.tokenTypes.Delimiter,this.tokenTypes.Whitespace])),b=(S||[]).reduce((V,te)=>({...V,[te.value]:null}),{}),(await this.resources.getDimensionKeys({namespace:this.templateSrv.replace(M.value.replace(/\"/g,"")),region:this.templateSrv.replace(this.region),metricName:C?.value,dimensionFilters:b},!1)).map(V=>{const te=/[\s\.-]/.test(V.value??"")?`"${V.value}"`:V.value;te&&c(te)})}}break;case p.LabelValues:{const C=Sr(r),M=yr(r),b=r?.getPreviousNonWhiteSpaceToken()?.getPreviousNonWhiteSpaceToken();C?.value&&b?.value&&M?.value&&(await this.resources.getDimensionValues({region:this.region,namespace:C.value.replace(/\"/g,""),metricName:M.value,dimensionKey:b.value})).map(F=>c(`'${F.value}'`,{insertText:`'${F.value}' `,command:v}))}break;case p.LogicalOperators:x.LOGICAL_OPERATORS.map(C=>c(`${C}`,{insertText:`${C} `,command:v,sortText:k.MediumHigh}));break;case p.WhereKeyword:c(`${x.WHERE}`,{insertText:`${x.WHERE} `,command:v,sortText:k.High});break;case p.ComparisonOperators:x.COMPARISON_OPERATORS.map(C=>c(`${C}`,{insertText:`${C} `,command:v}));break;case p.GroupByKeywords:c(`${x.GROUP} ${x.BY}`,{insertText:`${x.GROUP} ${x.BY} `,command:v,sortText:k.MediumHigh});break;case p.OrderByKeywords:c(`${x.ORDER} ${x.BY}`,{insertText:`${x.ORDER} ${x.BY} `,command:v,sortText:k.Medium});break;case p.LimitKeyword:c(x.LIMIT,{insertText:`${x.LIMIT} `,sortText:k.MediumLow});break;case p.SortOrderDirectionKeyword:[x.ASC,x.DESC].map(C=>c(C,{insertText:`${C} `,command:v}));break}return this.templateSrv.getVariables().map(h=>{const m=`$${h.name}`;c(m,{range:d,label:m,insertText:m,kind:e.languages.CompletionItemKind.Variable,sortText:k.Low})}),o}}var Z=E(44419);const fe="cloudwatch-logs",Rr={id:fe,extensions:[],aliases:[],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,44419))},ge={Parenthesis:`delimiter.parenthesis.${fe}`,Whitespace:`white.${fe}`,Keyword:`keyword.${fe}`,Delimiter:`delimiter.${fe}`,Operator:`operator.${fe}`,Identifier:`identifier.${fe}`,Type:`type.${fe}`,Function:`predefined.${fe}`,Number:`number.${fe}`,String:`string.${fe}`,Variable:`variable.${fe}`,Comment:`comment.${fe}`,Regexp:`regexp.${fe}`},Yn=t=>{const e=t?.getPreviousNonWhiteSpaceToken(),r=t?.getNextNonWhiteSpaceToken(),s=t?.value?.toLowerCase(),n=e?.value?.toLowerCase();if(t?.is(ge.Comment))return u.Comment;if(t?.isFunction())return u.Function;if(t===null||t?.isWhiteSpace()&&e===null&&r===null||e?.is(ge.Delimiter,"|")&&t?.isWhiteSpace()||t?.isIdentifier()&&(e?.is(ge.Delimiter,"|")||e===null))return u.NewCommand;if(t?.is(ge.Delimiter,")")||t?.isWhiteSpace()&&e?.is(ge.Delimiter,")")){const o=t?.getPreviousOfType(ge.Delimiter,"(")?.getPreviousNonWhiteSpaceToken()?.value?.toLowerCase();if(o){if(Z.LOGS_COMMANDS.includes(o))return u.AfterCommand;if(Z.LOGS_FUNCTION_OPERATORS.includes(o))return u.AfterFunction}}if(t?.isKeyword()&&s)switch(s){case Z.DEDUP:return u.DedupKeyword;case Z.DISPLAY:return u.DisplayKeyword;case Z.FIELDS:return u.FieldsKeyword;case Z.FILTER:return u.FilterKeyword;case Z.LIMIT:return u.LimitKeyword;case Z.PARSE:return u.ParseKeyword;case Z.STATS:return u.StatsKeyword;case Z.SORT:return u.SortKeyword;case"as":return u.AsKeyword;case"by":return u.ByKeyword;case"in":return u.InKeyword;case"like":return u.LikeKeyword}if(t?.isWhiteSpace()&&e?.isKeyword&&n)switch(n){case Z.DEDUP:return u.AfterDedupKeyword;case Z.DISPLAY:return u.AfterDisplayKeyword;case Z.FIELDS:return u.AfterFieldsKeyword;case Z.FILTER:return u.AfterFilterKeyword;case Z.LIMIT:return u.AfterLimitKeyword;case Z.PARSE:return u.AfterParseKeyword;case Z.STATS:return u.AfterStatsKeyword;case Z.SORT:return u.AfterSortKeyword;case"as":return u.AfterAsKeyword;case"by":return u.AfterByKeyword;case"in":return u.AfterInKeyword;case"like":return u.AfterLikeKeyword}if(t?.is(ge.Operator)&&s){if(["+","-","*","/","^","%"].includes(s))return u.ArithmeticOperator;if(["=","!=","<",">","<=",">="].includes(s))return u.ComparisonOperator;if(Z.LOGS_LOGIC_OPERATORS.includes(s))return u.BooleanOperator}if(e?.is(ge.Operator)&&n){if(["+","-","*","/","^","%"].includes(n))return u.ArithmeticOperatorArg;if(["=","!=","<",">","<=",">="].includes(n))return u.ComparisonOperatorArg;if(Z.LOGS_LOGIC_OPERATORS.includes(n))return u.BooleanOperatorArg}if(t?.isIdentifier()||t?.isNumber()||t?.is(ge.Parenthesis,"()")||t?.is(ge.Delimiter,",")||t?.is(ge.Parenthesis,")")||t?.isWhiteSpace()&&e?.is(ge.Delimiter,",")||t?.isWhiteSpace()&&e?.isIdentifier()||t?.isWhiteSpace()&&e?.isKeyword()&&n&&Z.LOGS_COMMANDS.includes(n)){const i=t?.getPreviousOfType(ge.Keyword),o=t?.getPreviousOfType(ge.Function);if(i!==null&&o===null)return i.value===Z.SORT?u.SortArg:i.value===Z.FILTER?u.FilterArg:u.CommandArg;if(o!==null&&i===null)return u.FunctionArg;if(i!==null&&o!==null){if(i.range.startLineNumber>o.range.startLineNumber||i.range.endColumn>o.range.endColumn)return i.value===Z.SORT?u.SortArg:i.value===Z.FILTER?u.FilterArg:u.CommandArg;if(o.range.startLineNumber>i.range.startLineNumber||o.range.endColumn>i.range.endColumn)return u.FunctionArg}}return u.Unknown};function zn(t){switch(t){case u.NewCommand:return[p.Command];case u.AfterSortKeyword:case u.SortArg:return[p.SortOrderDirectionKeyword,p.Function];case u.AfterDisplayKeyword:case u.AfterFieldsKeyword:case u.AfterFilterKeyword:case u.AfterStatsKeyword:case u.AfterLimitKeyword:case u.AfterParseKeyword:case u.AfterDedupKeyword:case u.CommandArg:case u.FunctionArg:case u.ArithmeticOperatorArg:case u.BooleanOperatorArg:case u.ComparisonOperatorArg:return[p.Function];case u.FilterArg:return[p.InKeyword,p.Function]}return[]}function Xn(t,e=(0,Se.w)()){return r=>new qn(t,e,r)}class qn extends St{constructor(e,r=(0,Se.w)(),s){super(e,r),this.getStatementPosition=Yn,this.getSuggestionKinds=zn,this.tokenTypes=ge,this.queryContext=s}async getSuggestions(e,r,s,n,i){const o=[],d=r?.isWhiteSpace()||r?.isParenthesis()||!r?.range?e.Range.fromPositions(i):r?.range;function g(h,m={}){return{label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:d,sortText:k.Medium,...m}}function c(h,m={}){o.push(g(h,m))}for(const h of s)switch(h){case p.Command:Z.LOGS_COMMANDS.forEach(m=>{c(m,{insertText:`${m} $0`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Method})});break;case p.Function:if(Z.LOGS_FUNCTION_OPERATORS.forEach(m=>{c(m,{insertText:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function})}),this.queryContext.logGroups&&this.queryContext.logGroups.length>0){let m=await Wt(this.queryContext.logGroups,this.queryContext.region,this.templateSrv,this.resources);m.push("@log"),m.forEach(R=>{R!==""&&c(R,{range:d,label:R,insertText:R,kind:e.languages.CompletionItemKind.Field,sortText:k.High})})}break;case p.SortOrderDirectionKeyword:Z.SORT_DIRECTION_KEYWORDS.forEach(m=>{c(m,{sortText:k.High,kind:e.languages.CompletionItemKind.Operator})});break;case p.InKeyword:c("in []",{insertText:'in ["$0"]',insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,kind:e.languages.CompletionItemKind.Snippet,sortText:k.High});break}return this.templateSrv.getVariables().map(h=>{const m=`$${h.name}`;c(m,{range:d,label:m,insertText:m,kind:e.languages.CompletionItemKind.Variable,sortText:k.Low})}),o}}var Rt=E(49921);const Ct={Parenthesis:"delimiter.parenthesis.cloudwatch-MetricMath",Whitespace:"white.cloudwatch-MetricMath",Keyword:"keyword.cloudwatch-MetricMath",Delimiter:"delimiter.cloudwatch-MetricMath",Operator:"operator.cloudwatch-MetricMath",Identifier:"identifier.cloudwatch-MetricMath",Type:"type.cloudwatch-MetricMath",Function:"predefined.cloudwatch-MetricMath",Number:"number.cloudwatch-MetricMath",String:"string.cloudwatch-MetricMath",Variable:"variable.cloudwatch-MetricMath",Comment:"comment.cloudwatch-MetricMath",Regexp:"regexp.cloudwatch-MetricMath"};function Zn(t){const e=t?.getPreviousNonWhiteSpaceToken();if(t&&t.isString())return u.WithinString;if(t&&e){const r=t.getPreviousOfType(Ct.Function),s=e.is(Ct.Delimiter,","),n=r&&r.value==="SEARCH",i=t.getPreviousUntil(Ct.Function,[],"SEARCH")||[];if(n){if(i.filter(({value:l})=>l==="'").length===1)return u.WithinString;const o=e.getPreviousOfType(Ct.Delimiter,",");return o&&o.range.startColumn>r.range.startColumn&&o.range.startLineNumber>=r.range.startLineNumber?u.SearchFuncThirdArg:u.SearchFuncSecondArg}if(!n&&s)return u.PredefinedFuncSecondArg}return e?.endsWith(")")?u.AfterFunction:!t||!t.isString()?u.PredefinedFunction:u.Unknown}function Jn(t){switch(t){case u.PredefinedFunction:return[p.FunctionsWithArguments];case u.PredefinedFuncSecondArg:return[p.FunctionsWithArguments,p.KeywordArguments];case u.AfterFunction:return[p.Operators];case u.SearchFuncSecondArg:return[p.Statistic];case u.SearchFuncThirdArg:return[p.Period]}return[]}class ei extends St{constructor(e,r=(0,Se.w)()){super(e,r),this.getStatementPosition=Zn,this.getSuggestionKinds=Jn,this.tokenTypes=Ct}async getSuggestions(e,r,s,n,i){let o=[];const d=r?.isWhiteSpace()||r?.isParenthesis()||!r?.range?e.Range.fromPositions(i):r?.range,g=(h,m={})=>({label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:d,sortText:k.Medium,...m});function c(h,m={}){o=[...o,g(h,m)]}for(const h of s)switch(h){case p.FunctionsWithArguments:Rt.METRIC_MATH_FNS.map(m=>c(m,{insertText:m==="SEARCH"?`${m}('$0')`:`${m}($0)`,insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet,command:v,kind:e.languages.CompletionItemKind.Function}));break;case p.KeywordArguments:Rt.METRIC_MATH_KEYWORDS.map(m=>c(m,{insertText:m,command:v,kind:e.languages.CompletionItemKind.Keyword,sortText:k.MediumHigh}));break;case p.Statistic:Rt.METRIC_MATH_STATISTIC_KEYWORD_STRINGS.map(m=>c(m,{insertText:`'${m}', `,command:v}));break;case p.Operators:Rt.METRIC_MATH_OPERATORS.map(m=>c(m,{insertText:`${m} `,command:v}));break;case p.Period:c("$__period_auto",{kind:e.languages.CompletionItemKind.Variable,sortText:"a",detail:"Sets period dynamically to adjust to selected time range."}),Rt.METRIC_MATH_PERIODS.map((m,R)=>c(m.toString(),{kind:e.languages.CompletionItemKind.Value,sortText:String.fromCharCode(97+R)}));break}return this.templateSrv.getVariables().map(h=>{const m=`$${h.name}`;c(m,{range:d,label:m,insertText:m,kind:e.languages.CompletionItemKind.Variable,sortText:k.Low})}),o}}var Ut=E(32899),ns=E(68143);const is=(t,e=7e3)=>{const r=(0,ie.memoize)((...s)=>(0,ie.debounce)(t,e,{leading:!0}),(...s)=>JSON.stringify(s));return(...s)=>r(...s)(...s)};class Gt{constructor(e,r){this.instanceSettings=e,this.dsQueryEndpoint="/api/ds/query",this.debouncedCustomAlert=is(ti),this.templateSrv=r,this.ref=(0,gt.p$)(e)}awsRequest(e,r,s={}){const n={method:"POST",url:e,data:r,headers:s};return(0,ns.AI)().fetch(n)}convertDimensionFormat(e,r,s=!0){return Object.entries(e).reduce((n,[i,o])=>{if(i=this.replaceVariableAndDisplayWarningIfMulti(i,r,s,"dimension keys"),Array.isArray(o))return{...n,[i]:o};if(!o)return{...n,[i]:null};const l=this.expandVariableToArray(o,r);return{...n,[i]:l}},{})}expandVariableToArray(e,r){const s=_t(e),n=this.templateSrv.getVariables().find(({name:i})=>i===s);return s&&n?(n?.type==="custom"||n?.type==="query"||n?.type==="datasource")&&n.multi?this.templateSrv.replace(e,r,"pipe").split("|"):[this.templateSrv.replace(e,r)]:[e]}convertMultiFilterFormat(e,r){return Object.entries(e).reduce((s,[n,i])=>{const o=this.replaceVariableAndDisplayWarningIfMulti(n,{},!0,r);if(!i)return{...s,[o]:null};const l=[],d=i.reduce((g,c)=>{const h=this.expandVariableToArray(c,{});return[...g,...h]},l);return{...s,[o]:d}},{})}isMultiVariable(e){if(e){const s=this.templateSrv.getVariables().find(({name:i})=>i===_t(e)),n=s?.type;return(n==="custom"||n==="query"||n==="datasource")&&s?.multi}return!1}isVariableWithMultipleOptionsSelected(e,r){return!e||!this.isMultiVariable(e)?!1:this.expandVariableToArray(e,r||{}).length>1}replaceVariableAndDisplayWarningIfMulti(e,r,s,n){return s&&this.isVariableWithMultipleOptionsSelected(e)&&this.debouncedCustomAlert("CloudWatch templating error",`Multi template variables are not supported for ${n||e}`),this.templateSrv.replace(e,r)}getActualRegion(e){return e==="default"||e===void 0||e===""?this.instanceSettings.jsonData.defaultRegion??"":e}getVariables(){return this.templateSrv.getVariables().map(e=>`$${e.name}`)}}const ti=(t,e)=>(0,y.J7)().publish({type:Ut.r1.alertError.name,payload:[t,e]});class ri extends Gt{constructor(e,r){super(e,r)}handleAnnotationQuery(e,r,s){return s({...r,targets:e.map(n=>({...n,statistic:this.templateSrv.replace(n.statistic),region:this.templateSrv.replace(this.getActualRegion(n.region)),namespace:this.templateSrv.replace(n.namespace),metricName:this.templateSrv.replace(n.metricName),dimensions:this.convertDimensionFormat(n.dimensions??{},{}),period:n.period??"",actionPrefix:n.actionPrefix??"",alarmNamePrefix:n.alarmNamePrefix??"",type:"annotationQuery",datasource:this.ref}))})}}var as=E(69862),os=E(65474),si=E(95864),ni=E(31731),ls=E(1005),Lt=E(81160),ii=E(29405),ai=E(43431),oi=E(59099),li=E(46662),ci=E(69850),Cr=E(88483),Lr=E(67770),ui=E(22592);const di=E(50287),mi="console.aws.amazon.com",pi="console.amazonaws-us-gov.com",gi="console.amazonaws.cn";function hi(t){let e=mi;return t.startsWith("us-gov-")&&(e=pi),t.startsWith("cn-")&&(e=gi),`${t}.${e}`}function cs(t,e){return`https://${hi(e)}/cloudwatch/home?region=${e}#logs-insights:queryDetail=${di.stringify(t)}`}async function Ei(t,e,r,s,n,i){const o=(d,g)=>r(d,e.scopedVars,!1,g),l=d=>s(d,e.scopedVars);for(const d of t.data){const g=e.targets.find(h=>h.refId===d.refId),c=n(o(g.region??"","region"));for(const h of d.fields)if(h.name==="@xrayTraceId"&&i){n(o(g.region??"","region"));const m=await fi(i,c);m&&(h.config.links=[m])}else h.config.links=[Ai(g,e.range,c,o,l)]}}async function fi(t,e){let r;try{r=await(0,dr.l)().get(t)}catch(s){console.error("Could not load linked xray data source, it was probably deleted after it was linked",s);return}return{title:r.name,url:"",internal:{query:{query:"${__value.raw}",queryType:"getTrace",region:e},datasourceUid:t,datasourceName:r.name}}}function Ai(t,e,r,s,n){const i=(t.logGroups??[]).filter(m=>m?.arn).map(m=>(m.arn??"").replace(/:\*$/,"")),o=t.logGroupNames??[],l=i?.length?i:o,d=t.expression?s(t.expression):"",g=l?.flatMap(n),c={end:e.to.toISOString(),start:e.from.toISOString(),timeType:"ABSOLUTE",tz:"UTC",editorString:d,isLiveTail:!1,source:g};return{url:cs(c,r),title:"View in CloudWatch console",targetBlank:!0}}function Ti(t,e,r){const s=new Date;let n=0,i,o,l={data:[],errors:[]};const d=g=>Math.pow(2,g)*1e3+Math.random()*100;return new Cr.c(g=>{function c(h){o=t(h).subscribe({next(m){if(m.errors){const{refIdsForRequestsToRetry:R,errorsNotToRetry:C}=Ii(m.errors);if(R.length>0&&!r(n,s.valueOf())){l.data=[...l.data,...m.data],l.errors=[...l.errors,...C],i=setTimeout(()=>{n++,c(h.filter(M=>R.includes(M.refId)))},d(n+1));return}}l.data=[...l.data,...m.data],l.errors=[...l.errors,...m.errors&&m.errors.length>0?m.errors:[]],g.next(l),g.complete()},error(m){g.error(m)}})}return c(e),()=>{clearTimeout(i),o.unsubscribe()}})}function Ii(t){const e=[],r=[];return t.map(s=>{s?.refId&&(s.message?.includes("LimitExceededException")||s.message?.includes("ThrottlingException"))?e.push(s.refId):r.push(s)}),{refIdsForRequestsToRetry:e,errorsNotToRetry:r}}var yi=E(44838);const Si=({startPeriod:t=0,endPeriod:e=5e3,step:r=1e3},s=yi.E)=>new Cr.c(n=>{const i={subscriber:n,counter:0,period:t,step:r,endPeriod:e};return n.add(s.schedule(Ri,t,i)),n});function Ri(t){if(!t)return;const{subscriber:e,counter:r,period:s,step:n,endPeriod:i}=t;e.next(r);const o=Math.min(s+n,i);this.schedule({subscriber:e,counter:r+1,period:o,step:n,endPeriod:i},o)}const Ci="__log__grafana_internal__",Li="__logstream__grafana_internal__";class Oi extends Gt{constructor(e,r){super(e,r),this.logQueries={},this.createTimeoutFn=()=>{const s=new Date;return()=>Date.now()>=s.valueOf()+cr.intervalToMs(this.logsTimeout)},this.handleLogQueries=(s,n,i)=>{const l=s.filter(this.filterQuery).map(g=>{const c=Tr(this.templateSrv,(g.logGroups||this.instanceSettings.jsonData.logGroups||[]).map(S=>S.arn),n.scopedVars),h=Tr(this.templateSrv,g.logGroupNames||this.instanceSettings.jsonData.defaultLogGroups||[],n.scopedVars,"text"),m=(0,ie.uniq)(c).map(S=>({arn:S,name:S})),R=(0,ie.uniq)(h),C=(S,F)=>{if(typeof S=="string"&&S.startsWith("arn:")&&S.endsWith(":*")||Array.isArray(S)&&S.every(V=>typeof V=="string"&&V.startsWith("arn:")&&V.endsWith(":*"))){const V=F.name||"",te=this.templateSrv.getVariables().find(({name:Le})=>Le===V),Re=g.expression?.replaceAll(/[\r\n\t\s]+/g,"").includes(`\`logGroups(logGroupIdentifier:[$${V}])\``);if(te&&"current"in te&&"text"in te.current)return Array.isArray(te.current.text)?te.current.text.map(Le=>Re?`'${Le}'`:Le).join(","):Re?`'${te.current.text}'`:te.current.text}return S},M=g.queryLanguage===T._M.SQL?C:void 0,b=this.templateSrv.replace(g.expression||"",n.scopedVars,M);return{refId:g.refId,region:this.templateSrv.replace(this.getActualRegion(g.region)),queryString:b,logGroups:m,logGroupNames:R,queryLanguage:g.queryLanguage}}),d=this.createTimeoutFn();return Ti(g=>this.makeLogActionRequest("StartQuery",g,i,n),l,d).pipe((0,as.Z)(g=>this.getQueryResults({logQueries:s,timeoutFunc:d,queryFn:i,startQueryResponse:g})),(0,as.Z)(g=>(0,os.H)((async()=>(await Ei(g,n,this.replaceVariableAndDisplayWarningIfMulti.bind(this),this.expandVariableToArray.bind(this),this.getActualRegion.bind(this),this.tracingDataSourceUid),g))())))},this.getLogRowContext=async(s,{limit:n=10,direction:i=Lr.ZF.Backward}={},o,l)=>{let d=null,g=null;for(const h of s.dataFrame.fields)if(h.name===Li){if(d=h,g!==null)break}else if(h.name===Ci&&(g=h,d!==null))break;const c={refId:l?.refId||"A",limit:n,startFromHead:i!==Lr.ZF.Backward,region:this.templateSrv.replace(this.getActualRegion(l?.region)),logGroupName:vi(g.values[s.rowIndex]),logStreamName:d.values[s.rowIndex]};return i===Lr.ZF.Backward?c.endTime=s.timeEpochMs:c.startTime=s.timeEpochMs,await(0,Zr.s)(this.makeLogActionRequest("GetLogEvents",[c],o))},this.getQueryResults=({logQueries:s,timeoutFunc:n,queryFn:i,startQueryResponse:o})=>o.data.every(l=>[T.YZ.Complete,T.YZ.Cancelled,T.YZ.Failed].includes(l.meta?.custom?.Status))?(0,Et.of)({key:"test-key",state:He.Gu.Done,...o}):this.pollForLogQueryResults(o.data.map(l=>({queryId:l.fields[0].values[0],region:l.meta?.custom?.Region??"default",refId:l.refId,statsGroups:s.find(d=>d.refId===l.refId)?.statsGroups})),n,i,o.errors||[]),this.tracingDataSourceUid=e.jsonData.tracingDatasourceUid,this.logsTimeout=e.jsonData.logsTimeout||"30m"}pollForLogQueryResults(e,r,s,n){this.logQueries={},e.forEach(h=>{this.logQueries[h.refId]={id:h.queryId,region:h.region,statsQuery:(h.statsGroups?.length??0)>0}});const i=Si({startPeriod:100,endPeriod:1e3,step:300}).pipe((0,si.H)(h=>this.makeLogActionRequest("GetQueryResults",e,s)),(0,ni.u)(),(0,ls.u)());let o=[];const l=i.pipe((0,Lt.T)(h=>(h.errors&&(o=h.errors),h.data))),d={failures:0,prevRecordsMatched:{}},g=l.pipe((0,ii.S)(({failures:h,prevRecordsMatched:m},R)=>{h++;for(const C of R){const M=C.meta?.stats?.find(b=>b.displayName==="Records scanned")?.value;M>(m[C.refId]??0)&&(h=0),m[C.refId]=M}return{failures:h,prevRecordsMatched:m}},d),(0,Lt.T)(({failures:h})=>h),(0,ls.u)()),c=(0,ai.y)(l,g).pipe((0,oi.M)(([h])=>{for(const m of h)[T.YZ.Complete,T.YZ.Cancelled,T.YZ.Failed].includes(m.meta?.custom?.Status)&&this.logQueries.hasOwnProperty(m.refId)&&delete this.logQueries[m.refId]}),(0,Lt.T)(([h,m])=>{const R=[...n,...o];if(r())for(const C of h)(0,ie.set)(C,"meta.custom.Status",T.YZ.Cancelled),R.push({message:`Error: Query hit timeout before completing after ${m} attempts, partial results may be shown. To increase the timeout window update your datasource configuration.`,type:w.v2.Timeout,refId:C.refId});return{data:h,key:"test-key",state:h.every(C=>[T.YZ.Complete,T.YZ.Cancelled,T.YZ.Failed].includes(C.meta?.custom?.Status))?He.Gu.Done:He.Gu.Loading,errors:R}}),(0,li.v)(({state:h})=>h!==He.Gu.Error&&h!==He.Gu.Done,!0));return Ni(c,()=>this.stopQueries(s))}stopQueries(e){Object.keys(this.logQueries).length>0&&this.makeLogActionRequest("StopQuery",Object.values(this.logQueries).map(r=>({queryId:r.id,region:r.region,queryString:"",refId:""})),e).pipe((0,ci.j)(()=>{this.logQueries={}}))}makeLogActionRequest(e,r,s,n){const i=n?.range||(0,ui.E2)(),o={...n,range:i,skipQueryCache:!0,requestId:n?.requestId||"",interval:n?.interval||"",intervalMs:n?.intervalMs||1,scopedVars:n?.scopedVars||{},timezone:n?.timezone||"",app:n?.app||"",startTime:n?.startTime||0,targets:r.map(l=>({...l,id:"",queryMode:"Logs",refId:l.refId||"A",intervalMs:1,maxDataPoints:1,datasource:this.ref,type:"logAction",subtype:e}))};return s(o)}filterQuery(e){const r=!e.logGroupNames?.length,s=!e.logGroups?.length,n=!e.expression?.length;return!(e.queryLanguage!=="SQL"&&s&&r||n)}}function Ni(t,e){return new Cr.c(r=>{const s=t.subscribe({next:n=>r.next(n),error:n=>r.next(n),complete:()=>r.complete()});return()=>{s.unsubscribe(),e()}})}function vi(t){const e=t.lastIndexOf(":");return t.slice(e+1)}var xi=E(66847),bi=E(80011),Di=E(95004);const Mi=({region:t})=>(0,a.jsxs)("p",{children:["Please visit the\xA0",(0,a.jsx)("a",{target:"_blank",rel:"noreferrer",className:"text-link",href:`https://${t}.console.aws.amazon.com/servicequotas/home?region=${t}#!/services/monitoring/quotas/L-5E141212`,children:"AWS Service Quotas console"}),"\xA0to request a quota increase or see our\xA0",(0,a.jsx)("a",{target:"_blank",rel:"noreferrer",className:"text-link",href:"https://grafana.com/docs/grafana/latest/datasources/cloudwatch/#manage-service-quotas",children:"documentation"}),"\xA0to learn more."]}),Fi=(t,e)=>`Please visit the AWS Service Quotas console at https://${t}.console.aws.amazon.com/servicequotas/home?region=${t}#!/services/monitoring/quotas/L-5E141212 to request a quota increase or see our documentation at https://grafana.com/docs/grafana/latest/datasources/cloudwatch/#manage-service-quotas to learn more. ${e}`,wi=(t,e)=>(0,y.J7)().publish({type:Ut.r1.alertError.name,payload:[`CloudWatch request limit reached in ${e} for data source ${t}`,"",void 0,(0,A.createElement)(Mi,{region:e},null)]});class Pi extends Gt{constructor(e,r){super(e,r),this.debouncedThrottlingAlert=is(wi),this.handleMetricQueries=(s,n,i)=>{const o=(0,bi.LE)(Date.now(),{timeZone:n.timezone,format:"Z"}).replace(":",""),l=s.filter(this.filterMetricQuery).map(g=>{const c=se(g),h=this.replaceMetricQueryVars(c,n.scopedVars);return{timezoneUTCOffset:o,intervalMs:n.intervalMs,maxDataPoints:n.maxDataPoints,...h,type:"timeSeriesQuery",datasource:this.ref}});if((0,ie.isEmpty)(l))return(0,Et.of)({data:[]});const d={...n,targets:l};return this.performTimeSeriesQuery(d,i)}}interpolateMetricsQueryVariables(e,r){return{alias:this.replaceVariableAndDisplayWarningIfMulti(e.alias,r),metricName:this.replaceVariableAndDisplayWarningIfMulti(e.metricName,r),namespace:this.replaceVariableAndDisplayWarningIfMulti(e.namespace,r),period:this.replaceVariableAndDisplayWarningIfMulti(e.period,r),expression:this.templateSrv.replace(e.expression,r),sqlExpression:this.replaceVariableAndDisplayWarningIfMulti(e.sqlExpression,r),dimensions:this.convertDimensionFormat(e.dimensions??{},r)}}performTimeSeriesQuery(e,r){return r(e).pipe((0,Lt.T)(s=>{const n=s.data||[];return n.forEach(i=>{i.fields.forEach(o=>{o.type===Di.PU.time&&(o.config.interval=i.meta?.custom?.period*1e3)})}),s.errors?.length&&this.alertOnThrottlingErrors(s.errors,e),{data:n,errors:this.enrichThrottlingErrorMessages(e,s.errors)}}),(0,xi.W)(s=>Array.isArray(s)?(0,Et.of)({data:[],errors:s}):(0,Et.of)({data:[],errors:[{message:s}]})))}enrichThrottlingErrorMessages(e,r){if(!r||r.length===0)return r;const s=[];return r.forEach(n=>{if(n.message&&(/^Throttling:.*/.test(n.message)||/^Rate exceeded.*/.test(n.message))){const i=this.getActualRegion(e.targets.find(o=>o.refId===n.refId)?.region);s.push({...n,message:Fi(i,n.message)})}else s.push(n)}),s}alertOnThrottlingErrors(e,r){if(e.some(n=>n.message&&(/^Throttling:.*/.test(n.message)||/^Rate exceeded.*/.test(n.message)))){const n=e.map(i=>i.refId).filter(i=>i);n.length>0&&Object.values(r.targets).reduce((o,{refId:l,region:d})=>l&&!n.includes(l)||o.includes(d)?o:[...o,d],[]).forEach(o=>{const l=this.getActualRegion(o);l&&this.debouncedThrottlingAlert(this.instanceSettings.name,l)})}}filterMetricQuery(e){return Pe(e)}replaceMetricQueryVars(e,r){return e.region=this.templateSrv.replace(this.getActualRegion(e.region),r),e.namespace=this.replaceVariableAndDisplayWarningIfMulti(e.namespace,r,!0,"namespace"),e.metricName=this.replaceVariableAndDisplayWarningIfMulti(e.metricName,r,!0,"metric name"),e.dimensions=this.convertDimensionFormat(e.dimensions??{},r),e.statistic=this.templateSrv.replace(e.statistic,r),e.period=String(this.getPeriod(e,r)),e.id=this.templateSrv.replace(e.id,r),e.expression=this.templateSrv.replace(e.expression,r),e.sqlExpression=this.templateSrv.replace(e.sqlExpression,r,"raw"),e.accountId&&(e.accountId=this.templateSrv.replace(e.accountId,r)),e}getPeriod(e,r){let s=this.templateSrv.replace(e.period,r);if(s&&s.toLowerCase()!=="auto"){let n;return/^\d+$/.test(s)?n=parseInt(s,10):n=cr.intervalToSeconds(s),n<1&&(n=1),String(n)}return s}}class _i extends Gt{constructor(e,r){super(e,r),this.memoizedGetRequest=(0,ie.memoize)(this.getRequest.bind(this),(s,n)=>JSON.stringify({path:s,parameters:n}))}getRequest(e,r){return(0,ns.AI)().get(`/api/datasources/${this.instanceSettings.id}/resources/${e}`,r)}async getExternalId(){return await this.memoizedGetRequest("external-id").then(({externalId:e})=>e)}getAccounts({region:e}){return this.memoizedGetRequest("accounts",{region:this.templateSrv.replace(this.getActualRegion(e))}).then(r=>r.map(s=>s.value))}isMonitoringAccount(e){return this.getAccounts({region:e}).then(r=>r.some(s=>s.isMonitoringAccount)).catch(()=>!1)}getRegions(){return this.memoizedGetRequest("regions").then(e=>[{label:"default",value:"default",text:"default"},...e.map(r=>({label:r.value.name,value:r.value.name,text:r.value.name}))].filter(r=>r.value))}getNamespaces(){return this.memoizedGetRequest("namespaces").then(e=>e.map(r=>({label:r.value,value:r.value})))}getLogGroups(e){return this.memoizedGetRequest("log-groups",{...e,region:this.templateSrv.replace(this.getActualRegion(e.region)),accountId:this.templateSrv.replace(e.accountId),listAllLogGroups:e.listAllLogGroups?"true":"false"})}getLogGroupFields(e,r){return this.memoizedGetRequest("log-group-fields",{region:this.templateSrv.replace(this.getActualRegion(e)),logGroupName:r})}getMetrics({region:e,namespace:r,accountId:s}){return r?this.memoizedGetRequest("metrics",{region:this.templateSrv.replace(this.getActualRegion(e)),namespace:this.templateSrv.replace(r),accountId:this.templateSrv.replace(s)}).then(n=>n.map(i=>({label:i.value.name,value:i.value.name}))):Promise.resolve([])}getAllMetrics({region:e,accountId:r}){return this.memoizedGetRequest("metrics",{region:this.templateSrv.replace(this.getActualRegion(e)),accountId:this.templateSrv.replace(r)}).then(s=>s.map(n=>({metricName:n.value.name,namespace:n.value.namespace})))}getDimensionKeys({region:e,namespace:r="",dimensionFilters:s={},metricName:n="",accountId:i},o){return this.memoizedGetRequest("dimension-keys",{region:this.templateSrv.replace(this.getActualRegion(e)),namespace:this.templateSrv.replace(r),accountId:this.templateSrv.replace(i),metricName:this.templateSrv.replace(n),dimensionFilters:JSON.stringify(this.convertDimensionFormat(s,{},o))}).then(l=>l.map(d=>({label:d.value,value:d.value})))}getDimensionValues({dimensionKey:e,region:r,namespace:s,dimensionFilters:n={},metricName:i="",accountId:o}){return!s||!i?Promise.resolve([]):this.memoizedGetRequest("dimension-values",{region:this.templateSrv.replace(this.getActualRegion(r)),namespace:this.templateSrv.replace(s),metricName:this.templateSrv.replace(i.trim()),dimensionKey:this.replaceVariableAndDisplayWarningIfMulti(e,{},!0),dimensionFilters:JSON.stringify(this.convertDimensionFormat(n,{})),accountId:this.templateSrv.replace(o)}).then(l=>l.map(d=>({label:d.value,value:d.value})))}getEbsVolumeIds(e,r){return this.memoizedGetRequest("ebs-volume-ids",{region:this.templateSrv.replace(this.getActualRegion(e)),instanceId:this.templateSrv.replace(r)})}getEc2InstanceAttribute(e,r,s){return this.memoizedGetRequest("ec2-instance-attribute",{region:this.templateSrv.replace(this.getActualRegion(e)),attributeName:this.templateSrv.replace(r),filters:JSON.stringify(this.convertMultiFilterFormat(s,"filter key"))})}getResourceARNs(e,r,s){return this.memoizedGetRequest("resource-arns",{region:this.templateSrv.replace(this.getActualRegion(e)),resourceType:this.templateSrv.replace(r),tags:JSON.stringify(this.convertMultiFilterFormat(s,"tag name"))})}legacyDescribeLogGroups(e,r){return this.memoizedGetRequest("legacy-log-groups",{region:this.templateSrv.replace(this.getActualRegion(e)),logGroupNamePrefix:r||""})}}var Wi=E(48592);const Or=/\${(\w+):json}/g;function Ui(t){return typeof t!="string"&&typeof t.ec2Filters!="string"&&typeof t.tags!="string"}function Kt(t){const e=t.replace(Or,'"$$$1"'),r=JSON.parse(e),s={};return Object.keys(r).forEach(n=>{const i=r[n];typeof i=="string"?s[n]=[i]:i!==void 0&&(s[n]=i)}),s}function us(t){if(Ui(t))return t;if(typeof t!="string"){const g=(0,ie.omit)(t,["dimensionFilters","ec2Filters","tags"]);if(g.dimensionFilters={},g.ec2Filters={},g.tags={},t.dimensionFilters!==""&&t.ec2Filters!=="[]"){const c=t.dimensionFilters.replace(Or,'"$$$1"');try{g.dimensionFilters=JSON.parse(c)}catch{throw new Error(`unable to migrate poorly formed filters: ${t.dimensionFilters}`)}}if(t.ec2Filters!==""&&t.ec2Filters!=="[]")try{g.ec2Filters=Kt(t.ec2Filters)}catch{throw new Error(`unable to migrate poorly formed filters: ${t.ec2Filters}`)}if(t.tags!==""&&t.tags!=="[]")try{g.tags=Kt(t.tags)}catch{throw new Error(`unable to migrate poorly formed filters: ${t.tags}`)}return g}const e={refId:"CloudWatchVariableQueryEditor-VariableQuery",queryType:T.b4.Regions,namespace:"",region:"",metricName:"",dimensionKey:"",dimensionFilters:{},ec2Filters:{},instanceID:"",attributeName:"",resourceType:"",tags:{}};if(t===""||t.match(/^regions\(\)/))return e;if(t.match(/^namespaces\(\)/))return e.queryType=T.b4.Namespaces,e;const r=t.match(/^metrics\(([^\)]+?)(,\s?([^,]+?))?\)/);if(r)return e.queryType=T.b4.Metrics,e.namespace=r[1],e.region=r[3]||"",e;const s=t.match(/^dimension_keys\(([^\)]+?)(,\s?([^,]+?))?\)/);if(s)return e.queryType=T.b4.DimensionKeys,e.namespace=s[1],e.region=s[3]||"",e;const n=t.match(/^dimension_values\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)(,\s?(.+))?\)/);if(n){if(e.queryType=T.b4.DimensionValues,e.region=n[1],e.namespace=n[2],e.metricName=n[3],e.dimensionKey=n[4],e.dimensionFilters={},n[6]&&n[6]!=="[]"){const g=n[6].replace(Or,'"$$$1"');try{e.dimensionFilters=JSON.parse(g)}catch{throw new Error(`unable to migrate poorly formed filters: ${n[6]}`)}}return e}const i=t.match(/^ebs_volume_ids\(([^,]+?),\s?([^,]+?)\)/);if(i)return e.queryType=T.b4.EBSVolumeIDs,e.region=i[1],e.instanceID=i[2],e;const o=t.match(/^ec2_instance_attribute\(([^,]+?),\s?([^,]+?),\s?(.+?)\)/);if(o){if(e.queryType=T.b4.EC2InstanceAttributes,e.region=o[1],e.attributeName=o[2],o[3]&&o[3]!=="[]")try{e.ec2Filters=Kt(o[3])}catch{throw new Error(`unable to migrate poorly formed filters: ${o[3]}`)}return e}const l=t.match(/^resource_arns\(([^,]+?),\s?([^,]+?),\s?(.+?)\)/);if(l){if(e.queryType=T.b4.ResourceArns,e.region=l[1],e.resourceType=l[2],l[3]&&l[3]!=="[]")try{e.tags=Kt(l[3])}catch{throw new Error(`unable to migrate poorly formed filters: ${l[3]}`)}return e}if(t.match(/^statistics\(\)/))return e.queryType=T.b4.Statistics,e;throw new Error("unable to parse old variable query")}const Gi=({filter:t,onChange:e,onDelete:r,keyPlaceholder:s,datasource:n})=>{const[i,o]=(0,A.useState)(t.key||""),[l,d]=(0,A.useState)(t.value?.join(", ")||""),g=Tt(n,t.key),c=(0,D.of)(Ki);return(0,a.jsxs)("div",{"data-testid":"cloudwatch-multifilter-item",children:[(0,a.jsxs)(It.M,{children:[(0,a.jsx)(ye.p,{"data-testid":"cloudwatch-multifilter-item-key","aria-label":"Filter key",value:i,placeholder:s??"key",onChange:h=>o(h.currentTarget.value),onBlur:()=>{i&&i!==t.key&&e({...t,key:i})}}),(0,a.jsx)("span",{className:(0,N.cx)(c.root),children:"="}),(0,a.jsx)(ye.p,{"data-testid":"cloudwatch-multifilter-item-value","aria-label":"Filter value",value:l,placeholder:"value1, value2,...",onChange:h=>d(h.currentTarget.value),onBlur:()=>{const h=l.split(",").map(m=>m.trim());l&&h!==t.value&&e({...t,value:h}),d(h.join(", "))}}),(0,a.jsx)(yt.Z,{"aria-label":"remove",icon:"times",variant:"secondary",onClick:r,type:"button"})]}),g&&(0,a.jsx)(De.F,{title:g,severity:"error",topSpacing:1})]})},Ki=t=>({root:(0,N.css)({padding:t.spacing(0,1),alignSelf:"center"})}),Bi=t=>Object.keys(t).map(e=>({key:e,value:t[e],operator:"="})),Hi=t=>{const e={};return t.forEach(({key:r,value:s})=>{r&&s&&(e[r]=s)}),e},ds=({filters:t,onChange:e,keyPlaceholder:r,datasource:s})=>{const[n,i]=(0,A.useState)([]);(0,A.useEffect)(()=>i(t?Bi(t):[]),[t]);const o=l=>{i(l);const d=Hi(l);(0,ie.isEqual)(d,t)||e(d)};return(0,a.jsx)(Pt.o,{items:n,onChange:o,renderItem:Vi(s,r)})};function Vi(t,e){function r(s,n,i){return(0,a.jsx)(Gi,{filter:s,onChange:o=>n(o),onDelete:i,keyPlaceholder:e,datasource:t})}return r}const ji=t=>({table:(0,N.css)({width:"100%",tableLayout:"fixed"}),selectedLogGroupsContainer:(0,N.css)({marginLeft:t.spacing(.5),marginBottom:t.spacing(.5),display:"flex",flexFlow:"wrap",gap:t.spacing(1),button:{margin:"unset"}}),limitLabel:(0,N.css)({color:t.colors.text.secondary,textAlign:"center",maxWidth:"none",svg:{marginRight:t.spacing(.5)},fontSize:12}),logGroupCountLabel:(0,N.css)({color:t.colors.text.secondary,maxWidth:"none"}),tableScroller:(0,N.css)({maxHeight:"40vh",overflow:"auto"}),row:(0,N.css)({borderBottom:`1px solid ${t.colors.border.weak}`,"&:last-of-type":{borderBottomColor:t.colors.border.medium}}),cell:(0,N.css)({padding:t.spacing(1,1,1,0),width:"25%","&:first-of-type":{width:"80%",padding:t.spacing(1,1,1,2)}}),nestedEntry:(0,N.css)({display:"flex",alignItems:"center"}),logGroupSearchResults:(0,N.css)({overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",width:"90%",verticalAlign:"middle"}),modal:(0,N.css)({width:t.breakpoints.values.lg}),selectAccountId:(0,N.css)({maxWidth:"100px"}),logGroupSelectionArea:(0,N.css)({display:"flex"}),searchField:(0,N.css)({width:"100%",marginRight:t.spacing(1)}),resultLimit:(0,N.css)({margin:"4px 0",fontStyle:"italic"}),removeButton:(0,N.css)({verticalAlign:"middle",marginLeft:t.spacing(.5)})}),ms=(0,N.css)({marginBottom:8}),ps=ji,at=({label:t,onChange:e,value:r,options:s,allowCustomValue:n=!1,isLoading:i=!1,inputId:o=t,error:l})=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(X.c,{label:t,htmlFor:o,className:ms,children:(0,a.jsx)(ce.l6,{"aria-label":t,allowCustomValue:n,value:r,onChange:({value:d})=>e(d),options:s,isLoading:i,inputId:o})}),l&&(0,a.jsx)(De.F,{title:l,severity:"error",topSpacing:1})]}),Bt=({interactive:t,label:e,onBlur:r,placeholder:s,value:n,tooltip:i})=>{const[o,l]=(0,A.useState)(n);return(0,a.jsx)(X.c,{label:e,tooltip:i,tooltipInteractive:t,className:ms,children:(0,a.jsx)(ye.p,{"aria-label":e,placeholder:s,value:o,onChange:d=>l(d.currentTarget.value),onBlur:()=>r(o)})})},$i=[{value:T.b4.Regions,label:"Regions"},{value:T.b4.Namespaces,label:"Namespaces"},{value:T.b4.Metrics,label:"Metrics"},{value:T.b4.DimensionKeys,label:"Dimension Keys"},{value:T.b4.DimensionValues,label:"Dimension Values"},{value:T.b4.EBSVolumeIDs,label:"EBS Volume IDs"},{value:T.b4.EC2InstanceAttributes,label:"EC2 Instance Attributes"},{value:T.b4.ResourceArns,label:"Resource ARNs"},{value:T.b4.Statistics,label:"Statistics"},{value:T.b4.LogGroups,label:"Log Groups"},...U.$.featureToggles.cloudWatchCrossAccountQuerying?[{value:T.b4.Accounts,label:"Accounts"}]:[]],ki=({query:t,datasource:e,onChange:r})=>{const s=us(t),{region:n,namespace:i,metricName:o,dimensionKey:l}=s,[d,g]=gr(e),c=hr(e),h=Er(e,{region:n,namespace:i}),m=At(e,{region:n,namespace:i,metricName:o}),R=Mt(e.resources,t.region),C=Tt(e,l),M=async B=>{const Oe=await F({...s,region:B,accountId:void 0});S(Oe)},b=async B=>{const Oe=await F({...s,namespace:B});S(Oe)},S=B=>{r({...B,refId:"CloudWatchVariableQueryEditor-VariableQuery"})},F=async B=>{let{metricName:Oe,dimensionKey:Qe,dimensionFilters:Vt,namespace:jt,region:$t}=B;return Oe&&await e.resources.getMetrics({namespace:jt,region:$t}).then(G=>{G.find(ue=>ue.value===Oe)||(Oe="")}),Qe&&await e.resources.getDimensionKeys({namespace:jt,region:$t}).then(G=>{G.find(ue=>ue.value===Qe)||(Qe="",Vt={})}),{...B,metricName:Oe,dimensionKey:Qe,dimensionFilters:Vt}},V=[T.b4.Metrics,T.b4.DimensionKeys,T.b4.DimensionValues,T.b4.EBSVolumeIDs,T.b4.EC2InstanceAttributes,T.b4.ResourceArns,T.b4.LogGroups,T.b4.Accounts].includes(s.queryType),te=[T.b4.Metrics,T.b4.DimensionKeys,T.b4.DimensionValues,T.b4.LogGroups].includes(s.queryType),Re=[T.b4.Metrics,T.b4.DimensionKeys,T.b4.DimensionValues].includes(s.queryType),Le=(0,D.of)(Qi);return(0,a.jsxs)("div",{className:Le.formStyles,children:[(0,a.jsx)(at,{value:s.queryType,options:$i,onChange:B=>S({...s,queryType:B,accountId:void 0}),label:"Query type",inputId:`variable-query-type-${t.refId}`}),V&&(0,a.jsx)(at,{value:n,options:d,onChange:B=>M(B),label:"Region",isLoading:g,inputId:`variable-query-region-${t.refId}`}),te&&R.value&&R.value?.length>0&&U.$.featureToggles.cloudWatchCrossAccountQuerying&&(0,a.jsx)(at,{label:"Account",value:t.accountId??null,onChange:B=>S({...s,accountId:B}),options:[nt,...R?.value],allowCustomValue:!1}),Re&&(0,a.jsx)(at,{value:i,options:c,onChange:B=>b(B),label:"Namespace",inputId:`variable-query-namespace-${t.refId}`,allowCustomValue:!0}),s.queryType===T.b4.DimensionValues&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(at,{value:o||null,options:h,onChange:B=>S({...s,metricName:B}),label:"Metric",inputId:`variable-query-metric-${t.refId}`,allowCustomValue:!0}),(0,a.jsx)(at,{value:l||null,options:m,onChange:B=>S({...s,dimensionKey:B}),label:"Dimension key",inputId:`variable-query-dimension-key-${t.refId}`,allowCustomValue:!0,error:C}),(0,a.jsx)(X.c,{label:"Dimensions",className:Le.dimensionsWidth,tooltip:"Dimensions to filter the returned values on",children:(0,a.jsx)(zr,{metricStat:{...s,dimensions:s.dimensionFilters},onChange:B=>{r({...s,dimensionFilters:B})},disableExpressions:!0,datasource:e})})]}),s.queryType===T.b4.EBSVolumeIDs&&(0,a.jsx)(Bt,{value:t.instanceID,placeholder:"i-XXXXXXXXXXXXXXXXX",onBlur:B=>S({...s,instanceID:B}),label:"Instance ID"}),s.queryType===T.b4.EC2InstanceAttributes&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Bt,{value:s.attributeName,onBlur:B=>S({...s,attributeName:B}),label:"Attribute name",interactive:!0,tooltip:(0,a.jsxs)(a.Fragment,{children:['Attribute or tag to query on. Tags should be formatted "Tags.<name>". ',(0,a.jsx)("a",{href:"https://grafana.com/docs/grafana/latest/datasources/aws-cloudwatch/template-queries-cloudwatch/#selecting-attributes",target:"_blank",rel:"noreferrer",children:"See the documentation for more details"})]})}),(0,a.jsx)(X.c,{label:"Filters",tooltipInteractive:!0,tooltip:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("a",{href:"https://grafana.com/docs/grafana/latest/datasources/aws-cloudwatch/template-queries-cloudwatch/#selecting-attributes",target:"_blank",rel:"noreferrer",children:"Pre-defined ec2:DescribeInstances filters/tags"})," and the values to filter on. Tags should be formatted tag:<name>."]}),children:(0,a.jsx)(ds,{filters:s.ec2Filters??{},onChange:B=>{r({...s,ec2Filters:B})},keyPlaceholder:"filter/tag",datasource:e})})]}),s.queryType===T.b4.ResourceArns&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Bt,{value:s.resourceType,onBlur:B=>S({...s,resourceType:B}),label:"Resource type"}),(0,a.jsx)(X.c,{label:"Tags",tooltip:"Tags to filter the returned values on.",children:(0,a.jsx)(ds,{filters:s.tags,onChange:B=>{r({...s,tags:B})},keyPlaceholder:"tag",datasource:e})})]}),s.queryType===T.b4.LogGroups&&(0,a.jsx)(Bt,{value:t.logGroupPrefix??"",onBlur:B=>S({...s,logGroupPrefix:B}),label:"Log group prefix"})]})},Qi=t=>({formStyles:(0,N.css)({maxWidth:t.spacing(30)}),dimensionsWidth:(0,N.css)({width:t.spacing(50)})});class Yi extends Wi.f5{constructor(e){super(),this.resources=e,this.editor=ki,this.allMetricFindValue={text:"All",value:nt.value,expandable:!0}}query(e){const r=us(e.targets[0]);return(0,os.H)(this.execute(r)).pipe((0,Lt.T)(s=>({data:s})))}async execute(e){try{switch(e.queryType){case T.b4.Regions:return this.handleRegionsQuery();case T.b4.Namespaces:return this.handleNamespacesQuery();case T.b4.Metrics:return this.handleMetricsQuery(e);case T.b4.DimensionKeys:return this.handleDimensionKeysQuery(e);case T.b4.DimensionValues:return this.handleDimensionValuesQuery(e);case T.b4.EBSVolumeIDs:return this.handleEbsVolumeIdsQuery(e);case T.b4.EC2InstanceAttributes:return this.handleEc2InstanceAttributeQuery(e);case T.b4.ResourceArns:return this.handleResourceARNsQuery(e);case T.b4.Statistics:return this.handleStatisticsQuery();case T.b4.LogGroups:return this.handleLogGroupsQuery(e);case T.b4.Accounts:return this.handleAccountsQuery(e)}}catch(r){return console.error(`Could not run CloudWatchMetricFindQuery ${e}`,r),[]}}async handleLogGroupsQuery({region:e,logGroupPrefix:r,accountId:s}){const n=this.resources.templateSrv.replace(r);return this.resources.getLogGroups({accountId:s,region:e,logGroupNamePrefix:n,listAllLogGroups:!0}).then(i=>i.map(o=>({text:o.value.name,value:o.value.arn,expandable:!0})))}async handleRegionsQuery(){return this.resources.getRegions().then(e=>e.map($e))}async handleNamespacesQuery(){return this.resources.getNamespaces().then(e=>e.map($e))}async handleMetricsQuery({namespace:e,region:r,accountId:s}){return this.resources.getMetrics({namespace:e,region:r,accountId:s}).then(n=>n.map($e))}async handleDimensionKeysQuery({namespace:e,region:r,accountId:s}){return this.resources.getDimensionKeys({namespace:e,region:r,accountId:s}).then(n=>n.map($e))}async handleDimensionValuesQuery({namespace:e,accountId:r,region:s,dimensionKey:n,metricName:i,dimensionFilters:o}){return!n||!i?[]:this.resources.getDimensionValues({region:s,accountId:r,namespace:e,metricName:i,dimensionKey:n,dimensionFilters:o}).then(l=>l.map($e))}async handleEbsVolumeIdsQuery({region:e,instanceID:r}){return r?this.resources.getEbsVolumeIds(e,r).then(s=>s.map($e)):[]}async handleEc2InstanceAttributeQuery({region:e,attributeName:r,ec2Filters:s}){return r?this.resources.getEc2InstanceAttribute(e,r,s??{}).then(n=>n.map($e)):[]}async handleResourceARNsQuery({region:e,resourceType:r,tags:s}){return r?(await this.resources.getResourceARNs(e,r,s??{})).map($e):[]}async handleStatisticsQuery(){return wt.map(e=>({text:e,value:e,expandable:!0}))}async handleAccountsQuery({region:e}){return this.resources.getAccounts({region:e}).then(r=>{const s=r.map(n=>({text:n.label,value:n.id,expandable:!0}));return s.length?[this.allMetricFindValue,...s]:[]})}getDefaultQuery(){return Sn}}function $e({label:t,value:e}){return{text:t??e??"",value:e,expandable:!0}}class gs extends an.iy{constructor(e,r=(0,Se.w)()){super(e),this.instanceSettings=e,this.templateSrv=r,this.type="cloudwatch",this.defaultRegion=e.jsonData.defaultRegion,this.resources=new _i(e,r),this.languageProvider=new On(this),this.sqlCompletionItemProvider=new Qn(this.resources,this.templateSrv),this.metricsQueryRunner=new Pi(e,r),this.logsQueryRunner=new Oi(e,r),this.annotationQueryRunner=new ri(e,r),this.variables=new Yi(this.resources),this.annotations=Rn,this.defaultLogGroups=e.jsonData.defaultLogGroups,this.metricMathCompletionItemProvider=new ei(this.resources,this.templateSrv),this.logsCompletionItemProviderFunc=Xn(this.resources,this.templateSrv),this.logsSqlCompletionItemProviderFunc=Pn(this.resources,r),this.pplCompletionItemProviderFunc=Bn(this.resources,this.templateSrv)}filterQuery(e){return e.hide!==!0||ee(e)&&e.id!==""}query(e){e=(0,ie.cloneDeep)(e);let r=e.targets.filter(this.filterQuery);const s=[],n=[],i=[];r.forEach(l=>{re(l)?i.push(l):J(l)?s.push(l):n.push(l)});const o=[];return s.length&&o.push(this.logsQueryRunner.handleLogQueries(s,e,super.query.bind(this))),n.length&&o.push(this.metricsQueryRunner.handleMetricQueries(n,e,super.query.bind(this))),i.length&&o.push(this.annotationQueryRunner.handleAnnotationQuery(i,e,super.query.bind(this))),(0,ie.isEmpty)(o)?(0,Et.of)({data:[],state:He.Gu.Done}):(0,nn.h)(...o)}interpolateVariablesInQueries(e,r){return e.length?e.map(s=>({...s,region:this.metricsQueryRunner.replaceVariableAndDisplayWarningIfMulti(this.getActualRegion(s.region),r),...ee(s)&&this.metricsQueryRunner.interpolateMetricsQueryVariables(s,r)})):e}getLogRowContext(e,r,s){return this.logsQueryRunner.getLogRowContext(e,r,super.query.bind(this),s)}targetContainsTemplate(e){return this.templateSrv.containsTemplate(e.region)||this.templateSrv.containsTemplate(e.namespace)||this.templateSrv.containsTemplate(e.metricName)||this.templateSrv.containsTemplate(e.expression)||e.logGroupNames?.some(r=>this.templateSrv.containsTemplate(r))||(0,ie.find)(e.dimensions,(r,s)=>this.templateSrv.containsTemplate(s)||this.templateSrv.containsTemplate(r))}getQueryDisplayText(e){return J(e)?e.expression??"":JSON.stringify(e)}getVariables(){return this.resources.getVariables()}getActualRegion(e){return e==="default"||e===void 0||e===""?this.defaultRegion??"":e}getDefaultQuery(e){return{...yn(this.instanceSettings.jsonData.logGroups,this.instanceSettings.jsonData.defaultLogGroups),...qr}}}const zi=20,Xi=4,qi=300,Zi=({region:t,selectedLogGroups:e,onChange:r,datasource:s,onOpenMenu:n,width:i,saved:o=!0})=>{const[l,d]=(0,A.useState)(!1),[g,c]=(0,A.useState)([]),h=(0,A.useMemo)(()=>(0,ie.unionBy)(g,e?.map(le.z),"value"),[g,e]),m=(0,A.useCallback)(async(b,S)=>{if(!s)return[];try{return await s.resources.legacyDescribeLogGroups(b,S)}catch(F){return(0,y.J7)().publish({type:Ut.r1.alertError.name,payload:[typeof F=="string"?F:JSON.stringify(F)]}),[]}},[s]),R=async(b,S,F)=>{if(F.action!=="input-change"||!s)return;if(!/^[\.\-_/#A-Za-z0-9]+$/.test(b)){b!==""&&(0,y.J7)().publish({type:Ut.r1.alertError.name,payload:["Invalid Log Group name: "+b]});return}d(!0);const te=await m(S,b);c((0,ie.unionBy)(g,te,"value")),d(!1)};(0,A.useEffect)(()=>{async function b(){if(!s||!s.getActualRegion(t)){c([]);return}return d(!0),m(s.getActualRegion(t)).then(S=>{c(S)}).finally(()=>{d(!1)})}return o&&b(),()=>{c([]),d(!1)}},[s,t,o]);const C=async()=>{n&&await n()},M=(0,ie.debounce)(R,qi);return(0,a.jsx)(ce.KF,{inputId:"default-log-groups","aria-label":"Log Groups",allowCustomValue:!0,options:s?me(s,h):h,value:e,onChange:b=>r(b.filter(({value:S})=>S).map(({value:S})=>S)),closeMenuOnSelect:!1,isClearable:!0,isOptionDisabled:()=>e.length>=zi,placeholder:"Choose Log Groups",maxVisibleValues:Xi,noOptionsMessage:"No log groups available",isLoading:l,onOpenMenu:C,onInputChange:(b,S)=>{M(b,t,S)},width:i})},Ji=(0,N.css)({gap:"3px"}),ea=({datasource:t,region:e,legacyLogGroupNames:r,onChange:s})=>(0,a.jsx)("div",{className:`gf-form gf-form--grow flex-grow-1 ${Ji}`,children:(0,a.jsx)(Zi,{region:e,selectedLogGroups:r,datasource:t,onChange:s})});var hs=E(22787),Es=E(30703),ta=E(6975),ra=E(32635),sa=E(72636),ke=E(45861);const na=({searchFn:t,searchPhrase:e})=>{const[r,s]=(0,A.useState)(e),n=(0,A.useMemo)(()=>(0,ie.debounce)(t,600),[t]);return(0,A.useEffect)(()=>()=>{n?.cancel()},[n]),(0,a.jsx)(ye.p,{"aria-label":"log group search",prefix:(0,a.jsx)(Es.I,{name:"search"}),value:r,onChange:i=>{const o=i.currentTarget.value;s(o),n(o)},placeholder:"search by log group name prefix"})},ia=({accountOptions:t=[],variables:e=[],fetchLogGroups:r,onChange:s,onBeforeOpen:n,...i})=>{const[o,l]=(0,A.useState)(!1),[d,g]=(0,A.useState)([]),[c,h]=(0,A.useState)(i.selectedLogGroups??[]),[m,R]=(0,A.useState)(""),[C,M]=(0,A.useState)(nt.value),[b,S]=(0,A.useState)(!1),F=(0,D.of)(ps),V=(0,A.useMemo)(()=>c.filter(G=>!G.name?.startsWith("$")).length,[c]),te=(0,A.useMemo)(()=>e.map(G=>({label:G,value:G})),[e]),Re=(0,A.useMemo)(()=>c.find(G=>G.name?.startsWith("$"))?.name,[c]),Le={label:Re,value:Re};(0,A.useEffect)(()=>{h(i.selectedLogGroups??[])},[i.selectedLogGroups]);const B=()=>{l(!o),o||(h(c),Qe(m,C))},Oe=(0,A.useMemo)(()=>{const G={};return t.forEach(ue=>{ue.value&&ue.label&&(G[ue.value]=ue.label)}),G},[t]),Qe=async(G,ue)=>{S(!0);try{const ct=await r({logGroupPattern:G,accountId:ue});g(ct.map(Ot=>({arn:Ot.value.arn,name:Ot.value.name,accountId:Ot.accountId,accountLabel:Ot.accountId?Oe[Ot.accountId]:void 0})))}catch{g([])}S(!1)},Vt=(G,ue)=>{h(ue?[...c,G]:c.filter(ct=>ct.arn!==G.arn))},jt=()=>{s(c),B()},$t=()=>{h(c),B()};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(hs.a,{className:F.modal,title:"Select log groups",isOpen:o,onDismiss:B,children:[(0,a.jsxs)("div",{className:F.logGroupSelectionArea,children:[(0,a.jsx)("div",{className:F.searchField,children:(0,a.jsx)(X.c,{label:"Log group name prefix",children:(0,a.jsx)(na,{searchFn:G=>{Qe(G,C),R(G)},searchPhrase:m})})}),(0,a.jsx)(fr,{onChange:G=>{Qe(m,G),M(G||nt.value)},accountOptions:t,accountId:C})]}),(0,a.jsx)(Me.$,{layout:"block",v:2}),(0,a.jsxs)("div",{children:[!b&&d.length>=25&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:F.limitLabel,children:[(0,a.jsx)(Es.I,{name:"info-circle"}),"Only the first 50 results can be shown. If you do not see an expected log group, try narrowing down your search.",(0,a.jsxs)("p",{children:["A"," ",(0,a.jsxs)("a",{target:"_blank",rel:"noopener noreferrer",href:"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/cloudwatch_limits_cwl.html",children:["maximum"," "]})," ","of 50 Cloudwatch log groups can be queried at one time."]})]}),(0,a.jsx)(Me.$,{layout:"block",v:1})]}),(0,a.jsx)("div",{className:F.tableScroller,children:(0,a.jsxs)("table",{className:F.table,children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{className:F.row,children:[(0,a.jsx)("td",{className:F.cell,children:"Log Group"}),t.length>0&&(0,a.jsx)("td",{className:F.cell,children:"Account label"}),(0,a.jsx)("td",{className:F.cell,children:"Account ID"})]})}),(0,a.jsxs)("tbody",{children:[b&&(0,a.jsx)("tr",{className:F.row,children:(0,a.jsx)("td",{className:F.cell,children:(0,a.jsx)(ta._,{text:"Loading..."})})}),!b&&d.length===0&&(0,a.jsx)("tr",{className:F.row,children:(0,a.jsx)("td",{className:F.cell,children:"No log groups found"})}),!b&&d.map(G=>(0,a.jsxs)("tr",{className:F.row,children:[(0,a.jsx)("td",{className:F.cell,children:(0,a.jsxs)("div",{className:F.nestedEntry,children:[(0,a.jsx)(ra.S,{id:G.arn,onChange:ue=>Vt(G,ue.currentTarget.checked),value:!!(G.arn&&c.some(ue=>ue.arn===G.arn))}),(0,a.jsx)(Me.$,{layout:"inline",h:2}),(0,a.jsx)("label",{className:F.logGroupSearchResults,htmlFor:G.arn,title:G.name,children:G.name})]})}),t.length>0&&(0,a.jsx)("td",{className:F.cell,children:G.accountLabel}),(0,a.jsx)("td",{className:F.cell,children:G.accountId})]},`${G.arn}`))]})]})})]}),(0,a.jsx)(Me.$,{layout:"block",v:2}),(0,a.jsxs)(sa.J,{className:F.logGroupCountLabel,children:[V," log group",V!==1&&"s"," selected"]}),(0,a.jsx)(Me.$,{layout:"block",v:1}),(0,a.jsx)(X.c,{label:"Template variable",width:26,tooltip:"Optionally you can specify a single or multi-valued template variable. Select a variable separately or in conjunction with log groups.",children:(0,a.jsx)(ce.l6,{isClearable:!0,"aria-label":"Template variable",value:Le,allowCustomValue:!0,options:te,onChange:G=>{const ue=c.filter(ct=>!ct.name?.startsWith("$"));G?.label&&ue.push({name:G.label,arn:G.label}),h(ue)}})}),(0,a.jsxs)(hs.a.ButtonRow,{children:[(0,a.jsx)(ke.$n,{onClick:$t,variant:"secondary",type:"button",fill:"outline",children:"Cancel"}),(0,a.jsx)(ke.$n,{onClick:jt,type:"button",children:"Add log groups"})]})]}),(0,a.jsx)("div",{children:(0,a.jsx)(ke.$n,{variant:"secondary",onClick:()=>{try{n?.(),B()}catch{}},type:"button",children:"Select log groups"})})]})};var fs=E(71599);const As=6,aa=({selectedLogGroups:t=[],onChange:e,maxNoOfVisibleLogGroups:r=As})=>{const s=(0,D.of)(ps),[n,i]=(0,A.useState)(!1),[o,l]=(0,A.useState)(t.slice(0,As));return(0,A.useEffect)(()=>{l(t.slice(0,r))},[t,r]),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:s.selectedLogGroupsContainer,children:[o.map(d=>(0,a.jsx)(ke.$n,{size:"sm",variant:"secondary",icon:"times",className:s.removeButton,onClick:()=>{e(t.filter(g=>g.arn!==d.arn))},children:`${d.name}${d.accountLabel?`(${d.accountLabel})`:""}`},d.arn)),o.length!==t.length&&(0,a.jsx)(ke.$n,{size:"sm",variant:"secondary",icon:"plus",fill:"outline",className:s.removeButton,onClick:()=>l(t),children:"Show all"}),t.length>0&&(0,a.jsx)(ke.$n,{size:"sm",variant:"secondary",icon:"times",fill:"outline",className:s.removeButton,onClick:()=>i(!0),children:"Clear selection"})]}),(0,a.jsx)(fs.u,{isOpen:n,title:"Clear Log Group Selection",body:"Are you sure you want to clear all log groups?",confirmText:"Yes",dismissText:"No",icon:"exclamation-triangle",onConfirm:()=>{i(!1),e([])},onDismiss:()=>i(!1)})]})},oa=(0,N.css)({display:"flex",flexDirection:"column",marginTop:8,"& div:first-child":{marginBottom:8}}),la=({datasource:t,onChange:e,legacyLogGroupNames:r,logGroups:s,region:n,maxNoOfVisibleLogGroups:i,onBeforeOpen:o})=>{const l=Mt(t?.resources,n),[d,g]=(0,A.useState)(!1);return(0,A.useEffect)(()=>{if(t&&!d&&!s?.length&&r?.length){g(!0);const c=r.filter(m=>es(t.resources.templateSrv,m)),h=r.filter(m=>!es(t.resources.templateSrv,m));Promise.all(h.map(m=>t.resources.getLogGroups({region:n,logGroupNamePrefix:m}))).then(m=>{const R=m.flatMap(C=>C.map(M=>({arn:M.value.arn,name:M.value.name,accountId:M.accountId})));e([...R,...c.map(C=>({name:C,arn:C}))])}).catch(m=>{console.error(m)})}},[t,r,s,e,n,d]),(0,a.jsxs)("div",{className:oa,children:[(0,a.jsx)(ia,{fetchLogGroups:async c=>t?.resources.getLogGroups({region:n,...c})??[],onChange:e,accountOptions:l.value,selectedLogGroups:s,onBeforeOpen:o,variables:t?.getVariables()}),(0,a.jsx)(aa,{selectedLogGroups:s??[],onChange:e,maxNoOfVisibleLogGroups:i})]})},Ts=t=>U.$.featureToggles.cloudWatchCrossAccountQuerying?(0,a.jsx)(la,{...t}):(0,a.jsx)(ea,{...t,onChange:t.legacyOnChange,legacyLogGroupNames:t.legacyLogGroupNames||[]});var ca=E(21285);function ua({options:t,onOptionsChange:e}){return(0,a.jsx)(ur.A,{title:"Secure Socks Proxy",children:(0,a.jsx)(ht.D,{label:"Enabled",description:"Connect to this datasource via the secure socks proxy.",children:(0,a.jsx)(ca.d,{value:t.jsonData.enableSecureSocksProxy??!1,onChange:r=>e({...t,jsonData:{...t.jsonData,enableSecureSocksProxy:r.currentTarget.checked}})})})})}var Is=E(80839),da=E(18027);const ma=t=>({infoText:(0,N.css)({paddingBottom:t.spacing(2),color:t.colors.text.secondary})}),Nr="grafana-x-ray-datasource";function pa({newFormStyling:t,datasourceUid:e,onChange:r}){const s=!!(0,dr.l)().getList({pluginId:Nr}).length,n=(0,D.of)(ma);return t?(0,a.jsxs)(ur.A,{title:"X-ray trace link",description:"Grafana will automatically create a link to a trace in X-ray data source if logs contain @xrayTraceId field",children:[!s&&(0,a.jsx)(De.F,{title:"There is no X-ray datasource to link to. First add an X-ray data source and then link it to Cloud Watch. ",severity:"info"}),(0,a.jsx)(ht.D,{htmlFor:"data-source-picker",label:"Data source",description:"X-ray data source containing traces",children:(0,a.jsx)(Is.s,{pluginId:Nr,onChange:i=>r(i.uid),current:e,noDefault:!0})})]}):(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h3",{className:"page-heading",children:"X-ray trace link"}),(0,a.jsx)("div",{className:n.infoText,children:"Grafana will automatically create a link to a trace in X-ray data source if logs contain @xrayTraceId field"}),!s&&(0,a.jsx)(De.F,{title:"There is no X-ray datasource to link to. First add an X-ray data source and then link it to Cloud Watch. ",severity:"info"}),(0,a.jsx)("div",{className:"gf-form-group",children:(0,a.jsx)(da.I,{htmlFor:"data-source-picker",label:"Data source",labelWidth:28,tooltip:"X-ray data source containing traces",children:(0,a.jsx)(Is.s,{pluginId:Nr,onChange:i=>r(i.uid),current:e,noDefault:!0})})})]})}const ga='Since grafana 7.3 authentication type "arn" is deprecated, falling back to default SDK provider',ha=`As of grafana 7.3 authentication type "credentials" should be used only for shared file credentials. If you don't have a credentials file, switch to the default SDK provider for extracting credentials from environment variables or IAM roles`,Ea=t=>{const{options:e,onOptionsChange:r}=t,{defaultLogGroups:s,logsTimeout:n,defaultRegion:i,logGroups:o}=e.jsonData,l=fa(t),d=Aa(n),g=Ta(t),[c,h]=(0,A.useState)({invalid:!1});(0,A.useEffect)(()=>h({invalid:!1}),[t.options]);const m=(0,sn.G)();(0,A.useEffect)(()=>{const V=(0,y.J7)().subscribe(O.NI,()=>{m("grafana_plugin_cloudwatch_save_succeeded",{auth_type:e.jsonData.authType})}),te=(0,y.J7)().subscribe(O.LL,()=>{m("grafana_plugin_cloudwatch_save_failed",{auth_type:e.jsonData.authType})});return()=>{V.unsubscribe(),te.unsubscribe()}},[e.jsonData.authType,m]);const[R,C]=(0,A.useState)("");(0,A.useEffect)(()=>{!R&&l&&l.resources.getExternalId().then(C).catch(()=>C("Unable to fetch externalId"))},[l,R]);const[M,b]=(0,A.useState)(null),S=()=>{b(null)};(0,A.useEffect)(()=>{e.jsonData.authType==="arn"?b(ga):e.jsonData.authType==="credentials"&&!e.jsonData.profile&&!e.jsonData.database&&b(ha)},[e.jsonData.authType,e.jsonData.database,e.jsonData.profile]);const F=(0,D.of)(Ia);return(0,a.jsxs)("div",{className:F.formStyles,children:[M&&(0,a.jsx)(De.F,{title:"CloudWatch Authentication",severity:"warning",onRemove:S,children:M}),(0,a.jsx)(rn.NN,{...t,loadRegions:l&&(async()=>l.resources.getRegions().then(V=>V.reduce((te,Re)=>Re.value?[...te,Re.value]:te,[]))),externalId:R,children:(0,a.jsx)(ht.D,{label:"Namespaces of Custom Metrics",children:(0,a.jsx)(ye.p,{placeholder:"Namespace1,Namespace2",value:e.jsonData.customMetricsNamespaces||"",onChange:(0,gt.PG)(t,"customMetricsNamespaces")})})}),U.$.secureSocksDSProxyEnabled&&(0,a.jsx)(ua,{options:e,onOptionsChange:r}),(0,a.jsx)(jr.c,{}),(0,a.jsxs)(ur.A,{title:"Cloudwatch Logs",children:[(0,a.jsx)(ht.D,{htmlFor:"logsTimeout",label:"Query Result Timeout",description:'Grafana will poll for Cloudwatch Logs results every second until Done status is returned from AWS or timeout is exceeded, in which case Grafana will return an error. Note: For Alerting, the timeout from Grafana config file will take precedence. Must be a valid duration string, such as "30m" (default) "30s" "2000ms" etc.',invalid:!!d,children:(0,a.jsx)(ye.p,{id:"logsTimeout",width:60,placeholder:"30m",value:e.jsonData.logsTimeout||"",onChange:(0,gt.PG)(t,"logsTimeout"),title:'The timeout must be a valid duration string, such as "15m" "30s" "2000ms" etc.'})}),(0,a.jsx)(ht.D,{label:"Default Log Groups",description:"Optionally, specify default log groups for CloudWatch Logs queries.",...c,children:l?(0,a.jsx)(Ts,{region:i??"",datasource:l,onBeforeOpen:()=>{if(g)return;let V="You need to save the data source before adding log groups.";throw t.options.version&&t.options.version>1&&(V="You have unsaved connection detail changes. You need to save the data source before adding log groups."),h({invalid:!0,error:V}),new Error(V)},legacyLogGroupNames:s,logGroups:o,onChange:V=>{r({...t.options,jsonData:{...t.options.jsonData,logGroups:V,defaultLogGroups:void 0}})},maxNoOfVisibleLogGroups:2,legacyOnChange:V=>{(0,gt.lO)(t,"defaultLogGroups",V)}}):(0,a.jsx)(a.Fragment,{})})]}),(0,a.jsx)(jr.c,{}),(0,a.jsx)(pa,{newFormStyling:!0,onChange:V=>(0,gt.lO)(t,"tracingDatasourceUid",V),datasourceUid:e.jsonData.tracingDatasourceUid})]})};function fa(t){const[e,r]=(0,A.useState)();return(0,A.useEffect)(()=>{t.options.version&&(0,dr.l)().get(t.options.name).then(s=>{s instanceof gs&&r(s)})},[t.options.version,t.options.name]),e}function Aa(t){const[e,r]=(0,A.useState)(void 0);return(0,tn.A)(()=>{if(t)try{cr.describeInterval(t),r(void 0)}catch(s){s instanceof Error&&r(s.toString())}else r(void 0)},350,[t]),e}function Ta(t){const[e,r]=(0,A.useState)(!!t.options.version&&t.options.version>1);return(0,A.useEffect)(()=>{r(!1)},[t.options.jsonData.assumeRoleArn,t.options.jsonData.authType,t.options.jsonData.defaultRegion,t.options.jsonData.endpoint,t.options.jsonData.externalId,t.options.jsonData.profile,t.options.secureJsonData?.accessKey,t.options.secureJsonData?.secretKey]),(0,A.useEffect)(()=>{t.options.version&&t.options.version>1&&r(!0)},[t.options.version]),e}const Ia=t=>({formStyles:(0,N.css)({maxWidth:t.spacing(50)})});function ya({data:t=[]}){const e=(0,A.useMemo)(()=>(0,ie.groupBy)(t,"refId"),[t]);return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("table",{className:"filter-table form-inline",children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"RefId"}),(0,a.jsx)("th",{children:"Metric Data Query ID"}),(0,a.jsx)("th",{children:"Metric Data Query Expression"}),(0,a.jsx)("th",{children:"Period"}),(0,a.jsx)("th",{})]})}),Object.entries(e).map(([r,s],n)=>{if(!s.length)return null;const i=s[0],o=i.meta?.custom;return o?(0,a.jsx)("tbody",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:r}),(0,a.jsx)("td",{children:o.id}),(0,a.jsx)("td",{children:i.meta?.executedQueryString}),(0,a.jsx)("td",{children:o.period})]})},n):null})]})})}var Sa=E(94701),Ra=E(84596);function Ca({panelData:t,query:e,datasource:r}){const[s,n]=(0,A.useState)(""),i=(0,Ra.A)(t);return(0,A.useEffect)(()=>{if(i!==t&&t?.request?.range){const o=(e.logGroups??[]).filter(R=>R?.arn).map(R=>(R.arn??"").replace(/:\*$/,"")),l=e.logGroupNames;let d=o?.length?o:l;const g=t?.request?.range,c=g.from.toISOString(),m={end:g.to.toISOString(),start:c,timeType:"ABSOLUTE",tz:"UTC",editorString:e.expression??"",isLiveTail:!1,source:d??[]};n(cs(m,r.resources.getActualRegion(e.region)))}},[t,i,r,e]),(0,a.jsx)(ke.z9,{variant:"secondary",icon:"share-alt",href:s,target:"_blank",rel:"noopener noreferrer",children:"CloudWatch Logs Insights"})}var ot=E(50992);const vr=async(t,e,r,s)=>{const{id:n,loader:i}=e;return s?.dispose(),i().then(o=>t.languages.registerCompletionItemProvider(n,r.getCompletionProvider(t,e)))},lt=async(t,e,r)=>{const{id:s,loader:n}=e;if(!t.languages.getLanguages().find(o=>o.id===s))return t.languages.register({id:s}),n().then(o=>(t.languages.setMonarchTokensProvider(s,o.language),t.languages.setLanguageConfiguration(s,o.conf),t.languages.registerCompletionItemProvider(s,r.getCompletionProvider(t,e))))},La=/\s+by\s+/im,xr=/([\w$@().]+)(?:(\s+as\s+)([\w$]+))?\s*,?\s*/iy;function br(t){let e=[],r;if(r=t.match(La)){xr.lastIndex=r.index+r[0].length;let s;for(;s=xr.exec(t);)e.push(s[2]?s[3]:s[1]),xr.lastIndex=s.index+s[0].length}return e}const Dr={id:L.CLOUDWATCH_PPL_LANGUAGE_DEFINITION_ID,extensions:[],aliases:[],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,97969))},Mr={height:"150px",width:"100%",showMiniMap:!1,monacoOptions:{scrollBeyondLastLine:!1,fontSize:14,lineNumbers:"off",renderLineHighlight:"none",scrollbar:{vertical:"hidden",horizontal:"hidden"},suggestFontSize:12,wordWrap:"on",padding:{top:6}}},Oa=t=>{const{query:e,datasource:r,onChange:s}=t,n=(0,A.useRef)(),i=(0,A.useRef)(),o=(0,A.useCallback)(async()=>{i.current=await vr(n.current,Dr,r.pplCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}),i.current)},[r,e.logGroups,e.region]),l=(0,A.useCallback)(c=>{const h={...e,expression:c,statsGroups:br(c)};s(h)},[s,e]),d=(0,A.useCallback)((c,h)=>{c.onDidFocusEditorText(()=>c.trigger(v.id,v.id,{})),c.onDidChangeModelContent(()=>{c.getModel()?.getValue().trim()===""&&c.trigger(v.id,v.id,{})}),c.addCommand(h.KeyMod.Shift|h.KeyCode.Enter,()=>{const m=c.getValue();l(m)})},[l]),g=async c=>{n.current=c,i.current=await lt(c,Dr,r.pplCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}))};return(0,a.jsx)(ot.B,{...Mr,language:Dr.id,value:e.expression??"",onBlur:c=>{c!==e.expression&&l(c),i.current?.dispose()},onFocus:o,onBeforeEditorMount:g,onEditorDidMount:d,onEditorWillUnmount:()=>i.current?.dispose()})},Na=t=>{const{query:e,datasource:r,onChange:s}=t,n=(0,A.useRef)(),i=(0,A.useRef)(),o=(0,A.useCallback)(async()=>{i.current=await vr(n.current,Rr,r.logsCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}),i.current)},[r,e.logGroups,e.region]),l=(0,A.useCallback)(c=>{const h={...e,expression:c,statsGroups:br(c)};s(h)},[s,e]),d=(0,A.useCallback)((c,h)=>{c.onDidFocusEditorText(()=>c.trigger(v.id,v.id,{})),c.onDidChangeModelContent(()=>{c.getModel()?.getValue().trim()===""&&c.trigger(v.id,v.id,{})}),c.addCommand(h.KeyMod.Shift|h.KeyCode.Enter,()=>{const m=c.getValue();l(m)})},[l]),g=async c=>{n.current=c,i.current=await lt(c,Rr,r.logsCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}))};return(0,a.jsx)(ot.B,{...Mr,language:Rr.id,value:e.expression??"",onBlur:c=>{c!==e.expression&&l(c),i.current?.dispose()},onFocus:o,onBeforeEditorMount:g,onEditorDidMount:d,onEditorWillUnmount:()=>i.current?.dispose()})},va=t=>{const{query:e,datasource:r,onChange:s}=t,n=(0,A.useRef)(),i=(0,A.useRef)(),o=(0,A.useCallback)(async()=>{i.current=await vr(n.current,Ir,r.logsSqlCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}),i.current)},[r,e.logGroups,e.region]),l=(0,A.useCallback)(c=>{const h={...e,expression:c,statsGroups:br(c)};s(h)},[s,e]),d=(0,A.useCallback)((c,h)=>{c.onDidFocusEditorText(()=>c.trigger(v.id,v.id,{})),c.onDidChangeModelContent(()=>{c.getModel()?.getValue().trim()===""&&c.trigger(v.id,v.id,{})}),c.addCommand(h.KeyMod.Shift|h.KeyCode.Enter,()=>{const m=c.getValue();l(m)})},[l]),g=async c=>{n.current=c,i.current=await lt(c,Ir,r.logsSqlCompletionItemProviderFunc({region:e.region,logGroups:e.logGroups}))};return(0,a.jsx)(ot.B,{...Mr,language:Ir.id,value:e.expression??"",onBlur:c=>{c!==e.expression&&l(c),i.current?.dispose()},onFocus:o,onBeforeEditorMount:g,onEditorDidMount:d,onEditorWillUnmount:()=>i.current?.dispose()})},xa=t=>{const{query:e,datasource:r,onChange:s,ExtraFieldElement:n}=t,i=(0,D.of)(ba),o=(0,A.useCallback)(async l=>{s(l)},[s]);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Ts,{region:e.region,datasource:r,legacyLogGroupNames:e.logGroupNames,logGroups:e.logGroups,onChange:l=>{o({...e,logGroups:l,logGroupNames:void 0})},legacyOnChange:l=>{o({...e,logGroupNames:l})}}),(0,a.jsxs)("div",{children:[Da(e,r,s),(0,a.jsx)("div",{className:i.editor,children:n})]})]})},ba=t=>({editor:(0,N.css)({marginTop:t.spacing(1)})}),Da=(t,e,r)=>{switch(t.queryLanguage){case T._M.PPL:return(0,a.jsx)(Oa,{query:t,datasource:e,onChange:r});case T._M.SQL:return(0,a.jsx)(va,{query:t,datasource:e,onChange:r});default:return(0,a.jsx)(Na,{query:t,datasource:e,onChange:r})}},Ma=[{label:"Logs Insights QL",value:T._M.CWLI},{label:"OpenSearch SQL",value:T._M.SQL},{label:"OpenSearch PPL",value:T._M.PPL}],Fa=(0,A.memo)(function(e){const{query:r,data:s,datasource:n,onChange:i,extraHeaderElementLeft:o}=e,[l,d]=(0,A.useState)(!0),g=(0,A.useCallback)(h=>{i(l?{...r,expression:ys(h),queryLanguage:h??T._M.CWLI}:{...r,queryLanguage:h??T._M.CWLI})},[l,i,r]);(0,Sa.A)(()=>{r.expression&&d(!1)}),(0,A.useEffect)(()=>{l&&!r.expression&&i({...r,expression:ys(r.queryLanguage)})},[i,r,l]),(0,A.useEffect)(()=>(o?.((0,a.jsx)(ft.W,{label:"Query language",value:r.queryLanguage||T._M.CWLI,options:Ma,onChange:({value:h})=>{g(h)}})),()=>{o?.(void 0)}),[o,i,g,r]);const c=h=>{i(h),d(!1)};return(0,a.jsx)(xa,{...e,onChange:c,ExtraFieldElement:(0,a.jsx)(Ca,{query:r,panelData:s,datasource:n})})}),ys=t=>{switch(t){case T._M.SQL:return In;case T._M.PPL:return Tn;case T._M.CWLI:default:return An}};var wa=E(77824);const Pa=(t,e)=>{const r=(0,A.useMemo)(()=>se(t),[t]);return(0,A.useEffect)(()=>{r!==t&&e(r)},[r,t,e]),r};var _a=E(87667);class Wa{constructor(){this.tokenTypes={Parenthesis:"delimiter.parenthesis.cloudwatch-dynamicLabels",Whitespace:"white.cloudwatch-dynamicLabels",Keyword:"keyword.cloudwatch-dynamicLabels",Delimiter:"delimiter.cloudwatch-dynamicLabels",Operator:"operator.cloudwatch-dynamicLabels",Identifier:"identifier.cloudwatch-dynamicLabels",Type:"type.cloudwatch-dynamicLabels",Function:"predefined.cloudwatch-dynamicLabels",Number:"number.cloudwatch-dynamicLabels",String:"string.cloudwatch-dynamicLabels",Variable:"variable.cloudwatch-dynamicLabels",Comment:"comment.cloudwatch-dynamicLabels",Regexp:"regexp.cloudwatch-dynamicLabels"}}getCompletionProvider(e,r){return{triggerCharacters:[" ","$",",","(","'"],provideCompletionItems:async(s,n)=>{const i=rs(e,r,s,n,this.tokenTypes),l=i?.isWhiteSpace()||i?.isParenthesis()||!i?.range?e.Range.fromPositions(n):i?.range,d=(h,m={})=>({label:h,insertText:h,kind:e.languages.CompletionItemKind.Field,range:l,sortText:k.Medium,...m});let g=[];const c=i?.next;return!i?.isFunction()&&(!c||c.isWhiteSpace())&&(g=_a.DYNAMIC_LABEL_PATTERNS.map(h=>d(h)),g.push(d("${PROP('Dim.')}",{sortText:k.High,insertText:"${PROP('Dim.$0')} ",insertTextRules:e.languages.CompletionItemInsertTextRule.InsertAsSnippet}))),{suggestions:g}}}}}const Ss={id:"cloudwatch-dynamicLabels",extensions:[],aliases:[],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,87667))},Ua=new Wa;function Ga({label:t,width:e,onChange:r}){const s=(0,D.$j)(),n=(0,ye.n)({theme:s,width:e}),i=(0,A.useRef)(null),o=(0,A.useCallback)((l,d)=>{l.onDidFocusEditorText(()=>l.trigger(v.id,v.id,{})),l.addCommand(d.KeyMod.Shift|d.KeyCode.Enter,()=>{const c=l.getValue();r(c)});const g=i.current;g!==null&&l.layout({width:g.clientWidth,height:g.clientHeight})},[r]);return(0,a.jsx)("div",{ref:i,className:(0,N.cx)(n.wrapper),children:(0,a.jsx)(ot.B,{containerStyles:(0,N.css)({border:`1px solid ${s.colors.action.disabledBackground}`,"&:hover":{borderColor:s.components.input.borderColor}}),monacoOptions:{scrollBeyondLastLine:!1,fontSize:14,lineNumbers:"off",renderLineHighlight:"none",overviewRulerLanes:0,scrollbar:{vertical:"hidden",horizontal:"hidden"},suggestFontSize:12,padding:{top:6}},language:Ss.id,value:t,onBlur:l=>{l!==t&&r(l)},onBeforeEditorMount:l=>lt(l,Ss,Ua),onEditorDidMount:o})})}const Rs={id:"cloudwatch-MetricMath",extensions:[],aliases:[],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,49921))};function Ka({expression:t,onChange:e,datasource:r}){const s=(0,A.useRef)(null),n=(0,A.useCallback)((i,o)=>{i.onDidFocusEditorText(()=>i.trigger(v.id,v.id,{})),i.addCommand(o.KeyMod.Shift|o.KeyCode.Enter,()=>{const d=i.getValue();e(d)});const l=()=>{const d=s.current;if(d!==null){const g=Math.min(200,i.getContentHeight()),c=Math.max(32,g);d.style.height=`${c}px`,d.style.width="100%";const h=d.clientWidth;i.layout({width:h,height:c})}};i.onDidContentSizeChange(l),l()},[e]);return(0,a.jsx)("div",{ref:s,children:(0,a.jsx)(ot.B,{monacoOptions:{scrollBeyondLastLine:!1,fontSize:14,lineNumbers:"off",renderLineHighlight:"none",scrollbar:{vertical:"hidden",horizontal:"hidden"},suggestFontSize:12,wordWrap:"on",padding:{top:6}},language:Rs.id,value:t,onBlur:i=>{i!==t&&e(i)},onBeforeEditorMount:i=>lt(i,Rs,r.metricMathCompletionItemProvider),onEditorDidMount:n})})}var _=E(38242);const Ba=["ABORT","ABORTSESSION","ABS","ABSOLUTE","ACCESS","ACCESSIBLE","ACCESS_LOCK","ACCOUNT","ACOS","ACOSH","ACTION","ADD","ADD_MONTHS","ADMIN","AFTER","AGGREGATE","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","ALTERAND","AMP","ANALYSE","ANALYZE","AND","ANSIDATE","ANY","ARE","ARRAY","ARRAY_AGG","ARRAY_EXISTS","ARRAY_MAX_CARDINALITY","AS","ASC","ASENSITIVE","ASIN","ASINH","ASSERTION","ASSOCIATE","ASUTIME","ASYMMETRIC","AT","ATAN","ATAN2","ATANH","ATOMIC","AUDIT","AUTHORIZATION","AUX","AUXILIARY","AVE","AVERAGE","AVG","BACKUP","BEFORE","BEGIN","BEGIN_FRAME","BEGIN_PARTITION","BETWEEN","BIGINT","BINARY","BIT","BLOB","BOOLEAN","BOTH","BREADTH","BREAK","BROWSE","BT","BUFFERPOOL","BULK","BUT","BY","BYTE","BYTEINT","BYTES","CALL","CALLED","CAPTURE","CARDINALITY","CASCADE","CASCADED","CASE","CASESPECIFIC","CASE_N","CAST","CATALOG","CCSID","CD","CEIL","CEILING","CHANGE","CHAR","CHAR2HEXINT","CHARACTER","CHARACTERS","CHARACTER_LENGTH","CHARS","CHAR_LENGTH","CHECK","CHECKPOINT","CLASS","CLASSIFIER","CLOB","CLONE","CLOSE","CLUSTER","CLUSTERED","CM","COALESCE","COLLATE","COLLATION","COLLECT","COLLECTION","COLLID","COLUMN","COLUMN_VALUE","COMMENT","COMMIT","COMPLETION","COMPRESS","COMPUTE","CONCAT","CONCURRENTLY","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONSTRUCTOR","CONTAINS","CONTAINSTABLE","CONTENT","CONTINUE","CONVERT","CONVERT_TABLE_HEADER","COPY","CORR","CORRESPONDING","COS","COSH","COUNT","COVAR_POP","COVAR_SAMP","CREATE","CROSS","CS","CSUM","CT","CUBE","CUME_DIST","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_ROLE","CURRENT_ROW","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURRVAL","CURSOR","CV","CYCLE","DATA","DATABASE","DATABASES","DATABLOCKSIZE","DATE","DATEFORM","DAY","DAYS","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DBCC","DBINFO","DEALLOCATE","DEC","DECFLOAT","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DEFINE","DEGREES","DEL","DELAYED","DELETE","DENSE_RANK","DENY","DEPTH","DEREF","DESC","DESCRIBE","DESCRIPTOR","DESTROY","DESTRUCTOR","DETERMINISTIC","DIAGNOSTIC","DIAGNOSTICS","DICTIONARY","DISABLE","DISABLED","DISALLOW","DISCONNECT","DISK","DISTINCT","DISTINCTROW","DISTRIBUTED","DIV","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","DSSIZE","DUAL","DUMP","DYNAMIC","EACH","ECHO","EDITPROC","ELEMENT","ELSE","ELSEIF","EMPTY","ENABLED","ENCLOSED","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","END_FRAME","END_PARTITION","EQ","EQUALS","ERASE","ERRLVL","ERROR","ERRORFILES","ERRORTABLES","ESCAPE","ESCAPED","ET","EVERY","EXCEPT","EXCEPTION","EXCLUSIVE","EXEC","EXECUTE","EXISTS","EXIT","EXP","EXPLAIN","EXTERNAL","EXTRACT","FALLBACK","FALSE","FASTEXPORT","FENCED","FETCH","FIELDPROC","FILE","FILLFACTOR","FILTER","FINAL","FIRST","FIRST_VALUE","FLOAT","FLOAT4","FLOAT8","FLOOR","FOR","FORCE","FOREIGN","FORMAT","FOUND","FRAME_ROW","FREE","FREESPACE","FREETEXT","FREETEXTTABLE","FREEZE","FROM","FULL","FULLTEXT","FUNCTION","FUSION","GE","GENERAL","GENERATED","GET","GIVE","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","GROUPING","GROUPS","GT","HANDLER","HASH","HASHAMP","HASHBAKAMP","HASHBUCKET","HASHROW","HAVING","HELP","HIGH_PRIORITY","HOLD","HOLDLOCK","HOUR","HOURS","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IGNORE","ILIKE","IMMEDIATE","IN","INCLUSIVE","INCONSISTENT","INCREMENT","INDEX","INDICATOR","INFILE","INHERIT","INITIAL","INITIALIZE","INITIALLY","INITIATE","INNER","INOUT","INPUT","INS","INSENSITIVE","INSERT","INSTEAD","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTEGERDATE","INTERSECT","INTERSECTION","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JOIN","JOURNAL","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_TABLE_PRIMITIVE","JSON_VALUE","KEEP","KEY","KEYS","KILL","KURTOSIS","LABEL","LAG","LANGUAGE","LARGE","LAST","LAST_VALUE","LATERAL","LC_CTYPE","LE","LEAD","LEADING","LEAVE","LEFT","LESS","LEVEL","LIKE","LIKE_REGEX","LIMIT","LINEAR","LINENO","LINES","LISTAGG","LN","LOAD","LOADING","LOCAL","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKING","LOCKMAX","LOCKSIZE","LOG","LOG10","LOGGING","LOGON","LONG","LONGBLOB","LONGTEXT","LOOP","LOWER","LOW_PRIORITY","LT","MACRO","MAINTAINED","MAP","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MATCHES","MATCH_NUMBER","MATCH_RECOGNIZE","MATERIALIZED","MAVG","MAX","MAXEXTENTS","MAXIMUM","MAXVALUE","MCHARACTERS","MDIFF","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMBER","MERGE","METHOD","MICROSECOND","MICROSECONDS","MIDDLEINT","MIN","MINDEX","MINIMUM","MINUS","MINUTE","MINUTES","MINUTE_MICROSECOND","MINUTE_SECOND","MLINREG","MLOAD","MLSLABEL","MOD","MODE","MODIFIES","MODIFY","MODULE","MONITOR","MONRESOURCE","MONSESSION","MONTH","MONTHS","MSUBSTR","MSUM","MULTISET","NAMED","NAMES","NATIONAL","NATURAL","NCHAR","NCLOB","NE","NESTED_TABLE_ID","NEW","NEW_TABLE","NEXT","NEXTVAL","NO","NOAUDIT","NOCHECK","NOCOMPRESS","NONCLUSTERED","NONE","NORMALIZE","NOT","NOTNULL","NOWAIT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","NULLIF","NULLIFZERO","NULLS","NUMBER","NUMERIC","NUMPARTS","OBID","OBJECT","OBJECTS","OCCURRENCES_REGEX","OCTET_LENGTH","OF","OFF","OFFLINE","OFFSET","OFFSETS","OLD","OLD_TABLE","OMIT","ON","ONE","ONLINE","ONLY","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPERATION","OPTIMIZATION","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","ORDINALITY","ORGANIZATION","OUT","OUTER","OUTFILE","OUTPUT","OVER","OVERLAPS","OVERLAY","OVERRIDE","PACKAGE","PAD","PADDED","PARAMETER","PARAMETERS","PART","PARTIAL","PARTITION","PARTITIONED","PARTITIONING","PASSWORD","PATH","PATTERN","PCTFREE","PER","PERCENT","PERCENTILE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","PERIOD","PERM","PERMANENT","PIECESIZE","PIVOT","PLACING","PLAN","PORTION","POSITION","POSITION_REGEX","POSTFIX","POWER","PRECEDES","PRECISION","PREFIX","PREORDER","PREPARE","PRESERVE","PREVVAL","PRIMARY","PRINT","PRIOR","PRIQTY","PRIVATE","PRIVILEGES","PROC","PROCEDURE","PROFILE","PROGRAM","PROPORTIONAL","PROTECTION","PSID","PTF","PUBLIC","PURGE","QUALIFIED","QUALIFY","QUANTILE","QUERY","QUERYNO","RADIANS","RAISERROR","RANDOM","RANGE","RANGE_N","RANK","RAW","READ","READS","READTEXT","READ_WRITE","REAL","RECONFIGURE","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REGEXP","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","RELATIVE","RELEASE","RENAME","REPEAT","REPLACE","REPLICATION","REPOVERRIDE","REQUEST","REQUIRE","RESIGNAL","RESOURCE","RESTART","RESTORE","RESTRICT","RESULT","RESULT_SET_LOCATOR","RESUME","RET","RETRIEVE","RETURN","RETURNING","RETURNS","REVALIDATE","REVERT","REVOKE","RIGHT","RIGHTS","RLIKE","ROLE","ROLLBACK","ROLLFORWARD","ROLLUP","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWCOUNT","ROWGUIDCOL","ROWID","ROWNUM","ROWS","ROWSET","ROW_NUMBER","RULE","RUN","RUNNING","SAMPLE","SAMPLEID","SAVE","SAVEPOINT","SCHEMA","SCHEMAS","SCOPE","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECOND_MICROSECOND","SECQTY","SECTION","SECURITY","SECURITYAUDIT","SEEK","SEL","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SENSITIVE","SEPARATOR","SEQUENCE","SESSION","SESSION_USER","SET","SETRESRATE","SETS","SETSESSRATE","SETUSER","SHARE","SHOW","SHUTDOWN","SIGNAL","SIMILAR","SIMPLE","SIN","SINH","SIZE","SKEW","SKIP","SMALLINT","SOME","SOUNDEX","SOURCE","SPACE","SPATIAL","SPECIFIC","SPECIFICTYPE","SPOOL","SQL","SQLEXCEPTION","SQLSTATE","SQLTEXT","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SQRT","SS","SSL","STANDARD","START","STARTING","STARTUP","STAT","STATE","STATEMENT","STATIC","STATISTICS","STAY","STDDEV_POP","STDDEV_SAMP","STEPINFO","STOGROUP","STORED","STORES","STRAIGHT_JOIN","STRING_CS","STRUCTURE","STYLE","SUBMULTISET","SUBSCRIBER","SUBSET","SUBSTR","SUBSTRING","SUBSTRING_REGEX","SUCCEEDS","SUCCESSFUL","SUM","SUMMARY","SUSPEND","SYMMETRIC","SYNONYM","SYSDATE","SYSTEM","SYSTEM_TIME","SYSTEM_USER","SYSTIMESTAMP","TABLE","TABLESAMPLE","TABLESPACE","TAN","TANH","TBL_CS","TEMPORARY","TERMINATE","TERMINATED","TEXTSIZE","THAN","THEN","THRESHOLD","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TINYBLOB","TINYINT","TINYTEXT","TITLE","TO","TOP","TRACE","TRAILING","TRAN","TRANSACTION","TRANSLATE","TRANSLATE_CHK","TRANSLATE_REGEX","TRANSLATION","TREAT","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CONVERT","TSEQUAL","TYPE","UC","UESCAPE","UID","UNDEFINED","UNDER","UNDO","UNION","UNIQUE","UNKNOWN","UNLOCK","UNNEST","UNPIVOT","UNSIGNED","UNTIL","UPD","UPDATE","UPDATETEXT","UPPER","UPPERCASE","USAGE","USE","USER","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALIDATE","VALIDPROC","VALUE","VALUES","VALUE_OF","VARBINARY","VARBYTE","VARCHAR","VARCHAR2","VARCHARACTER","VARGRAPHIC","VARIABLE","VARIADIC","VARIANT","VARYING","VAR_POP","VAR_SAMP","VCAT","VERBOSE","VERSIONING","VIEW","VIRTUAL","VOLATILE","VOLUMES","WAIT","WAITFOR","WHEN","WHENEVER","WHERE","WHILE","WIDTH_BUCKET","WINDOW","WITH","WITHIN","WITHIN_GROUP","WITHOUT","WLM","WORK","WRITE","WRITETEXT","XMLCAST","XMLEXISTS","XMLNAMESPACES","XOR","YEAR","YEARS","YEAR_MONTH","ZEROFILL","ZEROIFNULL","ZONE"],Cs=t=>!!(t&&t!=="all");class Ls{constructor(e=(0,Se.w)()){this.templateSrv=e}expressionToSqlQuery({select:e,from:r,where:s,groupBy:n,orderBy:i,orderByDirection:o,limit:l},d){if(!r||!e?.name||!e?.parameters?.length)return;let g=[];return this.appendSelect(e,g),this.appendFrom(r,g),this.appendAccountId(g,d),this.appendWhere(s,g,!0,s?.expressions?.length??0,d),this.appendGroupBy(n,g),this.appendOrderBy(i,o,g),this.appendLimit(l,g),g.join(" ")}appendSelect(e,r){r.push("SELECT"),this.appendFunction(e,r)}appendFrom(e,r){r.push("FROM"),e?.type===_._W.Function?this.appendFunction(e,r):r.push(this.formatValue(e?.property?.name??""))}appendAccountId(e,r){Cs(r)&&e.push(`WHERE AWS.AccountId = '${r}'`)}appendWhere(e,r,s,n,i){if(!e)return;const o="expressions"in e&&e.expressions.length>0;if(s&&o&&(Cs(i)?r.push("AND"):r.push("WHERE")),e.type===_._W.And){const l=[];if(e.expressions.map(c=>this.appendWhere(c,l,!1,n)),l.length===0)return;const d=l.join(" AND "),g=!s&&n>1&&l.length>1;return r.push(g?`(${d})`:d)}if(e.type===_._W.Or){const l=[];if(e.expressions.map(c=>this.appendWhere(c,l,!1,n)),l.length===0)return;const d=l.join(" OR "),g=!s&&n>1&&l.length>1;r.push(g?`(${d})`:d);return}if(e.type===_._W.Operator)return this.appendOperator(e,r)}appendGroupBy(e,r){const s=[];for(const n of e?.expressions??[])n?.type!==_._W.GroupBy||!n.property.name||s.push(this.formatValue(n.property.name));s.length>0&&r.push(`GROUP BY ${s.join(", ")}`)}appendOrderBy(e,r,s){e&&(s.push("ORDER BY"),this.appendFunction(e,s),s.push(r??"ASC"))}appendLimit(e,r){e&&r.push(`LIMIT ${e}`)}appendOperator(e,r,s){const{property:n,operator:i}=e;!n.name||!i.name||!i.value||r.push(`${this.formatValue(n.name)} ${i.name} '${i.value}'`)}appendFunction(e,r){if(!e?.name)return;const s=(e.parameters??[]).map(n=>n.name&&this.formatValue(n.name)).filter(Boolean).join(", ");r.push(`${e.name}(${s})`)}formatValue(e){const r=/[/\s\.%-]/,s=/^\d/,n=this.templateSrv.replace(e,{},"raw");return n!=="AWS.AccountId"&&(r.test(n)||s.test(n)||Ba.some(i=>(0,ie.toLower)(i)===(0,ie.toLower)(n)))?`"${e}"`:e}}function Fr(t){return t?.parameters?.[0].name}function Ht(t){if(t?.type===_._W.Property)return t.property.name;if(t?.type===_._W.Function)return t.parameters?.[0].name}function Ha(t){if(t?.type===_._W.Function&&t?.parameters?.length)return t?.parameters?.length<=1?[]:(t?.parameters.slice(1)).reduce((r,s)=>s.name?[...r,s.name]:r,[])}function Va(t){return t?.type===_._W.Function&&t.name===x.SCHEMA}function ja(t){const e=t.property?.name,r=t.operator?.value,s=t.operator?.name;if(e&&r&&s)return{type:_._W.Operator,property:{type:_.Dw.String,name:e},operator:{value:r,name:s}}}function Os(t){return t.flatMap(e=>e.type===_._W.Operator?e:e.type===_._W.And||e.type===_._W.Or?Os(e.expressions):[])}function $a(t){const e=t.where;return Os(e?.expressions??[])}function ka(t){return t.flatMap(e=>e.type===_._W.GroupBy?e:[])}function Qa(t){const e=t.groupBy;return ka(e?.expressions??[])}function Ya(t){return t.reduce((e,r)=>r?{...e,[r]:null}:e,{})}function Ae(t,e){return{...t,sql:{...t.sql??{},...e}}}function za(t,e){const r=t.sql??{};if(t.namespace=e||"",e===void 0)return Ae(t,{from:void 0});if(!r.from||r.from.type===_._W.Property)return Ae(t,{from:{type:_._W.Property,property:{type:_.Dw.String,name:e}}});if(r.from.type===_._W.Function){const s={type:_._W.FunctionParameter,name:e},n=(r.from.parameters??[]).slice(1);return Ae(t,{from:{type:_._W.Function,name:x.SCHEMA,parameters:[s,...n]}})}return t}function Xa(t,e){const r=t.sql??{};if(e=Array.isArray(e)?e.map(s=>s.value):[e.value],r.from?.type===_._W.Function&&r.from.parameters?.length){const s=(e??[]).map(i=>({type:_._W.FunctionParameter,name:i})),n=(r.from.parameters??[])[0];return Ae(t,{from:{type:_._W.Function,name:x.SCHEMA,parameters:[n,...s]}})}return t}function qa(t,e){const r={type:_._W.FunctionParameter,name:e};return Ae({...t,metricName:e},{select:{type:_._W.Function,...t.sql?.select??{},parameters:[r]}})}function Za(t){const e={...t};return delete e.sql?.select?.parameters,e}function Ns(t,e){return Ae(t,{select:{type:_._W.Function,...t.sql?.select??{},name:e}})}function Ja(t,e){return Ae(t,{orderBy:{type:_._W.Function,name:e}})}function eo(t,e){const r=Ht((t.sql??{}).from);if(e){const s={type:_._W.FunctionParameter,name:r};return Ae(t,{from:{type:_._W.Function,name:x.SCHEMA,parameters:[s]}})}return Ae(t,{from:{type:_._W.Property,property:{type:_.Dw.String,name:r}}})}function to(t,e){return{type:_._W.Operator,property:{type:_.Dw.String,name:e},operator:t.operator??{}}}function ro(t,e){return{type:_._W.Operator,property:t.property??{type:_.Dw.String},operator:{...t.operator,name:e}}}function so(t,e){return{type:_._W.Operator,property:t.property??{type:_.Dw.String},operator:{...t.operator,value:e}}}function no(t){return{type:_._W.GroupBy,property:{type:_.Dw.String,name:t}}}const io=x.STATISTICS.map(le.z),ao=({datasource:t,query:e,onQueryChange:r})=>{const s=e.sql??{},n=s.select?.name;(0,A.useEffect)(()=>{n||r(Ns(e,x.STATISTICS[0]))},[n,r,e]);const i=Fr(s.select),o=Ht(s.from),l=Ha(s.from),d=Va(s.from),g=hr(t),c=Er(t,{region:e.region,namespace:o,...U.$.featureToggles.cloudWatchCrossAccountQuerying&&{accountId:e.accountId}}),h=(0,A.useMemo)(()=>Ya(l??[]),[l]),m=At(t,{region:e.region,namespace:o,metricName:i,dimensionFilters:h,...U.$.featureToggles.cloudWatchCrossAccountQuerying&&{accountId:e.accountId}}),R=(0,A.useMemo)(()=>l?.length?[...m,...l.map(le.z)]:m,[m,l]),C=async S=>{const F=await M(S);r(F)},M=async S=>{let{region:F,sql:V,namespace:te}=S;return await t.resources.getMetrics({namespace:te,region:F}).then(Re=>{Re.some(Le=>Le.value===i)||(V=Za(S).sql)}),{...S,sql:V}},b=Mt(t.resources,e.region);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(Ft.B,{children:[U.$.featureToggles.cloudWatchCrossAccountQuerying&&(0,a.jsx)(fr,{accountId:e.accountId,accountOptions:b.value||[],onChange:S=>{r({...e,accountId:S})}}),(0,a.jsx)(X.c,{label:"Namespace",width:16,children:(0,a.jsx)(ce.l6,{"aria-label":"Namespace",value:o?(0,le.z)(o):null,inputId:`${e.refId}-cloudwatch-sql-namespace`,options:g,allowCustomValue:!0,onChange:({value:S})=>S&&C(za(e,S))})}),(0,a.jsx)(X.c,{label:"With schema",children:(0,a.jsx)(mr.C,{id:`${e.refId}-cloudwatch-sql-withSchema`,value:d,onChange:S=>S.target instanceof HTMLInputElement&&r(eo(e,S.target.checked))})}),d&&(0,a.jsx)(X.c,{label:"Schema labels",disabled:!o,children:(0,a.jsx)(ce.l6,{id:`${e.refId}-cloudwatch-sql-schema-label-keys`,width:"auto",isMulti:!0,value:l?l.map(le.z):null,options:R,allowCustomValue:!0,onChange:S=>S&&r(Xa(e,S))})})]}),(0,a.jsxs)(Ft.B,{children:[(0,a.jsx)(X.c,{label:"Metric name",width:16,children:(0,a.jsx)(ce.l6,{"aria-label":"Metric name",value:i?(0,le.z)(i):null,options:c,allowCustomValue:!0,onChange:({value:S})=>S&&r(qa(e,S))})}),(0,a.jsx)(X.c,{label:"Aggregation",width:16,children:(0,a.jsx)(ce.l6,{"aria-label":"Aggregation",value:n?(0,le.z)(n):null,options:me(t,io),onChange:({value:S})=>S&&r(Ns(e,S))})})]})]})},oo=x.COMPARISON_OPERATORS.map(le.z),lo=({query:t,onQueryChange:e,datasource:r})=>{const s=(0,A.useMemo)(()=>$a(t.sql??{}),[t.sql]),[n,i]=(0,A.useState)(s),o=l=>{const d=l.map(h=>({type:_._W.Operator,property:h.property??{type:_.Dw.String},operator:h.operator??{name:x.EQUALS}}));i(d);const g=[];for(const h of d){const m=ja(h);m&&g.push(m)}const c=g.length?{type:_._W.And,expressions:g}:void 0;e(Ae(t,{where:c}))};return(0,a.jsx)(Pt.o,{items:n,onChange:o,renderItem:co(r,t)})};function co(t,e){function r(s,n,i){return(0,a.jsx)(mo,{datasource:t,query:e,filter:s,onChange:n,onDelete:i})}return r}const uo=lo,mo=t=>{const{datasource:e,query:r,filter:s,onChange:n,onDelete:i}=t,o=(0,D.of)(po),l=r.sql??{},d=Ht(l.from),g=Fr(l.select),c=At(e,{region:r.region,namespace:d,metricName:g,...U.$.featureToggles.cloudWatchCrossAccountQuerying&&{accountId:r.accountId}}),h=async()=>!s.property?.name||!d?[]:e.resources.getDimensionValues({region:r.region,namespace:d,metricName:g,dimensionKey:s.property.name,...U.$.featureToggles.cloudWatchCrossAccountQuerying&&{accountId:r.accountId}}).then(b=>me(e,b)),[m,R]=(0,pr.A)(h,[r.region,d,g,s.property?.name]),C=Tt(e,s.property?.name),M=Tt(e,typeof s.operator?.value=="string"?s.operator?.value:void 0);return(0,a.jsxs)("div",{className:o.container,children:[(0,a.jsxs)(It.M,{children:[(0,a.jsx)(ce.l6,{width:"auto",value:s.property?.name?(0,le.z)(s.property?.name):null,options:c,allowCustomValue:!0,onChange:({value:b})=>b&&n(to(s,b))}),(0,a.jsx)(ce.l6,{width:"auto",value:s.operator?.name&&(0,le.z)(s.operator.name),options:oo,onChange:({value:b})=>b&&n(ro(s,b))}),(0,a.jsx)(ce.l6,{width:"auto",isLoading:m.loading,value:s.operator?.value&&typeof s.operator?.value=="string"?(0,le.z)(s.operator?.value):null,options:m.value,allowCustomValue:!0,onOpenMenu:R,onChange:({value:b})=>b&&n(so(s,b))}),(0,a.jsx)(yt.Z,{"aria-label":"remove",icon:"times",variant:"secondary",onClick:i})]}),C&&(0,a.jsx)(De.F,{className:o.alert,title:C,severity:"error",topSpacing:1}),M&&(0,a.jsx)(De.F,{className:o.alert,title:M,severity:"error",topSpacing:1})]})},po=()=>({container:(0,N.css)({display:"inline-block"}),alert:(0,N.css)({minWidth:"100%",width:"min-content"})}),go=({query:t,datasource:e,onQueryChange:r})=>{const s=t.sql??{},n=(0,A.useMemo)(()=>Qa(t.sql??{}),[t.sql]),[i,o]=(0,A.useState)(n),l=kr(e.resources,t.region),d=Ht(s.from),g=Fr(s.select),c=At(e,{region:t.region,namespace:d,metricName:g}),h=(0,A.useMemo)(()=>(U.$.featureToggles.cloudWatchCrossAccountQuerying&&l?[{label:"Account ID",value:"AWS.AccountId"},...c]:c).filter(M=>!n.some(b=>b.property.name===M.value)),[c,n,l]),m=R=>{const C=R.map(S=>({type:_._W.GroupBy,property:{type:_.Dw.String,name:S.property?.name}}));o(C);const M=C.filter(S=>S.property?.name),b=M.length?{type:_._W.And,expressions:M}:void 0;r(Ae(t,{groupBy:b}))};return(0,a.jsx)(Pt.o,{items:i,onChange:m,renderItem:ho(h)})};function ho(t){function e(r,s,n){return(0,a.jsx)(Eo,{options:t,item:r,onChange:s,onDelete:n})}return e}const Eo=t=>{const{options:e,item:r,onChange:s,onDelete:n}=t,i=r.property?.name;return(0,a.jsxs)(It.M,{children:[(0,a.jsx)(ce.l6,{"aria-label":`Group by ${i??"filter key"}`,width:"auto",value:i?(0,le.z)(i):null,options:e,allowCustomValue:!0,onChange:({value:o})=>o&&s(no(o))}),(0,a.jsx)(yt.Z,{"aria-label":"remove",icon:"times",variant:"secondary",onClick:n})]})},fo=go,vs=[{label:x.ASC,value:x.ASC},{label:x.DESC,value:x.DESC}],Ao=({query:t,onQueryChange:e,datasource:r})=>{const s=t.sql??{},n=s.orderBy?.name,i=s.orderByDirection;return(0,a.jsxs)(Ft.B,{children:[(0,a.jsx)(X.c,{label:"Order by",optional:!0,width:16,children:(0,a.jsxs)(It.M,{children:[(0,a.jsx)(ce.l6,{"aria-label":"Order by",onChange:({value:o})=>o&&e(Ja(t,o)),options:me(r,x.STATISTICS.map(le.z)),value:n?(0,le.z)(n):null}),n&&(0,a.jsx)(yt.Z,{"aria-label":"remove",icon:"times",variant:"secondary",onClick:()=>e(Ae(t,{orderBy:void 0}))})]})}),(0,a.jsx)(X.c,{label:"Direction",disabled:!n,width:16,children:(0,a.jsx)(ce.l6,{"aria-label":"Direction",inputId:"cloudwatch-sql-order-by-direction",value:i?(0,le.z)(i):vs[0],options:me(r,vs),onChange:o=>o&&e(Ae(t,{orderByDirection:o.value}))})})]})},To=({query:t,datasource:e,onChange:r})=>{const s=t.sql??{},n=(0,A.useCallback)(l=>{const g=new Ls().expressionToSqlQuery(l.sql??{},l.accountId),c={...l,sqlExpression:g};r(c)},[r]),[i,o]=(0,A.useState)();return(0,A.useEffect)(()=>{const d=new Ls().expressionToSqlQuery(t.sql??{},t.accountId);i!==d&&o(d)},[t,i,o]),(0,a.jsxs)(Qr.D,{children:[(0,a.jsx)(Ve.U,{children:(0,a.jsx)(ao,{query:t,onQueryChange:n,datasource:e})}),(0,a.jsx)(Ve.U,{children:(0,a.jsx)(X.c,{label:"Filter",optional:!0,children:(0,a.jsx)(uo,{query:t,onQueryChange:n,datasource:e})})}),(0,a.jsxs)(Ve.U,{children:[(0,a.jsx)(X.c,{label:"Group by",optional:!0,children:(0,a.jsx)(fo,{query:t,onQueryChange:n,datasource:e})}),(0,a.jsx)(Ao,{query:t,onQueryChange:n,datasource:e}),(0,a.jsx)(X.c,{label:"Limit",optional:!0,children:(0,a.jsx)(ye.p,{id:`${t.refId}-cloudwatch-sql-builder-editor-limit`,value:s.limit,onChange:l=>{const d=l.currentTarget.valueAsNumber;n(Ae(t,{limit:isNaN(d)?void 0:d}))},type:"number",min:1})})]}),i&&(0,a.jsxs)(Ve.U,{children:[!1,(0,a.jsx)("pre",{children:i??""})]})]})},xs={id:"cloudwatch-sql",extensions:[".cloudwatchSql"],aliases:["CloudWatch","cloudwatch","CloudWatchSQL"],mimetypes:[],loader:()=>Promise.resolve().then(E.bind(E,58969))},Io=({region:t,sql:e,onChange:r,datasource:s})=>{(0,A.useEffect)(()=>{s.sqlCompletionItemProvider.setRegion(t)},[t,s]);const n=(0,A.useCallback)((i,o)=>{i.onDidFocusEditorText(()=>i.trigger(v.id,v.id,{})),i.addCommand(o.KeyMod.Shift|o.KeyCode.Enter,()=>{const l=i.getValue();r(l)})},[r]);return(0,a.jsx)(ot.B,{height:"150px",language:xs.id,value:e,onBlur:i=>{i!==e&&r(i)},showMiniMap:!1,showLineNumbers:!0,onBeforeEditorMount:i=>lt(i,xs,s.sqlCompletionItemProvider),onEditorDidMount:n})},bs=[{label:"Metric Search",value:T.d$.Search},{label:"Metric Insights",value:T.d$.Insights}],yo=[{label:"Builder",value:T.Rx.Builder},{label:"Code",value:T.Rx.Code}],So=t=>{const{query:e,datasource:r,extraHeaderElementLeft:s,extraHeaderElementRight:n,onChange:i}=t,[o,l]=(0,A.useState)(!1),[d,g]=(0,A.useState)(!1),c=Pa(e,t.onChange),h=(0,A.useCallback)(m=>{if(d&&e.metricQueryType===T.d$.Insights&&e.metricEditorMode===T.Rx.Code){l(!0);return}i({...e,metricEditorMode:m})},[l,i,d,e]);return(0,A.useEffect)(()=>(s?.((0,a.jsx)(ft.W,{"aria-label":"Metric editor mode",value:bs.find(m=>m.value===e.metricQueryType),options:bs,onChange:({value:m})=>{if(d&&e.metricQueryType===T.d$.Search&&e.metricEditorMode===T.Rx.Builder){l(!0);return}i({...e,metricQueryType:m})}})),n?.((0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(wa.z,{options:yo,size:"sm",value:e.metricEditorMode,onChange:h}),(0,a.jsx)(fs.u,{isOpen:o,title:"Are you sure?",body:"You will lose changes made to the query if you change to Metric Insights Builder mode.",confirmText:"Yes, I am sure.",dismissText:"No, continue editing the query.",icon:"exclamation-triangle",onConfirm:()=>{l(!1),g(!1),i({...e,...qr,metricQueryType:T.d$.Insights,metricEditorMode:T.Rx.Builder})},onDismiss:()=>l(!1)})]})),()=>{s?.(void 0),n?.(void 0)}),[e,d,r,i,s,n,o,h]),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Me.$,{v:.5}),e.metricQueryType===T.d$.Search&&(0,a.jsxs)(a.Fragment,{children:[e.metricEditorMode===T.Rx.Builder&&(0,a.jsx)(Xr,{...t,refId:e.refId,metricStat:e,onChange:m=>{d||g(!0),t.onChange({...e,...m})}}),e.metricEditorMode===T.Rx.Code&&(0,a.jsx)(Ka,{expression:e.expression??"",onChange:m=>t.onChange({...e,expression:m}),datasource:r})]}),e.metricQueryType===T.d$.Insights&&(0,a.jsxs)(a.Fragment,{children:[e.metricEditorMode===T.Rx.Code&&(0,a.jsx)(Io,{region:e.region,sql:e.sqlExpression??"",onChange:m=>{d||g(!0),t.onChange({...c,sqlExpression:m})},datasource:r}),e.metricEditorMode===T.Rx.Builder&&(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(To,{query:e,onChange:t.onChange,datasource:r})})]}),(0,a.jsx)(Me.$,{v:.5}),(0,a.jsxs)(Ve.U,{children:[(0,a.jsx)(X.c,{label:"ID",width:26,optional:!0,tooltip:"ID can be used to reference other queries in math expressions. The ID can include numbers, letters, and underscore, and must start with a lowercase letter.",invalid:!!e.id&&!/^$|^[a-z][a-zA-Z0-9_]*$/.test(e.id),children:(0,a.jsx)(ye.p,{id:`${e.refId}-cloudwatch-metric-query-editor-id`,onChange:m=>i({...c,id:m.target.value}),type:"text",value:e.id})}),(0,a.jsx)(X.c,{label:"Period",width:26,tooltip:"Minimum interval between points in seconds.",children:(0,a.jsx)(ye.p,{id:`${e.refId}-cloudwatch-metric-query-editor-period`,value:e.period||"",placeholder:"auto",onChange:m=>i({...c,period:m.target.value})})}),(0,a.jsx)(X.c,{label:"Label",width:26,optional:!0,tooltip:"Change time series legend name using Dynamic labels. See documentation for details.",children:(0,a.jsx)(Ga,{width:52,label:c.label??"",onChange:m=>t.onChange({...e,label:m})})})]})]})};var Ro=E(1906),Co=E(40263),Lo=E(99887);const Oo=[{label:"CloudWatch Metrics",value:"Metrics"},{label:"CloudWatch Logs",value:"Logs"}],No=({query:t,onChange:e,datasource:r,extraHeaderElementLeft:s,extraHeaderElementRight:n,dataIsStale:i,data:o,onRunQuery:l})=>{const{queryMode:d,region:g}=t,c=kr(r.resources,t.region),[h,m]=gr(r),R=J(t)?!t.expression:!1,C=({value:S})=>{S&&S!==d&&e({...r.getDefaultQuery(Ro.Jk.Unknown),...t,queryMode:S,expression:""})},M=async S=>{if(U.$.featureToggles.cloudWatchCrossAccountQuerying&&ee(t)){const F=await r.resources.isMonitoringAccount(S);e({...t,region:S,accountId:F?t.accountId:void 0})}else e({...t,region:S})},b=U.$.featureToggles.cloudWatchCrossAccountQuerying&&c;return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)($r.X,{children:[(0,a.jsx)(ft.W,{label:"Region",value:g,placeholder:"Select region",allowCustomValue:!0,onChange:({value:S})=>S&&M(S),options:h,isLoading:m}),(0,a.jsx)(ft.W,{"aria-label":"Query mode",value:d,options:Oo,onChange:C,inputId:`cloudwatch-query-mode-${t.refId}`,id:`cloudwatch-query-mode-${t.refId}`}),s,(0,a.jsx)(Co.Z,{grow:1}),b&&(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(Lo.E,{text:"Monitoring account",color:"blue",tooltip:"AWS monitoring accounts view data from source accounts so you can centralize monitoring and troubleshoot activities"})}),(0,a.jsx)(ke.$n,{variant:i?"primary":"secondary",size:"sm",onClick:l,icon:o?.state===He.Gu.Loading?"spinner":void 0,disabled:o?.state===He.Gu.Loading||R,children:"Run queries"}),n]})})},vo=t=>{const{query:e,onChange:r,data:s}=t,[n,i]=(0,A.useState)(!1),[o,l]=(0,A.useState)(),[d,g]=(0,A.useState)();(0,A.useEffect)(()=>{i(!1)},[s]);const c=(0,A.useCallback)(h=>{i(!0),r(h)},[r]);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(No,{...t,extraHeaderElementLeft:o,extraHeaderElementRight:d,dataIsStale:n}),ee(e)&&(0,a.jsx)(So,{...t,query:e,onRunQuery:()=>{},onChange:c,extraHeaderElementLeft:l,extraHeaderElementRight:g}),J(e)&&(0,a.jsx)(Fa,{...t,query:e,onChange:c,extraHeaderElementLeft:l})]})},xo=new w.tD(gs).setQueryEditorHelp(Zs).setConfigEditor(Ea).setQueryEditor(vo).setMetadataInspector(ya);(0,y.J7)().subscribe(O.gc,Ye)},50287:(de,K,E)=>{de.exports=E(53995)},53995:(de,K)=>{(function(E){"use strict";E.stringify=function O(y){function a(W){return/[^\w-.]/.test(W)?W.replace(/[^\w-.]/g,function(D){return D==="$"?"!":(D=D.charCodeAt(0),D<256?"*"+("00"+D.toString(16)).slice(-2):"**"+("0000"+D.toString(16)).slice(-4))}):W}var N;switch(typeof y){case"number":return isFinite(y)?"~"+y:"~null";case"boolean":return"~"+y;case"string":return"~'"+a(y);case"object":if(!y)return"~null";if(N=[],Array.isArray(y)){for(var H=0;H<y.length;H++)N[H]=O(y[H])||"~null";return"~("+(N.join("")||"~")+")"}else{for(var P in y)if(y.hasOwnProperty(P)){var A=O(y[P]);A&&N.push(a(P)+A)}return"~("+N.join("~")+")"}default:return}};var w={true:!0,false:!1,null:null};E.parse=function(O){if(!O)return O;O=O.replace(/%(25)*27/g,"'");var y=0,a=O.length;function N(P){if(O.charAt(y)!==P)throw new Error("bad JSURL syntax: expected "+P+", got "+(O&&O.charAt(y)));y++}function H(){for(var P=y,A,W="";y<a&&(A=O.charAt(y))!=="~"&&A!==")";)switch(A){case"*":P<y&&(W+=O.substring(P,y)),O.charAt(y+1)==="*"?(W+=String.fromCharCode(parseInt(O.substring(y+2,y+6),16)),P=y+=6):(W+=String.fromCharCode(parseInt(O.substring(y+1,y+3),16)),P=y+=3);break;case"!":P<y&&(W+=O.substring(P,y)),W+="$",P=++y;break;default:y++}return W+O.substring(P,y)}return function P(){var A,W,D;switch(N("~"),W=O.charAt(y)){case"(":if(y++,O.charAt(y)==="~")if(A=[],O.charAt(y+1)===")")y++;else do A.push(P());while(O.charAt(y)==="~");else if(A={},O.charAt(y)!==")")do{var Y=H();A[Y]=P()}while(O.charAt(y)==="~"&&++y);N(")");break;case"'":y++,A=H();break;default:for(D=y++;y<a&&/[^)~]/.test(O.charAt(y));)y++;var j=O.substring(D,y);if(/[\d\-]/.test(W))A=parseFloat(j);else if(A=w[j],typeof A>"u")throw new Error("bad value keyword: "+j)}return A}()},E.tryParse=function(O,y){try{return E.parse(O)}catch{return y}}})(K)},43431:(de,K,E)=>{"use strict";E.d(K,{y:()=>A});var w=E(31635),O=E(88483),y=E(15964),a=E(40052),N=E(61701),H=E(64878),P=E(82100);function A(){for(var W=[],D=0;D<arguments.length;D++)W[D]=arguments[D];var Y=(0,P.ms)(W),j=(0,a.K)(W);return j.length?new O.c(function(U){var $=j.map(function(){return[]}),J=j.map(function(){return!1});U.add(function(){$=J=null});for(var ee=function(oe){(0,y.Tg)(j[oe]).subscribe((0,H._)(U,function(Te){if($[oe].push(Te),$.every(function(se){return se.length})){var Ie=$.map(function(se){return se.shift()});U.next(Y?Y.apply(void 0,(0,w.__spreadArray)([],(0,w.__read)(Ie))):Ie),$.some(function(se,Ne){return!se.length&&J[Ne]})&&U.complete()}},function(){J[oe]=!0,!$[oe].length&&U.complete()}))},re=0;!U.closed&&re<j.length;re++)ee(re);return function(){$=J=null}}):N.w}},31731:(de,K,E)=>{"use strict";E.d(K,{u:()=>H});var w=E(61701),O=E(92908),y=E(64878),a=E(15964),N=E(39697);function H(P){var A,W=1/0,D;return P!=null&&(typeof P=="object"?(A=P.count,W=A===void 0?1/0:A,D=P.delay):W=P),W<=0?function(){return w.w}:(0,O.N)(function(Y,j){var U=0,$,J=function(){if($?.unsubscribe(),$=null,D!=null){var re=typeof D=="number"?(0,N.O)(D):(0,a.Tg)(D(U)),oe=(0,y._)(j,function(){oe.unsubscribe(),ee()});re.subscribe(oe)}else ee()},ee=function(){var re=!1;$=Y.subscribe((0,y._)(j,void 0,function(){++U<W?$?J():re=!0:j.complete()})),re&&J()};ee()})}},40052:(de,K,E)=>{"use strict";E.d(K,{K:()=>O});var w=Array.isArray;function O(y){return y.length===1&&w(y[0])?y[0]:y}},6370:(de,K,E)=>{"use strict";E.d(K,{A:()=>y});var w=E(96540),O=E(88941);const y=({children:a,...N})=>w.createElement(O.x,{...N,kind:"section"},a)},88941:(de,K,E)=>{"use strict";E.d(K,{x:()=>N});var w=E(96540),O=E(22803),y=E(63142),a=E(76319);const N=({children:H,title:P,description:A,isCollapsible:W=!1,isInitiallyOpen:D=!0,kind:Y="section",className:j})=>{const{colors:U,typography:$,spacing:J}=(0,y.$j)(),[ee,re]=(0,w.useState)(W?D:!0),oe=ee?"angle-up":"angle-down",Te=Y==="sub-section",Ie=`${ee?"Collapse":"Expand"} section ${P}`,se={header:(0,O.css)({display:"flex",justifyContent:"space-between",alignItems:"center"}),title:(0,O.css)({margin:0}),subtitle:(0,O.css)({margin:0,fontWeight:$.fontWeightRegular}),descriptionText:(0,O.css)({marginTop:J(Te?.25:.5),marginBottom:0,...$.bodySmall,color:U.text.secondary}),content:(0,O.css)({marginTop:J(2)})};return w.createElement("div",{className:j},w.createElement("div",{className:se.header},Y==="section"?w.createElement("h3",{className:se.title},P):w.createElement("h6",{className:se.subtitle},P),W&&w.createElement(a.K,{name:oe,onClick:()=>re(!ee),type:"button",size:"xl","aria-label":Ie})),A&&w.createElement("p",{className:se.descriptionText},A),ee&&w.createElement("div",{className:se.content},H))}},6904:(de,K,E)=>{"use strict";E.d(K,{X:()=>a});var w=E(22803),O=E(96540),y=E(63142);const a=({children:H})=>{const P=(0,y.of)(N);return O.createElement("div",{className:P.root},H)},N=H=>({root:(0,w.css)({display:"flex",flexWrap:"wrap",alignItems:"center",gap:H.spacing(3),minHeight:H.spacing(4)})})},40263:(de,K,E)=>{"use strict";E.d(K,{Z:()=>O});var w=E(96540);const O=({grow:y,shrink:a})=>w.createElement("div",{style:{display:"block",flexGrow:y,flexShrink:a}})},75686:(de,K,E)=>{"use strict";E.d(K,{W:()=>H});var w=E(22803),O=E(96540),y=E(63142),a=E(18857),N=E(73744);function H({label:D,...Y}){const[j]=(0,O.useState)(()=>Math.random().toString(16).slice(2)),U=(0,y.of)(W),$={SelectContainer:P,ValueContainer:A,SingleValue:A};return O.createElement("div",{className:U.root},D&&O.createElement("label",{className:U.label,htmlFor:j},D,":","\xA0"),O.createElement(a.l6,{openMenuOnFocus:!0,inputId:j,...Y,components:$}))}const P=D=>{const{children:Y}=D,j=(0,y.of)(W);return O.createElement(N.K,{...D,className:(0,w.cx)(D.className,j.container)},Y)},A=D=>{const{className:Y,children:j}=D,U=(0,y.of)(W);return O.createElement("div",{className:(0,w.cx)(Y,U.valueContainer)},j)},W=D=>({root:(0,w.css)({display:"flex",fontSize:12,alignItems:"center"}),label:(0,w.css)({color:D.colors.text.secondary,whiteSpace:"nowrap"}),container:(0,w.css)({background:"none",borderColor:"transparent"}),valueContainer:(0,w.css)({display:"flex",alignItems:"center",flex:"initial",color:D.colors.text.secondary,fontSize:12})})}}]);

//# sourceMappingURL=5610.e967b2aad83c1140f6a8.js.map