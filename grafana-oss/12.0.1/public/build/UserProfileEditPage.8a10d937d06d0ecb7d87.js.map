{"version":3,"file":"UserProfileEditPage.8a10d937d06d0ecb7d87.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/Form/Form.tsx","webpack://grafana/./public/app/features/profile/UserOrganizations.tsx","webpack://grafana/./public/app/features/profile/UserProfileEditForm.tsx","webpack://grafana/./public/app/features/profile/UserProfileEditTabs.tsx","webpack://grafana/./public/app/features/profile/UserSessions.tsx","webpack://grafana/./public/app/features/profile/UserTeams.tsx","webpack://grafana/./public/app/features/profile/UserProfileEditPage.tsx","webpack://grafana/./public/app/features/profile/api.ts","webpack://grafana/./public/app/features/profile/state/actions.ts","webpack://grafana/./node_modules/react-use/esm/useMount.js"],"sourcesContent":["import { css } from '@emotion/css';\nimport { HTMLProps, useEffect } from 'react';\nimport * as React from 'react';\nimport {\n  useForm,\n  Mode,\n  DefaultValues,\n  SubmitHandler,\n  FieldValues,\n  UseFormReturn,\n  FieldErrors,\n  FieldPath,\n} from 'react-hook-form';\n\nexport type FormAPI<T extends FieldValues> = Omit<UseFormReturn<T>, 'handleSubmit'> & {\n  errors: FieldErrors<T>;\n};\n\ninterface FormProps<T extends FieldValues> extends Omit<HTMLProps<HTMLFormElement>, 'onSubmit' | 'children'> {\n  validateOn?: Mode;\n  validateOnMount?: boolean;\n  validateFieldsOnMount?: FieldPath<T> | Array<FieldPath<T>>;\n  defaultValues?: DefaultValues<T>;\n  onSubmit: SubmitHandler<T>;\n  children: (api: FormAPI<T>) => React.ReactNode;\n  /** Sets max-width for container. Use it instead of setting individual widths on inputs.*/\n  maxWidth?: number | 'none';\n}\n\nexport function Form<T extends FieldValues>({\n  defaultValues,\n  onSubmit,\n  validateOnMount = false,\n  validateFieldsOnMount,\n  children,\n  validateOn = 'onSubmit',\n  maxWidth = 600,\n  ...htmlProps\n}: FormProps<T>) {\n  const { handleSubmit, trigger, formState, ...rest } = useForm<T>({\n    mode: validateOn,\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (validateOnMount) {\n      trigger(validateFieldsOnMount);\n    }\n  }, [trigger, validateFieldsOnMount, validateOnMount]);\n\n  return (\n    <form\n      className={css({\n        maxWidth: maxWidth !== 'none' ? maxWidth + 'px' : maxWidth,\n        width: '100%',\n      })}\n      onSubmit={handleSubmit(onSubmit)}\n      {...htmlProps}\n    >\n      {children({ errors: formState.errors, formState, trigger, ...rest })}\n    </form>\n  );\n}\n","import { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, LoadingPlaceholder, ScrollContainer } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { UserDTO, UserOrg } from 'app/types';\n\nexport interface Props {\n  user: UserDTO | null;\n  orgs: UserOrg[];\n  isLoading: boolean;\n  setUserOrg: (org: UserOrg) => void;\n}\n\nexport class UserOrganizations extends PureComponent<Props> {\n  render() {\n    const { isLoading, orgs, user } = this.props;\n\n    if (isLoading) {\n      return (\n        <LoadingPlaceholder\n          text={t('profile.user-organizations.text-loading-organizations', 'Loading organizations...')}\n        />\n      );\n    }\n\n    if (orgs.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3 className=\"page-sub-heading\">\n          <Trans i18nKey=\"user-orgs.title\">Organizations</Trans>\n        </h3>\n\n        <ScrollContainer overflowY=\"visible\" overflowX=\"auto\" width=\"100%\">\n          <table className=\"filter-table form-inline\" data-testid={selectors.components.UserProfile.orgsTable}>\n            <thead>\n              <tr>\n                <th>\n                  <Trans i18nKey=\"user-orgs.name-column\">Name</Trans>\n                </th>\n                <th>\n                  <Trans i18nKey=\"user-orgs.role-column\">Role</Trans>\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {orgs.map((org: UserOrg, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{org.name}</td>\n                    <td>{org.role}</td>\n                    <td className=\"text-right\">\n                      {org.orgId === user?.orgId ? (\n                        <Button variant=\"secondary\" size=\"sm\" disabled>\n                          <Trans i18nKey=\"user-orgs.current-org-button\">Current</Trans>\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"secondary\"\n                          size=\"sm\"\n                          onClick={() => {\n                            this.props.setUserOrg(org);\n                          }}\n                        >\n                          <Trans i18nKey=\"user-orgs.select-org-button\">Select organisation</Trans>\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </ScrollContainer>\n      </div>\n    );\n  }\n}\n\nexport default UserOrganizations;\n","import { selectors } from '@grafana/e2e-selectors';\nimport { Button, Field, FieldSet, Icon, Input, Tooltip } from '@grafana/ui';\nimport { Form } from 'app/core/components/Form/Form';\nimport config from 'app/core/config';\nimport { t, Trans } from 'app/core/internationalization';\nimport { UserDTO } from 'app/types';\n\nimport { ProfileUpdateFields } from './types';\n\nexport interface Props {\n  user: UserDTO | null;\n  isSavingUser: boolean;\n  updateProfile: (payload: ProfileUpdateFields) => void;\n}\n\nconst { disableLoginForm } = config;\n\nexport const UserProfileEditForm = ({ user, isSavingUser, updateProfile }: Props) => {\n  const onSubmitProfileUpdate = (data: ProfileUpdateFields) => {\n    updateProfile(data);\n  };\n\n  // check if authLabels is longer than 0 otherwise false\n  const isExternalUser: boolean = (user && user.isExternal) ?? false;\n  let authSource = isExternalUser && user && user.authLabels ? user.authLabels[0] : '';\n  if (user?.isProvisioned) {\n    authSource = 'SCIM';\n  }\n  const lockMessage = authSource ? ` (Synced via ${authSource})` : '';\n  const disabledEdit = disableLoginForm || isExternalUser;\n\n  return (\n    <Form onSubmit={onSubmitProfileUpdate} validateOn=\"onBlur\">\n      {({ register, errors }) => {\n        return (\n          <>\n            <FieldSet>\n              <Field\n                label={t('user-profile.fields.name-label', 'Name') + lockMessage}\n                invalid={!!errors.name}\n                error={<Trans i18nKey=\"user-profile.fields.name-error\">Name is required</Trans>}\n                disabled={disabledEdit}\n              >\n                <Input\n                  {...register('name', { required: true })}\n                  id=\"edit-user-profile-name\"\n                  placeholder={t('user-profile.fields.name-label', 'Name')}\n                  defaultValue={user?.name ?? ''}\n                  suffix={<InputSuffix />}\n                />\n              </Field>\n\n              <Field\n                label={t('user-profile.fields.email-label', 'Email') + lockMessage}\n                invalid={!!errors.email}\n                error={<Trans i18nKey=\"user-profile.fields.email-error\">Email is required</Trans>}\n                disabled={disabledEdit}\n              >\n                <Input\n                  {...register('email', { required: true })}\n                  id=\"edit-user-profile-email\"\n                  placeholder={t('user-profile.fields.email-label', 'Email')}\n                  defaultValue={user?.email ?? ''}\n                  suffix={<InputSuffix />}\n                />\n              </Field>\n\n              <Field label={t('user-profile.fields.username-label', 'Username') + lockMessage} disabled={disabledEdit}>\n                <Input\n                  {...register('login')}\n                  id=\"edit-user-profile-username\"\n                  defaultValue={user?.login ?? ''}\n                  placeholder={t('user-profile.fields.username-label', 'Username') + lockMessage}\n                  suffix={<InputSuffix />}\n                />\n              </Field>\n            </FieldSet>\n            <Button\n              variant=\"primary\"\n              disabled={isSavingUser || disabledEdit}\n              data-testid={selectors.components.UserProfile.profileSaveButton}\n              type=\"submit\"\n            >\n              <Trans i18nKey=\"common.save\">Save</Trans>\n            </Button>\n          </>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default UserProfileEditForm;\n\nconst InputSuffix = () => {\n  return disableLoginForm ? (\n    <Tooltip content=\"Login details locked because they are managed in another system.\">\n      <Icon name=\"lock\" />\n    </Tooltip>\n  ) : null;\n};\n","import React, { type ComponentType, Fragment, type ReactElement, useCallback, useMemo } from 'react';\n\nimport { type ComponentTypeWithExtensionMeta, type UrlQueryValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Stack, Tab, TabContent, TabsBar } from '@grafana/ui';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { t } from 'app/core/internationalization';\n\nconst TAB_QUERY_PARAM = 'tab';\nconst GENERAL_SETTINGS_TAB = 'general';\n\ntype Props = {\n  children?: React.ReactNode;\n  components: ComponentTypeWithExtensionMeta[];\n};\n\nexport function UserProfileEditTabs(props: Props): ReactElement {\n  const { children, components } = props;\n  const tabsById = useTabInfoById(components, children);\n  const [activeTab, setActiveTab] = useActiveTab(tabsById);\n  const showTabs = components.length > 0;\n\n  if (showTabs === false) {\n    return <>{children}</>;\n  }\n\n  return (\n    <div data-testid={selectors.components.UserProfile.extensionPointTabs}>\n      <Stack direction=\"column\" gap={2}>\n        <TabsBar>\n          {Object.values(tabsById).map(({ tabId, title }) => {\n            return (\n              <Tab\n                key={tabId}\n                label={title}\n                active={activeTab?.tabId === tabId}\n                onChangeTab={() => setActiveTab(tabId)}\n                data-testid={selectors.components.UserProfile.extensionPointTab(tabId)}\n              />\n            );\n          })}\n        </TabsBar>\n        <TabContent>\n          {Boolean(activeTab) && (\n            <Fragment key={activeTab?.tabId}>\n              {activeTab?.components.map((Component, index) => <Component key={`${activeTab?.tabId}-${index}`} />)}\n            </Fragment>\n          )}\n        </TabContent>\n      </Stack>\n    </div>\n  );\n}\n\ntype TabInfo = {\n  title: string;\n  tabId: string;\n  components: ComponentType[];\n};\n\nfunction useTabInfoById(components: Props['components'], general: React.ReactNode): Record<string, TabInfo> {\n  return useMemo(() => {\n    const tabs: Record<string, TabInfo> = {\n      [GENERAL_SETTINGS_TAB]: {\n        title: t('user-profile.tabs.general', 'General'),\n        tabId: GENERAL_SETTINGS_TAB,\n        components: [() => <>{general}</>],\n      },\n    };\n\n    return components.reduce((acc, component) => {\n      const { title } = component.meta;\n      const tabId = convertTitleToTabId(title);\n\n      if (!acc[tabId]) {\n        acc[tabId] = {\n          title,\n          tabId,\n          components: [],\n        };\n      }\n\n      acc[tabId].components.push(component);\n      return acc;\n    }, tabs);\n  }, [components, general]);\n}\n\nfunction useActiveTab(tabs: Record<string, TabInfo>): [TabInfo | undefined, (tabId: string) => void] {\n  const [queryParams, updateQueryParams] = useQueryParams();\n  const activeTabId = convertQueryParamToTabId(queryParams[TAB_QUERY_PARAM]);\n  const activeTab = tabs[activeTabId];\n\n  const setActiveTab = useCallback(\n    (tabId: string) => updateQueryParams({ [TAB_QUERY_PARAM]: tabId }),\n    [updateQueryParams]\n  );\n\n  return [activeTab, setActiveTab];\n}\n\nfunction convertQueryParamToTabId(queryParam: UrlQueryValue) {\n  if (typeof queryParam !== 'string') {\n    return GENERAL_SETTINGS_TAB;\n  }\n  return convertTitleToTabId(queryParam);\n}\n\nfunction convertTitleToTabId(title: string) {\n  return title.toLowerCase();\n}\n","import { css } from '@emotion/css';\nimport { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Button, Icon, LoadingPlaceholder, ScrollContainer } from '@grafana/ui';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { t, Trans } from 'app/core/internationalization';\nimport { formatDate } from 'app/core/internationalization/dates';\nimport { UserSession } from 'app/types';\n\ninterface Props {\n  sessions: UserSession[];\n  isLoading: boolean;\n  revokeUserSession: (tokenId: number) => void;\n}\n\nclass UserSessions extends PureComponent<Props> {\n  render() {\n    const { isLoading, sessions, revokeUserSession } = this.props;\n    const styles = getStyles();\n\n    if (isLoading) {\n      return <LoadingPlaceholder text={<Trans i18nKey=\"user-sessions.loading\">Loading sessions...</Trans>} />;\n    }\n\n    return (\n      <div className={styles.wrapper}>\n        {sessions.length > 0 && (\n          <>\n            <h3 className=\"page-sub-heading\">\n              <Trans i18nKey=\"profile.user-sessions.sessions\">Sessions</Trans>\n            </h3>\n            <ScrollContainer overflowY=\"visible\" overflowX=\"auto\" width=\"100%\">\n              <table className=\"filter-table form-inline\" data-testid={selectors.components.UserProfile.sessionsTable}>\n                <thead>\n                  <tr>\n                    <th>\n                      <Trans i18nKey=\"user-session.seen-at-column\">Last seen</Trans>\n                    </th>\n                    <th>\n                      <Trans i18nKey=\"user-session.created-at-column\">Logged on</Trans>\n                    </th>\n                    <th>\n                      <Trans i18nKey=\"user-session.ip-column\">IP address</Trans>\n                    </th>\n                    <th>\n                      <Trans i18nKey=\"user-session.browser-column\">Browser & OS</Trans>\n                    </th>\n                    <th>\n                      <Trans i18nKey=\"user-session.identity-provider-column\">Identity Provider</Trans>\n                    </th>\n                    <th></th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {sessions.map((session: UserSession, index) => (\n                    <tr key={index}>\n                      {session.isActive ? (\n                        <td>\n                          <Trans i18nKey=\"profile.user-sessions.now\">Now</Trans>\n                        </td>\n                      ) : (\n                        <td>{session.seenAt}</td>\n                      )}\n                      <td>{formatDate(session.createdAt, { dateStyle: 'long' })}</td>\n                      <td>{session.clientIp}</td>\n                      <td>\n                        <Trans\n                          i18nKey=\"profile.user-sessions.browser-details\"\n                          values={{ browser: session.browser, os: session.os, osVersion: session.osVersion }}\n                        >\n                          {'{{browser}}'} on {'{{os}}'} {'{{osVersion}}'}\n                        </Trans>\n                      </td>\n                      <td>\n                        {session.authModule && <TagBadge label={session.authModule} removeIcon={false} count={0} />}\n                      </td>\n                      <td>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          tooltip={t('user-session.revoke', 'Revoke user session')}\n                          onClick={() => revokeUserSession(session.id)}\n                          aria-label={t('user-session.revoke', 'Revoke user session')}\n                        >\n                          <Icon name=\"power\" />\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </ScrollContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst getStyles = () => ({\n  wrapper: css({\n    maxWidth: '100%',\n  }),\n});\n\nexport default UserSessions;\n","import { PureComponent } from 'react';\n\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { t, Trans } from 'app/core/internationalization';\nimport { Team } from 'app/types';\n\nexport interface Props {\n  teams: Team[];\n  isLoading: boolean;\n}\n\nexport class UserTeams extends PureComponent<Props> {\n  render() {\n    const { isLoading, teams } = this.props;\n\n    if (isLoading) {\n      return <LoadingPlaceholder text={t('profile.user-teams.text-loading-teams', 'Loading teams...')} />;\n    }\n\n    if (teams.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3 className=\"page-sub-heading\">\n          <Trans i18nKey=\"profile.user-teams.teams\">Teams</Trans>\n        </h3>\n        <table\n          className=\"filter-table form-inline\"\n          aria-label={t('profile.user-teams.aria-label-user-teams-table', 'User teams table')}\n        >\n          <thead>\n            <tr>\n              <th />\n              <th>\n                <Trans i18nKey=\"profile.user-teams.name\">Name</Trans>\n              </th>\n              <th>\n                <Trans i18nKey=\"profile.user-teams.email\">Email</Trans>\n              </th>\n              <th>\n                <Trans i18nKey=\"profile.user-teams.members\">Members</Trans>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {teams.map((team: Team, index) => {\n              return (\n                <tr key={index}>\n                  <td className=\"width-4 text-center\">\n                    <img className=\"filter-table__avatar\" src={team.avatarUrl} alt=\"\" />\n                  </td>\n                  <td>{team.name}</td>\n                  <td>{team.email}</td>\n                  <td>{team.memberCount}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default UserTeams;\n","import { connect, ConnectedProps } from 'react-redux';\nimport { useMount } from 'react-use';\n\nimport { PluginExtensionPoints } from '@grafana/data';\nimport { usePluginComponents } from '@grafana/runtime';\nimport { Stack } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport SharedPreferences from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { StoreState } from 'app/types';\n\nimport UserOrganizations from './UserOrganizations';\nimport UserProfileEditForm from './UserProfileEditForm';\nimport { UserProfileEditTabs } from './UserProfileEditTabs';\nimport UserSessions from './UserSessions';\nimport { UserTeams } from './UserTeams';\nimport { changeUserOrg, initUserProfilePage, revokeUserSession, updateUserProfile } from './state/actions';\n\nexport interface OwnProps {}\n\nfunction mapStateToProps(state: StoreState) {\n  const userState = state.user;\n  const { user, teams, orgs, sessions, teamsAreLoading, orgsAreLoading, sessionsAreLoading, isUpdating } = userState;\n  return {\n    orgsAreLoading,\n    sessionsAreLoading,\n    teamsAreLoading,\n    orgs,\n    sessions,\n    teams,\n    isUpdating,\n    user,\n  };\n}\n\nconst mapDispatchToProps = {\n  initUserProfilePage,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport type Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UserProfileEditPage({\n  orgsAreLoading,\n  sessionsAreLoading,\n  teamsAreLoading,\n  initUserProfilePage,\n  orgs,\n  sessions,\n  teams,\n  isUpdating,\n  user,\n  revokeUserSession,\n  changeUserOrg,\n  updateUserProfile,\n}: Props) {\n  useMount(() => initUserProfilePage());\n\n  const { components, isLoading } = usePluginComponents({\n    extensionPointId: PluginExtensionPoints.UserProfileTab,\n  });\n\n  return (\n    <Page navId=\"profile/settings\">\n      <Page.Contents isLoading={!user || isLoading}>\n        <UserProfileEditTabs components={components}>\n          <Stack direction=\"column\" gap={2} data-testid=\"user-profile-edit-page\">\n            <UserProfileEditForm updateProfile={updateUserProfile} isSavingUser={isUpdating} user={user} />\n            <SharedPreferences resourceUri=\"user\" preferenceType=\"user\" />\n            <Stack direction=\"column\" gap={6}>\n              <UserTeams isLoading={teamsAreLoading} teams={teams} />\n              <UserOrganizations isLoading={orgsAreLoading} setUserOrg={changeUserOrg} orgs={orgs} user={user} />\n              <UserSessions isLoading={sessionsAreLoading} revokeUserSession={revokeUserSession} sessions={sessions} />\n            </Stack>\n          </Stack>\n        </UserProfileEditTabs>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nexport default connector(UserProfileEditPage);\n","import { getBackendSrv } from '@grafana/runtime';\n\nimport { Team, UserDTO, UserOrg, UserSession } from '../../types';\n\nimport { ChangePasswordFields, ProfileUpdateFields } from './types';\n\nasync function changePassword(payload: ChangePasswordFields): Promise<void> {\n  try {\n    await getBackendSrv().put('/api/user/password', payload);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction loadUser(): Promise<UserDTO> {\n  return getBackendSrv().get('/api/user');\n}\n\nfunction loadTeams(): Promise<Team[]> {\n  return getBackendSrv().get('/api/user/teams');\n}\n\nfunction loadOrgs(): Promise<UserOrg[]> {\n  return getBackendSrv().get('/api/user/orgs');\n}\n\nfunction loadSessions(): Promise<UserSession[]> {\n  return getBackendSrv().get('/api/user/auth-tokens');\n}\n\nasync function revokeUserSession(tokenId: number): Promise<void> {\n  await getBackendSrv().post('/api/user/revoke-auth-token', {\n    authTokenId: tokenId,\n  });\n}\n\nasync function setUserOrg(org: UserOrg): Promise<void> {\n  await getBackendSrv().post('/api/user/using/' + org.orgId, {});\n}\n\nasync function updateUserProfile(payload: ProfileUpdateFields): Promise<void> {\n  try {\n    await getBackendSrv().put('/api/user', payload);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport const api = {\n  changePassword,\n  revokeUserSession,\n  loadUser,\n  loadSessions,\n  loadOrgs,\n  loadTeams,\n  setUserOrg,\n  updateUserProfile,\n};\n","import { config } from '@grafana/runtime';\n\nimport { ThunkResult, UserOrg } from '../../../types';\nimport { api } from '../api';\nimport { ChangePasswordFields, ProfileUpdateFields } from '../types';\n\nimport {\n  initLoadOrgs,\n  initLoadSessions,\n  initLoadTeams,\n  orgsLoaded,\n  sessionsLoaded,\n  setUpdating,\n  teamsLoaded,\n  userLoaded,\n  userSessionRevoked,\n} from './reducers';\n\nexport function changePassword(payload: ChangePasswordFields): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.changePassword(payload);\n    dispatch(setUpdating({ updating: false }));\n  };\n}\n\nexport function initUserProfilePage(): ThunkResult<void> {\n  return async function (dispatch) {\n    await dispatch(loadUser());\n    dispatch(loadTeams());\n    dispatch(loadOrgs());\n    dispatch(loadSessions());\n  };\n}\n\nexport function loadUser(): ThunkResult<void> {\n  return async function (dispatch) {\n    const user = await api.loadUser();\n    dispatch(userLoaded({ user }));\n  };\n}\n\nfunction loadTeams(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadTeams());\n    const teams = await api.loadTeams();\n    dispatch(teamsLoaded({ teams }));\n  };\n}\n\nfunction loadOrgs(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadOrgs());\n    const orgs = await api.loadOrgs();\n    dispatch(orgsLoaded({ orgs }));\n  };\n}\n\nfunction loadSessions(): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(initLoadSessions());\n    const sessions = await api.loadSessions();\n    dispatch(sessionsLoaded({ sessions }));\n  };\n}\n\nexport function revokeUserSession(tokenId: number): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.revokeUserSession(tokenId);\n    dispatch(userSessionRevoked({ tokenId }));\n  };\n}\n\nexport function changeUserOrg(org: UserOrg): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.setUserOrg(org);\n    window.location.href = config.appSubUrl + '/profile';\n  };\n}\n\nexport function updateUserProfile(payload: ProfileUpdateFields): ThunkResult<void> {\n  return async function (dispatch) {\n    dispatch(setUpdating({ updating: true }));\n    await api.updateUserProfile(payload);\n    await dispatch(loadUser());\n    dispatch(setUpdating({ updating: false }));\n  };\n}\n","import useEffectOnce from './useEffectOnce';\nvar useMount = function (fn) {\n    useEffectOnce(function () {\n        fn();\n    });\n};\nexport default useMount;\n"],"names":["Form","defaultValues","onSubmit","validateOnMount","validateFieldsOnMount","children","validateOn","maxWidth","htmlProps","handleSubmit","trigger","formState","rest","UserOrganizations","isLoading","orgs","user","LoadingPlaceholder","ScrollContainer","selectors","org","index","Button","disableLoginForm","config","isSavingUser","updateProfile","onSubmitProfileUpdate","data","isExternalUser","authSource","lockMessage","disabledEdit","register","errors","FieldSet","Field","Input","InputSuffix","Tooltip","Icon","TAB_QUERY_PARAM","GENERAL_SETTINGS_TAB","UserProfileEditTabs","props","components","tabsById","useTabInfoById","activeTab","setActiveTab","useActiveTab","Stack","TabsBar","tabId","title","Tab","TabContent","Fragment","Component","general","tabs","acc","component","convertTitleToTabId","queryParams","updateQueryParams","useQueryParams","activeTabId","convertQueryParamToTabId","queryParam","UserSessions","sessions","revokeUserSession","styles","getStyles","session","TagBadge","UserTeams","teams","team","mapStateToProps","state","userState","teamsAreLoading","orgsAreLoading","sessionsAreLoading","isUpdating","mapDispatchToProps","connector","UserProfileEditPage","initUserProfilePage","changeUserOrg","updateUserProfile","useMount","usePluginComponents","Page","SharedPreferences","changePassword","payload","err","loadUser","loadTeams","loadOrgs","loadSessions","tokenId","setUserOrg","api","dispatch","fn"],"sourceRoot":""}