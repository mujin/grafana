{"version":3,"file":"FileStatusPage.f8f5aa2a0b0c77bc2089.js","mappings":"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","sources":["webpack://grafana/./public/app/features/provisioning/File/FileStatusPage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { urlUtil } from '@grafana/data';\nimport { isFetchError } from '@grafana/runtime';\nimport { Alert, CodeEditor, LinkButton, Button, Stack, Tab, TabContent, TabsBar, DeleteButton } from '@grafana/ui';\nimport {\n  useGetRepositoryFilesWithPathQuery,\n  ResourceWrapper,\n  useReplaceRepositoryFilesWithPathMutation,\n  useDeleteRepositoryFilesWithPathMutation,\n} from 'app/api/clients/provisioning';\nimport { Page } from 'app/core/components/Page/Page';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { t, Trans } from 'app/core/internationalization';\n\nimport { PROVISIONING_URL } from '../constants';\n\nexport default function FileStatusPage() {\n  const params = useParams();\n  const [queryParams] = useQueryParams();\n  const ref = (queryParams['ref'] as string) ?? undefined;\n  const tab = (queryParams['tab'] as TabSelection) ?? TabSelection.File;\n  const name = params['name'] ?? '';\n  const path = params['*'] ?? '';\n  const file = useGetRepositoryFilesWithPathQuery({ name, path, ref });\n\n  return (\n    <Page\n      navId=\"provisioning\"\n      pageNav={{\n        text: `File: ${path} ${ref ? `(@${ref})` : ''}`,\n      }}\n    >\n      <Page.Contents isLoading={file.isLoading}>\n        <>\n          {isFetchError(file.error) && (\n            <Alert title={t('provisioning.file-status-page.title-error-loading-file', 'Error loading file')}>\n              {file.error.message}\n            </Alert>\n          )}\n          {file.isSuccess && file.data && <ResourceView wrap={file.data} repo={name} repoRef={ref} tab={tab} />}\n        </>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nenum TabSelection {\n  File = 'file',\n  Existing = 'existing',\n  DryRun = 'dryRun',\n}\n\ninterface Props {\n  wrap: ResourceWrapper;\n  repo: string;\n  repoRef?: string;\n  tab: TabSelection;\n}\n\nfunction ResourceView({ wrap, repo, repoRef, tab }: Props) {\n  const isDashboard = wrap.resource?.type?.kind === 'Dashboard';\n  const existingName = wrap.resource?.existing?.metadata?.name;\n  const location = useLocation();\n  const [queryParams] = useQueryParams();\n  const [replaceFile, replaceFileStatus] = useReplaceRepositoryFilesWithPathMutation();\n  const [deleteFile, deleteFileStatus] = useDeleteRepositoryFilesWithPathMutation();\n\n  const [jsonView, setJsonView] = useState('');\n\n  useEffect(() => {\n    switch (tab) {\n      case TabSelection.Existing:\n        setJsonView(JSON.stringify(wrap.resource.existing, null, 2));\n        return;\n      case TabSelection.DryRun:\n        setJsonView(JSON.stringify(wrap.resource.dryRun, null, 2));\n        return;\n      case TabSelection.File:\n        setJsonView(JSON.stringify(wrap.resource.file, null, 2));\n        return;\n    }\n  }, [wrap, tab, setJsonView]);\n\n  const tabInfo = [\n    { value: TabSelection.File, label: 'File (from repository)' },\n    { value: TabSelection.Existing, label: 'Existing (from grafana)' },\n    { value: TabSelection.DryRun, label: 'Dry Run (result after apply)' },\n  ];\n\n  return (\n    <div>\n      <Stack>\n        {isDashboard && (\n          <LinkButton target={'_blank'} href={`${PROVISIONING_URL}/${repo}/dashboard/preview/${wrap.path}`}>\n            <Trans i18nKey=\"provisioning.resource-view.dashboard-preview\">Dashboard Preview</Trans>\n          </LinkButton>\n        )}\n        {isDashboard && existingName && (\n          <LinkButton target={'_blank'} href={`d/${wrap.resource.existing?.metadata.name}`} variant=\"secondary\">\n            <Trans i18nKey=\"provisioning.resource-view.existing-dashboard\">Existing dashboard</Trans>\n          </LinkButton>\n        )}\n        <LinkButton href={`${PROVISIONING_URL}/${repo}`} variant=\"secondary\">\n          <Trans i18nKey=\"provisioning.resource-view.repository\">Repository</Trans>\n        </LinkButton>\n        {repoRef && (\n          <LinkButton href={`${PROVISIONING_URL}/${repo}/file/${wrap.path}`} variant=\"secondary\">\n            <Trans i18nKey=\"provisioning.resource-view.base\">Base</Trans>\n          </LinkButton>\n        )}\n        <LinkButton href={`${PROVISIONING_URL}/${repo}/history/${wrap.path}`} variant=\"secondary\">\n          <Trans i18nKey=\"provisioning.resource-view.history\">History</Trans>\n        </LinkButton>\n      </Stack>\n\n      <br />\n      <br />\n\n      <TabsBar>\n        {tabInfo.map((t) => (\n          <Tab\n            href={urlUtil.renderUrl(location.pathname, { ...queryParams, tab: t.value })}\n            key={t.value}\n            label={t.label}\n            active={tab === t.value}\n          />\n        ))}\n      </TabsBar>\n      <TabContent>\n        <div>\n          <div style={{ height: 700, marginBottom: 10 }}>\n            <AutoSizer disableWidth>\n              {({ height }) => (\n                <CodeEditor\n                  width=\"100%\"\n                  height={height}\n                  language={'json'}\n                  showLineNumbers={true}\n                  showMiniMap={true}\n                  value={jsonView}\n                  onBlur={setJsonView}\n                  onSave={setJsonView}\n                />\n              )}\n            </AutoSizer>\n          </div>\n          <Stack alignItems=\"flex-end\" justifyContent=\"end\">\n            <Button\n              variant=\"primary\"\n              disabled={replaceFileStatus.isLoading}\n              onClick={() => {\n                replaceFile({\n                  name: repo,\n                  path: wrap.path!,\n                  body: JSON.parse(jsonView),\n                  message: 'updated from repo test UI',\n                });\n              }}\n            >\n              {replaceFileStatus.isLoading ? 'Saving' : 'Save'}\n            </Button>\n            <DeleteButton\n              size=\"md\"\n              disabled={deleteFileStatus.isLoading}\n              onConfirm={() => {\n                deleteFile({\n                  name: repo,\n                  path: wrap.path!,\n                  message: 'removed from repo test UI',\n                });\n              }}\n            />\n          </Stack>\n          {replaceFileStatus.isError && (\n            <Alert title={t('provisioning.resource-view.title-error-saving-file', 'Error saving file')}>\n              <pre>{JSON.stringify(replaceFileStatus.error)}</pre>\n            </Alert>\n          )}\n        </div>\n      </TabContent>\n    </div>\n  );\n}\n"],"names":["FileStatusPage","params","queryParams","ref","tab","name","path","file","ResourceView","TabSelection","wrap","repo","repoRef","isDashboard","existingName","location","replaceFile","replaceFileStatus","deleteFile","deleteFileStatus","jsonView","setJsonView","tabInfo","t","height"],"sourceRoot":""}