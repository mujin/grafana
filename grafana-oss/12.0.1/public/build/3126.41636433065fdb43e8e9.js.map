{"version":3,"file":"3126.41636433065fdb43e8e9.js","mappings":"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","sources":["webpack://grafana/./public/app/core/internationalization/locales.ts","webpack://grafana/./public/app/core/components/SharedPreferences/SharedPreferences.tsx"],"sourcesContent":["// List hard-coded locales from https://github.com/moment/moment/tree/develop/locale\n\ninterface Locale {\n  name: string;\n  code: string;\n}\n\n// TODO re-check translations\nexport const LOCALES: Locale[] = [\n  { name: 'Afrikaans', code: 'af' },\n  { name: 'العربية', code: 'ar' },\n  { name: 'العربية (الجزائر)', code: 'ar-dz' },\n  { name: 'العربية (الكويت)', code: 'ar-kw' },\n  { name: 'العربية (ليبيا)', code: 'ar-ly' },\n  { name: 'العربية (المغرب)', code: 'ar-ma' },\n  { name: 'العربية (فلسطين)', code: 'ar-ps' },\n  { name: 'العربية (السعودية)', code: 'ar-sa' },\n  { name: 'العربية (تونس)', code: 'ar-tn' },\n  { name: 'Azərbaycanca', code: 'az' },\n  { name: 'Беларуская', code: 'be' },\n  { name: 'български език', code: 'bg' },\n  { name: 'Bamanankan', code: 'bm' },\n  { name: 'Bengali', code: 'bn' }, // TODO translate : বাংলা ???\n  { name: 'Bengali (Bangladesh)', code: 'bn-bd' }, // TODO translate\n  { name: 'Tibetan', code: 'bo' }, // TODO translate\n  { name: 'Brezhoneg', code: 'br' },\n  { name: 'Босански', code: 'bs' },\n  { name: 'Catalán', code: 'ca' },\n  { name: 'Čeština', code: 'cs' },\n  { name: 'Cymraeg', code: 'cy' },\n  { name: 'Чӑвашла', code: 'cv' },\n  { name: 'Dansk', code: 'da' },\n  { name: 'Deutsch', code: 'de' },\n  { name: 'Deutsch (Österreich)', code: 'de-at' },\n  { name: 'Deutsch (Schweiz)', code: 'de-ch' },\n  { name: 'ދިވެހި', code: 'dv' },\n  { name: 'Ελληνικά', code: 'el' },\n  { name: 'English (Australia)', code: 'en-au' },\n  { name: 'English (Canada)', code: 'en-ca' },\n  { name: 'English (United Kingdom)', code: 'en-gb' },\n  { name: 'English (Ireland)', code: 'en-ie' },\n  { name: 'English (Israel)', code: 'en-il' },\n  { name: 'English (India)', code: 'en-in' },\n  { name: 'English (New Zealand)', code: 'en-nz' },\n  { name: 'English (Singapore)', code: 'en-sg' },\n  { name: 'English (United States)', code: 'en' },\n  { name: 'Esperanto', code: 'eo' },\n  { name: 'Español', code: 'es' },\n  { name: 'Español (República Dominicana)', code: 'es-do' },\n  { name: 'Español (México)', code: 'es-mx' },\n  { name: 'Español (Estados Unidos)', code: 'es-us' },\n  { name: 'Eesti keel', code: 'et' },\n  { name: 'Euskara', code: 'eu' },\n  { name: 'فارسی', code: 'fa' },\n  { name: 'Filipino', code: 'fil' },\n  { name: 'Suomi', code: 'fi' },\n  { name: 'Føroyskt', code: 'fo' },\n  { name: 'Français', code: 'fr' },\n  { name: 'Français (Canada)', code: 'fr-ca' },\n  { name: 'Français (Suisse)', code: 'fr-ch' },\n  { name: 'Frisian', code: 'fy' }, // TODO translate\n  { name: 'Gaeilge', code: 'ga' },\n  { name: 'Gàidhlig', code: 'gd' },\n  { name: 'Galego', code: 'gl' },\n  { name: 'Konkani Devanagari', code: 'gom-deva' }, // TODO translate\n  { name: 'Konkani Latin', code: 'gom-latn' }, // TODO translate\n  { name: 'ગુજરાતી', code: 'gu' },\n  { name: 'עברית', code: 'he' },\n  { name: 'हिन्दी', code: 'hi' },\n  { name: 'Hrvatski', code: 'hr' },\n  { name: 'Magyar', code: 'hu' },\n  { name: 'Հայերեն', code: 'hy-am' },\n  { name: 'Bahasa Indonesia', code: 'id' },\n  { name: 'Íslenska', code: 'is' },\n  { name: 'Italiano', code: 'it' },\n  { name: 'Italiano (Switzerland)', code: 'it-ch' },\n  { name: '日本語', code: 'ja' },\n  { name: 'ꦧꦱꦗꦮ', code: 'jv' },\n  { name: 'ქართული', code: 'ka' },\n  { name: 'Қазақ Tілі', code: 'kk' },\n  { name: 'Cambodian', code: 'km' }, // TODO translate\n  { name: 'ಕನ್ನಡ', code: 'kn' },\n  { name: '한국어', code: 'ko' },\n  { name: 'Kurdish', code: 'ku' }, // TODO translate\n  { name: 'Northern Kurdish', code: 'ku' }, // TODO translate\n  { name: 'Кыргыз тили', code: 'ky' },\n  { name: 'Lëtzebuergesch', code: 'lb' },\n  { name: 'ພາສາລາວ', code: 'lo' },\n  { name: 'Lietuvių', code: 'lt' },\n  { name: 'latviešu', code: 'lv' },\n  { name: 'Mакедонски', code: 'mk' },\n  { name: 'മലയാളം', code: 'ml' },\n  { name: 'te Reo Māori', code: 'mi' },\n  { name: 'crnogorski', code: 'me' },\n  { name: 'मराठी', code: 'mr' },\n  { name: 'Bahasa Melayu', code: 'ms' },\n  { name: 'Malti', code: 'mt' },\n  { name: 'Монгол Хэл', code: 'mn' },\n  { name: 'Burmese', code: 'my' }, // TODO trasnlate: မြန်မာစာ ??\n  { name: 'Norwegian Bokmål', code: 'nb' }, // TODO translate\n  { name: 'नेपाली', code: 'ne' },\n  { name: 'Nederlands', code: 'nl' },\n  { name: 'Nederlands (België)', code: 'nl-be' },\n  { name: 'Ninorks', code: 'nn' }, //??\n  { name: 'Occitan (Lengadocian)', code: 'oc-lnc' },\n  { name: 'पंजाबी (ਭਾਰਤ)', code: 'pa-in' },\n  { name: 'Polski', code: 'pl' },\n  { name: 'Português', code: 'pt' },\n  { name: 'Português (Brasil)', code: 'pt-br' },\n  { name: 'Română', code: 'ro' },\n  { name: 'Русский', code: 'ru' },\n  { name: 'Nothern Sami', code: 'se' }, // TODO translate\n  { name: 'سنڌي', code: 'sd' },\n  { name: 'සිංහල', code: 'si' },\n  { name: 'Slovenčina', code: 'sk' },\n  { name: 'Slovenščina', code: 'sl' },\n  { name: 'Shqip', code: 'sq' },\n  { name: 'Српски', code: 'sr' },\n  { name: 'Serbian Cyrillic', code: 'sr-cyrl' }, // TODO translate\n  { name: 'siSwati', code: 'ss' },\n  { name: 'Kiswahili', code: 'sw' },\n  { name: 'Svenska', code: 'sv' },\n  { name: 'தமிழ்', code: 'ta' },\n  { name: 'తెలుగు', code: 'te' },\n  { name: 'Lia-Tetun', code: 'tet' },\n  { name: 'Тоҷикӣ', code: 'tg' },\n  { name: 'ภาษาไทย', code: 'th' },\n  { name: 'Türkmençe', code: 'tk' },\n  { name: 'Tagalog (Philippines)', code: 'tl-ph' }, // TODO translate\n  { name: 'tlhIngan Hol', code: 'tlh' },\n  { name: 'Türkçe', code: 'tr' },\n  { name: 'Talossan', code: 'tzl' }, // TODO translate\n  { name: 'أمازيغية أطلس الأوسط', code: 'tzm' },\n  { name: 'Central Atlas Tamazight Latin', code: 'tzm-latn' }, // TODO translate\n  { name: 'ئۇيغۇر تىلى', code: 'ug-cn' },\n  { name: 'Українська', code: 'uk' },\n  { name: 'اُردُو', code: 'ur' },\n  { name: 'Ўзбек', code: 'uz' },\n  { name: 'Uzbek (Latin)', code: 'uz-latn' }, // TODO translate\n  { name: 'tiếng Việt', code: 'vi' },\n  { name: 'Chinese (China)', code: 'zh-cn' }, // TODO translate\n  { name: 'Chinese (Hong Kong)', code: 'zh-hk' }, // TODO translate\n  { name: 'Chinese (Macau)', code: 'zh-mo' }, // TODO translate\n  { name: 'Chinese (Taiwan)', code: 'zh-tw' }, // TODO translate\n  { name: 'Èdè Yorùbá', code: 'yo-ng' },\n];\n","import { css } from '@emotion/css';\nimport { PureComponent } from 'react';\nimport * as React from 'react';\n\nimport { FeatureState, ThemeRegistryItem } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Preferences as UserPreferencesDTO } from '@grafana/schema/src/raw/preferences/x/preferences_types.gen';\nimport {\n  Button,\n  Field,\n  FieldSet,\n  Label,\n  stylesFactory,\n  TimeZonePicker,\n  WeekStartPicker,\n  FeatureBadge,\n  Combobox,\n  ComboboxOption,\n  TextLink,\n  WeekStart,\n  isWeekStart,\n} from '@grafana/ui';\nimport { DashboardPicker } from 'app/core/components/Select/DashboardPicker';\nimport { t, Trans } from 'app/core/internationalization';\nimport { LANGUAGES, PSEUDO_LOCALE } from 'app/core/internationalization/constants';\nimport { LOCALES } from 'app/core/internationalization/locales';\nimport { PreferencesService } from 'app/core/services/PreferencesService';\nimport { changeTheme } from 'app/core/services/theme';\n\nimport { getSelectableThemes } from '../ThemeSelector/getSelectableThemes';\n\nexport interface Props {\n  resourceUri: string;\n  disabled?: boolean;\n  preferenceType: 'org' | 'team' | 'user';\n  onConfirm?: () => Promise<boolean>;\n}\n\nexport type State = UserPreferencesDTO & {\n  isLoading: boolean;\n  isSubmitting: boolean;\n};\nfunction getLanguageOptions(): ComboboxOption[] {\n  const languageOptions = LANGUAGES.map((v) => ({\n    value: v.code,\n    label: v.name,\n  })).sort((a, b) => {\n    if (a.value === PSEUDO_LOCALE) {\n      return 1;\n    }\n\n    if (b.value === PSEUDO_LOCALE) {\n      return -1;\n    }\n\n    return a.label.localeCompare(b.label);\n  });\n\n  const options = [\n    {\n      value: '',\n      label: t('common.locale.default', 'Default'),\n    },\n    ...languageOptions,\n  ];\n\n  return options;\n}\n\nfunction getLocaleOptions(): ComboboxOption[] {\n  const localeOptions = LOCALES.map((v) => ({\n    value: v.code,\n    label: v.name,\n  })).sort((a, b) => {\n    return a.label.localeCompare(b.label);\n  });\n\n  const options = [\n    {\n      value: '',\n      label: t('common.locale.default', 'Default'),\n    },\n    ...localeOptions,\n  ];\n  return options;\n}\n\nexport class SharedPreferences extends PureComponent<Props, State> {\n  service: PreferencesService;\n  themeOptions: ComboboxOption[];\n  languageOptions: ComboboxOption[];\n  localeOptions: ComboboxOption[];\n\n  constructor(props: Props) {\n    super(props);\n\n    this.service = new PreferencesService(props.resourceUri);\n    this.state = {\n      isLoading: false,\n      isSubmitting: false,\n      theme: '',\n      timezone: '',\n      weekStart: '',\n      language: '',\n      locale: '',\n      queryHistory: { homeTab: '' },\n      navbar: { bookmarkUrls: [] },\n    };\n\n    const themes = getSelectableThemes();\n\n    // Options are translated, so must be called after init but call them\n    // in constructor to avoid memo-break of array changing every render\n    this.themeOptions = themes.map((theme) => ({\n      value: theme.id,\n      label: getTranslatedThemeName(theme),\n      group: theme.isExtra ? t('shared-preferences.theme.experimental', 'Experimental') : undefined,\n    }));\n    this.languageOptions = getLanguageOptions();\n    this.localeOptions = getLocaleOptions();\n\n    // Add default option\n    this.themeOptions.unshift({ value: '', label: t('shared-preferences.theme.default-label', 'Default') });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true,\n    });\n    const prefs = await this.service.load();\n\n    this.setState({\n      isLoading: false,\n      homeDashboardUID: prefs.homeDashboardUID,\n      theme: prefs.theme,\n      timezone: prefs.timezone,\n      weekStart: prefs.weekStart,\n      language: prefs.language,\n      locale: prefs.locale,\n      queryHistory: prefs.queryHistory,\n      navbar: prefs.navbar,\n    });\n  }\n\n  onSubmitForm = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const confirmationResult = this.props.onConfirm ? await this.props.onConfirm() : true;\n\n    if (confirmationResult) {\n      const { homeDashboardUID, theme, timezone, weekStart, language, locale, queryHistory, navbar } = this.state;\n      reportInteraction('grafana_preferences_save_button_clicked', {\n        preferenceType: this.props.preferenceType,\n        theme,\n        language,\n      });\n      this.setState({ isSubmitting: true });\n      await this.service\n        .update({\n          homeDashboardUID,\n          theme,\n          timezone,\n          weekStart,\n          language,\n          locale,\n          queryHistory,\n          navbar,\n        })\n        .finally(() => {\n          this.setState({ isSubmitting: false });\n        });\n      window.location.reload();\n    }\n  };\n\n  onThemeChanged = (value: ComboboxOption<string>) => {\n    this.setState({ theme: value.value });\n    reportInteraction('grafana_preferences_theme_changed', {\n      toTheme: value.value,\n      preferenceType: this.props.preferenceType,\n    });\n\n    if (value.value) {\n      changeTheme(value.value, true);\n    }\n  };\n\n  onTimeZoneChanged = (timezone?: string) => {\n    if (typeof timezone !== 'string') {\n      return;\n    }\n    this.setState({ timezone: timezone });\n  };\n\n  onWeekStartChanged = (weekStart?: WeekStart) => {\n    this.setState({ weekStart: weekStart ?? '' });\n  };\n\n  onHomeDashboardChanged = (dashboardUID: string) => {\n    this.setState({ homeDashboardUID: dashboardUID });\n  };\n\n  onLanguageChanged = (language: string) => {\n    this.setState({ language });\n\n    reportInteraction('grafana_preferences_language_changed', {\n      toLanguage: language,\n      preferenceType: this.props.preferenceType,\n    });\n  };\n\n  onLocaleChanged = (locale: string) => {\n    this.setState({ locale });\n\n    reportInteraction('grafana_preferences_locale_changed', {\n      toLocale: locale,\n      preferenceType: this.props.preferenceType,\n    });\n  };\n\n  render() {\n    const { theme, timezone, weekStart, homeDashboardUID, language, isLoading, isSubmitting, locale } = this.state;\n    const { disabled } = this.props;\n    const styles = getStyles();\n    const currentThemeOption = this.themeOptions.find((x) => x.value === theme) ?? this.themeOptions[0];\n\n    return (\n      <form onSubmit={this.onSubmitForm} className={styles.form}>\n        <FieldSet label={<Trans i18nKey=\"shared-preferences.title\">Preferences</Trans>} disabled={disabled}>\n          <Field\n            loading={isLoading}\n            disabled={isLoading}\n            label={t('shared-preferences.fields.theme-label', 'Interface theme')}\n            description={\n              config.featureToggles.grafanaconThemes && config.feedbackLinksEnabled ? (\n                <Trans i18nKey=\"shared-preferences.fields.theme-description\">\n                  Enjoying the experimental themes? Tell us what you'd like to see{' '}\n                  <TextLink\n                    variant=\"bodySmall\"\n                    external\n                    href=\"https://docs.google.com/forms/d/e/1FAIpQLSeRKAY8nUMEVIKSYJ99uOO-dimF6Y69_If1Q1jTLOZRWqK1cw/viewform?usp=dialog\"\n                  >\n                    here.\n                  </TextLink>\n                </Trans>\n              ) : undefined\n            }\n          >\n            <Combobox\n              options={this.themeOptions}\n              value={currentThemeOption.value}\n              onChange={this.onThemeChanged}\n              id=\"shared-preferences-theme-select\"\n            />\n          </Field>\n\n          <Field\n            loading={isLoading}\n            disabled={isLoading}\n            label={\n              <Label htmlFor=\"home-dashboard-select\">\n                <span className={styles.labelText}>\n                  <Trans i18nKey=\"shared-preferences.fields.home-dashboard-label\">Home Dashboard</Trans>\n                </span>\n              </Label>\n            }\n            data-testid=\"User preferences home dashboard drop down\"\n          >\n            <DashboardPicker\n              value={homeDashboardUID}\n              onChange={(v) => this.onHomeDashboardChanged(v?.uid ?? '')}\n              defaultOptions={true}\n              isClearable={true}\n              placeholder={t('shared-preferences.fields.home-dashboard-placeholder', 'Default dashboard')}\n              inputId=\"home-dashboard-select\"\n            />\n          </Field>\n\n          <Field\n            loading={isLoading}\n            disabled={isLoading}\n            label={t('shared-dashboard.fields.timezone-label', 'Timezone')}\n            data-testid={selectors.components.TimeZonePicker.containerV2}\n          >\n            <TimeZonePicker\n              includeInternal={true}\n              value={timezone}\n              onChange={this.onTimeZoneChanged}\n              inputId=\"shared-preferences-timezone-picker\"\n            />\n          </Field>\n\n          <Field\n            loading={isLoading}\n            disabled={isLoading}\n            label={t('shared-preferences.fields.week-start-label', 'Week start')}\n            data-testid={selectors.components.WeekStartPicker.containerV2}\n          >\n            <WeekStartPicker\n              value={weekStart && isWeekStart(weekStart) ? weekStart : undefined}\n              onChange={this.onWeekStartChanged}\n              inputId=\"shared-preferences-week-start-picker\"\n            />\n          </Field>\n\n          <Field\n            loading={isLoading}\n            disabled={isLoading}\n            label={\n              <Label htmlFor=\"language-preference-select\">\n                <span className={styles.labelText}>\n                  <Trans i18nKey=\"shared-preferences.fields.language-preference-label\">Language</Trans>\n                </span>\n                <FeatureBadge featureState={FeatureState.preview} />\n              </Label>\n            }\n            data-testid=\"User preferences language drop down\"\n          >\n            <Combobox\n              value={this.languageOptions.find((lang) => lang.value === language)?.value || ''}\n              onChange={(lang: ComboboxOption | null) => this.onLanguageChanged(lang?.value ?? '')}\n              options={this.languageOptions}\n              placeholder={t('shared-preferences.fields.language-preference-placeholder', 'Choose language')}\n              id=\"language-preference-select\"\n            />\n          </Field>\n          {config.featureToggles.localeFormatPreference && (\n            <Field\n              loading={isLoading}\n              disabled={isLoading}\n              label={\n                <Label htmlFor=\"locale-preference\">\n                  <span className={styles.labelText}>\n                    <Trans i18nKey=\"shared-preferences.fields.locale-preference-label\">Region format</Trans>\n                  </span>\n                  <FeatureBadge featureState={FeatureState.experimental} />\n                </Label>\n              }\n              description={t(\n                'shared-preferences.fields.locale-preference-description',\n                'Choose your region to see the corresponding date, time, and number format'\n              )}\n              data-testid=\"User preferences locale drop down\"\n            >\n              <Combobox\n                value={this.localeOptions.find((loc) => loc.value === locale)?.value || ''}\n                onChange={(locale: ComboboxOption | null) => this.onLocaleChanged(locale?.value ?? '')}\n                options={this.localeOptions}\n                placeholder={t('shared-preferences.fields.locale-preference-placeholder', 'Choose region')}\n                id=\"locale-preference-select\"\n              />\n            </Field>\n          )}\n        </FieldSet>\n        <Button\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"primary\"\n          data-testid={selectors.components.UserProfile.preferencesSaveButton}\n        >\n          <Trans i18nKey=\"common.save\">Save</Trans>\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default SharedPreferences;\n\nconst getStyles = stylesFactory(() => {\n  return {\n    labelText: css({\n      marginRight: '6px',\n    }),\n    form: css({\n      width: '100%',\n      maxWidth: '600px',\n    }),\n  };\n});\n\nfunction getTranslatedThemeName(theme: ThemeRegistryItem) {\n  switch (theme.id) {\n    case 'dark':\n      return t('shared.preferences.theme.dark-label', 'Dark');\n    case 'light':\n      return t('shared.preferences.theme.light-label', 'Light');\n    case 'system':\n      return t('shared.preferences.theme.system-label', 'System preference');\n    default:\n      return theme.name;\n  }\n}\n"],"names":["LOCALES","getLanguageOptions","languageOptions","v","a","b","getLocaleOptions","localeOptions","SharedPreferences","props","event","homeDashboardUID","theme","timezone","weekStart","language","locale","queryHistory","navbar","value","dashboardUID","PreferencesService","themes","getSelectableThemes","getTranslatedThemeName","prefs","isLoading","isSubmitting","disabled","styles","getStyles","currentThemeOption","x","FieldSet","Field","config","TextLink","Combobox","Label","DashboardPicker","selectors","TimeZonePicker","WeekStartPicker","FeatureBadge","lang","loc","Button","stylesFactory"],"sourceRoot":""}