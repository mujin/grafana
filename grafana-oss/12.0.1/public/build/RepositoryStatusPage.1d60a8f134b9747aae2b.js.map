{"version":3,"file":"RepositoryStatusPage.1d60a8f134b9747aae2b.js","mappings":"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","sources":["webpack://grafana/./public/app/features/explore/TraceView/components/Theme.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/common/CopyIcon.tsx","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/jsonMarkup.js","webpack://grafana/./public/app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/KeyValuesTable.tsx","webpack://grafana/./public/app/features/provisioning/Job/JobSummary.tsx","webpack://grafana/./public/app/features/provisioning/Repository/DeleteRepositoryButton.tsx","webpack://grafana/./public/app/features/provisioning/File/FilesView.tsx","webpack://grafana/./public/app/features/provisioning/Repository/RepositoryActions.tsx","webpack://grafana/./public/app/features/provisioning/hooks/useRepositoryAllJobs.ts","webpack://grafana/./public/app/features/provisioning/Job/RecentJobs.tsx","webpack://grafana/./public/app/features/provisioning/Repository/CheckRepository.tsx","webpack://grafana/./public/app/features/provisioning/Repository/RepositoryHealth.tsx","webpack://grafana/./public/app/features/provisioning/Repository/RepositoryOverview.tsx","webpack://grafana/./public/app/features/provisioning/Repository/RepositoryResources.tsx","webpack://grafana/./public/app/features/provisioning/Repository/RepositoryStatusPage.tsx","webpack://grafana/./public/app/features/provisioning/Repository/SyncRepository.tsx","webpack://grafana/./public/app/features/provisioning/Shared/StatusBadge.tsx","webpack://grafana/./public/app/features/provisioning/utils/time.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\n/**\n * Tries to get a dark variant color. Either by simply inverting the luminosity and darkening or lightening the color\n * a bit, or if base is provided, tries 2 variants of lighter and darker colors and checks which is more readable with\n * the base.\n * @param theme\n * @param hex\n * @param base\n */\nexport function autoColor(theme: GrafanaTheme2, hex: string, base?: string) {\n  if (theme.isLight) {\n    return hex;\n  } else {\n    if (base) {\n      const color = tinycolor(hex);\n      return tinycolor\n        .mostReadable(\n          base,\n          [\n            color.clone().lighten(25),\n            color.clone().lighten(10),\n            color,\n            color.clone().darken(10),\n            color.clone().darken(25),\n          ],\n          {\n            includeFallbackColors: false,\n          }\n        )\n        .toHex8String();\n    }\n    const color = tinycolor(hex).toHsl();\n    color.l = 1 - color.l;\n    const newColor = tinycolor(color);\n    return newColor.isLight() ? newColor.darken(5).toHex8String() : newColor.lighten(5).toHex8String();\n  }\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { useState } from 'react';\n\nimport { Button, IconName, Tooltip, useStyles2 } from '@grafana/ui';\n\nconst getStyles = () => ({\n  CopyIcon: css({\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: 'inherit',\n    height: '100%',\n    overflow: 'hidden',\n    '&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.25)',\n      color: 'inherit',\n    },\n  }),\n});\n\ntype PropsType = {\n  className?: string;\n  copyText: string;\n  icon?: IconName;\n  tooltipTitle: string;\n};\n\nexport default function CopyIcon({ copyText, icon = 'copy', tooltipTitle }: PropsType) {\n  const styles = useStyles2(getStyles);\n\n  const [hasCopied, setHasCopied] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(copyText);\n    setHasCopied(true);\n  };\n\n  return (\n    <Tooltip content={hasCopied ? 'Copied' : tooltipTitle}>\n      <Button className={cx(styles.CopyIcon)} type=\"button\" icon={icon} onClick={handleClick} />\n    </Tooltip>\n  );\n}\n","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Mathias Buus\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst INDENT = '    ';\n\nfunction inlineRule(objRule) {\n  let str = '';\n  objRule &&\n    Object.keys(objRule).forEach(function (rule) {\n      str += rule + ':' + objRule[rule] + ';';\n    });\n  return str;\n}\n\nfunction Stylize(styleFile) {\n  function styleClass(cssClass) {\n    return 'class=\"' + cssClass + '\"';\n  }\n\n  function styleInline(cssClass) {\n    return 'style=\"' + inlineRule(styleFile['.' + cssClass]) + '\"';\n  }\n\n  if (!styleFile) {\n    return styleClass;\n  }\n  return styleInline;\n}\n\nfunction type(doc) {\n  if (doc === null) {\n    return 'null';\n  }\n  if (Array.isArray(doc)) {\n    return 'array';\n  }\n  if (typeof doc === 'string' && /^https?:/.test(doc)) {\n    return 'link';\n  }\n  if (typeof doc === 'object' && typeof doc.toISOString === 'function') {\n    return 'date';\n  }\n\n  return typeof doc;\n}\n\nfunction escape(str) {\n  return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\nexport default function jsonMarkup(doc, styleFile) {\n  let indent = '';\n  const style = Stylize(styleFile);\n\n  let forEach = function (list, start, end, fn) {\n    if (!list.length) {\n      return start + ' ' + end;\n    }\n\n    let out = start + '\\n';\n\n    indent += INDENT;\n    list.forEach(function (key, i) {\n      out += indent + fn(key) + (i < list.length - 1 ? ',' : '') + '\\n';\n    });\n    indent = indent.slice(0, -INDENT.length);\n\n    return out + indent + end;\n  };\n\n  function visit(obj) {\n    if (obj === undefined) {\n      return '';\n    }\n\n    switch (type(obj)) {\n      case 'boolean':\n        return '<span ' + style('json-markup-bool') + '>' + obj + '</span>';\n\n      case 'number':\n        return '<span ' + style('json-markup-number') + '>' + obj + '</span>';\n\n      case 'date':\n        return '<span class=\"json-markup-string\">\"' + escape(obj.toISOString()) + '\"</span>';\n\n      case 'null':\n        return '<span ' + style('json-markup-null') + '>null</span>';\n\n      case 'string':\n        return '<span ' + style('json-markup-string') + '>\"' + escape(obj.replace(/\\n/g, '\\n' + indent)) + '\"</span>';\n\n      case 'link':\n        return (\n          '<span ' + style('json-markup-string') + '>\"<a href=\"' + encodeURI(obj) + '\">' + escape(obj) + '</a>\"</span>'\n        );\n\n      case 'array':\n        return forEach(obj, '[', ']', visit);\n\n      case 'object':\n        const keys = Object.keys(obj).filter(function (key) {\n          return obj[key] !== undefined;\n        });\n\n        return forEach(keys, '{', '}', function (key) {\n          return '<span ' + style('json-markup-key') + '>\"' + escape(key) + '\":</span> ' + visit(obj[key]);\n        });\n    }\n\n    return '';\n  }\n\n  return '<div ' + style('json-markup') + '>' + visit(doc) + '</div>';\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { css } from '@emotion/css';\nimport cx from 'classnames';\nimport { PropsWithChildren } from 'react';\nimport * as React from 'react';\n\nimport { GrafanaTheme2, TraceKeyValuePair } from '@grafana/data';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nimport { autoColor } from '../../Theme';\nimport CopyIcon from '../../common/CopyIcon';\nimport { TraceLink, TNil } from '../../types';\n\nimport jsonMarkup from './jsonMarkup';\n\nconst copyIconClassName = 'copyIcon';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    KeyValueTable: css({\n      label: 'KeyValueTable',\n      background: autoColor(theme, '#fff'),\n      border: `1px solid ${autoColor(theme, '#ddd')}`,\n      marginBottom: '0.5rem',\n      maxHeight: '450px',\n      overflow: 'auto',\n    }),\n    table: css({\n      width: '100%',\n    }),\n    body: css({\n      label: 'body',\n      verticalAlign: 'baseline',\n    }),\n    row: css({\n      label: 'row',\n      '& > td': {\n        padding: '0.5rem 0.5rem',\n        height: '30px',\n      },\n      '&:nth-child(2n) > td': {\n        background: autoColor(theme, '#f5f5f5'),\n      },\n      [`&:not(:hover) .${copyIconClassName}`]: {\n        visibility: 'hidden',\n      },\n    }),\n    keyColumn: css({\n      label: 'keyColumn',\n      color: autoColor(theme, '#888'),\n      whiteSpace: 'pre',\n      width: '125px',\n      verticalAlign: 'top',\n    }),\n    copyColumn: css({\n      label: 'copyColumn',\n      textAlign: 'right',\n    }),\n    linkIcon: css({\n      label: 'linkIcon',\n      verticalAlign: 'middle',\n      fontWeight: 'bold',\n    }),\n    jsonTable: css({\n      display: 'inline-block',\n    }),\n  };\n};\n\nconst jsonObjectOrArrayStartRegex = /^(\\[|\\{)/;\n\nfunction parseIfComplexJson(value: unknown) {\n  // if the value is a string representing actual json object or array, then use json-markup\n  if (typeof value === 'string' && jsonObjectOrArrayStartRegex.test(value)) {\n    // otherwise just return as is\n    try {\n      return JSON.parse(value);\n      // eslint-disable-next-line no-empty\n    } catch (_) {}\n  }\n  return value;\n}\n\ninterface LinkValueProps {\n  href: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport const LinkValue = ({ href, title = '', children }: PropsWithChildren<LinkValueProps>) => {\n  return (\n    <a href={href} title={title} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children} <Icon name=\"external-link-alt\" />\n    </a>\n  );\n};\n\nexport type KeyValuesTableProps = {\n  data: TraceKeyValuePair[];\n  linksGetter?: ((pairs: TraceKeyValuePair[], index: number) => TraceLink[]) | TNil;\n};\n\nexport default function KeyValuesTable(props: KeyValuesTableProps) {\n  const { data, linksGetter } = props;\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.KeyValueTable)} data-testid=\"KeyValueTable\">\n      <table className={styles.table}>\n        <tbody className={styles.body}>\n          {data.map((row, i) => {\n            const markup = {\n              __html: jsonMarkup(parseIfComplexJson(row.value)),\n            };\n            const jsonTable = <div className={styles.jsonTable} dangerouslySetInnerHTML={markup} />;\n            const links = linksGetter ? linksGetter(data, i) : null;\n            let valueMarkup;\n            if (links && links.length) {\n              // TODO: handle multiple items\n              valueMarkup = (\n                <div>\n                  <LinkValue href={links[0].url} title={links[0].text}>\n                    {jsonTable}\n                  </LinkValue>\n                </div>\n              );\n            } else {\n              valueMarkup = jsonTable;\n            }\n            return (\n              // `i` is necessary in the key because row.key can repeat\n              <tr className={styles.row} key={`${row.key}-${i}`}>\n                <td className={styles.keyColumn} data-testid=\"KeyValueTable--keyColumn\">\n                  {row.key}\n                </td>\n                <td>{valueMarkup}</td>\n                <td className={styles.copyColumn}>\n                  <CopyIcon\n                    className={copyIconClassName}\n                    copyText={JSON.stringify(row, null, 2)}\n                    tooltipTitle=\"Copy JSON\"\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { InteractiveTable, Stack } from '@grafana/ui';\nimport { JobResourceSummary } from 'app/api/clients/provisioning';\n\ntype SummaryCell<T extends keyof JobResourceSummary = keyof JobResourceSummary> = {\n  row: {\n    original: JobResourceSummary;\n  };\n};\n\nconst getSummaryColumns = () => [\n  {\n    id: 'resource',\n    header: 'Resource',\n    cell: ({ row: { original: item } }: SummaryCell) => item.resource,\n  },\n  {\n    id: 'created',\n    header: 'Created',\n    cell: ({ row: { original: item } }: SummaryCell) => item.create?.toString() || '-',\n  },\n  {\n    id: 'deleted',\n    header: 'Deleted',\n    cell: ({ row: { original: item } }: SummaryCell) => item.delete?.toString() || '-',\n  },\n  {\n    id: 'updated',\n    header: 'Updated',\n    cell: ({ row: { original: item } }: SummaryCell) => item.update?.toString() || '-',\n  },\n  {\n    id: 'unchanged',\n    header: 'Unchanged',\n    cell: ({ row: { original: item } }: SummaryCell) => item.noop?.toString() || '-',\n  },\n  {\n    id: 'errors',\n    header: 'Errors',\n    cell: ({ row: { original: item } }: SummaryCell) => item.error?.toString() || '-',\n  },\n  {\n    id: 'total',\n    header: 'Total',\n    cell: ({ row: { original: item } }: SummaryCell) => {\n      const total = (item.create || 0) + (item.delete || 0) + (item.update || 0) + (item.noop || 0) + (item.error || 0);\n      return total.toString();\n    },\n  },\n];\n\ninterface Props {\n  summary: JobResourceSummary[];\n}\n\nexport function JobSummary({ summary }: Props) {\n  return (\n    <Stack direction=\"column\" gap={2}>\n      <InteractiveTable\n        data={summary}\n        columns={getSummaryColumns()}\n        getRowId={(item) => item.resource || ''}\n        pageSize={10}\n      />\n    </Stack>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom-v5-compat';\n\nimport { ConfirmModal, IconButton } from '@grafana/ui';\nimport { useDeleteRepositoryMutation } from 'app/api/clients/provisioning';\nimport { t } from 'app/core/internationalization';\n\ninterface Props {\n  name: string;\n  redirectTo?: string;\n}\n\nexport function DeleteRepositoryButton({ name, redirectTo }: Props) {\n  const [deleteRepository, request] = useDeleteRepositoryMutation();\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (request.isSuccess) {\n      setShowModal(false);\n      if (redirectTo) {\n        navigate(redirectTo);\n      }\n    }\n  }, [request.isSuccess, redirectTo, navigate]);\n\n  const onConfirm = useCallback(() => {\n    deleteRepository({ name });\n  }, [deleteRepository, name]);\n\n  return (\n    <>\n      <IconButton\n        name=\"trash-alt\"\n        tooltip={t('provisioning.delete-repository-button.tooltip-delete-this-repository', 'Delete this repository')}\n        disabled={request.isLoading}\n        onClick={() => {\n          setShowModal(true);\n        }}\n      />\n      <ConfirmModal\n        isOpen={showModal}\n        title={t('provisioning.delete-repository-button.title-delete-repository', 'Delete repository config')}\n        body={t(\n          'provisioning.delete-repository-button.confirm-delete-repository',\n          'Are you sure you want to delete the repository config?'\n        )}\n        confirmText={t('provisioning.delete-repository-button.button-delete', 'Delete')}\n        onConfirm={onConfirm}\n        onDismiss={() => setShowModal(false)}\n      />\n    </>\n  );\n}\n","import { useState } from 'react';\n\nimport { CellProps, Column, FilterInput, InteractiveTable, LinkButton, Spinner, Stack } from '@grafana/ui';\nimport { Repository, useGetRepositoryFilesQuery } from 'app/api/clients/provisioning';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { PROVISIONING_URL } from '../constants';\nimport { FileDetails } from '../types';\n\ninterface FilesViewProps {\n  repo: Repository;\n}\n\ntype FileCell<T extends keyof FileDetails = keyof FileDetails> = CellProps<FileDetails, FileDetails[T]>;\n\nexport function FilesView({ repo }: FilesViewProps) {\n  const name = repo.metadata?.name ?? '';\n  const query = useGetRepositoryFilesQuery({ name });\n  const [searchQuery, setSearchQuery] = useState('');\n  const data = [...(query.data?.items ?? [])].filter((file) =>\n    file.path.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const columns: Array<Column<FileDetails>> = [\n    {\n      id: 'path',\n      header: 'Path',\n      sortType: 'string',\n      cell: ({ row: { original } }: FileCell<'path'>) => {\n        const { path } = original;\n        return <a href={`${PROVISIONING_URL}/${name}/file/${path}`}>{path}</a>;\n      },\n    },\n    {\n      id: 'size',\n      header: 'Size (KB)',\n      cell: ({ row: { original } }: FileCell<'size'>) => {\n        const { size } = original;\n        return (parseInt(size, 10) / 1024).toFixed(2);\n      },\n      sortType: 'number',\n    },\n    {\n      id: 'hash',\n      header: 'Hash',\n      sortType: 'string',\n    },\n    {\n      id: 'actions',\n      header: '',\n      cell: ({ row: { original } }: FileCell<'path'>) => {\n        const { path } = original;\n        return (\n          <Stack>\n            {(path.endsWith('.json') || path.endsWith('.yaml') || path.endsWith('.yml')) && (\n              <LinkButton href={`${PROVISIONING_URL}/${name}/file/${path}`}>\n                <Trans i18nKey=\"provisioning.files-view.columns.view\">View</Trans>\n              </LinkButton>\n            )}\n            <LinkButton href={`${PROVISIONING_URL}/${name}/history/${path}`}>\n              <Trans i18nKey=\"provisioning.files-view.columns.history\">History</Trans>\n            </LinkButton>\n          </Stack>\n        );\n      },\n    },\n  ];\n\n  if (query.isLoading) {\n    return (\n      <Stack justifyContent={'center'} alignItems={'center'}>\n        <Spinner />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack grow={1} direction={'column'} gap={2}>\n      <Stack gap={2}>\n        <FilterInput\n          placeholder={t('provisioning.files-view.placeholder-search', 'Search')}\n          autoFocus={true}\n          value={searchQuery}\n          onChange={setSearchQuery}\n        />\n      </Stack>\n      <InteractiveTable columns={columns} data={data} pageSize={25} getRowId={(f: FileDetails) => String(f.path)} />\n    </Stack>\n  );\n}\n","import { Button, LinkButton, Stack } from '@grafana/ui';\nimport { Repository } from 'app/api/clients/provisioning';\nimport { Trans } from 'app/core/internationalization';\n\nimport { StatusBadge } from '../Shared/StatusBadge';\nimport { PROVISIONING_URL } from '../constants';\nimport { getRepoHref } from '../utils/git';\n\nimport { DeleteRepositoryButton } from './DeleteRepositoryButton';\nimport { SyncRepository } from './SyncRepository';\n\ninterface RepositoryActionsProps {\n  repository: Repository;\n}\n\nexport function RepositoryActions({ repository }: RepositoryActionsProps) {\n  const name = repository.metadata?.name ?? '';\n  const repoHref = getRepoHref(repository.spec?.github);\n\n  return (\n    <Stack>\n      <StatusBadge repo={repository} />\n      {repoHref && (\n        <Button variant=\"secondary\" icon=\"github\" onClick={() => window.open(repoHref, '_blank')}>\n          <Trans i18nKey=\"provisioning.repository-actions.source-code\">Source Code</Trans>\n        </Button>\n      )}\n      <SyncRepository repository={repository} />\n      <LinkButton variant=\"secondary\" icon=\"cog\" href={`${PROVISIONING_URL}/${name}/edit`}>\n        <Trans i18nKey=\"provisioning.repository-actions.settings\">Settings</Trans>\n      </LinkButton>\n      <DeleteRepositoryButton name={name} redirectTo={PROVISIONING_URL} />\n    </Stack>\n  );\n}\n","import { useDebounce } from 'react-use';\n\nimport { Job, useGetRepositoryJobsQuery, useListJobQuery } from 'app/api/clients/provisioning';\n\ninterface RepositoryHistoricalJobsArgs {\n  /** Limits the returned jobs to those which apply to this repository. */\n  repositoryName: string;\n}\n\nfunction labelSelectorActive(repositoryName?: string): string | undefined {\n  return repositoryName ? `provisioning.grafana.app/repository=${repositoryName}` : undefined;\n}\n\nexport function useRepositoryAllJobs({\n  repositoryName,\n}: RepositoryHistoricalJobsArgs): [\n  Job[] | undefined,\n  ReturnType<typeof useListJobQuery>,\n  ReturnType<typeof useGetRepositoryJobsQuery>,\n] {\n  const activeQuery = useListJobQuery({\n    labelSelector: labelSelectorActive(repositoryName),\n    watch: true,\n  });\n  const historicQuery = useGetRepositoryJobsQuery({ name: repositoryName! });\n  useDebounce(\n    () => {\n      historicQuery.refetch(); // fetch again when the watch value changes\n    },\n    250,\n    [activeQuery.data]\n  );\n\n  const concatedItems = [...(activeQuery.data?.items ?? []), ...(historicQuery.data?.items ?? [])];\n  const collator = new Intl.Collator(undefined, { numeric: true });\n  const sortedItems = concatedItems.slice().sort((a, b) => {\n    const aTime = a.metadata?.creationTimestamp ?? '';\n    const bTime = b.metadata?.creationTimestamp ?? '';\n\n    return collator.compare(bTime, aTime); // Reverse order for newest first\n  });\n\n  return [sortedItems, activeQuery, historicQuery];\n}\n","import { useMemo } from 'react';\n\nimport { intervalToAbbreviatedDurationString, TraceKeyValuePair } from '@grafana/data';\nimport { Alert, Badge, Box, Card, Icon, InteractiveTable, Spinner, Stack, Text } from '@grafana/ui';\nimport { Job, Repository, SyncStatus } from 'app/api/clients/provisioning';\nimport { Trans, t } from 'app/core/internationalization';\nimport KeyValuesTable from 'app/features/explore/TraceView/components/TraceTimelineViewer/SpanDetail/KeyValuesTable';\n\nimport { useRepositoryAllJobs } from '../hooks/useRepositoryAllJobs';\nimport { formatTimestamp } from '../utils/time';\n\nimport { JobSummary } from './JobSummary';\n\ninterface Props {\n  repo: Repository;\n}\n\ntype JobCell = {\n  row: {\n    original: Job;\n  };\n};\n\nconst getStatusColor = (state?: SyncStatus['state']) => {\n  switch (state) {\n    case 'success':\n      return 'green';\n    case 'working':\n    case 'pending':\n      return 'orange';\n    case 'error':\n      return 'red';\n    default:\n      return 'darkgrey';\n  }\n};\n\nconst getJobColumns = () => [\n  {\n    id: 'status',\n    header: t('provisioning.recent-jobs.column-status', 'Status'),\n    cell: ({ row: { original: job } }: JobCell) => (\n      <Badge\n        text={job.status?.state || ''}\n        color={getStatusColor(job.status?.state)}\n        icon={job.status?.state === 'working' ? 'spinner' : undefined}\n      />\n    ),\n  },\n  {\n    id: 'action',\n    header: t('provisioning.recent-jobs.column-action', 'Action'),\n    cell: ({ row: { original: job } }: JobCell) => job.spec?.action,\n  },\n  {\n    id: 'started',\n    header: t('provisioning.recent-jobs.column-started', 'Started'),\n    cell: ({ row: { original: job } }: JobCell) => formatTimestamp(job.status?.started),\n  },\n  {\n    id: 'duration',\n    header: t('provisioning.recent-jobs.column-duration', 'Duration'),\n    cell: ({ row: { original: job } }: JobCell) => {\n      const interval = {\n        start: job.status?.started ?? 0,\n        end: job.status?.finished ?? Date.now(),\n      };\n      if (!interval.start) {\n        return null;\n      }\n      const elapsed = interval.end - interval.start;\n      if (elapsed < 1000) {\n        return `${elapsed}ms`;\n      }\n      return intervalToAbbreviatedDurationString(interval, true);\n    },\n  },\n  {\n    id: 'message',\n    header: t('provisioning.recent-jobs.column-message', 'Message'),\n    cell: ({ row: { original: job } }: JobCell) => <span>{job.status?.message}</span>,\n  },\n];\n\ninterface ExpandedRowProps {\n  row: Job;\n}\n\nfunction ExpandedRow({ row }: ExpandedRowProps) {\n  const hasSummary = Boolean(row.status?.summary?.length);\n  const hasErrors = Boolean(row.status?.errors?.length);\n  const hasSpec = Boolean(row.spec);\n\n  if (!hasSummary && !hasErrors && !hasSpec) {\n    return null;\n  }\n\n  // the action is already showing\n  const data = useMemo(() => {\n    const v: TraceKeyValuePair[] = [];\n    const action = row.spec?.action;\n    if (!action) {\n      return v;\n    }\n    const def = row.spec?.[action];\n    if (!def) {\n      return v;\n    }\n    for (const [key, value] of Object.entries(def)) {\n      v.push({ key, value });\n    }\n    return v;\n  }, [row.spec]);\n\n  return (\n    <Box padding={2}>\n      <Stack direction=\"column\" gap={2}>\n        {hasSpec && (\n          <Stack direction=\"column\">\n            <Text variant=\"body\" color=\"secondary\">\n              <Trans i18nKey=\"provisioning.expanded-row.job-specification\">Job Specification</Trans>\n            </Text>\n            <KeyValuesTable data={data} />\n          </Stack>\n        )}\n        {hasErrors && (\n          <Stack direction=\"column\">\n            {row.status?.errors?.map(\n              (error, index) =>\n                error.trim() && (\n                  <Alert key={index} severity=\"error\" title={t('provisioning.expanded-row.title-error', 'Error')}>\n                    <Stack alignItems=\"center\" gap={1}>\n                      <Icon name=\"exclamation-circle\" size=\"sm\" />\n                      {error}\n                    </Stack>\n                  </Alert>\n                )\n            )}\n          </Stack>\n        )}\n        {hasSummary && (\n          <Stack direction=\"column\" gap={2}>\n            <Text variant=\"body\" color=\"secondary\">\n              <Trans i18nKey=\"provisioning.expanded-row.summary\">Summary</Trans>\n            </Text>\n            <JobSummary summary={row.status!.summary!} />\n          </Stack>\n        )}\n      </Stack>\n    </Box>\n  );\n}\n\nfunction EmptyState() {\n  return (\n    <Stack direction={'column'} alignItems={'center'}>\n      <Text color=\"secondary\">\n        <Trans i18nKey=\"provisioning.empty-state.no-jobs\">No jobs...</Trans>\n      </Text>\n    </Stack>\n  );\n}\n\nfunction ErrorLoading(typ: string, error: string) {\n  return (\n    <Alert\n      title={t('provisioning.recent-jobs.error-loading', 'Error loading {{type}}', { type: typ })}\n      severity=\"error\"\n    >\n      <pre>{JSON.stringify(error)}</pre>\n    </Alert>\n  );\n}\n\nfunction Loading() {\n  return (\n    <Stack direction={'column'} alignItems={'center'}>\n      <Spinner />\n    </Stack>\n  );\n}\n\nexport function RecentJobs({ repo }: Props) {\n  // TODO: Decide on whether we want to wait on historic jobs to show the current ones.\n  //   Gut feeling is that current jobs are far more important to show than historic ones.\n  const [jobs, activeQuery, historicQuery] = useRepositoryAllJobs({\n    repositoryName: repo.metadata?.name ?? 'x',\n  });\n  const jobColumns = useMemo(() => getJobColumns(), []);\n\n  let description: JSX.Element;\n  if (activeQuery.isLoading || historicQuery.isLoading) {\n    description = Loading();\n  } else if (activeQuery.isError) {\n    description = ErrorLoading(t('provisioning.recent-jobs.active-jobs', 'active jobs'), activeQuery.error);\n    // TODO: Figure out what to do if historic fails. Maybe a separate card?\n  } else if (!jobs?.length) {\n    description = <EmptyState />;\n  } else {\n    description = (\n      <InteractiveTable\n        data={jobs}\n        columns={jobColumns}\n        getRowId={(item) => `${item.metadata?.uid}`}\n        renderExpandedRow={(row) => <ExpandedRow row={row} />}\n        pageSize={10}\n      />\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Heading>\n        <Trans i18nKey=\"provisioning.recent-jobs.jobs\">Jobs</Trans>\n      </Card.Heading>\n      <Card.Description>{description}</Card.Description>\n    </Card>\n  );\n}\n","import { Button, Spinner } from '@grafana/ui';\nimport { Repository, useCreateRepositoryTestMutation } from 'app/api/clients/provisioning';\nimport { Trans } from 'app/core/internationalization';\n\ninterface Props {\n  repository: Repository;\n}\n\nexport function CheckRepository({ repository }: Props) {\n  const [testRepo, testQuery] = useCreateRepositoryTestMutation();\n  const name = repository.metadata?.name;\n\n  const onClick = () => {\n    if (!name) {\n      return;\n    }\n    testRepo({ name, body: {} });\n  };\n\n  if (testQuery.isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <Button icon=\"check-circle\" variant={'secondary'} disabled={testQuery.isLoading || !name} onClick={onClick}>\n        <Trans i18nKey=\"provisioning.check-repository.check\">Check</Trans>\n      </Button>\n    </>\n  );\n}\n","import { Stack, Alert, Text } from '@grafana/ui';\nimport { HealthStatus } from 'app/api/clients/provisioning';\nimport { t, Trans } from 'app/core/internationalization';\n\ninterface Props {\n  health: HealthStatus;\n}\n\nexport function RepositoryHealth({ health }: Props) {\n  return (\n    <Stack gap={2} direction=\"column\" alignItems=\"flex-start\">\n      {health.healthy ? (\n        <Alert\n          title={t('provisioning.repository-health.title-repository-is-healthy', 'Repository is healthy')}\n          severity=\"success\"\n          style={{ width: '100%' }}\n        >\n          <Trans i18nKey=\"provisioning.repository-health.no-errors-found\">No errors found</Trans>\n        </Alert>\n      ) : (\n        <Alert\n          title={t('provisioning.repository-health.title-repository-is-unhealthy', 'Repository is unhealthy')}\n          severity=\"warning\"\n          style={{ width: '100%' }}\n        >\n          {health.message && health.message.length > 0 && (\n            <>\n              <Text>\n                <Trans i18nKey=\"provisioning.repository-health.details\">Details:</Trans>\n              </Text>\n              <ul>\n                {health.message.map((message) => (\n                  <li key={message}>{message}</li>\n                ))}\n              </ul>\n            </>\n          )}\n        </Alert>\n      )}\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useMemo } from 'react';\n\nimport { Box, Card, CellProps, Grid, InteractiveTable, LinkButton, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { Repository, ResourceCount } from 'app/api/clients/provisioning';\nimport { Trans } from 'app/core/internationalization';\n\nimport { RecentJobs } from '../Job/RecentJobs';\nimport { formatTimestamp } from '../utils/time';\n\nimport { CheckRepository } from './CheckRepository';\nimport { RepositoryHealth } from './RepositoryHealth';\nimport { SyncRepository } from './SyncRepository';\n\ntype StatCell<T extends keyof ResourceCount = keyof ResourceCount> = CellProps<ResourceCount, ResourceCount[T]>;\n\nfunction getColumnCount(hasWebhook: boolean): 3 | 4 {\n  return hasWebhook ? 4 : 3;\n}\n\nexport function RepositoryOverview({ repo }: { repo: Repository }) {\n  const styles = useStyles2(getStyles);\n  const status = repo.status;\n  const webhookURL = getWebhookURL(repo);\n  const columns = getColumnCount(Boolean(repo.status?.webhook));\n\n  const resourceColumns = useMemo(\n    () => [\n      {\n        id: 'Resource',\n        header: 'Resource Type',\n        cell: ({ row: { original } }: StatCell<'resource'>) => {\n          return <span>{original.resource}</span>;\n        },\n        size: 'auto',\n      },\n      {\n        id: 'count',\n        header: 'Count',\n        cell: ({ row: { original } }: StatCell<'count'>) => {\n          return <span>{original.count}</span>;\n        },\n        size: 100,\n      },\n    ],\n    []\n  );\n  return (\n    <Box padding={2}>\n      <Stack direction=\"column\" gap={2}>\n        <Grid columns={columns} gap={2}>\n          <div className={styles.cardContainer}>\n            <Card className={styles.card}>\n              <Card.Heading>\n                <Trans i18nKey=\"provisioning.repository-overview.resources\">Resources</Trans>\n              </Card.Heading>\n              <Card.Description>\n                {repo.status?.stats ? (\n                  <InteractiveTable\n                    columns={resourceColumns}\n                    data={repo.status.stats}\n                    getRowId={(r: ResourceCount) => `${r.group}-${r.resource}`}\n                  />\n                ) : null}\n              </Card.Description>\n              <Card.Actions className={styles.actions}>\n                <LinkButton fill=\"outline\" size=\"md\" href={getFolderURL(repo)} icon=\"folder-open\">\n                  <Trans i18nKey=\"provisioning.repository-overview.view-folder\">View Folder</Trans>\n                </LinkButton>\n              </Card.Actions>\n            </Card>\n          </div>\n          {repo.status?.health && (\n            <div className={styles.cardContainer}>\n              <Card className={styles.card}>\n                <Card.Heading>\n                  <Trans i18nKey=\"provisioning.repository-overview.health\">Health</Trans>\n                </Card.Heading>\n                <Card.Description>\n                  <RepositoryHealth health={repo.status?.health} />\n                  <Grid columns={12} gap={1} alignItems=\"baseline\">\n                    <div className={styles.labelColumn}>\n                      <Text color=\"secondary\">\n                        <Trans i18nKey=\"provisioning.repository-overview.status\">Status:</Trans>\n                      </Text>\n                    </div>\n                    <div className={styles.valueColumn}>\n                      <Text variant=\"body\">{status?.health?.healthy ? 'Healthy' : 'Unhealthy'}</Text>\n                    </div>\n\n                    <div className={styles.labelColumn}>\n                      <Text color=\"secondary\">\n                        <Trans i18nKey=\"provisioning.repository-overview.checked\">Checked:</Trans>\n                      </Text>\n                    </div>\n                    <div className={styles.valueColumn}>\n                      <Text variant=\"body\">{formatTimestamp(status?.health?.checked)}</Text>\n                    </div>\n\n                    {!!status?.health?.message?.length && (\n                      <>\n                        <div className={styles.labelColumn}>\n                          <Text color=\"secondary\">\n                            <Trans i18nKey=\"provisioning.repository-overview.messages\">Messages:</Trans>\n                          </Text>\n                        </div>\n                        <div className={styles.valueColumn}>\n                          <Stack gap={1}>\n                            {status.health.message.map((msg, idx) => (\n                              <Text key={idx} variant=\"body\">\n                                {msg}\n                              </Text>\n                            ))}\n                          </Stack>\n                        </div>\n                      </>\n                    )}\n                  </Grid>\n                </Card.Description>\n                <Card.Actions className={styles.actions}>\n                  <CheckRepository repository={repo} />\n                </Card.Actions>\n              </Card>\n            </div>\n          )}\n          <div className={styles.cardContainer}>\n            <Card className={styles.card}>\n              <Card.Heading>\n                <Trans i18nKey=\"provisioning.repository-overview.pull-status\">Pull status</Trans>\n              </Card.Heading>\n              <Card.Description>\n                <Grid columns={12} gap={1} alignItems=\"baseline\">\n                  <div className={styles.labelColumn}>\n                    <Text color=\"secondary\">\n                      <Trans i18nKey=\"provisioning.repository-overview.status\">Status:</Trans>\n                    </Text>\n                  </div>\n                  <div className={styles.valueColumn}>\n                    <Text variant=\"body\">{status?.sync.state ?? 'N/A'}</Text>\n                  </div>\n\n                  <div className={styles.labelColumn}>\n                    <Text color=\"secondary\">\n                      <Trans i18nKey=\"provisioning.repository-overview.job-id\">Job ID:</Trans>\n                    </Text>\n                  </div>\n                  <div className={styles.valueColumn}>\n                    <Text variant=\"body\">{status?.sync.job ?? 'N/A'}</Text>\n                  </div>\n\n                  <div className={styles.labelColumn}>\n                    <Text color=\"secondary\">\n                      <Trans i18nKey=\"provisioning.repository-overview.last-ref\">Last Ref:</Trans>\n                    </Text>\n                  </div>\n                  <div className={styles.valueColumn}>\n                    <Text variant=\"body\">{status?.sync.lastRef ? status.sync.lastRef.substring(0, 7) : 'N/A'}</Text>\n                  </div>\n\n                  <div className={styles.labelColumn}>\n                    <Text color=\"secondary\">\n                      <Trans i18nKey=\"provisioning.repository-overview.started\">Started:</Trans>\n                    </Text>\n                  </div>\n                  <div className={styles.valueColumn}>\n                    <Text variant=\"body\">{formatTimestamp(status?.sync.started)}</Text>\n                  </div>\n\n                  <div className={styles.labelColumn}>\n                    <Text color=\"secondary\">\n                      <Trans i18nKey=\"provisioning.repository-overview.finished\">Finished:</Trans>\n                    </Text>\n                  </div>\n                  <div className={styles.valueColumn}>\n                    <Text variant=\"body\">{formatTimestamp(status?.sync.finished)}</Text>\n                  </div>\n\n                  {!!status?.sync?.message?.length && (\n                    <>\n                      <div className={styles.labelColumn}>\n                        <Text color=\"secondary\">\n                          <Trans i18nKey=\"provisioning.repository-overview.messages\">Messages:</Trans>\n                        </Text>\n                      </div>\n                      <div className={styles.valueColumn}>\n                        <Stack gap={1}>\n                          {status.sync.message.map((msg, idx) => (\n                            <Text key={idx} variant=\"body\">\n                              {msg}\n                            </Text>\n                          ))}\n                        </Stack>\n                      </div>\n                    </>\n                  )}\n                </Grid>\n              </Card.Description>\n              <Card.Actions className={styles.actions}>\n                <SyncRepository repository={repo} />\n              </Card.Actions>\n            </Card>\n          </div>\n          {repo.status?.webhook && (\n            <div className={styles.cardContainer}>\n              <Card className={styles.card}>\n                <Card.Heading>\n                  <Trans i18nKey=\"provisioning.repository-overview.webhook\">Webhook</Trans>\n                </Card.Heading>\n                <Card.Description>\n                  <Grid columns={12} gap={1} alignItems=\"baseline\">\n                    <div className={styles.labelColumn}>\n                      <Text color=\"secondary\">\n                        <Trans i18nKey=\"provisioning.repository-overview.webhook-id\">ID:</Trans>\n                      </Text>\n                    </div>\n                    <div className={styles.valueColumn}>\n                      <Text variant=\"body\">{status?.webhook?.id ?? 'N/A'}</Text>\n                    </div>\n                    <div className={styles.labelColumn}>\n                      <Text color=\"secondary\">\n                        <Trans i18nKey=\"provisioning.repository-overview.webhook-events\">Events:</Trans>\n                      </Text>\n                    </div>\n                    <div className={styles.valueColumn}>\n                      <Text variant=\"body\">{status?.webhook?.subscribedEvents?.join(', ') ?? 'N/A'}</Text>\n                    </div>\n                    <div className={styles.labelColumn}>\n                      <Text color=\"secondary\">\n                        <Trans i18nKey=\"provisioning.repository-overview.webhook-last-event\">Last Event:</Trans>\n                      </Text>\n                    </div>\n                    <div className={styles.valueColumn}>\n                      <Text variant=\"body\">{formatTimestamp(status?.webhook?.lastEvent)}</Text>\n                    </div>\n                  </Grid>\n                </Card.Description>\n                {webhookURL && (\n                  <Card.Actions className={styles.actions}>\n                    <LinkButton fill=\"outline\" href={webhookURL} icon=\"external-link-alt\">\n                      <Trans i18nKey=\"provisioning.repository-overview.webhook-url\">View Webhook</Trans>\n                    </LinkButton>\n                  </Card.Actions>\n                )}\n              </Card>\n            </div>\n          )}\n        </Grid>\n        <div className={styles.cardContainer}>\n          <RecentJobs repo={repo} />\n        </div>\n      </Stack>\n    </Box>\n  );\n}\n\nfunction getFolderURL(repo: Repository) {\n  if (repo.spec?.sync.target === 'folder') {\n    return `/dashboards/f/${repo.metadata?.name}`;\n  }\n  return '/dashboards';\n}\n\nconst getStyles = () => {\n  return {\n    cardContainer: css({\n      height: '100%',\n    }),\n    card: css({\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    }),\n    actions: css({\n      marginTop: 'auto',\n    }),\n    labelColumn: css({\n      gridColumn: 'span 3',\n    }),\n    valueColumn: css({\n      gridColumn: 'span 9',\n    }),\n  };\n};\n\nfunction getWebhookURL(repo: Repository) {\n  const { status, spec } = repo;\n  if (spec?.type === 'github' && status?.webhook?.url && spec.github?.url) {\n    return `${spec.github.url}/settings/hooks/${status.webhook?.id}`;\n  }\n  return undefined;\n}\n","import { useMemo, useState } from 'react';\n\nimport { CellProps, Column, FilterInput, InteractiveTable, Link, LinkButton, Spinner, Stack } from '@grafana/ui';\nimport { Repository, ResourceListItem, useGetRepositoryResourcesQuery } from 'app/api/clients/provisioning';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { PROVISIONING_URL } from '../constants';\n\ninterface RepoProps {\n  repo: Repository;\n}\n\ntype ResourceCell<T extends keyof ResourceListItem = keyof ResourceListItem> = CellProps<\n  ResourceListItem,\n  ResourceListItem[T]\n>;\n\nexport function RepositoryResources({ repo }: RepoProps) {\n  const name = repo.metadata?.name ?? '';\n  const query = useGetRepositoryResourcesQuery({ name });\n  const [searchQuery, setSearchQuery] = useState('');\n  const data = (query.data?.items ?? []).filter((Resource) =>\n    Resource.path.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const columns: Array<Column<ResourceListItem>> = useMemo(\n    () => [\n      {\n        id: 'title',\n        header: 'Title',\n        sortType: 'string',\n        cell: ({ row: { original } }: ResourceCell<'title'>) => {\n          const { resource, name, title } = original;\n          if (resource === 'dashboards') {\n            return <a href={`/d/${name}`}>{title}</a>;\n          }\n          if (resource === 'folders') {\n            return <a href={`/dashboards/f/${name}`}>{title}</a>;\n          }\n          return <span>{title}</span>;\n        },\n      },\n      {\n        id: 'resource',\n        header: 'Type',\n        sortType: 'string',\n        cell: ({ row: { original } }: ResourceCell<'resource'>) => {\n          return <span style={{ textTransform: 'capitalize' }}>{original.resource}</span>;\n        },\n      },\n      {\n        id: 'path',\n        header: 'Path',\n        sortType: 'string',\n        cell: ({ row: { original } }: ResourceCell<'path'>) => {\n          const { resource, name, path } = original;\n          if (resource === 'dashboards') {\n            return <a href={`/d/${name}`}>{path}</a>;\n          }\n          return <span>{path}</span>;\n        },\n      },\n      {\n        id: 'hash',\n        header: 'Hash',\n        sortType: 'string',\n        cell: ({ row: { original } }: ResourceCell<'hash'>) => {\n          const { hash } = original;\n          return <span title={hash}>{hash.substring(0, 7)}</span>;\n        },\n      },\n      {\n        id: 'folder',\n        header: 'Folder',\n        sortType: 'string',\n        cell: ({ row: { original } }: ResourceCell<'title'>) => {\n          const { folder } = original;\n          if (folder?.length) {\n            return <Link href={`/dashboards/f/${folder}`}>{folder}</Link>;\n          }\n          return <span></span>;\n        },\n      },\n      {\n        id: 'actions',\n        header: '',\n        cell: ({ row: { original } }: ResourceCell) => {\n          const { resource, name, path } = original;\n          return (\n            <Stack>\n              {resource === 'dashboards' && (\n                <LinkButton href={`/d/${name}`}>\n                  <Trans i18nKey=\"provisioning.repository-resources.columns.view-dashboard\">View</Trans>\n                </LinkButton>\n              )}\n              {resource === 'folders' && (\n                <LinkButton href={`/dashboards/f/${name}`}>\n                  <Trans i18nKey=\"provisioning.repository-resources.columns.view-folder\">View</Trans>\n                </LinkButton>\n              )}\n              <LinkButton href={`${PROVISIONING_URL}/${repo.metadata?.name}/history/${path}`}>\n                <Trans i18nKey=\"provisioning.repository-resources.columns.history\">History</Trans>\n              </LinkButton>\n            </Stack>\n          );\n        },\n      },\n    ],\n    [repo.metadata?.name]\n  );\n\n  if (query.isLoading) {\n    return (\n      <Stack justifyContent={'center'} alignItems={'center'}>\n        <Spinner />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack grow={1} direction={'column'} gap={2}>\n      <Stack gap={2}>\n        <FilterInput\n          placeholder={t('provisioning.repository-resources.placeholder-search', 'Search')}\n          autoFocus={true}\n          value={searchQuery}\n          onChange={setSearchQuery}\n        />\n      </Stack>\n      <InteractiveTable\n        columns={columns}\n        data={data}\n        pageSize={25}\n        getRowId={(r: ResourceListItem) => String(r.path)}\n      />\n    </Stack>\n  );\n}\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport { useParams } from 'react-router-dom-v5-compat';\n\nimport { SelectableValue, urlUtil } from '@grafana/data';\nimport { Alert, EmptyState, Spinner, Tab, TabContent, TabsBar, Text, TextLink } from '@grafana/ui';\nimport { useGetFrontendSettingsQuery, useListRepositoryQuery } from 'app/api/clients/provisioning';\nimport { Page } from 'app/core/components/Page/Page';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { t, Trans } from 'app/core/internationalization';\nimport { isNotFoundError } from 'app/features/alerting/unified/api/util';\n\nimport { FilesView } from '../File/FilesView';\nimport { PROVISIONING_URL } from '../constants';\n\nimport { RepositoryActions } from './RepositoryActions';\nimport { RepositoryOverview } from './RepositoryOverview';\nimport { RepositoryResources } from './RepositoryResources';\n\nenum TabSelection {\n  Overview = 'overview',\n  Resources = 'resources',\n  Files = 'files',\n}\n\nexport default function RepositoryStatusPage() {\n  const { name = '' } = useParams();\n\n  const query = useListRepositoryQuery({\n    fieldSelector: `metadata.name=${name}`,\n    watch: true,\n  });\n  const data = query.data?.items?.[0];\n  const location = useLocation();\n  const [queryParams] = useQueryParams();\n  const settings = useGetFrontendSettingsQuery();\n  const tab = queryParams['tab'] ?? TabSelection.Overview;\n\n  const notFound = query.isError && isNotFoundError(query.error);\n\n  const tabInfo = useMemo<SelectableValue<TabSelection>>(\n    () => [\n      {\n        value: TabSelection.Overview,\n        label: t('provisioning.repository-status-page.tab-overview', 'Overview'),\n        title: t('provisioning.repository-status-page.tab-overview-title', 'Repository overview'),\n      },\n      {\n        value: TabSelection.Resources,\n        label: t('provisioning.repository-status-page.tab-resources', 'Resources'),\n        title: t('provisioning.repository-status-page.tab-resources-title', 'Resources saved in grafana database'),\n      },\n      {\n        value: TabSelection.Files,\n        label: t('provisioning.repository-status-page.tab-files', 'Files'),\n        title: t('provisioning.repository-status-page.tab-files-title', 'The raw file list from the repository'),\n      },\n    ],\n    []\n  );\n\n  return (\n    <Page\n      navId=\"provisioning\"\n      pageNav={{\n        text: data?.spec?.title ?? t('provisioning.repository-status-page.title', 'Repository Status'),\n        subTitle: data?.spec?.description,\n      }}\n      actions={data && <RepositoryActions repository={data} />}\n    >\n      <Page.Contents isLoading={query.isLoading}>\n        {settings.data?.legacyStorage && (\n          <Alert\n            title={t('provisioning.repository-status-page.title-legacy-storage', 'Legacy Storage')}\n            severity=\"error\"\n          >\n            <Trans i18nKey=\"provisioning.repository-status-page.legacy-storage-message\">\n              Instance is not yet running unified storage -- requires migration wizard\n            </Trans>\n          </Alert>\n        )}\n        {notFound ? (\n          <EmptyState\n            message={t('provisioning.repository-status-page.not-found-message', 'Repository not found')}\n            variant=\"not-found\"\n          >\n            <Text element={'p'}>\n              <Trans i18nKey=\"provisioning.repository-status-page.repository-config-exists-configuration\">\n                Make sure the repository config exists in the configuration file.\n              </Trans>\n            </Text>\n            <TextLink href={PROVISIONING_URL}>\n              <Trans i18nKey=\"provisioning.repository-status-page.back-to-repositories\">Back to repositories</Trans>\n            </TextLink>\n          </EmptyState>\n        ) : (\n          <>\n            {data ? (\n              <>\n                <TabsBar>\n                  {tabInfo.map((t: SelectableValue) => (\n                    <Tab\n                      href={urlUtil.renderUrl(location.pathname, { ...queryParams, tab: t.value })}\n                      key={t.value}\n                      label={t.label!}\n                      active={tab === t.value}\n                      title={t.title}\n                    />\n                  ))}\n                </TabsBar>\n                <TabContent>\n                  {data?.metadata?.deletionTimestamp && (\n                    <Alert\n                      title={t('provisioning.repository-status-page.title-queued-for-deletion', 'Queued for deletion')}\n                      severity=\"warning\"\n                    >\n                      <Spinner />{' '}\n                      <Trans i18nKey=\"provisioning.repository-status-page.cleaning-up-resources\">\n                        Cleaning up repository resources\n                      </Trans>\n                    </Alert>\n                  )}\n                  {tab === TabSelection.Overview && <RepositoryOverview repo={data} />}\n                  {tab === TabSelection.Resources && <RepositoryResources repo={data} />}\n                  {tab === TabSelection.Files && <FilesView repo={data} />}\n                </TabContent>\n              </>\n            ) : (\n              <div>\n                <Trans i18nKey=\"provisioning.repository-status-page.not-found\">not found</Trans>\n              </div>\n            )}\n          </>\n        )}\n      </Page.Contents>\n    </Page>\n  );\n}\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom-v5-compat';\n\nimport { Button, ConfirmModal } from '@grafana/ui';\nimport { Repository, useCreateRepositoryJobsMutation } from 'app/api/clients/provisioning';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { PROVISIONING_URL } from '../constants';\n\ninterface Props {\n  repository: Repository;\n}\n\nexport function SyncRepository({ repository }: Props) {\n  const [createJob, jobQuery] = useCreateRepositoryJobsMutation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const name = repository.metadata?.name;\n\n  const onClick = () => {\n    if (!name) {\n      return;\n    }\n    createJob({\n      name,\n      jobSpec: {\n        pull: {\n          incremental: false, // will queue a full resync job\n        },\n      },\n    });\n    setIsModalOpen(false);\n  };\n\n  const isHealthy = Boolean(repository.status?.health.healthy);\n\n  return (\n    <>\n      <Button\n        icon=\"cloud-download\"\n        variant={'secondary'}\n        tooltip={\n          isHealthy\n            ? undefined\n            : t('provisioning.sync-repository.tooltip-unhealthy-repository', 'Unable to pull an unhealthy repository')\n        }\n        disabled={jobQuery.isLoading || !name || !isHealthy}\n        onClick={onClick}\n      >\n        <Trans i18nKey=\"provisioning.sync-repository.pull\">Pull</Trans>\n      </Button>\n      {!repository.spec?.sync.enabled && (\n        <ConfirmModal\n          isOpen={isModalOpen}\n          title={t('provisioning.sync-repository.title-pull-not-enabled', 'Pull is not enabled')}\n          body={t('provisioning.sync-repository.body-edit-configuration', 'Edit the configuration')}\n          confirmText={t('provisioning.sync-repository.button-edit', 'Edit')}\n          onConfirm={() => navigate(`${PROVISIONING_URL}/${name}/edit`)}\n          onDismiss={() => setIsModalOpen(false)}\n        />\n      )}\n    </>\n  );\n}\n","import { locationService } from '@grafana/runtime';\nimport { Badge, BadgeColor, IconName } from '@grafana/ui';\nimport { Repository } from 'app/api/clients/provisioning';\n\nimport { PROVISIONING_URL } from '../constants';\n\ninterface StatusBadgeProps {\n  repo?: Repository;\n}\n\nexport function StatusBadge({ repo }: StatusBadgeProps) {\n  if (!repo) {\n    return null;\n  }\n\n  let tooltip: string | undefined = undefined;\n  let color: BadgeColor = 'purple';\n  let text = 'Unknown';\n  let icon: IconName = 'exclamation-triangle';\n\n  if (repo.metadata?.deletionTimestamp) {\n    color = 'red';\n    text = 'Deleting';\n    icon = 'spinner';\n  } else if (!repo.spec?.sync?.enabled) {\n    color = 'red';\n    text = 'Automatic pulling disabled';\n    icon = 'info-circle';\n  } else if (!repo.status?.sync?.state?.length) {\n    color = 'orange';\n    text = 'Pending';\n    icon = 'spinner';\n    tooltip = 'Waiting for health check to run';\n  } else {\n    // Sync state\n    switch (repo.status?.sync?.state) {\n      case 'success':\n        icon = 'check';\n        text = 'Up-to-date';\n        color = 'green';\n        break;\n      case 'working':\n      case 'pending':\n        color = 'orange';\n        text = 'Pulling';\n        icon = 'spinner';\n        break;\n      case 'error':\n        color = 'red';\n        text = 'Error';\n        icon = 'exclamation-triangle';\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Badge\n      color={color}\n      icon={icon}\n      text={text}\n      style={{ cursor: 'pointer' }}\n      tooltip={tooltip}\n      onClick={() => {\n        locationService.push(`${PROVISIONING_URL}/${repo.metadata?.name}/?tab=overview`);\n      }}\n    />\n  );\n}\n","export function formatTimestamp(timestamp?: number) {\n  if (!timestamp) {\n    return 'N/A';\n  }\n  return new Date(timestamp).toLocaleString();\n}\n"],"names":["autoColor","theme","hex","base","color","newColor","getStyles","CopyIcon","copyText","icon","tooltipTitle","styles","hasCopied","setHasCopied","handleClick","Tooltip","Button","INDENT","inlineRule","objRule","str","rule","Stylize","styleFile","styleClass","cssClass","styleInline","type","doc","jsonMarkup","indent","style","forEach","list","start","end","fn","out","key","i","visit","obj","keys","copyIconClassName","jsonObjectOrArrayStartRegex","parseIfComplexJson","value","LinkValue","href","title","children","Icon","KeyValuesTable","props","data","linksGetter","row","markup","jsonTable","links","valueMarkup","getSummaryColumns","item","JobSummary","summary","DeleteRepositoryButton","name","redirectTo","deleteRepository","request","showModal","setShowModal","navigate","onConfirm","FilesView","repo","query","searchQuery","setSearchQuery","file","columns","original","path","size","Stack","Spinner","FilterInput","InteractiveTable","f","RepositoryActions","repository","repoHref","StatusBadge","SyncRepository","labelSelectorActive","repositoryName","useRepositoryAllJobs","activeQuery","historicQuery","useDebounce","concatedItems","collator","a","b","aTime","bTime","getStatusColor","state","getJobColumns","job","Badge","interval","elapsed","ExpandedRow","hasSummary","hasErrors","hasSpec","v","action","def","Box","Text","error","index","Alert","ErrorLoading","typ","Loading","RecentJobs","jobs","jobColumns","description","Card","CheckRepository","testRepo","testQuery","onClick","RepositoryHealth","health","message","getColumnCount","hasWebhook","RepositoryOverview","status","webhookURL","getWebhookURL","resourceColumns","Grid","r","getFolderURL","msg","idx","spec","RepositoryResources","Resource","resource","hash","folder","Link","TabSelection","RepositoryStatusPage","location","queryParams","useQueryParams","settings","tab","notFound","tabInfo","Page","EmptyState","TextLink","TabsBar","t","Tab","url","TabContent","createJob","jobQuery","isModalOpen","setIsModalOpen","isHealthy","tooltip","text","formatTimestamp","timestamp"],"sourceRoot":""}