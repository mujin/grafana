{"version":3,"file":"564.aae13b62a89ae8ae5608.js","mappings":"sSAoBO,MAAMA,EAAkB,CAAC,CAAE,QAAAC,EAAS,OAAAC,EAAQ,UAAAC,CAAU,IAAa,CACxE,MAAMC,KAAS,MAAWC,CAAS,EACnC,SACE,QAACC,EAAA,EAAI,CAAC,UAAWF,EAAO,UACrB,UAAAH,EAAQ,IAAI,CAACM,EAAMC,OAClB,QAACC,EAAA,EAAK,CAAa,eAAe,gBAAgB,WAAW,SAC3D,qBAACA,EAAA,EAAK,CAAC,WAAY,SACjB,oBAAC,QAAK,aAAW,MAAG,CAAE,CAACL,EAAO,MAAM,EAAG,CAAC,CAACG,EAAK,MAAO,CAAC,EAAI,SAAAA,EAAK,KAAK,EACnEA,EAAK,YACJ,OAACG,EAAA,EAAO,CAAC,QAAS,OAAOH,EAAK,OAAO,EAAG,UAAU,aAChD,mBAACI,EAAA,EAAI,CAAC,KAAK,cAAc,UAAWP,EAAO,QAAS,EACtD,GAEJ,EACCD,KACC,OAAC,IAAQ,CAAC,MAAO,GAAI,KAErB,OAAC,QAAK,UAAWI,EAAK,UAAYH,EAAO,UAAY,GAAK,SAAAG,EAAK,MAAM,IAZ7DC,CAcZ,CACD,EACAN,MAAU,OAAC,OAAK,SAAAA,CAAA,CAAO,GAC1B,CAEJ,EAEMG,EAAaO,IACV,CACL,aAAW,OAAI,CACb,QAAS,OACT,cAAe,SACf,IAAKA,EAAM,QAAQ,CAAC,EACpB,OAAQ,EACR,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,UAAQ,OAAI,CACV,WAAYA,EAAM,QAAQ,CAAC,CAC7B,CAAC,EACD,WAAS,OAAI,CACX,MAAOA,EAAM,OAAO,UAAU,IAChC,CAAC,EACD,aAAW,OAAI,CACb,MAAOA,EAAM,OAAO,QAAQ,KAC5B,QAAS,GAAGA,EAAM,QAAQ,EAAG,CAAC,IAAIA,EAAM,QAAQ,CAAC,CAAC,GAClD,YAAa,IAAIA,EAAM,QAAQ,CAAC,CAAC,EACnC,CAAC,CACH,G,eCxCK,MAAMC,EAAiB,YACrB,MAAc,EAClB,IAAI,iBAAiB,EACrB,MAAOC,IACN,QAAQ,MAAMA,CAAG,EACV,KACR,EClBQC,EAAc,IAAM,CAC/B,KAAM,CAACC,EAAOC,CAAQ,KAAI,YAA4B,IAAI,EACpD,CAACd,EAAWe,CAAY,KAAI,YAAS,EAAI,EACzCd,KAAS,MAAW,CAAS,EAE7Be,EAAyB,KAAW,cAAc,sBAAoB,eAAe,EACrFC,EAAwB,KAAW,cAAc,sBAAoB,SAAS,EAWpF,SATA,aAAU,IAAM,CACV,KAAW,cAAc,sBAAoB,qBAAqB,GACpEP,EAAe,EAAE,KAAMG,GAAU,CAC/BC,EAASD,CAAK,EACdE,EAAa,EAAK,CACpB,CAAC,CAEL,EAAG,CAAC,CAAC,EAEA,KAAW,cAAc,sBAAoB,qBAAqB,KAKrE,oBACE,oBAAC,MAAG,UAAWd,EAAO,MACpB,mBAAC,KAAK,CAAC,QAAQ,8BAA8B,+BAAmB,EAClE,EACC,CAACD,GAAa,CAACa,KACd,OAAC,KAAE,UAAWZ,EAAO,SACnB,mBAAC,KAAK,CAAC,QAAQ,kCAAkC,2BAAe,EAClE,KAEA,QAACK,EAAA,GACC,IAAK,EACL,UAAW,CACT,GAAI,SACJ,GAAI,KACN,EAEA,oBAACT,EAAA,CACC,UAAAG,EACA,QAAS,CACP,CAAE,KAAM,uBAAwB,MAAO,GAAGa,GAAO,UAAU,KAAKA,GAAO,KAAK,GAAI,EAChF,CAAE,KAAM,OAAQ,MAAOA,GAAO,IAAK,EACnC,CAAE,KAAM,YAAa,MAAOA,GAAO,SAAU,EAC7C,CAAE,KAAM,YAAa,MAAOA,GAAO,SAAU,CAC/C,EACA,UACE,OAAC,KAAU,CAAC,KAAM,cAAe,QAAS,YACxC,mBAAC,KAAK,CAAC,QAAQ,0CAA0C,6BAAiB,EAC5E,EAEJ,KAEA,QAACP,EAAA,EAAK,CAAC,UAAU,SAAS,IAAK,EAC7B,oBAACT,EAAA,CACC,UAAAG,EACA,QAAS,CAAC,CAAE,KAAM,eAAgB,MAAOa,GAAO,WAAY,CAAC,EAC7D,OACEG,MACE,OAAC,KAAU,CAAC,KAAM,eAAgB,QAAS,YACzC,mBAAC,KAAK,CAAC,QAAQ,4CAA4C,+BAAmB,EAChF,EAGN,KACA,OAACnB,EAAA,CACC,UAAAG,EACA,QAAS,CAAC,CAAE,KAAM,SAAU,MAAOa,GAAO,MAAO,CAAC,EAClD,UACE,OAAC,KAAU,CAAC,KAAM,iBAAkB,QAAS,YAC3C,mBAAC,KAAK,CAAC,QAAQ,sCAAsC,yBAAa,EACpE,EAEJ,GACF,KACA,OAAChB,EAAA,CACC,UAAAG,EACA,QAAS,CACP,CAAE,KAAM,gBAAiB,MAAOa,GAAO,IAAK,EAC5C,CAAE,KAAM,cAAe,MAAOA,GAAO,KAAM,EAC3C,CAAE,KAAM,kBAAmB,MAAOA,GAAO,cAAe,EACxD,CAAE,KAAM,+BAAgC,MAAOA,GAAO,WAAY,EAClE,GAAGK,EAAyBL,EAAOM,EAAA,CAAM,CAC3C,EACA,OACEF,MACE,OAAC,KAAU,CAAC,KAAM,eAAgB,QAAS,YACzC,mBAAC,KAAK,CAAC,QAAQ,qCAAqC,wBAAY,EAClE,EAGN,GACF,GAEJ,EA5EO,IA8EX,EAEMC,EAA2B,CAACL,EAA0BM,IACtD,CAACA,EAAO,kBAAoB,CAACN,GAAO,cAC/B,CAAC,EAELM,EAAO,qBASH,CACL,CACE,KAAM,2BACN,MAAO,GAAGN,EAAM,aAAa,MAAMM,EAAO,oBAAoB,GAC9D,QAAS,4DACT,UAAWN,EAAM,cAAgBM,EAAO,oBAC1C,CACF,EAfO,CACL,CACE,KAAM,2BACN,MAAO,GAAGN,EAAM,aAAa,GAC7B,QAAS,2DACX,CACF,EAaE,EAAaJ,IACV,CACL,SAAO,OAAI,CACT,aAAcA,EAAM,QAAQ,CAAC,CAC/B,CAAC,EACD,YAAU,OAAI,CACZ,SAAUA,EAAM,WAAW,GAAG,SAC9B,UAAW,SACX,OAAQ,OACV,CAAC,CACH,E,gLC5IF,MAAMW,EAAQ,CAAE,WAAY,IAAK,SAAU,OAAQ,WAAY,MAAO,EAEhElB,EAAaO,GAAyB,CAC1C,MAAMY,EAAgBZ,EAAM,OAAS,uCAAyC,wCACxEa,EAAWb,EAAM,OAASA,EAAM,GAAG,QAAQ,MAAQA,EAAM,GAAG,QAAQ,MAE1E,MAAO,CACL,aAAW,OAAI,CACb,QAASA,EAAM,QAAQ,CAAC,EACxB,WAAYA,EAAM,WAAW,MAAM,UACrC,CAAC,EACD,UAAQ,OAAI,CACV,UAAW,SACX,QAASA,EAAM,QAAQ,CAAC,EACxB,WAAYa,CACd,CAAC,EACD,UAAQ,OAAI,CACV,OAAQ,QACR,QAASb,EAAM,QAAQ,EAAG,EAAG,EAAG,CAAC,EACjC,SAAU,WACV,WAAY,QAAQY,CAAa,UACnC,CAAC,CACH,CACF,EASO,SAASE,EAAc,CAAE,OAAAC,EAAQ,cAAAC,EAAe,UAAAC,EAAW,SAAAC,CAAS,EAAU,CACnF,MAAM1B,KAAS,MAAWC,CAAS,EAEnC,SACE,oBACE,qBAAC,OAAI,UAAWD,EAAO,OACrB,oBAAC,MAAG,MAAOmB,EAAQ,SAAAI,CAAA,CAAO,EACzBE,MAAa,OAAC,MAAI,SAAAA,CAAA,CAAU,KAE7B,OAACE,EAAA,CACC,KAAK,QACL,MAAO,CACL,UAAW,uCACX,WAAY,UACZ,SAAU,WACV,IAAK,OACL,MAAO,IACT,EAEA,mBAAC,OACC,IAAI,8BACJ,IAAI,UACJ,MAAM,OACN,MAAO,CAAE,SAAU,WAAY,KAAM,OAAQ,IAAK,MAAO,EAC3D,EACF,GACF,KAEA,OAAC,OAAI,UAAW3B,EAAO,UAAY,SAAA0B,CAAA,CAAS,EAE3CF,MAAiB,OAAC,OAAI,UAAWxB,EAAO,OAAS,SAAAwB,CAAA,CAAc,GAClE,CAEJ,CAOO,MAAMG,EAAS,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,SAAAH,CAAS,IAA4C,CACzF,MAAMlB,KAAQ,MAAU,EACxB,SACE,OAAC,OACC,MAAO,CACL,MAAOoB,EACP,OAAQA,EACR,SAAU,WACV,OAAQ,EACR,MAAO,EACP,aAAcpB,EAAM,MAAM,OAAO,OACjC,GAAGqB,CACL,EAEC,SAAAH,CAAA,CACH,CAEJ,E,eC5EO,SAASI,EAAY,CAAE,SAAAC,CAAS,EAAU,CAC/C,SACE,OAACC,EAAA,EAAI,CAAC,SAAAD,EACJ,oBAACC,EAAA,EAAK,SAAL,CACC,oBAACrB,EAAA,YAAW,EAAC,KACb,OAACsB,EAAA,CACC,cAAc;AAAA,yFAEhB,GACF,EACF,CAEJ,CAEA,MAAMC,EAAc,CAAE,WAAY,IAAK,SAAU,OAAQ,WAAY,MAAO,EAM/DD,EAAc,CAAC,CAAE,cAAAT,CAAc,IAAwB,CAClE,MAAMxB,KAAS,MAAW,CAAS,EAEnC,SACE,oBACE,oBAAC,MAAG,UAAWA,EAAO,MACpB,mBAAC,KAAK,CAAC,QAAQ,2BAA2B,8BAAkB,EAC9D,KACA,OAACsB,EAAa,CAAC,OAAO,qBAAqB,UAAU,sBAAsB,cAAAE,EACzE,oBAAC,OAAI,UAAWxB,EAAO,OACrB,oBAACmC,EAAA,EAAY,KACb,OAACC,EAAA,EAAY,GACf,EACF,GACF,CAEJ,EAEM,EAAa5B,IACV,CACL,UAAQ,OAAI,CACV,QAAS,OACT,oBAAqB,OACrB,UAAW,OACX,OAAQ,OAER,6BAA8B,CAC5B,oBAAqB,SACvB,CACF,CAAC,EACD,SAAO,OAAI,CACT,OAAQA,EAAM,QAAQ,EAAG,CAAC,CAC5B,CAAC,CACH,GAGI6B,EAAgB,OAElB,QAAC,OAAI,MAAO,CAAE,UAAW,OAAQ,aAAc,MAAO,EACpD,oBAAC,MAAG,MAAOH,EACT,mBAAC,KAAK,CAAC,QAAQ,6BAA6B,kCAAsB,EACpE,KACA,OAACI,EAAA,EAAa,KACd,OAAC,KAAE,MAAO,CAAE,WAAY,MAAO,EAC7B,mBAAC,KAAK,CAAC,QAAQ,mCAAmC,mIAGlD,EACF,GACF,EAIEA,EAAe,OAEjB,OAAC,MACC,QAAQ,UACR,KAAK,KACL,KAAK,uFAEL,mBAAC,KAAK,CAAC,QAAQ,kCAAkC,2CAA+B,EAClF,EAIEF,EAAc,OAEhB,QAAC,OACC,oBAAC,MACC,mBAAC,KAAK,CAAC,QAAQ,qCAAqC,2BAAe,EACrE,KAEA,QAACG,EAAA,CACC,oBAACC,EAAA,CACC,SAAO,KAAE,8CAA+C,oBAAoB,EAC5E,MAAM,6CACR,KACA,OAACA,EAAA,CACC,SAAO,KAAE,8CAA+C,uBAAuB,EAC/E,MAAM,+BACR,KACA,QAACA,EAAA,CACC,SAAO,KAAE,oDAAqD,0BAA0B,EACxF,MAAM,4CACP,wCAEC,QAACD,EAAA,CAAK,OAAQ,GACZ,oBAACC,EAAA,CAAK,MAAM,OAAQ,MACpB,OAACA,EAAA,CAAK,MAAM,uBAAwB,MACpC,OAACA,EAAA,CAAK,MAAM,OAAQ,IACtB,GACF,KACA,OAACA,EAAA,CAAK,MAAM,uBAAuB,MAAM,8CAA8C,kCAEvF,GACF,KAEA,QAAC,OAAI,MAAO,CAAE,UAAW,MAAO,EAC9B,oBAAC,UACC,mBAAC,KAAK,CAAC,QAAQ,wCAAwC,0BAAc,EACvE,KACA,OAAC,OAAG,KACJ,OAAC,KAAK,CAAC,QAAQ,4CAA4C,yHAE3D,GACF,KAEA,OAACH,EAAA,EAAc,GACjB,EAIEF,EAAc,OAEhB,QAAC,OAAI,MAAO,CAAE,aAAc,MAAO,EACjC,oBAAC,MACC,mBAAC,KAAK,CAAC,QAAQ,wCAAwC,kCAAsB,EAC/E,KACA,OAACM,EAAA,EAAe,GAClB,EAIEA,EAAiB,OAEnB,QAACF,EAAA,CACC,oBAACC,EAAA,CAAK,SAAO,KAAE,sDAAuD,yBAAyB,EAAG,KAClG,OAACA,EAAA,CAAK,SAAO,KAAE,wCAAyC,WAAW,EAAG,KACtE,OAACA,EAAA,CAAK,SAAO,KAAE,kDAAmD,qBAAqB,EAAG,KAC1F,OAACA,EAAA,CAAK,SAAO,KAAE,wDAAyD,2BAA2B,EAAG,KACtG,OAACA,EAAA,CAAK,SAAO,KAAE,wCAAyC,WAAW,EACjE,mBAAC,KAAK,CAAC,QAAQ,yCAAyC,gDAAoC,EAC9F,KACA,OAACA,EAAA,CAAK,SAAO,KAAE,6CAA8C,gBAAgB,EAAG,KAChF,OAACA,EAAA,CAAK,SAAO,KAAE,uCAAwC,UAAU,EAAG,KACpE,OAACA,EAAA,CAAK,SAAO,KAAE,0DAA2D,6BAA6B,EAAG,KAC1G,OAACA,EAAA,CAAK,SAAO,KAAE,qDAAsD,wBAAwB,EAC3F,oBAACD,EAAA,CAAK,OAAQ,GACZ,oBAACC,EAAA,CACC,SAAO,KACL,sEACA,yCACF,EACF,KACA,OAACA,EAAA,CAAK,SAAO,KAAE,qDAAsD,wBAAwB,EAAG,KAChG,OAACA,EAAA,CAAK,SAAO,KAAE,2DAA4D,8BAA8B,EAAG,KAC5G,OAACA,EAAA,CACC,SAAO,KAAE,4DAA6D,+BAA+B,EACvG,GACF,EACF,KACA,OAACA,EAAA,CAAK,SAAO,KAAE,iDAAkD,oBAAoB,EACnF,oBAACD,EAAA,CAAK,OAAQ,GAEZ,oBAACC,EAAA,CAAK,MAAM,QAAS,MACrB,OAACA,EAAA,CAAK,MAAM,QAAS,MACrB,OAACA,EAAA,CAAK,MAAM,aAAc,MAC1B,OAACA,EAAA,CAAK,MAAM,WAAY,MACxB,OAACA,EAAA,CAAK,MAAM,WAAY,MACxB,OAACA,EAAA,CAAK,MAAM,SAAU,MACtB,OAACA,EAAA,CAAK,MAAM,aAAc,MAC1B,OAACA,EAAA,CAAK,MAAM,eAAY,KACxB,OAACA,EAAA,CAAK,MAAM,QAAS,MACrB,OAACA,EAAA,CAAK,MAAM,WAAY,MACxB,OAACA,EAAA,CAAK,MAAM,MAAO,MACnB,OAACA,EAAA,CAAK,MAAM,SAAU,MACtB,OAACA,EAAA,CAAK,MAAM,YAAa,MACzB,OAACA,EAAA,CAAK,MAAM,WAAY,MACxB,OAACA,EAAA,CAAK,MAAM,WAAY,IAE1B,EACF,GACF,EAQED,EAAO,CAAC,CAAE,SAAAb,EAAU,OAAAgB,CAAO,IAA0C,CACzE,MAAMC,KAAY,OAAI,CACpB,QAAS,OACT,cAAe,SACf,WAAY,MAEZ,QAAS,CACP,aAAc,GAAGD,EAAS,EAAI,CAAC,IACjC,CACF,CAAC,EAED,SAAO,OAAC,OAAI,UAAWC,EAAY,SAAAjB,CAAA,CAAS,CAC9C,EAOMc,EAAO,CAAC,CAAE,SAAAd,EAAU,MAAAP,EAAO,MAAAyB,CAAM,IAA0C,CAC/E,MAAMC,EAAWD,GAAgB,qCAC3BE,KAAY,OAAI,CACpB,QAAS,OAET,QAAS,CACP,QAAS,QACT,OAAQ,OACR,SAAU,EACV,aAAc,MAChB,CACF,CAAC,EACKC,KAAa,OAAI,CACrB,WAAY,IACZ,WAAY,GACd,CAAC,EAED,SACE,QAAC,OAAI,UAAWD,EACd,oBAAC,OAAI,IAAKD,EAAU,IAAI,EAAG,MAC3B,QAAC,OACC,oBAAC,OAAI,UAAWE,EAAa,SAAA5B,CAAA,CAAM,EAClCO,CAAA,EACH,GACF,CAEJ,EAEMsB,EAAmBC,IAAuB,CAC9C,YAAU,MAAYA,EAAM,SAAU,WAAW,CACnD,GAEA,KAAe,WAAQD,CAAe,EAAElB,CAAW,C","sources":["webpack://grafana/./public/app/features/admin/ServerStatsCard.tsx","webpack://grafana/./public/app/features/admin/state/apis.tsx","webpack://grafana/./public/app/features/admin/ServerStats.tsx","webpack://grafana/./public/app/features/admin/LicenseChrome.tsx","webpack://grafana/./public/app/features/admin/UpgradePage.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Stack, useStyles2, Tooltip, Icon } from '@grafana/ui';\n\ninterface StatItem {\n  name: string;\n  value: string | number | undefined;\n  tooltip?: string;\n  highlight?: boolean;\n  indent?: boolean;\n}\n\nexport interface Props {\n  content: StatItem[];\n  isLoading?: boolean;\n  footer?: JSX.Element | boolean;\n}\n\nexport const ServerStatsCard = ({ content, footer, isLoading }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <Card className={styles.container}>\n      {content.map((item, index) => (\n        <Stack key={index} justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack alignItems={'center'}>\n            <span className={cx({ [styles.indent]: !!item.indent })}>{item.name}</span>\n            {item.tooltip && (\n              <Tooltip content={String(item.tooltip)} placement=\"auto-start\">\n                <Icon name=\"info-circle\" className={styles.tooltip} />\n              </Tooltip>\n            )}\n          </Stack>\n          {isLoading ? (\n            <Skeleton width={60} />\n          ) : (\n            <span className={item.highlight ? styles.highlight : ''}>{item.value}</span>\n          )}\n        </Stack>\n      ))}\n      {footer && <div>{footer}</div>}\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(2),\n      margin: 0,\n      padding: theme.spacing(2),\n    }),\n    indent: css({\n      marginLeft: theme.spacing(2),\n    }),\n    tooltip: css({\n      color: theme.colors.secondary.text,\n    }),\n    highlight: css({\n      color: theme.colors.warning.text,\n      padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`,\n      marginRight: `-${theme.spacing(1)}`,\n    }),\n  };\n};\n","import { getBackendSrv } from '@grafana/runtime';\n\ninterface AnonServerStat {\n  activeDevices?: number;\n}\n\nexport interface ServerStat extends AnonServerStat {\n  activeAdmins: number;\n  activeEditors: number;\n  activeSessions: number;\n  activeUsers: number;\n  activeViewers: number;\n  admins: number;\n  alerts: number;\n  dashboards: number;\n  datasources: number;\n  editors: number;\n  orgs: number;\n  playlists: number;\n  snapshots: number;\n  stars: number;\n  tags: number;\n  users: number;\n  viewers: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat | null> => {\n  return getBackendSrv()\n    .get('api/admin/stats')\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config, GrafanaBootConfig } from '@grafana/runtime';\nimport { LinkButton, Stack, useStyles2 } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\nimport { AccessControlAction } from 'app/types';\n\nimport { contextSrv } from '../../core/services/context_srv';\n\nimport { ServerStatsCard } from './ServerStatsCard';\nimport { getServerStats, ServerStat } from './state/apis';\n\nexport const ServerStats = () => {\n  const [stats, setStats] = useState<ServerStat | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const styles = useStyles2(getStyles);\n\n  const hasAccessToDataSources = contextSrv.hasPermission(AccessControlAction.DataSourcesRead);\n  const hasAccessToAdminUsers = contextSrv.hasPermission(AccessControlAction.UsersRead);\n\n  useEffect(() => {\n    if (contextSrv.hasPermission(AccessControlAction.ActionServerStatsRead)) {\n      getServerStats().then((stats) => {\n        setStats(stats);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (!contextSrv.hasPermission(AccessControlAction.ActionServerStatsRead)) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className={styles.title}>\n        <Trans i18nKey=\"admin.server-settings.title\">Instance statistics</Trans>\n      </h2>\n      {!isLoading && !stats ? (\n        <p className={styles.notFound}>\n          <Trans i18nKey=\"admin.server-settings.not-found\">No stats found.</Trans>\n        </p>\n      ) : (\n        <Stack\n          gap={2}\n          direction={{\n            xs: 'column',\n            md: 'row',\n          }}\n        >\n          <ServerStatsCard\n            isLoading={isLoading}\n            content={[\n              { name: 'Dashboards (starred)', value: `${stats?.dashboards} (${stats?.stars})` },\n              { name: 'Tags', value: stats?.tags },\n              { name: 'Playlists', value: stats?.playlists },\n              { name: 'Snapshots', value: stats?.snapshots },\n            ]}\n            footer={\n              <LinkButton href={'/dashboards'} variant={'secondary'}>\n                <Trans i18nKey=\"admin.server-settings.dashboards-button\">Manage dashboards</Trans>\n              </LinkButton>\n            }\n          />\n\n          <Stack direction=\"column\" gap={2}>\n            <ServerStatsCard\n              isLoading={isLoading}\n              content={[{ name: 'Data sources', value: stats?.datasources }]}\n              footer={\n                hasAccessToDataSources && (\n                  <LinkButton href={'/datasources'} variant={'secondary'}>\n                    <Trans i18nKey=\"admin.server-settings.data-sources-button\">Manage data sources</Trans>\n                  </LinkButton>\n                )\n              }\n            />\n            <ServerStatsCard\n              isLoading={isLoading}\n              content={[{ name: 'Alerts', value: stats?.alerts }]}\n              footer={\n                <LinkButton href={'/alerting/list'} variant={'secondary'}>\n                  <Trans i18nKey=\"admin.server-settings.alerts-button\">Manage alerts</Trans>\n                </LinkButton>\n              }\n            />\n          </Stack>\n          <ServerStatsCard\n            isLoading={isLoading}\n            content={[\n              { name: 'Organisations', value: stats?.orgs },\n              { name: 'Users total', value: stats?.users },\n              { name: 'Active sessions', value: stats?.activeSessions },\n              { name: 'Active users in last 30 days', value: stats?.activeUsers },\n              ...getAnonymousStatsContent(stats, config),\n            ]}\n            footer={\n              hasAccessToAdminUsers && (\n                <LinkButton href={'/admin/users'} variant={'secondary'}>\n                  <Trans i18nKey=\"admin.server-settings.users-button\">Manage users</Trans>\n                </LinkButton>\n              )\n            }\n          />\n        </Stack>\n      )}\n    </>\n  );\n};\n\nconst getAnonymousStatsContent = (stats: ServerStat | null, config: GrafanaBootConfig) => {\n  if (!config.anonymousEnabled || !stats?.activeDevices) {\n    return [];\n  }\n  if (!config.anonymousDeviceLimit) {\n    return [\n      {\n        name: 'Active anonymous devices',\n        value: `${stats.activeDevices}`,\n        tooltip: 'Detected devices that are not logged in, in last 30 days.',\n      },\n    ];\n  } else {\n    return [\n      {\n        name: 'Active anonymous devices',\n        value: `${stats.activeDevices} / ${config.anonymousDeviceLimit}`,\n        tooltip: 'Detected devices that are not logged in, in last 30 days.',\n        highlight: stats.activeDevices > config.anonymousDeviceLimit,\n      },\n    ];\n  }\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css({\n      marginBottom: theme.spacing(4),\n    }),\n    notFound: css({\n      fontSize: theme.typography.h6.fontSize,\n      textAlign: 'center',\n      height: '290px',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\n\nconst title = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const backgroundUrl = theme.isDark ? 'public/img/licensing/header_dark.svg' : 'public/img/licensing/header_light.svg';\n  const footerBg = theme.isDark ? theme.v1.palette.dark9 : theme.v1.palette.gray6;\n\n  return {\n    container: css({\n      padding: theme.spacing(4),\n      background: theme.components.panel.background,\n    }),\n    footer: css({\n      textAlign: 'center',\n      padding: theme.spacing(2),\n      background: footerBg,\n    }),\n    header: css({\n      height: '137px',\n      padding: theme.spacing(4, 0, 0, 4),\n      position: 'relative',\n      background: `url('${backgroundUrl}') right`,\n    }),\n  };\n};\n\ninterface Props {\n  header: string;\n  subheader?: string;\n  editionNotice?: string;\n  children?: React.ReactNode;\n}\n\nexport function LicenseChrome({ header, editionNotice, subheader, children }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <div className={styles.header}>\n        <h2 style={title}>{header}</h2>\n        {subheader && <h3>{subheader}</h3>}\n\n        <Circle\n          size=\"128px\"\n          style={{\n            boxShadow: '0px 0px 24px rgba(24, 58, 110, 0.45)',\n            background: '#0A1C36',\n            position: 'absolute',\n            top: '19px',\n            right: '5%',\n          }}\n        >\n          <img\n            src=\"public/img/grafana_icon.svg\"\n            alt=\"Grafana\"\n            width=\"80px\"\n            style={{ position: 'absolute', left: '23px', top: '20px' }}\n          />\n        </Circle>\n      </div>\n\n      <div className={styles.container}>{children}</div>\n\n      {editionNotice && <div className={styles.footer}>{editionNotice}</div>}\n    </>\n  );\n}\n\ninterface CircleProps {\n  size: string;\n  style?: React.CSSProperties;\n}\n\nexport const Circle = ({ size, style, children }: React.PropsWithChildren<CircleProps>) => {\n  const theme = useTheme2();\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        borderRadius: theme.shape.radius.circle,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { GrafanaTheme2, NavModel } from '@grafana/data';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { Trans, t } from 'app/core/internationalization';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from '../../types';\n\nimport { LicenseChrome } from './LicenseChrome';\nimport { ServerStats } from './ServerStats';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport function UpgradePage({ navModel }: Props) {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <ServerStats />\n        <UpgradeInfo\n          editionNotice=\"You are running the open-source version of Grafana.\n        You have to install the Enterprise edition in order enable Enterprise features.\"\n        />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst titleStyles = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\ninterface UpgradeInfoProps {\n  editionNotice?: string;\n}\n\nexport const UpgradeInfo = ({ editionNotice }: UpgradeInfoProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <h2 className={styles.title}>\n        <Trans i18nKey=\"admin.upgrade-info.title\">Enterprise license</Trans>\n      </h2>\n      <LicenseChrome header=\"Grafana Enterprise\" subheader=\"Get your free trial\" editionNotice={editionNotice}>\n        <div className={styles.column}>\n          <FeatureInfo />\n          <ServiceInfo />\n        </div>\n      </LicenseChrome>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    column: css({\n      display: 'grid',\n      gridTemplateColumns: '100%',\n      columnGap: '20px',\n      rowGap: '40px',\n\n      '@media (min-width: 1050px)': {\n        gridTemplateColumns: '50% 50%',\n      },\n    }),\n    title: css({\n      margin: theme.spacing(4, 0),\n    }),\n  };\n};\n\nconst GetEnterprise = () => {\n  return (\n    <div style={{ marginTop: '40px', marginBottom: '30px' }}>\n      <h2 style={titleStyles}>\n        <Trans i18nKey=\"admin.get-enterprise.title\">Get Grafana Enterprise</Trans>\n      </h2>\n      <CallToAction />\n      <p style={{ paddingTop: '12px' }}>\n        <Trans i18nKey=\"admin.get-enterprise.description\">\n          You can use the trial version for free for 30 days. We will remind you about it five days before the trial\n          period ends.\n        </Trans>\n      </p>\n    </div>\n  );\n};\n\nconst CallToAction = () => {\n  return (\n    <LinkButton\n      variant=\"primary\"\n      size=\"lg\"\n      href=\"https://grafana.com/contact?about=grafana-enterprise&utm_source=grafana-upgrade-page\"\n    >\n      <Trans i18nKey=\"admin.get-enterprise.contact-us\">Contact us and get a free trial</Trans>\n    </LinkButton>\n  );\n};\n\nconst ServiceInfo = () => {\n  return (\n    <div>\n      <h4>\n        <Trans i18nKey=\"admin.get-enterprise.service-title\">At your service</Trans>\n      </h4>\n\n      <List>\n        <Item\n          title={t('admin.service-info.title-enterprise-plugins', 'Enterprise Plugins')}\n          image=\"public/img/licensing/plugin_enterprise.svg\"\n        />\n        <Item\n          title={t('admin.service-info.title-critical-sla-hours', 'Critical SLA: 2 hours')}\n          image=\"public/img/licensing/sla.svg\"\n        />\n        <Item\n          title={t('admin.service-info.title-unlimited-expert-support', 'Unlimited Expert Support')}\n          image=\"public/img/licensing/customer_support.svg\"\n        >\n          24 x 7 x 365 support via\n          <List nested={true}>\n            <Item title=\"Email\" />\n            <Item title=\"Private Slack channel\" />\n            <Item title=\"Phone\" />\n          </List>\n        </Item>\n        <Item title=\"Hand-in-hand support\" image=\"public/img/licensing/handinhand_support.svg\">\n          in the upgrade process\n        </Item>\n      </List>\n\n      <div style={{ marginTop: '20px' }}>\n        <strong>\n          <Trans i18nKey=\"admin.get-enterprise.included-heading\">Also included:</Trans>\n        </strong>\n        <br />\n        <Trans i18nKey=\"admin.get-enterprise.included-description\">\n          Indemnification, working with Grafana Labs on future prioritization, and training from the core Grafana team.\n        </Trans>\n      </div>\n\n      <GetEnterprise />\n    </div>\n  );\n};\n\nconst FeatureInfo = () => {\n  return (\n    <div style={{ paddingRight: '11px' }}>\n      <h4>\n        <Trans i18nKey=\"admin.get-enterprise.features-heading\">Enhanced functionality</Trans>\n      </h4>\n      <FeatureListing />\n    </div>\n  );\n};\n\nconst FeatureListing = () => {\n  return (\n    <List>\n      <Item title={t('admin.feature-listing.title-data-source-permissions', 'Data source permissions')} />\n      <Item title={t('admin.feature-listing.title-reporting', 'Reporting')} />\n      <Item title={t('admin.feature-listing.title-saml-authentication', 'SAML authentication')} />\n      <Item title={t('admin.feature-listing.title-enhanced-ldap-integration', 'Enhanced LDAP integration')} />\n      <Item title={t('admin.feature-listing.title-team-sync', 'Team Sync')}>\n        <Trans i18nKey=\"admin.get-enterprise.team-sync-details\">LDAP, GitHub OAuth, Auth Proxy, Okta</Trans>\n      </Item>\n      <Item title={t('admin.feature-listing.title-white-labeling', 'White labeling')} />\n      <Item title={t('admin.feature-listing.title-auditing', 'Auditing')} />\n      <Item title={t('admin.feature-listing.title-settings-updates-at-runtime', 'Settings updates at runtime')} />\n      <Item title={t('admin.feature-listing.title-grafana-usage-insights', 'Grafana usage insights')}>\n        <List nested={true}>\n          <Item\n            title={t(\n              'admin.feature-listing.title-sort-dashboards-by-popularity-in-search',\n              'Sort dashboards by popularity in search'\n            )}\n          />\n          <Item title={t('admin.feature-listing.title-find-unused-dashboards', 'Find unused dashboards')} />\n          <Item title={t('admin.feature-listing.title-dashboard-usage-stats-drawer', 'Dashboard usage stats drawer')} />\n          <Item\n            title={t('admin.feature-listing.title-dashboard-presence-indicators', 'Dashboard presence indicators')}\n          />\n        </List>\n      </Item>\n      <Item title={t('admin.feature-listing.title-enterprise-plugins', 'Enterprise plugins')}>\n        <List nested={true}>\n          {/* eslint-disable @grafana/no-untranslated-strings */}\n          <Item title=\"Oracle\" />\n          <Item title=\"Splunk\" />\n          <Item title=\"Service Now\" />\n          <Item title=\"Dynatrace\" />\n          <Item title=\"New Relic\" />\n          <Item title=\"DataDog\" />\n          <Item title=\"AppDynamics\" />\n          <Item title=\"SAP HANA®\" />\n          <Item title=\"Gitlab\" />\n          <Item title=\"Honeycomb\" />\n          <Item title=\"Jira\" />\n          <Item title=\"MongoDB\" />\n          <Item title=\"Salesforce\" />\n          <Item title=\"Snowflake\" />\n          <Item title=\"Wavefront\" />\n          {/* eslint-enable @grafana/no-untranslated-strings */}\n        </List>\n      </Item>\n    </List>\n  );\n};\n\ninterface ListProps {\n  nested?: boolean;\n}\n\nconst List = ({ children, nested }: React.PropsWithChildren<ListProps>) => {\n  const listStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '8px',\n\n    '> div': {\n      marginBottom: `${nested ? 0 : 8}px`,\n    },\n  });\n\n  return <div className={listStyle}>{children}</div>;\n};\n\ninterface ItemProps {\n  title: string;\n  image?: string;\n}\n\nconst Item = ({ children, title, image }: React.PropsWithChildren<ItemProps>) => {\n  const imageUrl = image ? image : 'public/img/licensing/checkmark.svg';\n  const itemStyle = css({\n    display: 'flex',\n\n    '> img': {\n      display: 'block',\n      height: '22px',\n      flexGrow: 0,\n      paddingRight: '12px',\n    },\n  });\n  const titleStyle = css({\n    fontWeight: 500,\n    lineHeight: 1.7,\n  });\n\n  return (\n    <div className={itemStyle}>\n      <img src={imageUrl} alt=\"\" />\n      <div>\n        <div className={titleStyle}>{title}</div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'upgrading'),\n});\n\nexport default connect(mapStateToProps)(UpgradePage);\n"],"names":["ServerStatsCard","content","footer","isLoading","styles","getStyles","Card","item","index","Stack","Tooltip","Icon","theme","getServerStats","err","ServerStats","stats","setStats","setIsLoading","hasAccessToDataSources","hasAccessToAdminUsers","getAnonymousStatsContent","config","title","backgroundUrl","footerBg","LicenseChrome","header","editionNotice","subheader","children","Circle","size","style","UpgradePage","navModel","Page","UpgradeInfo","titleStyles","FeatureInfo","ServiceInfo","GetEnterprise","CallToAction","List","Item","FeatureListing","nested","listStyle","image","imageUrl","itemStyle","titleStyle","mapStateToProps","state"],"sourceRoot":""}