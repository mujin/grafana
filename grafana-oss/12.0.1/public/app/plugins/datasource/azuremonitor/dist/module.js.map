{"version":3,"file":"module.js","mappings":"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ACrD,kDAAmD,oBACnD,gDAAiD,oBACjD,4BAA6B,qBAC7B,+CAAgD,aAChD,+CAAgD,aAChD,+CAAgD,sBAChD,4CAA6C,mBAC7C,yCAA0C,gBAC1C,oCAAqC,WAM1BC,GAA0D,CACrE,yBAAyB,EACzB,sCAAsC,EACtC,6CAA6C,EAC7C,yCAAyC,EACzC,8BAA8B,EAC9B,4CAA4C,EAC5C,oCAAoC,EACpC,yCAAyC,EACzC,4CAA4C,EAC5C,iDAAiD,EACjD,yDAAyD,EACzD,wDAAwD,EACxD,6BAA6B,EAC7B,qCAAqC,EACrC,mCAAmC,EACnC,sCAAsC,EACtC,6CAA6C,EAC7C,qCAAqC,EACrC,sCAAsC,GAG3BC,GAAgB,CAC3B,+BACA,kCACA,qCACA,kCACA,8BACA,qBACA,oCACA,iDACA,+BACA,0CACA,8BACA,iCACA,mCACA,4DACA,gCACA,+BACA,0BACA,mCACA,4CACA,+CACA,6CACA,oCACA,gDACA,gDACA,wBACA,kCACA,kDACA,yBACA,uCACA,mDACA,2CACA,2CACA,wDACA,wDACA,yDACA,yDACA,kCACA,4BACA,8BACA,4CACA,uCACA,gDACA,kCACA,wCACA,0BACA,oCACA,4CACA,4DACA,sCACA,kDACA,wCACA,8CACA,8CACA,iDACA,yCACA,6CACA,kCACA,8CACA,8BACA,2CACA,kCACA,yCACA,sCACA,kCACA,uCACA,mCACA,wCACA,+BACA,iCACA,uCACA,+BACA,4CACA,2CACA,oCACA,sCACA,iCACA,4BACA,yCACA,uCACA,+CACA,yCACA,wCACA,qCACA,gCACA,mCACA,8CACA,8BACA,yCACA,sCACA,iCACA,wCACA,oCACA,mCACA,6BACA,8BACA,gCACA,yCACA,+BACA,oCACA,oDACA,mDACA,oDACA,qCACA,uDACA,2CACA,kDACA,uCACA,gCACA,yCACA,+BACA,4BACA,iCACA,4BACA,yCACA,+CACA,2BACA,iDACA,4BACA,+CACA,+DACA,2EACA,kDACA,oDACA,oDACA,gDACA,0BACA,gCACA,2CACA,mDACA,iCACA,2CACA,iDACA,gDACA,+CACA,kDACA,uEACA,8CACA,6BACA,gDACA,wDACA,wCACA,mCACA,iCACA,gCACA,0CACA,wCACA,iCACA,6BACA,yCACA,kDACA,yCACA,sCACA,+BACA,kCACA,gCACA,sCACA,8CACA,6CACA,oCACA,uDACA,mCACA,oCACA,qCACA,wCACA,sCACA,qCACA,2CACA,gCACA,2CACA,oCACA,mCACA,gCACA,4CACA,2CACA,yCACA,kCACA,2CACA,mDACA,yDACA,2CACA,2CACA,oCACA,kCACA,gCACA,8BACA,6BACA,oCACA,2BACA,wCACA,gDACA,6BACA,oCACA,6BACA,oCACA,kCACA,wCACA,0DACA,kCACA,2CACA,iDACA,mCACA,4CACA,qCACA,8CACA,iCACA,iCACA,kCACA,qCACA,kCACA,wCACA,oCACA,iDACA,iDACA,8DACA,kDACA,iDACA,kDACA,iCACA,wCACA,gCACA,uCACA,4CACA,sCACA,0CACA,+BACA,4CACA,0CACA,0CACA,wCACA,4CACA,yDACA,8CACA,iDACA,8BACA,oCACA,mDACA,gDACA,4BACA,sBACA,4BACA,4BACA,mCACA,sCACA,kCACA,kCACA,qEACA,4BACA,+CACA,+CACA,m2BC9qBF,MAAMt0B,GAAaxU,IAA0B,CAC3Ck+B,cAAcx1C,EAAAA,EAAAA,KAAI,CAAEsZ,QAAS,OAAQ+mC,UAAW/oC,EAAMM,QAAQ,GAAI0oC,SAAU,OAAQzmC,aAAcvC,EAAMM,QAAQ,KAChHmL,UAAU/iB,EAAAA,EAAAA,KAAI,CAAEugD,KAAM,aACtBC,eAAexgD,EAAAA,EAAAA,KAAI,CAAEgsB,QAAS1U,EAAMM,QAAQ,KAC5C6oC,sBAAsBzgD,EAAAA,EAAAA,KAAI,CAAEsZ,QAAS,OAAQ+mC,UAAW/oC,EAAMM,QAAQ,QAiJxE,GA9I+B,EAAGqhB,YAAW5U,mBAiD5B4U,EAYAA,EAAAA,EAKAA,EAgBAA,EAjFf,MAAMzhB,GAASqU,EAAAA,EAAAA,YAAWC,KAE1B3M,EAAAA,EAAAA,YAAU,KAEiB,IAArB8Z,EAAUp+B,QACZwpB,EAAS,CAAC,CAAC,GACb,GACC,C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,MACvC,GAzCA,GA4CMuD,mBAAAA,CAAoBjX,qBAA1B,gBACE,MAAM8L,EAAWr7B,EAAyB,EAAKC,YAAa,CAAEsvB,gBAAetzC,IAAG,iBAAC,eAAO,YAAEszC,IACxF,MACMrvB,EAAQ,sDAEYqvB,gCAHDsS,GAAc5lD,KAAKqE,GAAS,IAAIA,OAAS/D,KAAK,+FAWvE,aAFyB,EAAKghF,0BAAgDr9D,IAE5DjkB,KAAKsJ,IACd,CACL+T,KAAM/T,EAAEjF,KACRyE,MAAOQ,EAAEjF,QAGf,uDAlBgF,IAmBhF,aAAckrB,QAAQgwB,IAAIH,IAAW4H,MACvC,GArBA,GApKAnlD,WAAAA,CACEu9E,EACA,GAA4C7wD,EAAAA,EAAAA,mBAE5CD,MAAM8wD,GAAAA,GAAAA,KAAAA,mBAAAA,GANRnB,GAAAA,KAAAA,oBAAAA,GACA0D,GAAAA,KAAAA,wBAAAA,GAAAA,KAGmB39D,YAAAA,EAAAA,KAHnB29D,iBAAmB,sEAMjB5hF,KAAKk+E,azGaQ,eyGZf,2bCTF,MAAM+D,GCY2B,CAC/B,+BACA,kCACA,2BACA,qCACA,qCACA,kCACA,oCACA,iDACA,+BACA,6CACA,0CACA,mDACA,oDACA,qDACA,8BACA,gDACA,4CACA,iCACA,4DACA,gCACA,+BACA,yCACA,oCACA,mCACA,wBACA,kCACA,4CACA,kDACA,yBACA,mCACA,8BACA,uCACA,2CACA,iDACA,2CACA,4CACA,uCACA,gDACA,yCACA,0BACA,oCACA,4CACA,0CACA,2CACA,sCACA,kDACA,wCACA,8CACA,8CACA,yCACA,oCACA,6CACA,kCACA,8CACA,2CACA,8BACA,2CACA,kCACA,yCACA,sCACA,kCACA,uCACA,mCACA,wCACA,+BACA,iCACA,uCACA,+BACA,4CACA,2CACA,oCACA,sCACA,oDACA,oDACA,4CACA,+CACA,6CACA,iCACA,+CACA,4BACA,yCACA,uCACA,+CACA,yCACA,wCACA,qCACA,8BACA,iCACA,wCACA,oCACA,mCACA,6BACA,8BACA,gCACA,iDACA,yCACA,qDACA,+BACA,oCACA,oDACA,mDACA,oDACA,8CACA,uCACA,gCACA,yCACA,yBACA,+BACA,iCACA,4BACA,yCACA,2BACA,sCACA,sCACA,iDACA,4BACA,+CACA,+CACA,+DACA,gDACA,gCACA,2CACA,mDACA,iCACA,6BACA,gDACA,wDACA,wCACA,mCACA,iCACA,gCACA,wCACA,6BACA,yCACA,yCACA,sCACA,+BACA,kCACA,gCACA,sCACA,oCACA,8CACA,0CACA,8CACA,uDACA,6CACA,oCACA,uDACA,mCACA,qCACA,wCACA,sCACA,qCACA,2CACA,2CACA,oCACA,gCACA,0CACA,2CACA,yCACA,kCACA,2CACA,mDACA,wCACA,yDACA,6CACA,2CACA,2CACA,oCACA,2BACA,4BACA,uCACA,wCACA,8CACA,6BACA,oCACA,6BACA,oCACA,mDACA,kCACA,yCACA,gDACA,sCACA,kCACA,iDACA,mCACA,4CACA,qCACA,8CACA,iCACA,iCACA,2CACA,kCACA,qCACA,oCACA,iDACA,iDACA,kDACA,kDACA,wCACA,gCACA,uCACA,4CACA,0CACA,+BACA,4CACA,0CACA,0CACA,wCACA,4CACA,yDACA,kCACA,8CACA,oCACA,gDACA,4BACA,sBACA,4BACA,4BACA,2CDxOwDhiF,KAAK+T,GAAM,IAAIA,OAAMzT,KAAK,KAIrE,MAAM2hF,WAA2B3E,EAAAA,sBAmBxCxlC,gBAAAA,CACJzzC,EACA69E,qBAFF,gBAIE,MAAMr5D,QAAsB,EAAKqD,mBAEjC,IAAKg2D,EACH,OAAOr5D,EAGT,IAAI4V,EAAY5V,EAChB,MAAMu2B,EAAW8iC,EAAiBliF,KAAKsmD,GAAAA,IAAc,YACnD,GAAIA,EAAUn+B,aAAc,CAC1B,MAAMg6D,EAAmB,kBAAkB77B,EAAUn+B,+BAA+Bm+B,EAAUl+B,gBAE9F,GAAIk+B,EAAUl+B,gBAAkB4sB,GAAQvW,EAAW0jD,GAAmB,CACpE,MAAMC,QAAuB,EAAKC,kCAAkC/7B,EAAUn+B,aAAc9jB,GAC5Fo6B,EAAYyW,GAAazW,EAAW,kBAAkB6nB,EAAUn+B,eAAgBi6D,EAClF,CAEA,MAAMzuC,EAAcY,GAAiB+R,GACrC,GAAIA,EAAU5T,eAAiBsC,GAAQvW,EAAWkV,GAAc,CAC9D,MAAM2uC,QAAkC,EAAKC,6BAA6BJ,EAAkB99E,GAC5Fo6B,EAAYyW,GAAazW,EAAW0jD,EAAkBG,EACxD,CACF,CACF,MAEA,IAAK,MAAMvP,KAAW3zB,QAGd2zB,IAGR,OAAOt0C,CACT,GAnCA,GAqCM4Z,uBAAAA,CACJpD,EACAkD,EACA9zC,qBAHF,gBAKE,MAAM+zC,EACJD,EAAU9zC,OAASwhC,GAAgBE,mBACzB,EAAKs8C,kCAAkClqC,EAAUz4C,GAAI2E,SACrD,EAAKk+E,6BAA6BpqC,EAAUjP,IAAK7kC,GAE7D,OAAO6wC,GAAaD,EAAMkD,EAAUjP,IAAKkP,EAC3C,GAXA,GAqDMlsB,gBAAAA,qBAAN,gBACE,MAAMrD,QAAsB,EAAK25D,6BAA6Bt2D,mBAE9D,IAAKrD,EAAcxoB,OACjB,MAAM,IAAIiH,MAAM,+BAGlB,OAAOuhB,EAAc7oB,KAAKmoB,IAAkB,CAC1CvR,KAAMuR,EAAas6D,iBACnB/iF,GAAIyoB,EAAa0E,eACjBqc,IAAK,kBAAkB/gB,EAAa0E,iBACpCspB,UAAW,eACX9xC,KAAMwhC,GAAgBE,aACtB9nB,SAAU,MAEd,GAfA,GAiBMokE,iCAAAA,CACJx1D,EACAxoB,qBAFF,gBAIE,MAAMyG,QAAe,EAAK43E,aAAar+E,GAIvC,aAF6B,EAAKm+E,6BAA6BZ,kBAAkB/0D,EAAgB/hB,IAE3E9K,KAAKsJ,IACzB,MAAMq5E,EAAYjvC,GAAiBpqC,EAAE64E,kBACrC,IAAKQ,IAAcA,EAAUv6D,cAC3B,MAAM,IAAI9gB,MAAM,mCAElB,MAAO,CACLsP,KAAMtN,EAAEs5E,kBACR15C,IAAK5/B,EAAE64E,iBACPziF,GAAIijF,EAAUv6D,cACd/jB,KAAMwhC,GAAgBG,cACtBmQ,UAAW,iBACXl4B,SAAU,GACX,GAEL,GAtBA,GAyBMskE,4BAAAA,CAA6Br5C,EAAa7kC,qBAAhD,gBAGE,aAFwB,EAAKm+E,6BAA6BV,iBAAiB,CAAE54C,aAAa,EAAKw5C,aAAar+E,KAE3FrE,KAAKuoB,IACb,CACL3R,KAAM2R,EAAS3R,KACflX,GAAI6oB,EAAS3R,KACbsyB,IAAK3gB,EAAS7oB,GACdkjF,kBAAmBr6D,EAASH,cAC5B/jB,KAAMwhC,GAAgBI,SACtBkQ,UAAWuP,GAAyBn9B,EAASlkB,OAASkkB,EAASlkB,KAC/Dw+E,oBAAqBt6D,EAAS1F,SAC9BA,SAAU0F,EAAS1F,YAGzB,GAfA,GAkBMigE,+BAAAA,CAAgCnvC,qBAAtC,oBACwDU,EAAtD,MAAM,aAAElsB,EAAY,cAAEC,EAAa,aAAEsqB,GAAsCiB,QAArBU,EAAAA,GAAqBV,UAArBU,IAAAA,EAAAA,EAAqC,CAAC,EAE5F,IAAKlsB,EACH,MAAM,IAAI7gB,MAAM,+BAKlB,MAAMy7E,EAAkB,kBAAkB56D,IAGpClE,EAAQ,yGAGG8+D,4OALWA,oBAAkC36D,oMAiBrCurB,wKAOnBkqC,QAAiB,EAAK2E,6BAA6BlB,0BAAoDr9D,GAE7G,IAAK45D,EAASx9E,OACZ,MAAM,IAAIiH,MAAM,oCAGlB,MAAM,iBAAEm7E,EAAgB,kBAAEG,EAAmBlwC,aAAcswC,GAAyBnF,EAAS,GAI7F,MAAO,CACL11D,aAAcs6D,GAAoBt6D,EAClCC,cAAew6D,GAAqBx6D,EACpCsqB,aAAcswC,GAAwBtwC,EAE1C,GAjDA,GAmDM2L,2BAAAA,CAA4BD,qBAAlC,gBACE,MAAMy/B,QAAiB,EAAK2E,6BAA6BlB,0BAAgD,iEAEhEljC,gCAIzC,IAAKy/B,EAASx9E,OACZ,MAAM,IAAIiH,MAAM,yCAA2C82C,GAG7D,OAAOy/B,EAAS,GAAGn+E,EACrB,GAZA,GAuBcujF,kBAAAA,qBAAd,gBACE,MAAMp6D,QAAsB,EAAKqD,oBACjCi5B,EAAAA,EAAAA,mBAAkB,+CAAgD,CAAEt8B,cAAeA,EAAcxoB,SAEjG,IAAI6iF,EAAyC,IAAIjpE,IAEjD2rC,GAAcntC,SAAS4P,IACrB66D,EAA0BzoE,IAAI,IAAI4N,KAAa,IAIjD,MACM86D,EAAAA,iBAAyB,cAAO76D,GACpC,MAAM86D,QAAmB,EAAK/jC,uBAAuBkL,oBACnD,CAEEjX,YAAa,kBAAkBzqB,EAAc,GAAGnpB,OAElD,EACA4oB,GAEF,GAAI86D,EACF,IAAK,MAAM/6D,KAAa+6D,EACtBF,EAA0BzoE,IAAI,IAAI4N,EAAUvf,MAAMqxC,uBAGxD,oBAdsC7xB,mCAAhC66D,GAgBA/jC,EAjBU,CAAC,aAAc,SAAU,aAiBhBp/C,KAAKsoB,GAAW66D,EAAuB76D,KAGhE,SAFMiH,QAAQgwB,IAAIH,GAEqB,IAAnC8jC,EAA0Bx2E,KAC5B,MAAM,IAAIpF,MACR,qOAIJ,EAAK47E,0BAA4BnhF,MAAM0N,KAAKyzE,GAA2B5iF,KAAK,IAC9E,GAtCA,GAwCA43C,SAAAA,CAAUzZ,GACR,MAAM4kD,EAAejvC,GAA6B3V,GAC5C6kD,EAAiC,GAyBvC,OAxBAD,EAAa5qE,SAAQ,CAAC8P,EAAUhoB,SAoBDgoB,EAnB7B,IAAI7oB,EAAK6oB,EAASmqB,aACd97B,EAAO2R,EAASmqB,aAChB6wC,EAAQ19C,GAAgBI,aAiBC1d,EAAzBm9B,EAAAA,EAhBChmD,IACHA,EAAK6oB,EAASH,cACdxR,EAAO2R,EAASH,cAChBm7D,EAAQ19C,GAAgBG,cACnBtmC,IACHA,EAAK6oB,EAASJ,aACdvR,EAAO2R,EAASJ,aAChBo7D,EAAQ19C,GAAgBE,eAG5Bu9C,EAAgB9jF,KAAK,CACnBE,GAAIA,QAAAA,EAAM,GACVkX,KAAMA,QAAAA,EAAQ,GACdvS,KAAMk/E,EACNr6C,IAAKqL,GAAiBhsB,GACtB4tB,UACqG,QAAnGuP,EAAuE,QAAvEA,EAAAA,GAA8D,QAArCn9B,EAAwB,QAAxBA,EAAAA,EAASkqB,uBAATlqB,IAAAA,OAAAA,EAAAA,EAA0Bva,qBAA1Bua,IAAAA,EAAAA,EAA2C,WAApEm9B,IAAAA,EAAAA,EAA2En9B,EAASkqB,uBAApFiT,IAAAA,EAAAA,EAAuG,GACzG7iC,SAAU0F,EAASD,QACnB,IAEGg7D,CACT,CA9SAzhF,WAAAA,CACEu9E,EACA//B,EACAmjC,SAEAl0D,MAAM8wD,GAAAA,EAAAA,KAVRl3C,GAAAA,KAAAA,cAAc,KACdmX,GAAAA,KAAAA,8BAAAA,GACAmjC,GAAAA,KAAAA,oCAAAA,GACAU,GAAAA,KAAAA,4BAA4B,IA8D5Bn7D,GAAAA,KAAAA,SAAAA,iBAAS,cAAO+uB,EAAsB0sC,GACpC,IAAIC,EAAc,YAalB,MAZmB,SAAfD,IACFC,GAAe,sCAGjBA,GAAe,kCACY3sC,qBACf,EAAK4rC,aAAac,6DAEhB,EAAKt7C,6BAGX,EAAKs6C,6BAA6BlB,0BAAgDmC,IAC1EzjF,KAAKC,IACnB,MAAM0iF,EAAYjvC,GAAiBzzC,EAAKP,IACxC,IAAKijF,KAAeA,EAAUjwC,cAAgBiwC,EAAUv6D,eAAiBu6D,EAAUx6D,cACjF,MAAM,IAAI7gB,MAAM,wCAETq7E,EAAT,IAAIjjF,EAA2B,QAAtBijF,EAAAA,EAAUx6D,oBAAVw6D,IAAAA,EAAAA,EAA0B,GAC/Bt+E,EAAOwhC,GAAgBE,aAQ3B,OAPI48C,EAAUjwC,cACZhzC,EAAKijF,EAAUjwC,aACfruC,EAAOwhC,GAAgBI,UACd08C,EAAUv6D,gBACnB1oB,EAAKijF,EAAUv6D,cACf/jB,EAAOwhC,GAAgBG,eAElB,CACLpvB,KAAM3W,EAAK2W,KACXlX,KACAwpC,IAAKjpC,EAAKP,GACVkjF,kBAAmB3iF,EAAKmoB,cACxB/jB,OACA8xC,UAAWuP,GAAyBzlD,EAAKoE,OAASpE,EAAKoE,KACvDwe,SAAU5iB,EAAK4iB,SAChB,GAEL,oBAtCgBi0B,EAAsB0sC,mCAAtCz7D,IAqKA,QAAQ26D,eAAAA,iBAAe,cAAOl5E,GAI5B,MAHuC,KAAnC,EAAK05E,2BAA0C,SAAN15E,UACrC,EAAKy5E,sBAEA,SAANz5E,EACH,oBAAoBw4E,MACpB,oBAAoB,EAAKkB,4BAC/B,oBAP8B15E,mCAAtBk5E,IA3NN3iF,KAAKs/C,uBAAyBA,EAC9Bt/C,KAAKyiF,6BAA+BA,CACtC,qzBEpCa,SAASkB,GAAkBC,OAILA,EAAAA,EAM1BA,EATT,MAAMC,EAA0C,iBAAxBD,EAAW1+B,SAAwB0+B,EAAW1+B,SAAW,KAC3E4+B,EAA+C,iBAAzBF,EAAWvlC,UAAyBulC,EAAWvlC,UAAY,KAEvF,IAAMwlC,IAAYC,IAAkC,QAAjBF,EAAAA,EAAW98E,cAAX88E,IAAAA,GAAoC,QAApCA,EAAAA,EAAmBnpD,yBAAnBmpD,IAAAA,OAAAA,EAAAA,EAAsC1/D,OACvE,OAAO0/D,MAIHA,EACGA,EAFT,MAAM1xD,EAA8B,SACb,QAAjB0xD,EAAAA,EAAW98E,cAAX88E,IAAAA,EAAAA,EAAqB,CAAC,IAC1BplD,MAA+B,QAAxBolD,EAAiB,QAAjBA,EAAAA,EAAW98E,cAAX88E,IAAAA,OAAAA,EAAAA,EAAmBplD,aAAnBolD,IAAAA,EAAAA,EAA4B,OACnC36D,UAAWyG,GAAe+O,aAC1BhE,kBAAmB,CACjBvW,MAAO2/D,EACPnlD,UAAW,CAAColD,MAIhB,OAAO,SACFF,GAAAA,CACH1+B,cAAUpkD,EACVu9C,eAAWv9C,EACXsnB,kBAActnB,EACdmoB,eAAWnoB,EACXgG,OAAQorB,GAEZ,0bCVO,MAAM6xD,GAAoC7/D,IACxC,CACL4E,cAAe5E,EAAMta,MAAM,uBAC3By4E,eAAgBn+D,EAAMta,MAAM,wBAC5Bo6E,sBAAuB9/D,EAAMta,MAAM,gDACnCy5E,WAAYn/D,EAAMta,MAAM,4CACxBq6E,kBAAmB//D,EAAMta,MAAM,wCAC/Bs6E,cAAehgE,EAAMta,MAAM,2CAC3Bu6E,qBAAsBjgE,EAAMta,MAAM,oDAClC8oC,gBAAiBxuB,EAAMta,MAAM,yDAC7Bw6E,uBAAwBlgE,EAAMta,MAAM,qEACpC++C,YAAazkC,EAAMta,MAAM,iEACzBy6E,mBAAoBngE,EAAMta,MAAM,0EAChC06E,2BAA4BpgE,EAAMta,MAAM,gCACxC26E,wBAAyBrgE,EAAMta,MAAM,qDACrC46E,gBAAiBtgE,EAAMta,MAAM,oBAC7B66E,uBAAwBvgE,EAAMta,MAAM,yCAkLlC86E,GAAAA,iBAA0C,cAC9Cx/B,EACAj2B,GAEA,MAAM8sD,EAAwB9sD,EAAWqwB,uBAAuBy8B,sBAChE,IAAIvzD,EAAW,GAGf,GAAI08B,EAAU,CACZ,MAAMy/B,EAAqB11D,EAAW8O,4BAA4BqhD,gCAI9D52D,EAHAm8D,EACsBlwC,GAAUkwC,SAEf11D,EAAW+nB,mBAAmBsH,4BAA4BqmC,GAEhEA,SAGqB11D,EAAW8O,4BAA4ByhD,sBACvC,EAEtC,CAEA,MAAO,CACLhhD,MAAO,IACPvV,UAAWyG,GAAe+O,aAC1BhE,kBAAmB,CACjBvW,MAAOghC,EACPxmB,UAAWlW,EAAW,CAACA,GAAY,IAErCJ,aAAc2zD,EAElB,oBA/BE72B,EACAj2B,mCAFIy1D,GAmFOE,GAAAA,iBAAsC,cACjD1/B,EACAhgD,GAGA,MAAwB,iBAAbggD,EACFA,EAvQ8B,CAAChhC,IACxC,MAAM2vB,EAAmDkwC,GAAiC7/D,GAC1F,OAAO5hB,OAAOP,KAAK8xC,GAAS9mC,MAAMrK,KAAUmxC,EAAQnxC,IAAK,EAwQlDmiF,CAAiC3/B,GArQC,EAACA,EAAkBj2B,KAC5D,MAAM61D,EAAkBf,GAAiC7+B,GACnD62B,EAAwB9sD,EAAWqwB,uBAAuBy8B,sBAoKhE,MANiC,CAC/Bv9C,MAAO,IACPvV,UAAWyG,GAAeq1D,0BAC1BC,0BA9JIF,EAAgBR,2BAC+B,CAAEp/B,WAAU3mC,KAAM,8BAIjEumE,EAAgBP,wBAC4B,CAC5ChmE,KAAM,0BACN2mC,WACAzjC,WAAYqjE,EAAgBP,wBAAwB,IAKpDO,EAAgBh8D,cACuB,CACvCvK,KAAM,qBACN2mC,YAKA4/B,EAAgBd,sBACwB,CACxCzlE,KAAM,sBACN2mC,WACA98B,aAAc08D,EAAgBd,sBAAsB,IAKpDc,EAAgBzC,gBAAkBtG,EACM,CACxCx9D,KAAM,sBACN2mC,WACA98B,aAAc2zD,GAKd+I,EAAgBb,kBACyB,CACzC1lE,KAAM,uBACN2mC,WACA98B,aAAc08D,EAAgBb,kBAAkB,GAChD57D,cAAey8D,EAAgBb,kBAAkB,IAKjDa,EAAgBzB,YAActH,EACW,CACzCx9D,KAAM,uBACN2mC,WACA98B,aAAc2zD,EACd1zD,cAAey8D,EAAgBzB,WAAW,IAK1CyB,EAAgBX,qBACuB,CACvC5lE,KAAM,qBACN2mC,WACA98B,aAAc08D,EAAgBX,qBAAqB,GACnD97D,cAAey8D,EAAgBX,qBAAqB,GACpDzxC,gBAAiBoyC,EAAgBX,qBAAqB,IAKtDW,EAAgBZ,eAAiBnI,EACM,CACvCx9D,KAAM,qBACN2mC,WACA98B,aAAc2zD,EACd1zD,cAAey8D,EAAgBZ,cAAc,GAC7CxxC,gBAAiBoyC,EAAgBZ,cAAc,IAK/CY,EAAgBV,uBACyB,CACzC7lE,KAAM,uBACN2mC,WACA98B,aAAc08D,EAAgBV,uBAAuB,GACrD/7D,cAAey8D,EAAgBV,uBAAuB,GACtD1xC,gBAAiBoyC,EAAgBV,uBAAuB,GACxDzxC,aAAcmyC,EAAgBV,uBAAuB,IAKrDU,EAAgBpyC,iBAAmBqpC,EACM,CACzCx9D,KAAM,uBACN2mC,WACA98B,aAAc2zD,EACd1zD,cAAey8D,EAAgBpyC,gBAAgB,GAC/CA,gBAAiBoyC,EAAgBpyC,gBAAgB,GACjDC,aAAcmyC,EAAgBpyC,gBAAgB,IAK9CoyC,EAAgBn8B,aAAeozB,IACoB,IAAjD+I,EAAgBn8B,YAAY,GAAGxoC,QAAQ,KACF,CACrC5B,KAAM,mBACN2mC,WACA98B,aAAc2zD,EACd1zD,cAAey8D,EAAgBn8B,YAAY,GAC3CjW,gBAAiBoyC,EAAgBn8B,YAAY,GAC7ChW,aAAcmyC,EAAgBn8B,YAAY,IAM5Cm8B,EAAgBT,mBACqB,CACrC9lE,KAAM,mBACN2mC,WACA98B,aAAc08D,EAAgBT,mBAAmB,GACjDh8D,cAAey8D,EAAgBT,mBAAmB,GAClD3xC,gBAAiBoyC,EAAgBT,mBAAmB,GACpD1xC,aAAcmyC,EAAgBT,mBAAmB,IAKjDS,EAAgBL,uBACoB,CACpClmE,KAAM,kBACN2mC,WACA98B,cAAe08D,EAAgBL,uBAAuB,IAAM,IAAIz7E,QAKhE87E,EAAgBN,iBAAmBzI,EACC,CACpCx9D,KAAM,kBACN2mC,WACA98B,aAAc2zD,GAMuB,CAAEx9D,KAAM,qBAAsB2mC,YAQvE98B,aAAc2zD,EAEJ,EAgGRkJ,CAAmC//B,EAAUhgD,EAAQ+pB,YACrDy1D,GAAwCx/B,EAAUhgD,EAAQ+pB,WAChE,oBAXEi2B,EACAhgD,mCAFW0/E,GAcAnK,GAAYA,iBAAG,cAC1Bv1B,EACAhgD,GAEA,IAAIgf,QAAc0gE,GAAoC1/B,EAAUhgD,GAMhE,OAJIgf,EAAM+E,YAAcyG,GAAeq1D,4BACrC7gE,EAtEqC,CAACA,IACxC,MAAM,UAAE+E,EAAS,0BAAE+7D,GAA8B9gE,EACjD,GAAI+E,IAAcyG,GAAeq1D,4BAA8BC,EAC7D,OAAO9gE,EAGT,MAAMk4D,yUAAmC,IACpCl4D,GAeL,OAbI,iBAAkB8gE,IACpB5I,EAAch0D,aAAe48D,EAA0B58D,cAErD,kBAAmB48D,IACrB5I,EAAc/zD,cAAgB28D,EAA0B38D,eAEtD,oBAAqB28D,IACvB5I,EAAc9zD,UAAY08D,EAA0BtyC,iBAElD,iBAAkBsyC,IACpB5I,EAAc5zD,SAAWw8D,EAA0BryC,cAG7CqyC,EAA0BzmE,MAChC,IAAK,qBACH69D,EAAcnzD,UAAYyG,GAAew1D,mBACzC,MACF,IAAK,sBACH9I,EAAcnzD,UAAYyG,GAAey1D,oBACzC,MACF,IAAK,qBACH/I,EAAcnzD,UAAYyG,GAAe01D,mBACzC,MACF,IAAK,uBAGL,IAAK,yBACHhJ,EAAcnzD,UAAYyG,GAAe21D,gBACzC,MACF,IAAK,mBACHjJ,EAAcnzD,UAAYyG,GAAe41D,iBACzC,MACF,IAAK,kBACHlJ,EAAcnzD,UAAYyG,GAAe61D,gBAI7C,OAAOnJ,CAAa,EAwBVoJ,CAAiCthE,IAGpCA,CACT,oBAVEghC,EACAhgD,mCAFuBu1E,4HCnTzB,MAkDA,GAlDuC,EACrCv2D,QACAuzD,cACAxoD,qBAUI/K,EAJJ,MAAOuhE,EAAUC,IAAehnE,EAAAA,EAAAA,UAAS,KAEzCkG,EAAAA,EAAAA,YAAU,SACIV,EAAZwhE,GAA2C,QAA/BxhE,EAAAA,EAAM8gE,iCAAN9gE,IAAAA,OAAAA,EAAAA,EAAiCghC,WAAY,GAAG,GAC3D,CAAgC,QAA/BhhC,EAAAA,EAAM8gE,iCAAN9gE,IAAAA,OAAAA,EAAAA,EAAiCghC,WAErC,MAAMq0B,GAAa/oD,EAAAA,EAAAA,cAChB0B,IACC0yD,GAAoC1yD,EAAU,CAAEjD,eAActC,MAAMutD,YAC9DA,EAAajxD,YAAcyG,GAAeq1D,0BAC5CtN,EAAYyC,GAEZzC,4UAAY,IACPvzD,cAAAA,CACH8gE,0BAA2B,CACzBzmE,KAAM,eACN2mC,SAAUhzB,oVAGhB,GACA,GAEJ,CAACjD,EAAY/K,EAAOuzD,IAOtB,OACE,SAACrjD,EAAAA,YAAWA,CAACnS,MAAM,+CACjB,SAACkI,EAAAA,MAAKA,CACJC,YAAa,iEACbrhB,MAAO08E,EACP37D,SATYO,IAChBq7D,EAAYr7D,EAAMvjB,OAAOiC,MAAM,EAS3B0pB,OAAQ,IAAM8mD,EAAWkM,2zBC3BjC,MAAME,GAAgC,CAAE1jE,MAAO,IAAKlZ,MAAO,IAiZ3D,GA/YwBxE,IACtB,MAAM,MAAE2f,EAAK,SAAE4F,EAAQ,WAAEmF,GAAe1qB,EAClCqhF,EAAoC,CACxC,CAAE3jE,MAAO,gBAAiBlZ,MAAO2mB,GAAew1D,oBAChD,CAAEjjE,MAAO,kBAAmBlZ,MAAO2mB,GAAey1D,qBAClD,CAAEljE,MAAO,aAAclZ,MAAO2mB,GAAe21D,iBAC7C,CAAEpjE,MAAO,UAAWlZ,MAAO2mB,GAAem2D,gBAC1C,CAAE5jE,MAAO,iBAAkBlZ,MAAO2mB,GAAe01D,oBACjD,CAAEnjE,MAAO,eAAgBlZ,MAAO2mB,GAAe41D,kBAC/C,CAAErjE,MAAO,aAAclZ,MAAO2mB,GAAe61D,iBAC7C,CAAEtjE,MAAO,iBAAkBlZ,MAAO2mB,GAAeuqD,oBACjD,CAAEh4D,MAAO,OAAQlZ,MAAO2mB,GAAe+O,cACvC,CAAExc,MAAO,oBAAqBlZ,MAAO2mB,GAAeo2D,uBACpD,CAAE7jE,MAAO,sBAAuBlZ,MAAO2mB,GAAeq2D,yBAE7B,iBAAhBxhF,EAAM2f,OAAsB3f,EAAM2f,MAAM+E,YAAcyG,GAAeq1D,2BAE9Ea,EAAkCnmF,KAAK,CACrCwiB,MAAO,yBACPlZ,MAAO2mB,GAAeq1D,4BAG1B,MAAOxhE,EAAqByiE,IAA0BtnE,EAAAA,EAAAA,UAA2D,CAC/GuD,MAAO,qBACP/c,QAAS,MAEJ+gF,EAAqBC,IAA0BxnE,EAAAA,EAAAA,WAAS,IACxDynE,EAAkBC,IAAuB1nE,EAAAA,EAAAA,WAAS,IAClD2nE,EAAcC,IAAmB5nE,EAAAA,EAAAA,WAAS,IAC1C6nE,EAAWC,IAAgB9nE,EAAAA,EAAAA,WAAS,IACpC+nE,EAAsBC,IAA2BhoE,EAAAA,EAAAA,WAAS,IAC1DioE,EAAkBC,IAAuBloE,EAAAA,EAAAA,WAAS,IAClDmoE,EAAwBC,IAA6BpoE,EAAAA,EAAAA,WAAS,IAC9DqoE,EAAiBC,IAAsBtoE,EAAAA,EAAAA,WAAS,IAChDoK,EAAemE,IAAoBvO,EAAAA,EAAAA,UAA4B,KAC/D2jE,EAAgB4E,IAAqBvoE,EAAAA,EAAAA,UAA4B,KACjE2kE,EAAY6D,IAAiBxoE,EAAAA,EAAAA,UAA4B,KACzDyoE,EAAkBC,IAAuB1oE,EAAAA,EAAAA,UAA4B,KACrEggB,EAAW6b,IAAgB77B,EAAAA,EAAAA,UAA4B,KACvD2oE,EAASC,IAAc5oE,EAAAA,EAAAA,UAA4B,KACnD+4B,EAAcpjB,GAAYjE,KAC3BnH,EAA6B,iBAAV/E,EAAqB,GAAKA,EAAM+E,WAEzDrE,EAAAA,EAAAA,YAAU,KACR61D,GAAav2D,EAAO,CAAE+K,WAAYA,IAActC,MAAMyvD,KAC/CmL,EAAAA,EAAAA,SAAQrjE,EAAOk4D,IAClBtyD,EAASsyD,EACX,GACA,GACD,CAACl4D,EAAO+K,EAAYnF,KAEvBlF,EAAAA,EAAAA,YAAU,KAQR,OAPAshE,GAAuB,GACvBE,GAAoB,GACpBE,GAAgB,GAChBI,GAAwB,GACxBE,GAAoB,GACpBI,GAAmB,GACnBF,GAA0B,GAClB79D,GACN,KAAKyG,GAAey1D,oBACpB,KAAKz1D,GAAe61D,gBAClBW,GAAuB,GACvB,MACF,KAAKx2D,GAAe21D,gBAClBa,GAAuB,GACvBE,GAAoB,GACpB,MACF,KAAK12D,GAAe01D,mBAClBc,GAAuB,GACvBE,GAAoB,GACpBE,GAAgB,GAChBE,GAAa,GACb,MACF,KAAK92D,GAAe41D,iBAClBY,GAAuB,GACvBQ,GAAwB,GACxBE,GAAoB,GACpBI,GAAmB,GACnB,MACF,KAAKt3D,GAAem2D,eAClBK,GAAuB,GACvB,MACF,KAAKx2D,GAAeo2D,sBAClBI,GAAuB,GACvBQ,GAAwB,GACxBE,GAAoB,GACpBI,GAAmB,GACnB,MACF,KAAKt3D,GAAeq2D,uBAClBG,GAAuB,GACvBQ,GAAwB,GACxBM,GAAmB,GACnBJ,GAAoB,GACpBE,GAA0B,GAE9B,GACC,CAAC79D,KAEJrE,EAAAA,EAAAA,YAAU,KACR,MAAM1f,EAAgC,GACtC+pB,EAAWu4D,kBAAkB9uE,SAAS1E,KAChCtI,EAAAA,EAAAA,KAAIsI,EAAG,qBAAuBiV,GAChC/jB,EAAQzF,KAAK,CAAEwiB,MAAOjO,EAAEiO,OAASjO,EAAE6C,KAAM9N,MAAO,IAAIiL,EAAE6C,QACxD,IAEFmvE,EAAuB,CACrB/jE,MAAO,qBACP/c,WACA,GACD,CAAC+pB,EAAYhG,IAGhBqE,GAAc,KACZ2B,EAAW9C,mBAAmBQ,MAAM86D,IAClCx6D,EAAiBw6D,EAAKxnF,KAAK8R,IAAO,CAAEkQ,MAAOlQ,EAAEuL,KAAMvU,MAAOgJ,EAAEhJ,UAAU,GACtE,IAGJ,MAAMqf,EAAgC,iBAAVlE,GAAsBA,EAAMkE,cAExDxD,EAAAA,EAAAA,YAAU,KACJwD,GACF6G,EAAW4yD,kBAAkBz5D,GAAcuE,MAAM+6D,IAC/CT,EAAkBS,EAAIznF,KAAK8R,IAAO,CAAEkQ,MAAOlQ,EAAE8wE,kBAAmB95E,MAAOgJ,EAAE8wE,sBAAsB,GAEnG,GACC,CAAC5zD,EAAY7G,IAEhB,MAAMC,EAAkC,iBAAVnE,GAAsBA,EAAMmE,eAAkB,IAE5EzD,EAAAA,EAAAA,YAAU,KACJwD,GAAgBC,GAClB4G,EAAWu7B,oBAAoBpiC,EAAcC,OAAevnB,GAAW,GAAO,GAAM6rB,MAAM+6D,IACxFR,EAAcQ,EAAIznF,KAAK8R,IAAO,CAAEkQ,MAAOlQ,EAAEuL,KAAMvU,MAAOgJ,EAAEhJ,UAAU,GAEtE,GACC,CAACkmB,EAAY7G,EAAcC,KAG9BzD,EAAAA,EAAAA,YAAU,KACJwD,GACF6G,EAAWqwB,uBAAuBwhC,aAAa,CAAC14D,IAAeuE,MAAM+6D,IACnE,MAAML,EAA6B,GACnCK,EAAIhvE,SAASnP,GAAM89E,EAAQ5nF,KAAK,CAAEwiB,MAAO1Y,EAAEwZ,YAAaha,MAAOQ,EAAEsN,SACjEywE,EAAWD,EAAQ,GAEvB,GACC,CAACp4D,EAAY7G,EAAcC,IAE9B,MAAMC,EAA8B,iBAAVpE,GAAsBA,EAAMoE,WAAc,IAEpE1D,EAAAA,EAAAA,YAAU,KACJwD,GAAgBC,GAAiBC,GACnC2G,EAAW8yD,iBAAiB35D,EAAcC,EAAeC,GAAWqE,MAAM+R,IACxE6b,EAAa7b,EAAUz+B,KAAK8R,IAAO,CAAEkQ,MAAOlQ,EAAE8E,KAAM9N,MAAOgJ,EAAE8E,SAAS,GAE1E,GACC,CAACoY,EAAY7G,EAAcC,EAAeC,IAE7C,MAAME,EAA6B,iBAAVtE,GAAsBA,EAAMsE,UAAa,GAgBlE,IAdA5D,EAAAA,EAAAA,YAAU,KACR,GAAIwD,GAAgBC,GAAiBC,GAAaE,EAAU,CAC1D,MAAM+qB,EAAcjB,GAAWC,kBAAiB/jB,EAAAA,EAAAA,kBAAkB,CAChEpG,eACAC,gBACAqqB,gBAAiBpqB,EACjBqqB,aAAcnqB,IAEhByG,EAAWu7B,oBAAoBpiC,EAAcC,EAAekrB,GAAa,GAAM5mB,MAAM+6D,IACnFN,EAAoBM,EAAIznF,KAAK8R,IAAO,CAAEkQ,MAAOlQ,EAAEuL,KAAMvU,MAAOgJ,EAAEhJ,UAAU,GAE5E,IACC,CAACkmB,EAAY7G,EAAcC,EAAeC,EAAWE,IAEnC,iBAAVtE,EAET,OAAO,KAGT,MAwDM+N,EAAiB01D,IACrB79D,EAAS69D,EAAY,MAiCK14D,EAvB5B,OACE,iCACE,SAAC1F,EAAAA,MAAKA,CAACtH,MAAM,aAAauH,cAAanC,EAAoC4B,UAAU1B,gBACnF,SAACmC,EAAAA,OAAMA,CACLE,aAAW,oBACXE,SAxEmB89D,IACrBA,EAAgB7+E,OAClB+gB,EAAS,SACJ5F,GAAAA,CACH+E,UAAW2+D,EAAgB7+E,MAC3Bqf,kBAActnB,EACdunB,mBAAevnB,EACfwnB,eAAWxnB,EACX0nB,cAAU1nB,IAEd,EA+DMoE,QAAS0gF,EACTrzD,MAAO,GACPxpB,MAAOkgB,MAGV/E,EAAM+E,YAAcyG,GAAe+O,eAClC,iCACE,SAACg+C,GAAeA,CACd3vD,eAAgB5I,EAAMkE,aACtBlE,MAAOA,EACP+K,WAAYA,EACZnF,SAAUmI,EAEVA,cAAeA,EACf1O,oBAAqBA,EACrB8Q,SAAUA,EACVoqB,cAAc,EACdxyB,iBAAoE,QAAlDgD,EAAAA,EAAWqwB,uBAAuBrzB,wBAAlCgD,IAAAA,GAAAA,IAEnBwoB,IACC,iCACE,SAAC/jB,EAAAA,MAAKA,CAAC1f,EAAG,KACV,SAAC8W,EAAAA,MAAKA,CAACC,SAAS,QAAQ5M,MAAM,0EAC3Bs5B,aAAwBlwC,MAAQkwC,EAAatwB,QAAUswB,UAMjEvzB,EAAM+E,YAAcyG,GAAeq1D,4BAClC,SAAC8C,GAA8BA,CAAC3jE,MAAOA,EAAOuzD,YAAalzE,EAAMulB,SAAUmF,WAAYA,IAExFg3D,IACC,SAAC18D,EAAAA,MAAKA,CAACtH,MAAM,eAAeuH,cAAanC,EAAoCe,aAAab,gBACxF,SAACmC,EAAAA,OAAMA,CACLE,aAAW,sBACXE,SAhGoB89D,IACxBA,EAAgB7+E,OAClB+gB,EAAS,SACJ5F,GAAAA,CACHkE,aAAcw/D,EAAgB7+E,MAC9Bsf,mBAAevnB,EACfwnB,eAAWxnB,EACX0nB,cAAU1nB,IAEd,EAwFQoE,QAAS4jB,EAAczoB,OAAOkjB,GAC9BgP,MAAO,GACPxpB,MAAOmb,EAAMkE,cAAgB,UAIjCq+D,GAAwBN,KACxB,SAAC58D,EAAAA,MAAKA,CAACtH,MAAM,iBAAiBuH,cAAanC,EAAoCgB,cAAcd,gBAC3F,SAACmC,EAAAA,OAAMA,CACLE,aAAW,wBACXE,SA/FqB89D,IAC7B99D,EAAS,SACJ5F,GAAAA,CACHmE,cAAeu/D,EAAgB7+E,MAC/Buf,eAAWxnB,EACX0nB,cAAU1nB,MA2FJoE,QACEuhF,EACIpE,EAAehiF,OAAOkjB,GACtB8+D,EAAehiF,OAAOkjB,EAAqBoiE,IAEjDpzD,MAAO,GACPxpB,MAAOmb,EAAMmE,eAAiB,KAC9B+B,YAAaq8D,OAAuB3lF,EAAY,gBAIpD6lF,GAAoBN,KACpB,SAAC98D,EAAAA,MAAKA,CACJtH,MACEgH,IAAcyG,GAAeo2D,uBAAyB78D,IAAcyG,GAAeq2D,uBAC/E,gBACA,YAENv8D,cAAanC,EAAoCiB,UAAUf,gBAE3D,SAACmC,EAAAA,OAAMA,CACLE,aAAW,mBACXE,SA7GiB89D,IACzB99D,EAAS,SACJ5F,GAAAA,CACHoE,UAAWs/D,EAAgB7+E,MAC3Byf,cAAU1nB,MA0GJoE,QACEyhF,EACItD,EAAWhjF,OAAOkjB,GAClB8/D,EAAWhjF,OAAOkjB,EAAqBoiE,IAE7CpzD,MAAO,GACPxpB,MAAOmb,EAAMoE,WAAa,KAC1B8B,YAAau8D,OAAmB7lF,EAAY,eAIjDylF,IACC,SAACh9D,EAAAA,MAAKA,CAACtH,MAAM,SAASuH,cAAanC,EAAoCkB,OAAOhB,gBAC5E,SAACmC,EAAAA,OAAMA,CACLE,aAAW,gBACXE,SArHc89D,IACtB99D,EAAS,SACJ5F,GAAAA,CACHqE,OAAQq/D,EAAgB7+E,UAmHlB7D,QAASmiF,EAAQhnF,OAAOkjB,GACxBgP,MAAO,GACPxpB,MAAOmb,EAAMqE,QAAU,KACvB6B,YAAY,eAIjB28D,IACC,SAACx9D,EAAAA,MAAKA,CAACtH,MAAM,WAAWuH,cAAanC,EAAoCmB,SAASjB,gBAChF,SAACmC,EAAAA,OAAMA,CACLE,aAAW,kBACXE,SA1HgB89D,IACxB99D,EAAS,SACJ5F,GAAAA,CACHsE,SAAUo/D,EAAgB7+E,UAwHpB7D,QAASw5B,EAAUr+B,OAAOkjB,GAC1BgP,MAAO,GACPxpB,MAAOmb,EAAMsE,UAAY,SAI9Bq+D,IACC,SAACt9D,EAAAA,MAAKA,CAACtH,MAAO,mBAAoBuH,cAAanC,EAAoC6B,gBAAgB3B,gBACjG,SAACmC,EAAAA,OAAMA,CACLE,aAAW,0BACXE,SA1HuB89D,IAC/B99D,EAAS,SACJ5F,GAAAA,CACHgF,gBAAiB0+D,EAAgB7+E,UAwH3B7D,QACE2hF,EACIM,EAAiB9mF,OAAOkjB,GACxB4jE,EAAiB9mF,OAAOkjB,EAAqBoiE,IAEnDpzD,MAAO,GACPxpB,MAAOmb,EAAMgF,iBAAmB,KAChCkB,YAAay8D,OAAyB/lF,EAAY,eAIvDojB,EAAM+E,YAAcyG,GAAeuqD,qBAClC,iCACE,SAACyC,GAAcA,CACb5vD,eAAgBmC,EAAW8O,4BAA4Bg+C,sBACvD73D,MAAOA,EACP+K,WAAYA,EACZnF,SAAUmI,EACV1O,oBAAqBA,EACrB8Q,SAAUA,IAEXojB,IACC,iCACE,SAAC/jB,EAAAA,MAAKA,CAAC1f,EAAG,KACV,SAAC8W,EAAAA,MAAKA,CAACC,SAAS,QAAQ5M,MAAM,0EAC3Bs5B,aAAwBlwC,MAAQkwC,EAAatwB,QAAUswB,iQC5YjE,SAASqwC,GAAqCppD,EAAmCgU,GACtF,OAAOhU,EAAUz+B,KAAKsJ,IAChBc,EAAAA,EAAAA,YAAWqoC,aAAAA,EAAAA,EAAiBzkC,cAAe,sCACtC,CACLqP,KAAM/T,EAAEsN,KAAO,WACf9N,MAAOQ,EAAEsN,KAAO,YAIb,CACLyG,KAAM/T,EAAEsN,KACR9N,MAAOQ,EAAEsN,OAGf,CAEO,MAAMkxE,WAAwBC,EAAAA,sBAWnCpI,QAAAA,IAAY9yE,GACV,OAAOA,EAAOK,OAAO6G,KAAQhU,KAAKikB,YAAYpZ,QAAQmJ,IACxD,CAEAkQ,KAAAA,CAAM+jE,cACJ,MAAMC,EAAAA,sBAAkB,YACtB,MAAMC,QAAiB1N,GAAawN,EAAQ1pD,QAAQ,GAAI,CAAEtP,WAAY,EAAKA,aAE3E,IACE,OAAQk5D,EAASl/D,WACf,KAAKyG,GAAew1D,mBAClB,MAAMr2C,QAAY,EAAK5f,WAAW9C,mBAClC,MAAO,CACL1qB,MAAMotC,aAAAA,EAAAA,EAAKvuC,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYv5C,IAAQ,IAE7C,KAAKnf,GAAey1D,oBAClB,GAAIgD,EAAS//D,cAAgB,EAAKw3D,SAASuI,EAAS//D,cAAe,CACjE,MAAMs/D,QAAY,EAAKz4D,WAAW4yD,kBAAkBsG,EAAS//D,cAC7D,MAAO,CACL3mB,MAAMimF,aAAAA,EAAAA,EAAKpnF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYV,IAAQ,GAE7C,CACA,MAAO,CAAEjmF,KAAM,IACjB,KAAKiuB,GAAe21D,gBAClB,GAAI8C,EAAS//D,cAAgB,EAAKw3D,SAASuI,EAAS//D,cAAe,CACjE,MAAMi7D,QAAmB,EAAKp0D,WAAWu7B,oBACvC29B,EAAS//D,aACT+/D,EAAS9/D,mBACTvnB,GACA,GACA,GAEF,MAAO,CACLW,MAAM4hF,aAAAA,EAAAA,EAAY/iF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAY/E,IAAe,GAE3D,CACA,MAAO,CAAE5hF,KAAM,IACjB,KAAKiuB,GAAe01D,mBAClB,GAAI+C,EAAS//D,cAAgB,EAAKw3D,SAASuI,EAAS//D,cAAe,CACjE,MAAMsW,QAAkB,EAAKzP,WAAW8yD,iBACtCoG,EAAS//D,aACT+/D,EAAS9/D,cACT8/D,EAAS7/D,UACT6/D,EAAS5/D,QAEX,MAAO,CACL9mB,MAAMi9B,aAAAA,EAAAA,EAAWp+B,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYN,GAAqCppD,KAAe,GAE/F,CACA,MAAO,CAAEj9B,KAAM,IACjB,KAAKiuB,GAAe41D,iBAClB,GACE6C,EAAS//D,cACT+/D,EAAS9/D,eACT8/D,EAAS7/D,WACT6/D,EAAS3/D,UACT,EAAKo3D,SAASuI,EAAS//D,aAAc+/D,EAAS9/D,cAAe8/D,EAAS7/D,UAAW6/D,EAAS3/D,UAC1F,CACA,MAAMk/D,QAAY,EAAKz4D,WAAWy7B,eAChCy9B,EAAS//D,aACT+/D,EAAS9/D,cACT8/D,EAAS7/D,UACT6/D,EAAS3/D,UAEX,MAAO,CACL/mB,MAAMimF,aAAAA,EAAAA,EAAKpnF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYV,IAAQ,GAE7C,CACA,MAAO,CAAEjmF,KAAM,IACjB,KAAKiuB,GAAe61D,gBAClB,GAAI4C,EAAS//D,cAAgB,EAAKw3D,SAASuI,EAAS//D,cAAe,CACjE,MAAMs/D,QAAY,EAAKz4D,WAAWo5D,+BAA+BF,EAAS//D,cAC1E,MAAO,CACL3mB,MAAMimF,aAAAA,EAAAA,EAAKpnF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYV,IAAQ,GAE7C,CACA,MAAO,CAAEjmF,KAAM,IACjB,KAAKiuB,GAAeq1D,0BAClB,GAAIoD,EAASnD,0BAA2B,CACtC,MAAMsD,QAAiC,EAAKC,8BAC1CJ,EAASnD,2BAEX,MAAO,CACLvjF,MAAM6mF,aAAAA,EAAAA,EAA0BhoF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYE,IAA6B,GAEvF,CACA,MAAO,CAAE7mF,KAAM,IACjB,KAAKiuB,GAAem2D,eAClB,GAAIsC,EAAS//D,cAAgB,EAAKw3D,SAASuI,EAAS//D,cAAe,CACjE,MAAM24D,QAAoB,EAAK9xD,WAAWqwB,uBAAuBwhC,aAAa,CAACqH,EAAS//D,eAClFymB,EAA8C,GAIpD,OAHAkyC,EAAYroE,SAAS8vE,IACnB35C,EAAIpvC,KAAK,CAAE6d,KAAMkrE,EAAIzlE,YAAaha,MAAOy/E,EAAI3xE,MAAO,IAE/C,CACLpV,MAAMotC,aAAAA,EAAAA,EAAKvuC,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYv5C,IAAQ,GAE7C,CACF,KAAKnf,GAAeo2D,sBAClB,GACEqC,EAAS//D,cACT+/D,EAAS9/D,eACT8/D,EAAS7/D,WACT6/D,EAAS3/D,UACT,EAAKo3D,SAASuI,EAAS//D,aAAc+/D,EAAS9/D,cAAe8/D,EAAS7/D,UAAW6/D,EAAS3/D,UAC1F,CACA,MAAM+qB,EAAcjB,GAAWC,iBAAiB,EAAKtuB,YAAa,CAChEmE,aAAc+/D,EAAS//D,aACvBC,cAAe8/D,EAAS9/D,cACxBqqB,gBAAiBy1C,EAAS7/D,UAC1BqqB,aAAcw1C,EAAS3/D,WAEnBqmB,QAAY,EAAK5f,WAAWu7B,oBAChC29B,EAAS//D,aACT+/D,EAAS9/D,cACTkrB,GACA,GAEF,MAAO,CACL9xC,MAAMotC,aAAAA,EAAAA,EAAKvuC,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYv5C,IAAQ,GAE7C,CACA,MAAO,CAAEptC,KAAM,IACjB,KAAKiuB,GAAeq2D,uBAClB,GACEoC,EAAS//D,cACT+/D,EAAS9/D,eACT8/D,EAAS7/D,WACT6/D,EAAS3/D,UACT2/D,EAASj/D,iBACT,EAAK02D,SACHuI,EAAS//D,aACT+/D,EAAS9/D,cACT8/D,EAAS7/D,UACT6/D,EAAS3/D,SACT2/D,EAASj/D,iBAEX,CACA,MAAMw+D,QAAY,EAAKz4D,WAAWy7B,eAChCy9B,EAAS//D,aACT+/D,EAAS9/D,cACT8/D,EAAS7/D,UACT6/D,EAAS3/D,SACT2/D,EAASj/D,iBAEX,MAAO,CACLznB,MAAMimF,aAAAA,EAAAA,EAAKpnF,QAAS,EAAC8nF,EAAAA,EAAAA,aAAYV,IAAQ,GAE7C,CACA,MAAO,CAAEjmF,KAAM,IACjB,QACEwmF,EAAQ1pD,QAAQ,GAAK4pD,EACrB,MAAMM,QAAkB3qD,EAAAA,GAAAA,eAAc,EAAK7O,WAAW/K,MAAM+jE,IAC5D,MAAO,CACLxmF,KAAMgnF,EAAUhnF,KAChBuU,MAAOyyE,EAAUzyE,MAAQ,IAAIzO,MAAM0oB,GAAiBw4D,EAAUzyE,aAAUlV,GAGhF,CAAE,MAAOwuB,GACP,MAAO,CAAE7tB,KAAM,GAAIuU,MAAO,IAAIzO,MAAM0oB,GAAiBX,IACvD,CACF,qOA5JM44D,GA8JN,OAAOx4E,EAAAA,GAAAA,MAAKw4E,IACd,CAGAK,6BAAAA,CAA8BrkE,GAC5B,MAAmB,uBAAfA,EAAM3F,KACDve,KAAKivB,WAAW9C,mBAGN,wBAAfjI,EAAM3F,KACDve,KAAKivB,WAAW4yD,kBAAkB7hF,KAAK0oF,gBAAgBxkE,EAAMkE,eAAeuE,MAAM+6D,GACnFA,EAAIpnF,OAAS,EACRonF,EAAIznF,KAAK0oF,IAAQ,CAAErrE,KAAMqrE,EAAG9F,kBAAmB95E,MAAO4/E,EAAG9F,sBAG3D,KAIQ,uBAAf3+D,EAAM3F,KACDve,KAAKivB,WACT8yD,iBACC/hF,KAAK0oF,gBAAgBxkE,EAAMkE,cAC3BpoB,KAAK0oF,gBAAgBxkE,EAAMmE,eAC3BroB,KAAK0oF,gBAAgBxkE,EAAMwuB,kBAE5B/lB,MAAM+R,GACDA,EAAUp+B,OAAS,EACdwnF,GAAqCppD,EAAWxa,EAAMwuB,iBAExD,KAIM,yBAAfxuB,EAAM3F,KACDve,KAAKivB,WAAWqwB,uBAAuBkL,oBAAoBtmC,GAAO,GAGxD,qBAAfA,EAAM3F,KACDve,KAAKivB,WAAWqwB,uBAAuBoL,eAAexmC,GAG5C,oBAAfA,EAAM3F,KACDve,KAAKivB,WAAW8O,4BAA4B8/C,cAAc79E,KAAK0oF,gBAAgBxkE,EAAMkE,eAGvF,IACT,CAEAsgE,eAAAA,CAAgBE,GACd,OAAO5oF,KAAKikB,YAAYpZ,SAAS+9E,GAAU,IAAI5/E,OACjD,CAhOAlH,WAAAA,CACE,EACA,GAA4C0sB,EAAAA,EAAAA,mBAE5CD,QAAK,2DAIPiuB,GAAAA,KAAAA,cAAAA,GAAAA,KAPmBvtB,WAAAA,EAAAA,KACAhL,YAAAA,EAAAA,KAMnBu4B,OAASqsC,GAHP7oF,KAAKivB,WAAaA,CACpB,qzBClBa,MAAM65D,WAAmBvL,EAAAA,sBAwDtCG,WAAAA,CAAYx9E,OAOH6oF,EANP,IAAK7oF,EAAK+oB,UACR,OAAO,EAGT,MAAM/E,EAAQu2D,GAAav6E,GACrB6oF,EAAK/oF,KAAKgpF,iBAAiB9oF,EAAK+oB,eAC/B8/D,EAAP,OAAyB7kE,QAAlB6kE,EAAAA,SAAe,QAAfA,EAAAA,EAAIrL,mBAAJqL,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,EAAkB7kE,UAAlB6kE,IAAAA,GAAAA,CACT,CAEA7kE,KAAAA,CAAMhf,GACJ,MAAM+jF,EAAS,IAAIx8E,IAEnB,IAAK,MAAMy8E,KAAchkF,EAAQq5B,QAAS,CAExC,MAAMz3B,EAAS2zE,GAAayO,GAG5B,IAAKpiF,EAAOmiB,WAAaniB,EAAOy+D,OAAS4jB,GAAgBriF,GACvD,SAIF,IAAKmiF,EAAOr8E,IAAI9F,EAAOmiB,WAAY,CACjC,MAAMmgE,GAAeC,EAAAA,EAAAA,WAAUnkF,GAC/BkkF,EAAaprD,UAAY,GAAGorD,EAAaprD,aAAal3B,EAAO03B,QAC7D4qD,EAAa7qD,QAAU,GACvB0qD,EAAOt+E,IAAI7D,EAAOmiB,UAAWmgE,EAC/B,CAEA,MAAMA,EAAeH,EAAOv9E,IAAI5E,EAAOmiB,WACvCmgE,SAAAA,EAAc7qD,QAAQ9+B,KAAKqH,EAC7B,CAEA,MAAMwiF,EAAoDtnF,MAAM0N,KAAKu5E,EAAOj9C,WAAW/rC,KAAI,EAAEgpB,EAAWsgE,MACtG,IAAIC,EAAkBvgE,EAClBA,IAAcyG,GAAesoD,aAAe/uD,IAAcyG,GAAeqoD,gBAC3EyR,EAAkB95D,GAAe+O,cAGnC,MAAMsqD,EAAK/oF,KAAKgpF,iBAAiBQ,GACjC,IAAKT,EACH,MAAM,IAAIxhF,MAAM,0CAA4C0hB,GAG9D,OAAO8/D,EAAG7kE,MAAMqlE,EAAI,IAItB,OAA2B,IAAvBD,EAAYhpF,OACPgpF,EAAY,GAGjBA,EAAYhpF,OAAS,GAChBmpF,EAAAA,GAAAA,UAASH,GAAaI,MAC3BzpF,EAAAA,GAAAA,MAAKs1B,IACH,MAAM9zB,EAAoB,GAC1B,IAAK,MAAMuD,KAAUuwB,EACnB,IAAK,MAAMo0D,KAAS3kF,EAAOvD,KACzBA,EAAKhC,KAAKkqF,GAId,MAAO,CAAE37D,MAAOwrD,EAAAA,aAAaoQ,KAAMnoF,OAAM,MAKxCooF,EAAAA,GAAAA,IAAG,CAAE77D,MAAOwrD,EAAAA,aAAaoQ,KAAMnoF,KAAM,IAC9C,CAEAqoF,sBAAAA,CAAuB5lE,GACrB,GAAIA,EAAMkE,cAAgBpoB,KAAKikB,YAAY8lE,iBAAiB7lE,EAAMkE,cAChE,OAAO,EAGT,IAAI4hE,EASJ,OARI9lE,EAAM+E,YAAcyG,GAAesqD,aACrCgQ,EAAWzoF,KAAKC,UAAU0iB,EAAMi2B,cACvBj2B,EAAM+E,YAAcyG,GAAe+O,aAC5CurD,EAAWzoF,KAAKC,UAAU0iB,EAAMuW,mBACvBvW,EAAM+E,YAAcyG,GAAeuqD,qBAC5C+P,EAAWzoF,KAAKC,UAAU,CAAC0iB,EAAMiO,mBAAoBjO,EAAM4E,mBAGpDkhE,GAAYhqF,KAAKikB,YAAY8lE,iBAAiBC,EACzD,CAGAx/B,mBAAAA,CACE19B,EACAzE,EACAkrB,EACAmN,EACAupC,GAEA,IAAI96D,EAAM,kBAAkBrC,IAW5B,OAVIzE,IACF8G,GAAO,mBAAmB9G,KAExBkrB,IACFpkB,EAAMokB,GAMJ02C,EACKjqF,KAAKyiF,6BAA6Bj4B,oBAAoBr7B,GAGxDnvB,KAAKs/C,uBAAuBkL,oBACjC,CAAEjX,YAAapkB,IAGfuxB,OACA5/C,EACA4/C,EAEJ,CAEAgK,cAAAA,CACE59B,EACAzE,EACAqqB,EACAC,EACAzpB,GAEA,OAAOlpB,KAAKs/C,uBAAuBoL,eAAe,CAChDtiC,aAAc0E,EACdzE,gBACAqqB,kBACAC,eACAzpB,mBAEJ,CAEAiD,gBAAAA,GACE,OAAOnsB,KAAKs/C,uBAAuBnzB,kBACrC,CAGAk8D,8BAAAA,CAA+Bv7D,GAC7B,OAAO9sB,KAAK+9B,4BAA4B8/C,cAAc/wD,EACxD,CAGA+0D,iBAAAA,CAAkB/0D,GAChB,OAAO9sB,KAAKyiF,6BAA6BZ,kBAAkB7hF,KAAKikB,YAAYpZ,QAAQiiB,GACtF,CAEAi1D,gBAAAA,CAAiBj1D,EAAwBzE,EAAwBqqB,EAA0BnqB,GACzF,OAAOvoB,KAAKyiF,6BAA6BV,iBAAiB,CACxDj1D,iBACAzE,gBACAqqB,kBACAnqB,UAEJ,CAEA2hE,6BAAAA,CAA8BvmC,EAA8Bx/B,GAc1D,OAbew/B,EAAQ1jD,KAAKikB,IAC1B,IAAKA,EAAM+E,UACT,OAAO/E,EAGT,MAAM+E,EAAY/E,EAAM+E,YAAcyG,GAAesoD,YAActoD,GAAe+O,aAAeva,EAAM+E,UACjG8/D,EAAK/oF,KAAKgpF,iBAAiB//D,OAG3B8/D,EAFN,OAAO,IACL95D,WAAY85D,aAAAA,EAAAA,EAAIoB,UACsBhmE,QAAlC4kE,EAAAA,aAAAA,EAAAA,EAAIhK,uBAAuB76D,EAAOC,UAAlC4kE,IAAAA,EAAAA,EAAiD7kE,EAAM,GAKjE,CAEA+6B,YAAAA,GACE,OAAOj/C,KAAKikB,YAAYg7B,eAAeh/C,KAAK+T,GAAM,IAAIA,EAAE6C,QAC1D,CAEA2wE,eAAAA,GACE,OAAOxnF,KAAKikB,YAAYg7B,cAC1B,CAEAmrC,WAAAA,CAAYlmE,EAA0BmmE,OAInBnmE,EAHjB,IAAKmmE,EAAOnlF,QACV,OAAOgf,EAET,IAAIomE,EAAoC,QAAvBpmE,EAAAA,EAAMuW,yBAANvW,IAAAA,OAAAA,EAAAA,EAAyBA,MAC1C,QAAmBpjB,IAAfwpF,EACF,OAAOpmE,EAET,OAAQmmE,EAAO/lF,MACb,IAAK,aACHgmF,GAAc,aAAaD,EAAOnlF,QAAQxC,WAAW2nF,EAAOnlF,QAAQ6D,SACpE,MAEF,IAAK,iBACHuhF,GAAc,aAAaD,EAAOnlF,QAAQxC,WAAW2nF,EAAOnlF,QAAQ6D,SAIxE,OAAO,SAAKmb,GAAAA,CAAOuW,kBAAmB,SAAKvW,EAAMuW,mBAAiB,CAAEvW,MAAOomE,KAC7E,CAlPAxoF,WAAAA,CACEu9E,EACA,GAA4C7wD,EAAAA,EAAAA,mBAE5CD,MAAM8wD,GAAAA,GAAAA,KAAAA,mBAAAA,GArBRhuB,GAAAA,KAAAA,mBAAAA,GAIA/R,GAAAA,KAAAA,8BAAAA,GACAvhB,GAAAA,KAAAA,mCAAAA,GACAiZ,GAAAA,KAAAA,0BAAAA,GACAyrC,GAAAA,KAAAA,oCAAAA,GACA8H,GAAAA,KAAAA,uBAAAA,GACAC,GAAAA,KAAAA,wCAAAA,GAEAxB,GAAAA,KAAAA,wBAAAA,GAAAA,KAQmB/kE,YAAAA,EAAAA,KAnBnBotC,YAAc,CACZo5B,kBAAmB9G,IACrB,KASAqF,iBAEI,CAAC,EASHhpF,KAAKs/C,uBAAyB,IAAIugC,GAAuBR,GACzDr/E,KAAKyiF,6BAA+B,IAAItB,GAA6B9B,GACrEr/E,KAAK+9B,4BAA8B,IAAIu/C,GAA4B+B,GACnEr/E,KAAKg3C,mBAAqB,IAAIkrC,GAC5B7C,EACAr/E,KAAKs/C,uBACLt/C,KAAKyiF,8BAGPziF,KAAKgpF,iBAAmB,CACtB,CAACt5D,GAAesqD,cAAeh6E,KAAKs/C,uBACpC,CAAC5vB,GAAe+O,cAAez+B,KAAK+9B,4BACpC,CAACrO,GAAeuqD,oBAAqBj6E,KAAKyiF,6BAC1C,CAAC/yD,GAAesoD,aAAch4E,KAAK+9B,6BAGrC/9B,KAAK0qF,UAAY,IAAI3C,GAAgB/nF,MAErC,MAAM0lB,EAAc25D,EAAiB34D,SAASC,iBAC1CjB,GAAeb,EAAqD,cAAea,IACrF1lB,KAAKuqF,iBAAkB,EAClB7kE,EAAYqB,mBAGf/mB,KAAKwqF,iCAAmC/kE,EAAsBC,EAAYqB,oBAAoB,GAF9F/mB,KAAKwqF,kCAAmC,IAM1CxqF,KAAKuqF,gBAA8D,gBAA5ClL,EAAiB34D,SAASQ,cACjDlnB,KAAKwqF,kCAAmC,EAE5C,EAiNF,SAASrB,GAAgBjlE,GACvB,OAAQA,EAAM+E,WACZ,KAAKyG,GAAesqD,aAClB,QAAS91D,EAAMi2B,aAEjB,KAAKzqB,GAAe+O,aAClB,QAASva,EAAMuW,kBAEjB,KAAK/K,GAAeuqD,mBAClB,QAAS/1D,EAAMiO,mBAEjB,KAAKzC,GAAesoD,YACpB,KAAKtoD,GAAeqoD,cAClB,QAAS7zD,EAAMg2B,YAEjB,KAAKxqB,GAAeq1D,0BAClB,QAAS7gE,EAAM8gE,0BAEjB,QACE,OAAO,EAEb,q3BC3SO,MAAM34C,GAAS,IAAIs+C,EAAAA,iBAAgF7B,IACvG8B,gBAAgBh9D,IAChBi9D,gBbqBiB,EAClB3sD,MACAha,MAAO4mE,EACP77D,aACAnF,WACAyvD,WAAYwR,EACZtpF,OACAgJ,YAEA,MAAOgtC,EAAcpjB,GAAYjE,KAC3BmpD,GAAa5uD,EAAAA,EAAAA,UAAQ,KAAMmsB,EAAAA,EAAAA,UAASi0C,EAAgB,MAAM,CAACA,KAC1DC,EAA8B1R,IAAmC56D,EAAAA,EAAAA,WAAS,IAC1Eq9D,EAAuBkP,IAA4BvsE,EAAAA,EAAAA,UAAS,IAE7DuT,GAAgBzB,EAAAA,EAAAA,cACnB0B,IACCpI,EAASoI,GACTqnD,GAAY,GAEd,CAACzvD,EAAUyvD,IAGbjsD,GAAc,KACRw9D,EAAU7hE,YAAcyG,GAAeqoD,eACzC9oD,EAAW8O,4BAA4BwhD,gCAAgC5yD,MAAMvE,IAC3E6iE,EAAyB7iE,GAAgB,GAAG,GAEhD,IAGF,MAAMlE,EAAQgnE,GAAiBJ,EAAW74D,EAAe8pD,GAEnDjvD,EAAiB5I,EAAMkE,cAAgB6G,EAAWqwB,uBAAuBy8B,sBACzE9vD,EACJgD,EAAWqwB,uBAAuBrzB,kBAClCiS,IAAQC,EAAAA,QAAQgtD,iBAChBjtD,IAAQC,EAAAA,QAAQitD,cACZ7nE,EAAsB,CAC1BtB,MAAO,qBACP/c,QAAS+pB,EAAWgwB,eAAeh/C,KAAK+T,IAAO,CAAEiO,MAAOjO,EAAGjL,MAAOiL,OAI9Dq3E,EACqC,kBAAzCnmE,EAAAA,OAAOomE,SAASC,KAAKC,iBAAgF,cAAzCtmE,EAAAA,OAAOomE,SAASC,KAAKC,gBACnF,GAAIv8D,EAAWs7D,gBAAiB,CAC9B,KACErsD,IAAQC,EAAAA,QAAQgtD,iBACdjmE,EAAAA,OAAOC,MAAM0F,wCAA2CoE,EAAWu7D,kCAErE,OAAO,SAAC3N,GAAAA,CAAAA,GAEV,IAAKwO,EACH,OAAO,SAACzO,GAAAA,CAAAA,EAEZ,CAEA,OACE,UAACtyD,MAAAA,CAAId,cAAY,wCACf,SAACg8B,GAAoBA,CACnBv2B,WAAYA,EAAW8O,4BACvBvf,OAAQwsE,EACRvlC,QAAS,IAAM6zB,GAAgC,GAC/CxvD,SAAWloB,IAAMkoB,mVAAS,IAAKloB,cAAAA,CAAGqnB,UAAWyG,GAAe+O,2WAE9D,SAAC46C,GAAWA,CACVn1D,MAAOA,EACP+N,cAAeA,EACfqnD,gCAAiCA,EACjCC,WAAYwR,EACZtpF,KAAMA,EACNy8B,IAAKA,KAEP,SAACq+C,GAAAA,CACC96E,KAAMA,EACNqrB,eAAgBA,EAChBb,iBAAkBA,SAAAA,EAClB/H,MAAOA,EACP+K,WAAYA,EACZnF,SAAUmI,EACVA,cAAenI,EACfvG,oBAAqBA,EACrB8Q,SAAUA,EACV5pB,MAAOA,IAERgtC,IACC,iCACE,SAAC/jB,EAAAA,MAAKA,CAAC1f,EAAG,KACV,SAAC8W,EAAAA,MAAKA,CAACC,SAAS,QAAQ5M,MAAM,0EAC3Bs5B,aAAwBlwC,MAAQkwC,EAAatwB,QAAUswB,canGpEg0C,EAAAA,EAAAA,gBAAeC,UACbC,EAAAA,sBACA,EAAGC,SAAWC,cAAaC,QAAO7lE,SAAQulC,iBAAgB7H,eACxD,MAAMooC,EAAepoC,EAAQqoC,GAAAA,IACvB/X,EAAS,CACb/yC,OAAQ,EACRqV,QAAS,EACT01C,cAAe,EACf3mF,MAAO,GAET,IAAI4mF,EAA0D,CAC5D,CAACx8D,GAAesqD,cAAe,MAC1B/F,GAEL,CAACvkD,GAAe+O,cAAe,SAC1Bw1C,GAAAA,CACHkY,YAAa,EACbC,UAAW,IAEb,CAAC18D,GAAeuqD,oBAAqB,MAChChG,GAEL,CAACvkD,GAAesoD,aAAc,SACzB/D,GAAAA,CACHhwC,MAAO,EACPooD,MAAO,EACPC,qBAAsB,EACtBC,oBAAqB,EACrBC,iBAAkB,IAEpB,CAAC98D,GAAew1D,oBAAqB,MAAKjR,GAC1C,CAACvkD,GAAey1D,qBAAsB,MAAKlR,GAC3C,CAACvkD,GAAe21D,iBAAkB,MAAKpR,GACvC,CAACvkD,GAAe01D,oBAAqB,MAAKnR,GAC1C,CAACvkD,GAAe41D,kBAAmB,MAAKrR,GACxC,CAACvkD,GAAe61D,iBAAkB,MAAKtR,GACvC,CAACvkD,GAAeq1D,2BAA4B,MAAK9Q,GACjD,CAACvkD,GAAem2D,gBAAiB,MAAK5R,GACtCwY,QAAS,MAAKxY,IC7C4B,IAAC1vE,EDgD7CwnF,EAAarzE,SAASwL,QAGdA,EAM+BA,EAC/BA,EAiCN,OA1CIA,EAAM+E,YAAcyG,GAAesqD,eACrCkS,EAAMx8D,GAAesqD,cAAc91D,EAAMqhD,KAAO,SAAW,cACrC,QAAlBrhD,EAAAA,EAAMi2B,oBAANj2B,IAAAA,OAAAA,EAAAA,EAAoBwa,YAAaxa,EAAMi2B,aAAazb,UAAUp+B,OAAS,GACzE4rF,EAAMx8D,GAAesqD,cAAciS,iBAGnC/nE,EAAM+E,YAAcyG,GAAe+O,eACrCytD,EAAMx8D,GAAe+O,cAAcva,EAAMqhD,KAAO,SAAW,aAC3D2mB,EAAMx8D,GAAe+O,eAAqC,QAAvBva,EAAAA,EAAMuW,yBAANvW,IAAAA,OAAAA,EAAAA,EAAyBu3B,eAAgB,cAAgB,gBACjE,QAAvBv3B,EAAAA,EAAMuW,yBAANvW,IAAAA,OAAAA,EAAAA,EAAyBwa,YAAaxa,EAAMuW,kBAAkBiE,UAAUp+B,OAAS,GACnF4rF,EAAMx8D,GAAe+O,cAAcwtD,iBAGnC/nE,EAAM+E,YAAcyG,GAAeuqD,qBACrCiS,EAAMx8D,GAAeuqD,oBAAoB/1D,EAAMqhD,KAAO,SAAW,aAC7DrhD,EAAM4E,eAAiB5E,EAAM4E,cAAcxoB,OAAS,GACtD4rF,EAAMx8D,GAAeuqD,oBAAoBgS,iBAGzC/nE,EAAM+E,YAAcyG,GAAesoD,cACrCkU,EAAMx8D,GAAesoD,aAAa9zD,EAAMqhD,KAAO,SAAW,aACtDrhD,EAAMg2B,cACJh2B,EAAMg2B,YAAYa,cACpBmxC,EAAMx8D,GAAesoD,aACnB9zD,EAAMg2B,YAAYa,eAAiBprB,GAAa0oD,MAAQ1oD,GAAa0oD,MAAQ1oD,GAAauxB,SAG1Fh9B,EAAMg2B,YAAYxb,WAAaxa,EAAMg2B,YAAYxb,UAAUp+B,OAAS,GACtE4rF,EAAMx8D,GAAesoD,aAAaiU,gBAEhC/nE,EAAMg2B,YAAYs9B,aAAiD,KAAlCtzD,EAAMg2B,YAAYs9B,aACrD0U,EAAMx8D,GAAesoD,aAAasU,uBAEhCpoE,EAAMg2B,YAAYlxB,YAAc9E,EAAMg2B,YAAYlxB,WAAW1oB,OAAS,GACxE4rF,EAAMx8D,GAAesoD,aAAauU,sBAEhCroE,EAAMg2B,YAAYrd,SAAW3Y,EAAMg2B,YAAYrd,QAAQv8B,OAAS,GAClE4rF,EAAMx8D,GAAesoD,aAAawU,qBAKhCtoE,EAAM+E,WACZ,KAAKyG,GAAesqD,aACpB,KAAKtqD,GAAe+O,aACpB,KAAK/O,GAAeuqD,mBACpB,KAAKvqD,GAAesoD,YACpB,KAAKtoD,GAAew1D,mBACpB,KAAKx1D,GAAey1D,oBACpB,KAAKz1D,GAAe21D,gBACpB,KAAK31D,GAAe01D,mBACpB,KAAK11D,GAAe41D,iBACpB,KAAK51D,GAAe61D,gBACpB,KAAK71D,GAAeq1D,0BACpB,KAAKr1D,GAAem2D,eAClBqG,EAAMhoE,EAAM+E,WAAW3jB,QACvB,MACF,QACE4mF,EAAMO,QAAQnnF,QAClB,IAGEymF,GAAgBA,EAAazrF,OAAS,IC/GGiE,EDgHV,CAC/BmoF,gBAAiBlhC,EACjBmhC,aAAcd,EACde,OAAQd,EAERe,sBAAuBX,EAAMx8D,GAAesqD,cAAczjC,QAC1Du2C,6BAA8BZ,EAAMx8D,GAAesqD,cAAc94C,OACjE6rD,gCAAiCb,EAAMx8D,GAAesqD,cAAciS,cACpEe,oBAAqBd,EAAMx8D,GAAesqD,cAAc10E,MAGxD2nF,4BAA6Bf,EAAMx8D,GAAe+O,cAAc8X,QAChE22C,mCAAoChB,EAAMx8D,GAAe+O,cAAcyC,OACvEisD,4BAA6BjB,EAAMx8D,GAAe+O,cAAcwtD,cAChEmB,yCAA0ClB,EAAMx8D,GAAe+O,cAAc0tD,YAC7EkB,uCAAwCnB,EAAMx8D,GAAe+O,cAAc2tD,UAC3EkB,gBAAiBpB,EAAMx8D,GAAe+O,cAAcn5B,MAGpDioF,6BAA8BrB,EAAMx8D,GAAeuqD,oBAAoB1jC,QACvEi3C,oCAAqCtB,EAAMx8D,GAAeuqD,oBAAoB/4C,OAC9EusD,2CAA4CvB,EAAMx8D,GAAeuqD,oBAAoBgS,cACrFyB,2BAA4BxB,EAAMx8D,GAAeuqD,oBAAoB30E,MAGrEqoF,qBAAsBzB,EAAMx8D,GAAesoD,aAAazhC,QACxDq3C,4BAA6B1B,EAAMx8D,GAAesoD,aAAa92C,OAC/D2sD,+BAAgC3B,EAAMx8D,GAAesoD,aAAaiU,cAClE6B,mBAAoB5B,EAAMx8D,GAAesoD,aAAa/zC,MACtD8pD,mBAAoB7B,EAAMx8D,GAAesoD,aAAaqU,MACtD2B,oCAAqC9B,EAAMx8D,GAAesoD,aAAasU,qBACvE2B,kCAAmC/B,EAAMx8D,GAAesoD,aAAauU,oBACrE2B,qBAAsBhC,EAAMx8D,GAAesoD,aAAawU,iBACxD2B,mBAAoBjC,EAAMx8D,GAAesoD,aAAa1yE,MAGtD8oF,0BAA2BlC,EAAMx8D,GAAew1D,oBAAoB5/E,MACpE+oF,4BAA6BnC,EAAMx8D,GAAey1D,qBAAqB7/E,MACvEgpF,uBAAwBpC,EAAMx8D,GAAe21D,iBAAiB//E,MAC9DipF,2BAA4BrC,EAAMx8D,GAAe01D,oBAAoB9/E,MACrEkpF,yBAA0BtC,EAAMx8D,GAAe41D,kBAAkBhgF,MACjEmpF,uBAAwBvC,EAAMx8D,GAAe61D,iBAAiBjgF,MAC9DopF,sCAAuCxC,EAAMx8D,GAAeq1D,2BAA2Bz/E,MACvFqpF,sBAAuBzC,EAAMx8D,GAAem2D,gBAAgBvgF,MAG5DspF,oBAAqB1C,EAAMO,QAAQnnF,QC7JzC8/C,EAAAA,EAAAA,mBAAkB,2CAA4C7gD,GD+J5D","sources":["webpack://grafana-azure-monitor-datasource/../../../../../node_modules/prismjs/themes/prism-tomorrow.min.css","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/css-loader/dist/runtime/api.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/fast-deep-equal/index.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/prismjs/components/prism-kusto.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/react/jsx-runtime.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/classes/comparator.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/classes/range.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/classes/semver.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/clean.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/cmp.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/coerce.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/compare-build.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/compare-loose.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/compare.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/diff.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/eq.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/gt.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/gte.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/inc.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/lt.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/lte.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/major.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/minor.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/neq.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/parse.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/patch.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/prerelease.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/rcompare.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/rsort.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/satisfies.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/sort.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/functions/valid.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/index.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/constants.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/debug.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/identifiers.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/lrucache.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/parse-options.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/internal/re.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/gtr.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/intersects.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/ltr.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/max-satisfying.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/min-satisfying.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/min-version.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/outside.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/simplify.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/subset.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/to-comparators.js","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/node_modules/semver/ranges/valid.js","webpack://grafana-azure-monitor-datasource/external amd \"@emotion/css\"","webpack://grafana-azure-monitor-datasource/external amd \"@grafana/data\"","webpack://grafana-azure-monitor-datasource/external amd \"@grafana/runtime\"","webpack://grafana-azure-monitor-datasource/external amd \"@grafana/ui\"","webpack://grafana-azure-monitor-datasource/external amd \"@kusto/monaco-kusto\"","webpack://grafana-azure-monitor-datasource/external amd \"lodash\"","webpack://grafana-azure-monitor-datasource/external amd \"prismjs\"","webpack://grafana-azure-monitor-datasource/external amd \"react\"","webpack://grafana-azure-monitor-datasource/external amd \"rxjs\"","webpack://grafana-azure-monitor-datasource/external amd \"rxjs/operators\"","webpack://grafana-azure-monitor-datasource/webpack/bootstrap","webpack://grafana-azure-monitor-datasource/webpack/runtime/compat get default export","webpack://grafana-azure-monitor-datasource/webpack/runtime/define property getters","webpack://grafana-azure-monitor-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-azure-monitor-datasource/webpack/runtime/make namespace object","webpack://grafana-azure-monitor-datasource/webpack/runtime/nonce","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/ConfigEditor/DataSourceDescription.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/ConfigEditor/ConfigSection/GenericConfigSection.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/ConfigEditor/ConfigSection/ConfigSection.js","webpack://grafana-azure-monitor-datasource/./time_grain_converter.ts","webpack://grafana-azure-monitor-datasource/./azure_monitor/response_parser.ts","webpack://grafana-azure-monitor-datasource/./utils/common.ts","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/react-use/esm/useEffectOnce.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/azure-sdk/dist/esm/credentials/AzureCredentials.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/azure-sdk/dist/esm/clouds.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/azure-sdk/dist/esm/credentials/AzureCredentialsConfig.js","webpack://grafana-azure-monitor-datasource/./credentials.ts","webpack://grafana-azure-monitor-datasource/./e2e/selectors.ts","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/AppRegistrationCredentials.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/CurrentUserFallbackCredentials.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/AzureCredentialsForm.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/BasicLogsToggle.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/DefaultSubscription.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/MonitorConfig.tsx","webpack://grafana-azure-monitor-datasource/./components/ConfigEditor/ConfigEditor.tsx","webpack://grafana-azure-monitor-datasource/./dataquery.gen.ts","webpack://grafana-azure-monitor-datasource/./types/types.ts","webpack://grafana-azure-monitor-datasource/./utils/messageFromError.ts","webpack://grafana-azure-monitor-datasource/./utils/useLastError.ts","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorStack.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorRows.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorRow.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorFieldGroup.js","webpack://grafana-azure-monitor-datasource/./components/ArgQueryEditor/QueryField.tsx","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorField.js","webpack://grafana-azure-monitor-datasource/./components/shared/Field.tsx","webpack://grafana-azure-monitor-datasource/./components/ArgQueryEditor/SubscriptionField.tsx","webpack://grafana-azure-monitor-datasource/./components/ArgQueryEditor/ArgQueryEditor.tsx","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorList.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/InputGroup.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/AccessoryButton.js","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/utils.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/AggregateItem.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/AggregationSection.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/AzureMonitorKustoQueryBuilder.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/FilterItem.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/FilterSection.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/FuzzySearch.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/GroupByItem.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/GroupBySection.tsx","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/prismjs/themes/prism-tomorrow.min.css?2dd5","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/KQLPreview.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/LimitSection.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/OrderBySection.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/TableSection.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryBuilder/LogsQueryBuilder.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/AdvancedMulti.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/types.ts","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/EntryIcon.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/styles.ts","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/NestedEntry.tsx","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/immer/dist/immer.mjs","webpack://grafana-azure-monitor-datasource/./azure_monitor/url_builder.ts","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/utils.ts","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/NestedRow.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/Search.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourcePicker/ResourcePicker.tsx","webpack://grafana-azure-monitor-datasource/./components/ResourceField/ResourceField.tsx","webpack://grafana-azure-monitor-datasource/./components/shared/FormatAsField.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/AdvancedResourcePicker.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/setQueryValue.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/LogsManagement.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/QueryField.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/TimeManagement.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/useMigrations.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/utils.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/LogsQueryEditor.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/RawQuery.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/syntax.ts","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/AzureCheatSheet.tsx","webpack://grafana-azure-monitor-datasource/./components/LogsQueryEditor/AzureCheatSheetModal.tsx","webpack://grafana-azure-monitor-datasource/./azureMetadata/resourceTypes.ts","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/AdvancedResourcePicker.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/setQueryValue.ts","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/AggregationField.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/DimensionFields.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/LegendFormatField.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/MetricNameField.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/MetricNamespaceField.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/TimeGrainField.tsx","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/TopField.tsx","webpack://grafana-azure-monitor-datasource/./utils/useAsyncState.ts","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/dataHooks.ts","webpack://grafana-azure-monitor-datasource/./components/MetricsQueryEditor/MetricsQueryEditor.tsx","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/src/resolver.ts","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/src/selectors/constants.ts","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/src/selectors/components.ts","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/src/selectors/index.ts","webpack://grafana-azure-monitor-datasource/../../../../../packages/grafana-e2e-selectors/src/selectors/pages.ts","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/Filter.tsx","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/consts.ts","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/setQueryValue.ts","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/Filters.tsx","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/TraceTypeField.tsx","webpack://grafana-azure-monitor-datasource/./components/TracesQueryEditor/TracesQueryEditor.tsx","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/react-use/esm/usePrevious.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/EditorHeader.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/InlineSelect.js","webpack://grafana-azure-monitor-datasource/../../../../../node_modules/@grafana/plugin-ui/dist/esm/components/QueryEditor/FlexItem.js","webpack://grafana-azure-monitor-datasource/./components/QueryEditor/QueryHeader.tsx","webpack://grafana-azure-monitor-datasource/./utils/migrateQuery.ts","webpack://grafana-azure-monitor-datasource/./components/QueryEditor/usePreparedQuery.ts","webpack://grafana-azure-monitor-datasource/./components/QueryEditor/QueryEditor.tsx","webpack://grafana-azure-monitor-datasource/./azure_log_analytics/utils.ts","webpack://grafana-azure-monitor-datasource/./azure_log_analytics/azure_log_analytics_datasource.ts","webpack://grafana-azure-monitor-datasource/./azure_monitor/azure_monitor_datasource.ts","webpack://grafana-azure-monitor-datasource/./azure_resource_graph/azure_resource_graph_datasource.ts","webpack://grafana-azure-monitor-datasource/./resourcePicker/resourcePickerData.ts","webpack://grafana-azure-monitor-datasource/./azureMetadata/logsResourceTypes.ts","webpack://grafana-azure-monitor-datasource/./utils/migrateAnnotation.ts","webpack://grafana-azure-monitor-datasource/./grafanaTemplateVariableFns.ts","webpack://grafana-azure-monitor-datasource/./components/VariableEditor/GrafanaTemplateVariableFn.tsx","webpack://grafana-azure-monitor-datasource/./components/VariableEditor/VariableEditor.tsx","webpack://grafana-azure-monitor-datasource/./variables.ts","webpack://grafana-azure-monitor-datasource/./datasource.ts","webpack://grafana-azure-monitor-datasource/./module.ts","webpack://grafana-azure-monitor-datasource/./tracking.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `code[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../../../node_modules/prismjs/themes/prism-tomorrow.min.css\"],\"names\":[],\"mappings\":\"AAAA,6CAA6C,UAAU,CAAC,cAAc,CAAC,iEAAiE,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,sBAAsB,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,uDAAuD,kBAAkB,CAAC,iCAAiC,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,8EAA8E,UAAU,CAAC,mBAAmB,UAAU,CAAC,4DAA4D,aAAa,CAAC,qBAAqB,aAAa,CAAC,6CAA6C,aAAa,CAAC,gEAAgE,aAAa,CAAC,6EAA6E,aAAa,CAAC,yEAAyE,aAAa,CAAC,yCAAyC,aAAa,CAAC,6BAA6B,eAAe,CAAC,cAAc,iBAAiB,CAAC,cAAc,WAAW,CAAC,gBAAgB,WAAW\",\"sourcesContent\":[\"code[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","Prism.languages.kusto = {\n\t'comment': {\n\t\tpattern: /\\/\\/.*/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n\t\tgreedy: true\n\t},\n\n\t'verb': {\n\t\tpattern: /(\\|\\s*)[a-z][\\w-]*/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t},\n\n\t'command': {\n\t\tpattern: /\\.[a-z][a-z\\d-]*\\b/,\n\t\talias: 'keyword'\n\t},\n\n\t'class-name': /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n\t'keyword': /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n\t'boolean': /\\b(?:false|null|true)\\b/,\n\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/,\n\n\t'datetime': [\n\t\t{\n\t\t\t// RFC 822 + RFC 850\n\t\t\tpattern: /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n\t\t\talias: 'number'\n\t\t},\n\t\t{\n\t\t\t// ISO 8601\n\t\t\tpattern: /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n\t\t\talias: 'number'\n\t\t}\n\t],\n\t'number': /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n\n\t'operator': /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n\t'punctuation': /[()\\[\\]{},;.:]/\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4831__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8146__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1269__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3059__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","import React__default from 'react';\nimport { css, cx } from '@emotion/css';\nimport { useTheme2 } from '@grafana/ui';\n\nconst DataSourceDescription = ({ dataSourceName, docsLink, hasRequiredFields = true, className }) => {\n  const theme = useTheme2();\n  const styles = {\n    container: css({\n      p: {\n        margin: 0\n      },\n      \"p + p\": {\n        marginTop: theme.spacing(2)\n      }\n    }),\n    text: css({\n      ...theme.typography.body,\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: \"underline\",\n        \"&:hover\": {\n          textDecoration: \"none\"\n        }\n      })\n    })\n  };\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: cx(styles.container, className) }, /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.text }, \"Before you can use the \", dataSourceName, \" data source, you must configure it below or in the config file. For detailed instructions,\", \" \", /* @__PURE__ */ React__default.createElement(\"a\", { href: docsLink, target: \"_blank\", rel: \"noreferrer\" }, \"view the documentation\"), \".\"), hasRequiredFields && /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.text }, /* @__PURE__ */ React__default.createElement(\"i\", null, \"Fields marked with * are required\")));\n};\n\nexport { DataSourceDescription };\n//# sourceMappingURL=DataSourceDescription.js.map\n","import React__default, { useState } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, IconButton } from '@grafana/ui';\n\nconst GenericConfigSection = ({\n  children,\n  title,\n  description,\n  isCollapsible = false,\n  isInitiallyOpen = true,\n  kind = \"section\",\n  className\n}) => {\n  const { colors, typography, spacing } = useTheme2();\n  const [isOpen, setIsOpen] = useState(isCollapsible ? isInitiallyOpen : true);\n  const iconName = isOpen ? \"angle-up\" : \"angle-down\";\n  const isSubSection = kind === \"sub-section\";\n  const collapsibleButtonAriaLabel = `${isOpen ? \"Collapse\" : \"Expand\"} section ${title}`;\n  const styles = {\n    header: css({\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    }),\n    title: css({\n      margin: 0\n    }),\n    subtitle: css({\n      margin: 0,\n      fontWeight: typography.fontWeightRegular\n    }),\n    descriptionText: css({\n      marginTop: spacing(isSubSection ? 0.25 : 0.5),\n      marginBottom: 0,\n      ...typography.bodySmall,\n      color: colors.text.secondary\n    }),\n    content: css({\n      marginTop: spacing(2)\n    })\n  };\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className }, /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.header }, kind === \"section\" ? /* @__PURE__ */ React__default.createElement(\"h3\", { className: styles.title }, title) : /* @__PURE__ */ React__default.createElement(\"h6\", { className: styles.subtitle }, title), isCollapsible && /* @__PURE__ */ React__default.createElement(\n    IconButton,\n    {\n      name: iconName,\n      onClick: () => setIsOpen(!isOpen),\n      type: \"button\",\n      size: \"xl\",\n      \"aria-label\": collapsibleButtonAriaLabel\n    }\n  )), description && /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.descriptionText }, description), isOpen && /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.content }, children));\n};\n\nexport { GenericConfigSection };\n//# sourceMappingURL=GenericConfigSection.js.map\n","import React__default from 'react';\nimport { GenericConfigSection } from './GenericConfigSection.js';\n\nconst ConfigSection = ({ children, ...props }) => {\n  return /* @__PURE__ */ React__default.createElement(GenericConfigSection, { ...props, kind: \"section\" }, children);\n};\n\nexport { ConfigSection };\n//# sourceMappingURL=ConfigSection.js.map\n","import { includes, filter } from 'lodash';\n\nimport { rangeUtil } from '@grafana/data';\n\nexport default class TimeGrainConverter {\n  static createISO8601Duration(timeGrain: string | number, timeGrainUnit: string) {\n    const timeIntervals = ['hour', 'minute', 'h', 'm'];\n    if (includes(timeIntervals, timeGrainUnit)) {\n      return `PT${timeGrain}${timeGrainUnit[0].toUpperCase()}`;\n    }\n\n    return `P${timeGrain}${timeGrainUnit[0].toUpperCase()}`;\n  }\n\n  static createISO8601DurationFromInterval(interval: string) {\n    const timeGrain = +interval.slice(0, interval.length - 1);\n    const unit = interval[interval.length - 1];\n\n    if (interval.indexOf('ms') > -1) {\n      return TimeGrainConverter.createISO8601Duration(1, 'm');\n    }\n\n    if (interval[interval.length - 1] === 's') {\n      let toMinutes = (timeGrain * 60) % 60;\n\n      if (toMinutes < 1) {\n        toMinutes = 1;\n      }\n\n      return TimeGrainConverter.createISO8601Duration(toMinutes, 'm');\n    }\n\n    return TimeGrainConverter.createISO8601Duration(timeGrain, unit);\n  }\n\n  static findClosestTimeGrain(interval: string, allowedTimeGrains: string[]) {\n    const timeGrains = filter(allowedTimeGrains, (o) => o !== 'auto');\n\n    let closest = timeGrains[0];\n    const intervalMs = rangeUtil.intervalToMs(interval);\n\n    for (let i = 0; i < timeGrains.length; i++) {\n      // abs (num - val) < abs (num - curr):\n      if (intervalMs > rangeUtil.intervalToMs(timeGrains[i])) {\n        if (i + 1 < timeGrains.length) {\n          closest = timeGrains[i + 1];\n        } else {\n          closest = timeGrains[i];\n        }\n      }\n    }\n\n    return closest;\n  }\n\n  static createTimeGrainFromISO8601Duration(duration: string) {\n    let offset = 1;\n    if (duration.substring(0, 2) === 'PT') {\n      offset = 2;\n    }\n\n    const value = duration.substring(offset, duration.length - 1);\n    const unit = duration.substring(duration.length - 1);\n\n    return value + ' ' + TimeGrainConverter.timeUnitToText(+value, unit);\n  }\n\n  static timeUnitToText(value: number, unit: string) {\n    let text = '';\n\n    if (unit === 'S') {\n      text = 'second';\n    }\n    if (unit === 'M') {\n      text = 'minute';\n    }\n    if (unit === 'H') {\n      text = 'hour';\n    }\n    if (unit === 'D') {\n      text = 'day';\n    }\n\n    if (value > 1) {\n      return text + 's';\n    }\n\n    return text;\n  }\n\n  static createKbnUnitFromISO8601Duration(duration: string) {\n    if (duration === 'auto') {\n      return 'auto';\n    }\n\n    let offset = 1;\n    if (duration.substring(0, 2) === 'PT') {\n      offset = 2;\n    }\n\n    const value = duration.substring(offset, duration.length - 1);\n    const unit = duration.substring(duration.length - 1);\n\n    return value + TimeGrainConverter.timeUnitToKbn(+value, unit);\n  }\n\n  static timeUnitToKbn(value: number, unit: string) {\n    if (unit === 'S') {\n      return 's';\n    }\n    if (unit === 'M') {\n      return 'm';\n    }\n    if (unit === 'H') {\n      return 'h';\n    }\n    if (unit === 'D') {\n      return 'd';\n    }\n\n    return '';\n  }\n}\n","import { find, get } from 'lodash';\n\nimport { FetchResponse } from '@grafana/runtime';\n\nimport TimeGrainConverter from '../time_grain_converter';\nimport {\n  AzureMonitorLocalizedValue,\n  AzureMonitorLocations,\n  AzureMonitorMetricAvailabilityMetadata,\n  AzureMonitorMetricsMetadataResponse,\n  AzureMonitorOption,\n  AzureAPIResponse,\n  Location,\n  Subscription,\n} from '../types';\nexport default class ResponseParser {\n  static parseResponseValues<T>(\n    result: AzureAPIResponse<T>,\n    textFieldName: string,\n    valueFieldName: string\n  ): Array<{ text: string; value: string }> {\n    const list: Array<{ text: string; value: string }> = [];\n\n    if (!result) {\n      return list;\n    }\n\n    for (let i = 0; i < result.value.length; i++) {\n      if (!find(list, ['value', get(result.value[i], valueFieldName)])) {\n        const value = get(result.value[i], valueFieldName);\n        const text = get(result.value[i], textFieldName, value);\n\n        list.push({\n          text: text,\n          value: value,\n        });\n      }\n    }\n    return list;\n  }\n\n  static parseMetadata(result: AzureMonitorMetricsMetadataResponse, metricName: string) {\n    const defaultAggTypes = ['None', 'Average', 'Minimum', 'Maximum', 'Total', 'Count'];\n    const metricData = result?.value.find((v) => v.name.value === metricName);\n\n    if (!metricData) {\n      return {\n        primaryAggType: '',\n        supportedAggTypes: defaultAggTypes,\n        supportedTimeGrains: [],\n        dimensions: [],\n      };\n    }\n\n    return {\n      primaryAggType: metricData.primaryAggregationType,\n      supportedAggTypes: metricData.supportedAggregationTypes || defaultAggTypes,\n\n      supportedTimeGrains: [\n        { label: 'Auto', value: 'auto' },\n        ...ResponseParser.parseTimeGrains(metricData.metricAvailabilities ?? []),\n      ],\n      dimensions: ResponseParser.parseDimensions(metricData.dimensions ?? []),\n    };\n  }\n\n  static parseTimeGrains(metricAvailabilities: AzureMonitorMetricAvailabilityMetadata[]): AzureMonitorOption[] {\n    const timeGrains: AzureMonitorOption[] = [];\n\n    if (!metricAvailabilities) {\n      return timeGrains;\n    }\n\n    metricAvailabilities.forEach((avail) => {\n      if (avail.timeGrain) {\n        timeGrains.push({\n          label: TimeGrainConverter.createTimeGrainFromISO8601Duration(avail.timeGrain),\n          value: avail.timeGrain,\n        });\n      }\n    });\n\n    return timeGrains;\n  }\n\n  static parseDimensions(metadataDimensions: AzureMonitorLocalizedValue[]) {\n    return metadataDimensions.map((dimension) => {\n      return {\n        label: dimension.localizedValue || dimension.value,\n        value: dimension.value,\n      };\n    });\n  }\n\n  static parseSubscriptions(result: AzureAPIResponse<Subscription>): Array<{ text: string; value: string }> {\n    const list: Array<{ text: string; value: string }> = [];\n\n    if (!result) {\n      return list;\n    }\n\n    const valueFieldName = 'subscriptionId';\n    const textFieldName = 'displayName';\n    for (let i = 0; i < result.value.length; i++) {\n      if (!find(list, ['value', get(result.value[i], valueFieldName)])) {\n        list.push({\n          text: `${get(result.value[i], textFieldName)}`,\n          value: get(result.value[i], valueFieldName),\n        });\n      }\n    }\n\n    return list;\n  }\n\n  static parseSubscriptionsForSelect(\n    result?: FetchResponse<AzureAPIResponse<Subscription>>\n  ): Array<{ label: string; value: string }> {\n    const list: Array<{ label: string; value: string }> = [];\n\n    if (!result) {\n      return list;\n    }\n\n    const valueFieldName = 'subscriptionId';\n    const textFieldName = 'displayName';\n    for (let i = 0; i < result.data.value.length; i++) {\n      if (!find(list, ['value', get(result.data.value[i], valueFieldName)])) {\n        list.push({\n          label: `${get(result.data.value[i], textFieldName)} - ${get(result.data.value[i], valueFieldName)}`,\n          value: get(result.data.value[i], valueFieldName),\n        });\n      }\n    }\n\n    return list;\n  }\n\n  static parseLocations(result: AzureAPIResponse<Location>) {\n    const locations: AzureMonitorLocations[] = [];\n\n    if (!result) {\n      return locations;\n    }\n\n    for (const location of result.value) {\n      locations.push({ name: location.name, displayName: location.displayName, supportsLogs: undefined });\n    }\n\n    return locations;\n  }\n}\n","import { map } from 'lodash';\n\nimport { ScopedVars, SelectableValue, VariableWithMultiSupport } from '@grafana/data';\nimport { TemplateSrv, VariableInterpolation } from '@grafana/runtime';\n\nimport { AzureMonitorOption, VariableOptionGroup } from '../types';\n\nexport const hasOption = (options: AzureMonitorOption[], value: string): boolean =>\n  options.some((v) => (v.options ? hasOption(v.options, value) : v.value === value));\n\nexport const findOptions = (options: AzureMonitorOption[], values: string[] = []) => {\n  if (values.length === 0) {\n    return [];\n  }\n  const set = values.reduce((accum, item) => {\n    accum.add(item);\n    return accum;\n  }, new Set());\n  return options.filter((option) => set.has(option.value));\n};\n\nexport const toOption = (v: { text: string; value: string }) => ({ value: v.value, label: v.text });\n\nexport const addValueToOptions = (\n  values: Array<AzureMonitorOption | SelectableValue>,\n  variableOptionGroup: VariableOptionGroup,\n  value?: string\n) => {\n  const options = [...values, variableOptionGroup];\n\n  const optionValues = values.map((m) => m.value.toLowerCase()).concat(variableOptionGroup.options.map((p) => p.value));\n  if (value && !optionValues.includes(value.toLowerCase())) {\n    options.push({ label: value, value });\n  }\n\n  return options;\n};\n\n// Route definitions shared with the backend.\n// Check: /pkg/tsdb/azuremonitor/azuremonitor-resource-handler.go <registerRoutes>\nexport const routeNames = {\n  azureMonitor: 'azuremonitor',\n  logAnalytics: 'loganalytics',\n  appInsights: 'appinsights',\n  resourceGraph: 'resourcegraph',\n};\n\nexport function interpolateVariable(\n  value: string | number | Array<string | number>,\n  variable: VariableWithMultiSupport\n) {\n  if (typeof value === 'string') {\n    // When enabling multiple responses, quote the value to mimic the array result below\n    // even if only one response is selected. This does not apply if only the \"include all\"\n    // option is enabled but with a custom value.\n    if (variable.multi || (variable.includeAll && !variable.allValue)) {\n      return \"'\" + value + \"'\";\n    } else {\n      return value;\n    }\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  const quotedValues = map(value, (val) => {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    return \"'\" + val + \"'\";\n  });\n  return quotedValues.join(',');\n}\n\nexport function replaceTemplateVariables<T extends { [K in keyof T]: string }>(\n  templateSrv: TemplateSrv,\n  query: T,\n  scopedVars?: ScopedVars\n) {\n  const workingQueries: Array<{ [K in keyof T]: string }> = [{ ...query }];\n  const keys = Object.keys(query) as Array<keyof T>;\n  keys.forEach((key) => {\n    const rawValue = workingQueries[0][key];\n    let interpolated: VariableInterpolation[] = [];\n    const replaced = templateSrv.replace(rawValue, scopedVars, 'raw', interpolated);\n    if (interpolated.length > 0) {\n      for (const variable of interpolated) {\n        if (variable.found === false) {\n          continue;\n        }\n        if (variable.value.includes(',')) {\n          const multiple = variable.value.split(',');\n          const currentQueries = [...workingQueries];\n          multiple.forEach((value, i) => {\n            currentQueries.forEach((q) => {\n              if (i === 0) {\n                q[key] = rawValue.replace(variable.match, value);\n              } else {\n                workingQueries.push({ ...q, [key]: rawValue.replace(variable.match, value) });\n              }\n            });\n          });\n        } else {\n          workingQueries.forEach((q) => {\n            q[key] = replaced;\n          });\n        }\n      }\n    } else {\n      workingQueries.forEach((q) => {\n        q[key] = replaced;\n      });\n    }\n  });\n\n  return workingQueries;\n}\n","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","function instanceOfAzureCredential(authType, object) {\n  if (!object) {\n    return false;\n  }\n  return object.authType === authType;\n}\n\nexport { instanceOfAzureCredential };\n//# sourceMappingURL=AzureCredentials.js.map\n","import { config } from '@grafana/runtime';\n\nvar AzureCloud = /* @__PURE__ */ ((AzureCloud2) => {\n  AzureCloud2[\"Public\"] = \"AzureCloud\";\n  AzureCloud2[\"China\"] = \"AzureChinaCloud\";\n  AzureCloud2[\"USGovernment\"] = \"AzureUSGovernment\";\n  AzureCloud2[\"None\"] = \"\";\n  return AzureCloud2;\n})(AzureCloud || {});\nconst predefinedClouds = [\n  {\n    name: \"AzureCloud\",\n    displayName: \"Azure\"\n  },\n  {\n    name: \"AzureChinaCloud\",\n    displayName: \"Azure China\"\n  },\n  {\n    name: \"AzureUSGovernment\",\n    displayName: \"Azure US Government\"\n  }\n];\nfunction getAzureClouds() {\n  const settingsEx = config.azure;\n  if (Array.isArray(settingsEx.clouds) && settingsEx.clouds.length > 0) {\n    return settingsEx.clouds;\n  }\n  return predefinedClouds;\n}\nfunction getDefaultAzureCloud() {\n  return config.azure.cloud || \"AzureCloud\" /* Public */;\n}\nfunction resolveLegacyCloudName(cloudName) {\n  if (!cloudName) {\n    return void 0;\n  }\n  switch (cloudName) {\n    case \"azuremonitor\":\n      return \"AzureCloud\" /* Public */;\n    case \"chinaazuremonitor\":\n      return \"AzureChinaCloud\" /* China */;\n    case \"govazuremonitor\":\n      return \"AzureUSGovernment\" /* USGovernment */;\n    default:\n      throw new Error(`Azure cloud '${cloudName}' is not recognized by datasource.`);\n  }\n}\n\nexport { AzureCloud, getAzureClouds, getDefaultAzureCloud, resolveLegacyCloudName };\n//# sourceMappingURL=clouds.js.map\n","import { config } from '@grafana/runtime';\nimport { getDefaultAzureCloud } from '../clouds.js';\nimport { instanceOfAzureCredential } from './AzureCredentials.js';\n\nconst concealed = Symbol(\"Concealed client secret\");\nconst concealedLegacy = Symbol(\"Concealed legacy client secret\");\nfunction isCredentialsComplete(credentials, ignoreSecret = false) {\n  const authType = credentials.authType;\n  switch (authType) {\n    case \"msi\":\n    case \"workloadidentity\":\n    case \"currentuser\":\n      return true;\n    case \"clientsecret\":\n    case \"clientsecret-obo\":\n      return !!(credentials.azureCloud && credentials.tenantId && credentials.clientId && // When ignoreSecret is set we consider the credentials complete without checking the secret\n      !!(ignoreSecret || credentials.clientSecret));\n    case \"ad-password\":\n      return !!(credentials.clientId && credentials.password && credentials.userId);\n    default:\n      throw new Error(`The auth type '${authType}' not supported.`);\n  }\n}\nfunction getClientSecret(options) {\n  if (!(\"secureJsonFields\" in options) || !options.hasOwnProperty(\"secureJsonFields\")) {\n    return void 0;\n  }\n  if (options.secureJsonFields.azureClientSecret) {\n    return concealed;\n  } else if (options.secureJsonFields.clientSecret) {\n    return concealedLegacy;\n  } else {\n    const secret = options.secureJsonData?.azureClientSecret;\n    return typeof secret === \"string\" && secret.length > 0 ? secret : void 0;\n  }\n}\nfunction getAdPassword(options) {\n  if (!(\"secureJsonFields\" in options) || !options.hasOwnProperty(\"secureJsonFields\")) {\n    return void 0;\n  }\n  if (options.secureJsonFields.password) {\n    return concealed;\n  } else {\n    const secret = options.secureJsonData?.password;\n    return typeof secret === \"string\" && secret.length > 0 ? secret : void 0;\n  }\n}\nfunction getDatasourceCredentials(options, oboEnabled) {\n  const credentials = options.jsonData.azureCredentials;\n  if (!credentials) {\n    return void 0;\n  }\n  const authType = credentials.authType;\n  switch (authType) {\n    case \"msi\":\n    case \"workloadidentity\":\n      if (authType === \"msi\" && config.azure.managedIdentityEnabled || authType === \"workloadidentity\" && config.azure.workloadIdentityEnabled) {\n        return {\n          authType\n        };\n      } else {\n        return void 0;\n      }\n    case \"clientsecret\":\n    case \"clientsecret-obo\":\n      if (authType === \"clientsecret-obo\" && !oboEnabled) {\n        return void 0;\n      }\n      return {\n        authType,\n        azureCloud: credentials.azureCloud || getDefaultAzureCloud(),\n        tenantId: credentials.tenantId,\n        clientId: credentials.clientId,\n        clientSecret: getClientSecret(options)\n      };\n    case \"ad-password\":\n      return {\n        authType,\n        userId: credentials.userId,\n        clientId: credentials.clientId,\n        password: getAdPassword(options)\n      };\n  }\n  if (instanceOfAzureCredential(authType, credentials)) {\n    if (!config.azure.userIdentityEnabled) {\n      return void 0;\n    }\n    if (instanceOfAzureCredential(\"clientsecret\", credentials.serviceCredentials)) {\n      const serviceCredentials = { ...credentials.serviceCredentials, clientSecret: getClientSecret(options) };\n      return {\n        authType,\n        serviceCredentialsEnabled: credentials.serviceCredentialsEnabled,\n        serviceCredentials\n      };\n    }\n    return {\n      authType,\n      serviceCredentialsEnabled: credentials.serviceCredentialsEnabled,\n      serviceCredentials: credentials.serviceCredentials\n    };\n  }\n  throw new Error(`The auth type '${authType}' is not supported.`);\n}\nfunction updateDatasourceCredentials(options, credentials, oboEnabled) {\n  options = {\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      azureAuthType: void 0,\n      cloudName: void 0,\n      tenantId: void 0,\n      clientId: void 0\n    }\n  };\n  const authType = credentials.authType;\n  switch (authType) {\n    case \"msi\":\n    case \"workloadidentity\":\n      if (authType === \"msi\" && !config.azure.managedIdentityEnabled) {\n        throw new Error(\"Managed Identity authentication is not enabled in Grafana config.\");\n      }\n      if (authType === \"workloadidentity\" && !config.azure.workloadIdentityEnabled) {\n        throw new Error(\"Workload Identity authentication is not enabled in Grafana config.\");\n      }\n      options = {\n        ...options,\n        jsonData: {\n          ...options.jsonData,\n          azureCredentials: {\n            authType\n          }\n        }\n      };\n      return options;\n    case \"clientsecret\":\n    case \"clientsecret-obo\":\n      if (authType === \"clientsecret-obo\" && !oboEnabled) {\n        throw new Error(\"Client Secret OBO authentication is not enabled in Grafana config.\");\n      }\n      options = {\n        ...options,\n        jsonData: {\n          ...options.jsonData,\n          azureCredentials: {\n            authType,\n            azureCloud: credentials.azureCloud || getDefaultAzureCloud(),\n            tenantId: credentials.tenantId,\n            clientId: credentials.clientId\n          }\n        },\n        secureJsonData: {\n          ...options.secureJsonData,\n          azureClientSecret: typeof credentials.clientSecret === \"string\" && credentials.clientSecret.length > 0 ? credentials.clientSecret : void 0\n        },\n        secureJsonFields: {\n          ...options.secureJsonFields,\n          azureClientSecret: credentials.clientSecret === concealed,\n          clientSecret: credentials.clientSecret === concealedLegacy\n        }\n      };\n      if (authType === \"clientsecret-obo\") {\n        options = {\n          ...options,\n          jsonData: {\n            ...options.jsonData,\n            oauthPassThru: true\n          }\n        };\n      }\n      return options;\n    case \"ad-password\":\n      options = {\n        ...options,\n        jsonData: {\n          ...options.jsonData,\n          azureCredentials: {\n            authType: \"ad-password\",\n            userId: credentials.userId,\n            clientId: credentials.clientId\n          }\n        },\n        secureJsonData: {\n          ...options.secureJsonData,\n          password: typeof credentials.password === \"string\" && credentials.password.length > 0 ? credentials.password : void 0\n        },\n        secureJsonFields: {\n          ...options.secureJsonFields,\n          password: typeof credentials.password === \"symbol\"\n        }\n      };\n      return options;\n  }\n  if (instanceOfAzureCredential(\"currentuser\", credentials)) {\n    if (!config.azure.userIdentityEnabled) {\n      throw new Error(\"User Identity authentication is not enabled in Grafana config.\");\n    }\n    const serviceCredentials = credentials.serviceCredentials;\n    let clientSecret;\n    if (instanceOfAzureCredential(\"clientsecret\", serviceCredentials)) {\n      clientSecret = serviceCredentials.clientSecret;\n      delete serviceCredentials.clientSecret;\n    }\n    options = {\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        azureCredentials: {\n          authType: \"currentuser\",\n          serviceCredentialsEnabled: credentials.serviceCredentialsEnabled,\n          serviceCredentials\n        },\n        oauthPassThru: true,\n        disableGrafanaCache: true\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        azureClientSecret: typeof clientSecret === \"string\" && clientSecret.length > 0 ? clientSecret : void 0\n      },\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        azureClientSecret: clientSecret === concealed,\n        clientSecret: clientSecret === concealedLegacy\n      }\n    };\n    return options;\n  }\n  throw new Error(`The auth type '${authType}' is not supported.`);\n}\nfunction hasCredentials(options) {\n  return !!options.jsonData.azureCredentials;\n}\n\nexport { concealed, concealedLegacy, getAdPassword, getClientSecret, getDatasourceCredentials, hasCredentials, isCredentialsComplete, updateDatasourceCredentials };\n//# sourceMappingURL=AzureCredentialsConfig.js.map\n","import {\n  AzureCredentials,\n  getDatasourceCredentials,\n  getDefaultAzureCloud,\n  getClientSecret,\n  resolveLegacyCloudName,\n  updateDatasourceCredentials,\n} from '@grafana/azure-sdk';\nimport { config } from '@grafana/runtime';\n\nimport { AzureMonitorDataSourceInstanceSettings, AzureMonitorDataSourceSettings } from './types';\n\nexport function getCredentials(\n  options: AzureMonitorDataSourceSettings | AzureMonitorDataSourceInstanceSettings\n): AzureCredentials {\n  // Try to get the credentials from the datasource settings,\n  // If not found, return the legacy azure monitor credentials if they exist or fallback to default credentials\n  const creds = getDatasourceCredentials(options);\n  if (creds) {\n    return creds;\n  }\n\n  return getLegacyCredentials(options) || getDefaultCredentials();\n}\n\nexport function updateCredentials(\n  options: AzureMonitorDataSourceSettings,\n  credentials: AzureCredentials\n): AzureMonitorDataSourceSettings {\n  return updateDatasourceCredentials(options, credentials);\n}\n\nfunction getLegacyCredentials(\n  options: AzureMonitorDataSourceSettings | AzureMonitorDataSourceInstanceSettings\n): AzureCredentials | undefined {\n  try {\n    // If authentication type isn't explicitly specified and datasource has client credentials,\n    // then this is existing datasource which is configured for app registration (client secret)\n    if (\n      options.jsonData.azureAuthType === 'clientsecret' ||\n      (!options.jsonData.azureAuthType && options.jsonData.tenantId && options.jsonData.clientId)\n    ) {\n      return {\n        authType: 'clientsecret',\n        tenantId: options.jsonData.tenantId,\n        clientId: options.jsonData.clientId,\n        azureCloud: resolveLegacyCloudName(options.jsonData.cloudName) || getDefaultAzureCloud(),\n        clientSecret: getClientSecret(options),\n      };\n    }\n\n    // If the authentication type is not set, then no legacy credentials exist so return undefined\n    if (!options.jsonData.azureAuthType) {\n      return undefined;\n    }\n\n    return { authType: options.jsonData.azureAuthType };\n  } catch (e) {\n    if (e instanceof Error) {\n      console.error('Unable to restore legacy credentials: %s', e.message);\n    }\n    return undefined;\n  }\n}\n\nfunction getDefaultCredentials(): AzureCredentials {\n  if (config.azure.managedIdentityEnabled) {\n    return { authType: 'msi' };\n  } else if (config.azure.workloadIdentityEnabled) {\n    return { authType: 'workloadidentity' };\n  } else {\n    return { authType: 'clientsecret', azureCloud: getDefaultAzureCloud() };\n  }\n}\n","import { E2ESelectors } from '@grafana/e2e-selectors';\n\nexport const components = {\n  configEditor: {\n    authType: {\n      select: 'data-testid auth-type',\n    },\n    azureCloud: {\n      input: 'data-testid azure-cloud',\n    },\n    tenantID: {\n      input: 'data-testid tenant-id',\n    },\n    clientID: {\n      input: 'data-testid client-id',\n    },\n    clientSecret: {\n      input: 'data-testid client-secret',\n    },\n    loadSubscriptions: {\n      button: 'data-testid load-subscriptions',\n    },\n    defaultSubscription: {\n      input: 'data-testid default-subscription',\n    },\n    serviceCredentialsEnabled: {\n      button: 'data-testid service-credentials-enabled',\n    },\n  },\n  queryEditor: {\n    header: {\n      select: 'data-testid azure-monitor-experimental-header',\n    },\n    userAuthAlert: 'data-testid azure-monitor-user-auth-invalid-auth-provider-alert',\n    userAuthFallbackAlert: 'data-testid azure-monitor-user-auth-fallback-alert',\n    resourcePicker: {\n      select: {\n        button: 'data-testid resource-picker-select',\n      },\n      search: {\n        input: 'data-testid resource-picker-search',\n      },\n      apply: {\n        button: 'data-testid resource-picker-apply',\n      },\n      cancel: {\n        button: 'data-testid resource-picker-cancel',\n      },\n      advanced: {\n        collapse: 'data-testid resource-picker-advanced',\n        subscription: {\n          input: 'data-testid resource-picker-subscription',\n        },\n        resourceGroup: {\n          input: 'data-testid resource-picker-resource-group',\n        },\n        namespace: {\n          input: 'data-testid resource-picker-namespace',\n        },\n        region: {\n          input: 'data-testid resource-picker-region',\n        },\n        resource: {\n          input: 'data-testid resource-picker-resource',\n        },\n      },\n    },\n    metricsQueryEditor: {\n      container: { input: 'data-testid azure-monitor-metrics-query-editor-with-experimental-ui' },\n      metricName: {\n        input: 'data-testid metric-name',\n      },\n    },\n    logsQueryEditor: {\n      container: { input: 'data-testid azure-monitor-logs-query-editor-with-experimental-ui' },\n      formatSelection: {\n        input: 'data-testid format-selection',\n      },\n      runQuery: {\n        button: 'data-testid run-query',\n      },\n    },\n    argsQueryEditor: {\n      container: {\n        input: 'data-testid azure-monitor-arg-query-editor',\n      },\n      subscriptions: {\n        input: 'data-testid azure-monitor-args-subscription',\n      },\n    },\n    tracesQueryEditor: {\n      container: {\n        input: 'data-testid azure-monitor-traces-query-editor-with-experimental-ui',\n      },\n      traceTypes: {\n        select: 'data-testid azure-monitor-traces-query-editor-trace-types',\n      },\n    },\n  },\n  variableEditor: {\n    queryType: {\n      input: 'data-testid query-type',\n    },\n    subscription: {\n      input: 'data-testid subscription',\n    },\n    resourceGroup: {\n      input: 'data-testid resource-group',\n    },\n    namespace: {\n      input: 'data-testid namespace',\n    },\n    resource: {\n      input: 'data-testid resource',\n    },\n    region: {\n      input: 'data-testid region',\n    },\n    customNamespace: {\n      input: 'data-testid custom-namespace',\n    },\n  },\n};\n\nexport const selectors: { components: E2ESelectors<typeof components> } = {\n  components: components,\n};\n","import { ChangeEvent } from 'react';\n\nimport { AzureClientSecretCredentials, AzureCredentials } from '@grafana/azure-sdk';\nimport { SelectableValue } from '@grafana/data';\nimport { Field, Select, Input, Button } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\n\nexport interface AppRegistrationCredentialsProps {\n  credentials: AzureClientSecretCredentials;\n  azureCloudOptions?: SelectableValue[];\n  onCredentialsChange: (updatedCredentials: AzureCredentials) => void;\n  disabled?: boolean;\n}\n\nexport const AppRegistrationCredentials = (props: AppRegistrationCredentialsProps) => {\n  const { azureCloudOptions, disabled, credentials, onCredentialsChange } = props;\n\n  const onAzureCloudChange = (selected: SelectableValue<string>) => {\n    const updated: AzureCredentials = {\n      ...credentials,\n      azureCloud: selected.value,\n    };\n    onCredentialsChange(updated);\n  };\n\n  const onTenantIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const updated: AzureCredentials = {\n      ...credentials,\n      tenantId: event.target.value,\n    };\n    onCredentialsChange(updated);\n  };\n\n  const onClientIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const updated: AzureCredentials = {\n      ...credentials,\n      clientId: event.target.value,\n    };\n    onCredentialsChange(updated);\n  };\n\n  const onClientSecretChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const updated: AzureCredentials = {\n      ...credentials,\n      clientSecret: event.target.value,\n    };\n    onCredentialsChange(updated);\n  };\n\n  const onClientSecretReset = () => {\n    const updated: AzureCredentials = {\n      ...credentials,\n      clientSecret: '',\n    };\n    onCredentialsChange(updated);\n  };\n\n  return (\n    <>\n      {azureCloudOptions && (\n        <Field\n          label=\"Azure Cloud\"\n          data-testid={selectors.components.configEditor.azureCloud.input}\n          htmlFor=\"azure-cloud-type\"\n          disabled={disabled}\n        >\n          <Select\n            inputId=\"azure-cloud-type\"\n            aria-label=\"Azure Cloud\"\n            className=\"width-15\"\n            value={azureCloudOptions.find((opt) => opt.value === credentials.azureCloud)}\n            options={azureCloudOptions}\n            onChange={onAzureCloudChange}\n          />\n        </Field>\n      )}\n      <Field\n        label=\"Directory (tenant) ID\"\n        required={credentials.authType === 'clientsecret'}\n        data-testid={selectors.components.configEditor.tenantID.input}\n        htmlFor=\"tenant-id\"\n        invalid={credentials.authType === 'clientsecret' && !credentials.tenantId}\n        error={'Tenant ID is required'}\n      >\n        <Input\n          aria-label=\"Tenant ID\"\n          className=\"width-30\"\n          placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n          value={credentials.tenantId || ''}\n          onChange={onTenantIdChange}\n          disabled={disabled}\n        />\n      </Field>\n      <Field\n        label=\"Application (client) ID\"\n        required={credentials.authType === 'clientsecret'}\n        data-testid={selectors.components.configEditor.clientID.input}\n        htmlFor=\"client-id\"\n        invalid={credentials.authType === 'clientsecret' && !credentials.clientId}\n        error={'Client ID is required'}\n      >\n        <Input\n          className=\"width-30\"\n          aria-label=\"Client ID\"\n          placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n          value={credentials.clientId || ''}\n          onChange={onClientIdChange}\n          disabled={disabled}\n        />\n      </Field>\n      {!disabled &&\n        (typeof credentials.clientSecret === 'symbol' ? (\n          <Field label=\"Client Secret\" htmlFor=\"client-secret\" required>\n            <div className=\"width-30\" style={{ display: 'flex', gap: '4px' }}>\n              <Input\n                aria-label=\"Client Secret\"\n                placeholder=\"configured\"\n                disabled={true}\n                data-testid={'client-secret'}\n              />\n              <Button variant=\"secondary\" type=\"button\" onClick={onClientSecretReset} disabled={disabled}>\n                Reset\n              </Button>\n            </div>\n          </Field>\n        ) : (\n          <Field\n            label=\"Client Secret\"\n            data-testid={selectors.components.configEditor.clientSecret.input}\n            required\n            htmlFor=\"client-secret\"\n            invalid={!credentials.clientSecret}\n            error={'Client secret is required'}\n          >\n            <Input\n              className=\"width-30\"\n              aria-label=\"Client Secret\"\n              placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n              value={credentials.clientSecret || ''}\n              onChange={onClientSecretChange}\n              id=\"client-secret\"\n              disabled={disabled}\n            />\n          </Field>\n        ))}\n    </>\n  );\n};\n","import { useMemo } from 'react';\n\nimport { AadCurrentUserCredentials, AzureCredentials, instanceOfAzureCredential } from '@grafana/azure-sdk';\nimport { SelectableValue } from '@grafana/data';\nimport { ConfigSection } from '@grafana/plugin-ui';\nimport { config } from '@grafana/runtime';\nimport { Select, Field, RadioButtonGroup, Alert, Stack } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\n\nimport { AppRegistrationCredentials } from './AppRegistrationCredentials';\n\nexport interface Props {\n  managedIdentityEnabled: boolean;\n  workloadIdentityEnabled: boolean;\n  credentials: AadCurrentUserCredentials;\n  azureCloudOptions?: SelectableValue[];\n  onCredentialsChange: (updatedCredentials: AzureCredentials) => void;\n  disabled?: boolean;\n  children?: JSX.Element;\n}\n\nexport const CurrentUserFallbackCredentials = (props: Props) => {\n  const {\n    credentials,\n    azureCloudOptions,\n    onCredentialsChange,\n    disabled,\n    managedIdentityEnabled,\n    workloadIdentityEnabled,\n  } = props;\n\n  type FallbackCredentialAuthTypeOptions = 'clientsecret' | 'msi' | 'workloadidentity';\n  const authTypeOptions = useMemo(() => {\n    let opts: Array<SelectableValue<FallbackCredentialAuthTypeOptions>> = [\n      {\n        value: 'clientsecret',\n        label: 'App Registration',\n      },\n    ];\n\n    if (managedIdentityEnabled) {\n      opts.push({\n        value: 'msi',\n        label: 'Managed Identity',\n      });\n    }\n\n    if (workloadIdentityEnabled) {\n      opts.push({\n        value: 'workloadidentity',\n        label: 'Workload Identity',\n      });\n    }\n\n    return opts;\n  }, [managedIdentityEnabled, workloadIdentityEnabled]);\n\n  const onAuthTypeChange = (selected: SelectableValue<FallbackCredentialAuthTypeOptions>) => {\n    const defaultAuthType = managedIdentityEnabled\n      ? 'msi'\n      : workloadIdentityEnabled\n        ? 'workloadidentity'\n        : 'clientsecret';\n    const updated: AadCurrentUserCredentials = {\n      ...credentials,\n      serviceCredentials: {\n        authType: selected.value || defaultAuthType,\n      },\n    };\n    onCredentialsChange(updated);\n  };\n\n  const onServiceCredentialsEnabledChange = (value: boolean) => {\n    let updated: AzureCredentials = {\n      ...credentials,\n      serviceCredentialsEnabled: value,\n    };\n    if (!value) {\n      updated = { ...updated, serviceCredentials: undefined };\n    }\n    onCredentialsChange(updated);\n  };\n\n  const onServiceCredentialsChange = (serviceCredentials: AzureCredentials) => {\n    if (!instanceOfAzureCredential('currentuser', serviceCredentials)) {\n      onCredentialsChange({ ...credentials, serviceCredentials: serviceCredentials });\n    }\n  };\n\n  if (!config.azure.userIdentityFallbackCredentialsEnabled) {\n    return (\n      <Alert severity=\"info\" title=\"Fallback Credentials Disabled\">\n        <>\n          Fallback credentials have been disabled. As user-based authentication only inherently supports requests with a\n          user in scope, features such as alerting, recorded queries, or reporting will not function as expected. Please\n          review the{' '}\n          <a\n            href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/deprecated-application-insights/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            documentation\n          </a>{' '}\n          for more details.\n        </>\n      </Alert>\n    );\n  }\n\n  return (\n    <ConfigSection title=\"Fallback Service Credentials\" isCollapsible={true}>\n      <Alert severity=\"info\" title=\"Service Credentials\">\n        <Stack direction={'column'}>\n          <div>\n            User-based authentication does not inherently support Grafana features that make requests to the data source\n            without a users details available to the request. An example of this is alerting. If you wish to ensure that\n            features that do not have a user in the context of the request still function, please provide fallback\n            credentials below.\n          </div>\n          <div>\n            <b>\n              Note: Features like alerting will be restricted to the access level of the fallback credentials rather\n              than the user. This may present confusion for users and should be clarified.\n            </b>\n          </div>\n        </Stack>\n      </Alert>\n      <Field\n        label=\"Service Credentials\"\n        description=\"Choose if fallback service credentials are enabled or disabled for this data source\"\n        data-testid={selectors.components.configEditor.serviceCredentialsEnabled.button}\n      >\n        <RadioButtonGroup\n          options={[\n            { label: 'Enabled', value: true },\n            { label: 'Disabled', value: false },\n          ]}\n          value={credentials.serviceCredentialsEnabled ?? false}\n          size={'md'}\n          onChange={(val) => onServiceCredentialsEnabledChange(val)}\n        />\n      </Field>\n      {credentials.serviceCredentialsEnabled ? (\n        <>\n          {authTypeOptions.length > 0 && (\n            <Field\n              label=\"Authentication\"\n              description=\"Choose the type of authentication to Azure services\"\n              data-testid={selectors.components.configEditor.authType.select}\n              htmlFor=\"authentication-type\"\n            >\n              <Select\n                className=\"width-15\"\n                value={authTypeOptions.find((opt) => opt.value === credentials.serviceCredentials?.authType)}\n                options={authTypeOptions}\n                onChange={onAuthTypeChange}\n                disabled={disabled}\n              />\n            </Field>\n          )}\n          {credentials.serviceCredentials?.authType === 'clientsecret' && (\n            <AppRegistrationCredentials\n              credentials={credentials.serviceCredentials}\n              azureCloudOptions={azureCloudOptions}\n              onCredentialsChange={onServiceCredentialsChange}\n              disabled={disabled}\n            />\n          )}\n        </>\n      ) : null}\n      {props.children}\n    </ConfigSection>\n  );\n};\n\nexport default CurrentUserFallbackCredentials;\n","import { useMemo } from 'react';\n\nimport { AzureAuthType, AzureCredentials, getAzureClouds } from '@grafana/azure-sdk';\nimport { SelectableValue } from '@grafana/data';\nimport { ConfigSection } from '@grafana/plugin-ui';\nimport { Select, Field } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\n\nimport { AppRegistrationCredentials } from './AppRegistrationCredentials';\nimport CurrentUserFallbackCredentials from './CurrentUserFallbackCredentials';\n\nexport interface Props {\n  managedIdentityEnabled: boolean;\n  workloadIdentityEnabled: boolean;\n  userIdentityEnabled: boolean;\n  credentials: AzureCredentials;\n  azureCloudOptions?: SelectableValue[];\n  onCredentialsChange: (updatedCredentials: AzureCredentials) => void;\n  disabled?: boolean;\n  children?: JSX.Element;\n}\n\nexport function getAzureCloudOptions(): Array<SelectableValue<string>> {\n  const cloudInfo = getAzureClouds();\n\n  return cloudInfo.map((cloud) => ({\n    value: cloud.name,\n    label: cloud.displayName,\n  }));\n}\n\nexport const AzureCredentialsForm = (props: Props) => {\n  const {\n    credentials,\n    onCredentialsChange,\n    disabled,\n    managedIdentityEnabled,\n    workloadIdentityEnabled,\n    userIdentityEnabled,\n  } = props;\n\n  const authTypeOptions = useMemo(() => {\n    let opts: Array<SelectableValue<AzureAuthType>> = [\n      {\n        value: 'clientsecret',\n        label: 'App Registration',\n      },\n    ];\n\n    if (managedIdentityEnabled) {\n      opts.push({\n        value: 'msi',\n        label: 'Managed Identity',\n      });\n    }\n\n    if (workloadIdentityEnabled) {\n      opts.push({\n        value: 'workloadidentity',\n        label: 'Workload Identity',\n      });\n    }\n\n    if (userIdentityEnabled) {\n      opts.unshift({\n        value: 'currentuser',\n        label: 'Current User',\n      });\n    }\n\n    return opts;\n  }, [managedIdentityEnabled, workloadIdentityEnabled, userIdentityEnabled]);\n\n  const onAuthTypeChange = (selected: SelectableValue<AzureAuthType>) => {\n    const defaultAuthType = (() => {\n      if (managedIdentityEnabled) {\n        return 'msi';\n      }\n\n      if (workloadIdentityEnabled) {\n        return 'workloadidentity';\n      }\n\n      if (userIdentityEnabled) {\n        return 'currentuser';\n      }\n\n      return 'clientsecret';\n    })();\n\n    const updated: AzureCredentials = {\n      ...credentials,\n      authType: selected.value || defaultAuthType,\n    };\n\n    onCredentialsChange(updated);\n  };\n\n  return (\n    <ConfigSection title=\"Authentication\">\n      {authTypeOptions.length > 1 && (\n        <Field\n          label=\"Authentication\"\n          description=\"Choose the type of authentication to Azure services\"\n          data-testid={selectors.components.configEditor.authType.select}\n          htmlFor=\"authentication-type\"\n        >\n          <Select\n            className=\"width-15\"\n            value={authTypeOptions.find((opt) => opt.value === credentials.authType)}\n            options={authTypeOptions}\n            onChange={onAuthTypeChange}\n            disabled={disabled}\n          />\n        </Field>\n      )}\n      {credentials.authType === 'clientsecret' && (\n        <AppRegistrationCredentials\n          credentials={credentials}\n          azureCloudOptions={getAzureCloudOptions()}\n          onCredentialsChange={onCredentialsChange}\n          disabled={disabled}\n        />\n      )}\n      {props.children}\n      {credentials.authType === 'currentuser' && (\n        <CurrentUserFallbackCredentials\n          credentials={credentials}\n          azureCloudOptions={getAzureCloudOptions()}\n          onCredentialsChange={onCredentialsChange}\n          disabled={disabled}\n          managedIdentityEnabled={managedIdentityEnabled}\n          workloadIdentityEnabled={workloadIdentityEnabled}\n        />\n      )}\n    </ConfigSection>\n  );\n};\n\nexport default AzureCredentialsForm;\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { Field, Switch, useTheme2 } from '@grafana/ui';\n\nimport { AzureMonitorDataSourceJsonData } from '../../types';\n\nexport interface Props {\n  options: AzureMonitorDataSourceJsonData;\n  onBasicLogsEnabledChange: (basicLogsEnabled: boolean) => void;\n}\n\nexport const BasicLogsToggle = (props: Props) => {\n  const { options, onBasicLogsEnabledChange } = props;\n\n  const theme = useTheme2();\n  const styles = {\n    text: css({\n      ...theme.typography.body,\n      color: theme.colors.text.secondary,\n      fontSize: '11px',\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecoration: 'none',\n        },\n      }),\n    }),\n  };\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => onBasicLogsEnabledChange(e.target.checked);\n  const description = (\n    <p className={styles.text}>\n      Enabling this feature incurs Azure Monitor per-query costs on dashboard panels that query tables configured for{' '}\n      <a\n        href=\"https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1\"\n        target=\"__blank\"\n        rel=\"noreferrer\"\n      >\n        Basic Logs\n      </a>\n      .\n    </p>\n  );\n  return (\n    <Field description={description} label=\"Enable Basic Logs\">\n      <div>\n        <Switch aria-label=\"Basic Logs\" onChange={onChange} value={options.basicLogsEnabled ?? false} />\n      </div>\n    </Field>\n  );\n};\n","import { useEffect, useReducer } from 'react';\n\nimport { AzureCredentials, isCredentialsComplete } from '@grafana/azure-sdk';\nimport { SelectableValue } from '@grafana/data';\nimport { Select, Button, Field } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorDataSourceJsonData } from '../../types';\n\nexport interface Props {\n  options: AzureMonitorDataSourceJsonData;\n  credentials: AzureCredentials;\n  getSubscriptions?: () => Promise<SelectableValue[]>;\n  subscriptions: Array<SelectableValue<string>>;\n  onSubscriptionsChange: (receivedSubscriptions: Array<SelectableValue<string>>) => void;\n  onSubscriptionChange: (subscriptionId?: string) => void;\n  disabled?: boolean;\n}\n\nexport const DefaultSubscription = (props: Props) => {\n  const {\n    credentials,\n    disabled,\n    options,\n    subscriptions,\n    getSubscriptions,\n    onSubscriptionChange,\n    onSubscriptionsChange,\n  } = props;\n  const hasRequiredFields = isCredentialsComplete(credentials);\n  const [loadSubscriptionsClicked, onLoadSubscriptions] = useReducer((val) => val + 1, 0);\n\n  useEffect(() => {\n    if (!getSubscriptions || !hasRequiredFields) {\n      updateSubscriptions([]);\n      return;\n    }\n    let canceled = false;\n    getSubscriptions().then((result) => {\n      if (!canceled) {\n        updateSubscriptions(result, loadSubscriptionsClicked);\n      }\n    });\n    return () => {\n      canceled = true;\n    };\n    // This effect is intended to be called only once initially and on Load Subscriptions click\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadSubscriptionsClicked]);\n\n  const updateSubscriptions = (received: Array<SelectableValue<string>>, autoSelect = false) => {\n    onSubscriptionsChange(received);\n    if (getSubscriptions) {\n      if (autoSelect && !options.subscriptionId && received.length > 0) {\n        // Selecting the default subscription if subscriptions received but no default subscription selected\n        onChange(received[0]);\n      } else if (options.subscriptionId) {\n        const found = received.find((opt) => opt.value === options.subscriptionId);\n        if (!found) {\n          // Unselecting the default subscription if it isn't found among the received subscriptions\n          onChange(undefined);\n        }\n      }\n    }\n  };\n\n  const onChange = (selected: SelectableValue<string> | undefined) => onSubscriptionChange(selected?.value);\n\n  return (\n    <>\n      <Field\n        label=\"Default Subscription\"\n        data-testid={selectors.components.configEditor.defaultSubscription.input}\n        htmlFor=\"default-subscription\"\n      >\n        <div className=\"width-30\" style={{ display: 'flex', gap: '4px' }}>\n          <Select\n            inputId=\"default-subscription\"\n            aria-label=\"Default Subscription\"\n            value={\n              options.subscriptionId ? subscriptions.find((opt) => opt.value === options.subscriptionId) : undefined\n            }\n            options={subscriptions}\n            onChange={onChange}\n            disabled={disabled}\n          />\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            onClick={onLoadSubscriptions}\n            disabled={!hasRequiredFields || disabled}\n            data-testid={selectors.components.configEditor.loadSubscriptions.button}\n          >\n            Load Subscriptions\n          </Button>\n        </div>\n      </Field>\n    </>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { AzureCredentials } from '@grafana/azure-sdk';\nimport { SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nimport { getCredentials, updateCredentials } from '../../credentials';\nimport { AzureMonitorDataSourceSettings } from '../../types';\n\nimport { AzureCredentialsForm, getAzureCloudOptions } from './AzureCredentialsForm';\nimport { BasicLogsToggle } from './BasicLogsToggle';\nimport { DefaultSubscription } from './DefaultSubscription';\n\nexport interface Props {\n  options: AzureMonitorDataSourceSettings;\n  updateOptions: (optionsFunc: (options: AzureMonitorDataSourceSettings) => AzureMonitorDataSourceSettings) => void;\n  getSubscriptions: () => Promise<Array<SelectableValue<string>>>;\n}\n\nexport const MonitorConfig = (props: Props) => {\n  const { updateOptions, getSubscriptions, options } = props;\n  const [subscriptions, setSubscriptions] = useState<Array<SelectableValue<string>>>([]);\n  const credentials = useMemo(() => getCredentials(props.options), [props.options]);\n\n  const onCredentialsChange = (credentials: AzureCredentials, subscriptionId?: string): void => {\n    if (!subscriptionId) {\n      setSubscriptions([]);\n    }\n    updateOptions((options: AzureMonitorDataSourceSettings) =>\n      updateCredentials({ ...options, jsonData: { ...options.jsonData, subscriptionId } }, credentials)\n    );\n  };\n\n  const onSubscriptionsChange = (receivedSubscriptions: Array<SelectableValue<string>>) =>\n    setSubscriptions(receivedSubscriptions);\n\n  const onSubscriptionChange = (subscriptionId?: string) =>\n    updateOptions((options) => ({ ...options, jsonData: { ...options.jsonData, subscriptionId } }));\n\n  const onBasicLogsEnabledChange = (enableBasicLogs: boolean) =>\n    updateOptions((options) => ({ ...options, jsonData: { ...options.jsonData, basicLogsEnabled: enableBasicLogs } }));\n\n  // The auth type needs to be set on the first load of the data source\n  useEffectOnce(() => {\n    if (!options.jsonData.authType || !credentials.authType) {\n      onCredentialsChange(credentials, options.jsonData.subscriptionId);\n    }\n  });\n\n  return (\n    <>\n      <AzureCredentialsForm\n        managedIdentityEnabled={config.azure.managedIdentityEnabled}\n        workloadIdentityEnabled={config.azure.workloadIdentityEnabled}\n        userIdentityEnabled={config.azure.userIdentityEnabled && !!config.featureToggles.azureMonitorEnableUserAuth}\n        credentials={credentials}\n        azureCloudOptions={getAzureCloudOptions()}\n        onCredentialsChange={onCredentialsChange}\n        disabled={props.options.readOnly}\n      >\n        <>\n          <DefaultSubscription\n            subscriptions={subscriptions}\n            credentials={credentials}\n            getSubscriptions={getSubscriptions}\n            disabled={props.options.readOnly}\n            onSubscriptionsChange={onSubscriptionsChange}\n            onSubscriptionChange={onSubscriptionChange}\n            options={options.jsonData}\n          />\n          <BasicLogsToggle options={options.jsonData} onBasicLogsEnabledChange={onBasicLogsEnabledChange} />\n        </>\n      </AzureCredentialsForm>\n    </>\n  );\n};\n\nexport default MonitorConfig;\n","import { PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, SelectableValue, updateDatasourcePluginOption } from '@grafana/data';\nimport { ConfigSection, DataSourceDescription } from '@grafana/plugin-ui';\nimport { getBackendSrv, getTemplateSrv, isFetchError, TemplateSrv, config } from '@grafana/runtime';\nimport { Alert, Divider, SecureSocksProxySettings } from '@grafana/ui';\n\nimport ResponseParser from '../../azure_monitor/response_parser';\nimport {\n  AzureAPIResponse,\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorDataSourceSecureJsonData,\n  AzureMonitorDataSourceSettings,\n  Subscription,\n} from '../../types';\nimport { routeNames } from '../../utils/common';\n\nimport { MonitorConfig } from './MonitorConfig';\n\nexport type Props = DataSourcePluginOptionsEditorProps<\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorDataSourceSecureJsonData\n>;\n\ninterface ErrorMessage {\n  title: string;\n  description: string;\n  details?: string;\n}\n\nexport interface State {\n  unsaved: boolean;\n  error?: ErrorMessage;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  templateSrv: TemplateSrv = getTemplateSrv();\n  baseURL: string;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      unsaved: false,\n    };\n    this.baseURL = `/api/datasources/${this.props.options.id}/resources/${routeNames.azureMonitor}/subscriptions`;\n  }\n\n  private updateOptions = (\n    optionsFunc: (options: AzureMonitorDataSourceSettings) => AzureMonitorDataSourceSettings\n  ): void => {\n    const updated = optionsFunc(this.props.options);\n    this.props.onOptionsChange(updated);\n\n    this.setState({ unsaved: true });\n  };\n\n  private saveOptions = async (): Promise<void> => {\n    if (this.state.unsaved) {\n      await getBackendSrv()\n        .put(`/api/datasources/${this.props.options.id}`, this.props.options)\n        .then((result: { datasource: AzureMonitorDataSourceSettings }) => {\n          updateDatasourcePluginOption(this.props, 'version', result.datasource.version);\n        });\n\n      this.setState({ unsaved: false });\n    }\n  };\n\n  private getSubscriptions = async (): Promise<Array<SelectableValue<string>>> => {\n    await this.saveOptions();\n\n    const query = `?api-version=2019-03-01`;\n    try {\n      const result = await getBackendSrv()\n        .fetch<AzureAPIResponse<Subscription>>({\n          url: this.baseURL + query,\n          method: 'GET',\n        })\n        .toPromise();\n\n      this.setState({ error: undefined });\n      return ResponseParser.parseSubscriptionsForSelect(result);\n    } catch (err) {\n      if (isFetchError(err)) {\n        this.setState({\n          error: {\n            title: 'Error requesting subscriptions',\n            description: 'Could not request subscriptions from Azure. Check your credentials and try again.',\n            details: err?.data?.message,\n          },\n        });\n      }\n      return Promise.resolve([]);\n    }\n  };\n\n  render() {\n    const { options, onOptionsChange } = this.props;\n    const { error } = this.state;\n\n    return (\n      <>\n        <DataSourceDescription\n          dataSourceName=\"Azure Monitor\"\n          docsLink=\"https://grafana.com/docs/grafana/latest/datasources/azure-monitor/\"\n          hasRequiredFields\n        />\n        <Divider />\n        <MonitorConfig options={options} updateOptions={this.updateOptions} getSubscriptions={this.getSubscriptions} />\n        {error && (\n          <Alert severity=\"error\" title={error.title}>\n            <p>{error.description}</p>\n            {error.details && <details style={{ whiteSpace: 'pre-wrap' }}>{error.details}</details>}\n          </Alert>\n        )}\n        {config.secureSocksDSProxyEnabled && (\n          <>\n            <Divider />\n            <ConfigSection\n              title=\"Additional settings\"\n              description=\"Additional settings are optional settings that can be configured for more control over your data source. This includes Secure Socks Proxy.\"\n              isCollapsible={true}\n              isInitiallyOpen={options.jsonData.enableSecureSocksProxy !== undefined}\n            >\n              <SecureSocksProxySettings options={options} onOptionsChange={onOptionsChange} />\n            </ConfigSection>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ConfigEditor;\n","// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     public/app/plugins/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     PluginTsTypesJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nimport * as common from '@grafana/schema';\n\nexport interface AzureMonitorQuery extends common.DataQuery {\n  /**\n   * Azure Monitor Logs sub-query properties.\n   */\n  azureLogAnalytics?: AzureLogsQuery;\n  /**\n   * Azure Monitor Metrics sub-query properties.\n   */\n  azureMonitor?: AzureMetricQuery;\n  /**\n   * Azure Resource Graph sub-query properties.\n   */\n  azureResourceGraph?: AzureResourceGraphQuery;\n  /**\n   * Application Insights Traces sub-query properties.\n   */\n  azureTraces?: AzureTracesQuery;\n  /**\n   * Custom namespace used in template variable queries\n   */\n  customNamespace?: string;\n  /**\n   * @deprecated Legacy template variable support.\n   */\n  grafanaTemplateVariableFn?: GrafanaTemplateVariableQuery;\n  /**\n   * Namespace used in template variable queries\n   */\n  namespace?: string;\n  /**\n   * Used only for exemplar queries from Prometheus\n   */\n  query?: string;\n  /**\n   * Region used in template variable queries\n   */\n  region?: string;\n  /**\n   * Resource used in template variable queries\n   */\n  resource?: string;\n  /**\n   * Resource group used in template variable queries\n   */\n  resourceGroup?: string;\n  /**\n   * Azure subscription containing the resource(s) to be queried.\n   * Also used for template variable queries\n   */\n  subscription?: string;\n  /**\n   * Subscriptions to be queried via Azure Resource Graph.\n   */\n  subscriptions?: Array<string>;\n}\n\nexport const defaultAzureMonitorQuery: Partial<AzureMonitorQuery> = {\n  subscriptions: [],\n};\n\n/**\n * Defines the supported queryTypes. GrafanaTemplateVariableFn is deprecated\n */\nexport enum AzureQueryType {\n  AzureMonitor = 'Azure Monitor',\n  AzureResourceGraph = 'Azure Resource Graph',\n  AzureTraces = 'Azure Traces',\n  CustomMetricNamesQuery = 'Azure Custom Metric Names',\n  CustomNamespacesQuery = 'Azure Custom Namespaces',\n  GrafanaTemplateVariableFn = 'Grafana Template Variable Function',\n  LocationsQuery = 'Azure Regions',\n  LogAnalytics = 'Azure Log Analytics',\n  MetricNamesQuery = 'Azure Metric Names',\n  NamespacesQuery = 'Azure Namespaces',\n  ResourceGroupsQuery = 'Azure Resource Groups',\n  ResourceNamesQuery = 'Azure Resource Names',\n  SubscriptionsQuery = 'Azure Subscriptions',\n  TraceExemplar = 'traceql',\n  WorkspacesQuery = 'Azure Workspaces',\n}\n\nexport interface AzureMetricQuery {\n  /**\n   * The aggregation to be used within the query. Defaults to the primaryAggregationType defined by the metric.\n   */\n  aggregation?: string;\n  /**\n   * Aliases can be set to modify the legend labels. e.g. {{ resourceGroup }}. See docs for more detail.\n   */\n  alias?: string;\n  /**\n   * Time grains that are supported by the metric.\n   */\n  allowedTimeGrainsMs?: Array<number>;\n  /**\n   * Used as the value for the metricNamespace property when it's different from the resource namespace.\n   */\n  customNamespace?: string;\n  /**\n   * @deprecated This property was migrated to dimensionFilters and should only be accessed in the migration\n   */\n  dimension?: string;\n  /**\n   * @deprecated This property was migrated to dimensionFilters and should only be accessed in the migration\n   */\n  dimensionFilter?: string;\n  /**\n   * Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.\n   */\n  dimensionFilters?: Array<AzureMetricDimension>;\n  /**\n   * @deprecated Use metricNamespace instead\n   */\n  metricDefinition?: string;\n  /**\n   * The metric to query data for within the specified metricNamespace. e.g. UsedCapacity\n   */\n  metricName?: string;\n  /**\n   * metricNamespace is used as the resource type (or resource namespace).\n   * It's usually equal to the target metric namespace. e.g. microsoft.storage/storageaccounts\n   * Kept the name of the variable as metricNamespace to avoid backward incompatibility issues.\n   */\n  metricNamespace?: string;\n  /**\n   * The Azure region containing the resource(s).\n   */\n  region?: string;\n  /**\n   * @deprecated Use resources instead\n   */\n  resourceGroup?: string;\n  /**\n   * @deprecated Use resources instead\n   */\n  resourceName?: string;\n  /**\n   * @deprecated Use resourceGroup, resourceName and metricNamespace instead\n   */\n  resourceUri?: string;\n  /**\n   * Array of resource URIs to be queried.\n   */\n  resources?: Array<AzureMonitorResource>;\n  /**\n   * The granularity of data points to be queried. Defaults to auto.\n   */\n  timeGrain?: string;\n  /**\n   * @deprecated\n   */\n  timeGrainUnit?: string;\n  /**\n   * Maximum number of records to return. Defaults to 10.\n   */\n  top?: string;\n}\n\nexport const defaultAzureMetricQuery: Partial<AzureMetricQuery> = {\n  allowedTimeGrainsMs: [],\n  dimensionFilters: [],\n  resources: [],\n};\n\n/**\n * Azure Monitor Logs sub-query properties\n */\nexport interface AzureLogsQuery {\n  /**\n   * If set to true the query will be run as a basic logs query\n   */\n  basicLogsQuery?: boolean;\n  /**\n   * Builder query to be executed.\n   */\n  builderQuery?: BuilderQueryExpression;\n  /**\n   * If set to true the dashboard time range will be used as a filter for the query. Otherwise the query time ranges will be used. Defaults to false.\n   */\n  dashboardTime?: boolean;\n  /**\n   * @deprecated Use dashboardTime instead\n   */\n  intersectTime?: boolean;\n  /**\n   * Denotes if logs query editor is in builder mode\n   */\n  mode?: LogsEditorMode;\n  /**\n   * KQL query to be executed.\n   */\n  query?: string;\n  /**\n   * @deprecated Use resources instead\n   */\n  resource?: string;\n  /**\n   * Array of resource URIs to be queried.\n   */\n  resources?: Array<string>;\n  /**\n   * Specifies the format results should be returned as.\n   */\n  resultFormat?: ResultFormat;\n  /**\n   * If dashboardTime is set to true this value dictates which column the time filter will be applied to. Defaults to the first tables timeSpan column, the first datetime column found, or TimeGenerated\n   */\n  timeColumn?: string;\n  /**\n   * Workspace ID. This was removed in Grafana 8, but remains for backwards compat.\n   */\n  workspace?: string;\n}\n\nexport const defaultAzureLogsQuery: Partial<AzureLogsQuery> = {\n  resources: [],\n};\n\n/**\n * Application Insights Traces sub-query properties\n */\nexport interface AzureTracesQuery {\n  /**\n   * Filters for property values.\n   */\n  filters?: Array<AzureTracesFilter>;\n  /**\n   * Operation ID. Used only for Traces queries.\n   */\n  operationId?: string;\n  /**\n   * KQL query to be executed.\n   */\n  query?: string;\n  /**\n   * Array of resource URIs to be queried.\n   */\n  resources?: Array<string>;\n  /**\n   * Specifies the format results should be returned as.\n   */\n  resultFormat?: ResultFormat;\n  /**\n   * Types of events to filter by.\n   */\n  traceTypes?: Array<string>;\n}\n\nexport const defaultAzureTracesQuery: Partial<AzureTracesQuery> = {\n  filters: [],\n  resources: [],\n  traceTypes: [],\n};\n\nexport interface AzureTracesFilter {\n  /**\n   * Values to filter by.\n   */\n  filters: Array<string>;\n  /**\n   * Comparison operator to use. Either equals or not equals.\n   */\n  operation: string;\n  /**\n   * Property name, auto-populated based on available traces.\n   */\n  property: string;\n}\n\nexport const defaultAzureTracesFilter: Partial<AzureTracesFilter> = {\n  filters: [],\n};\n\nexport enum ResultFormat {\n  Logs = 'logs',\n  Table = 'table',\n  TimeSeries = 'time_series',\n  Trace = 'trace',\n}\n\nexport enum LogsEditorMode {\n  Builder = 'builder',\n  Raw = 'raw',\n}\n\nexport enum BuilderQueryEditorExpressionType {\n  And = 'and',\n  Function_parameter = 'function_parameter',\n  Group_by = 'group_by',\n  Operator = 'operator',\n  Or = 'or',\n  Order_by = 'order_by',\n  Property = 'property',\n  Reduce = 'reduce',\n}\n\nexport enum BuilderQueryEditorPropertyType {\n  Boolean = 'boolean',\n  Datetime = 'datetime',\n  Function = 'function',\n  Interval = 'interval',\n  Number = 'number',\n  String = 'string',\n  Time_span = 'time_span',\n}\n\nexport enum BuilderQueryEditorOrderByOptions {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n\nexport interface BuilderQueryEditorProperty {\n  name: string;\n  type: BuilderQueryEditorPropertyType;\n}\n\nexport interface BuilderQueryEditorPropertyExpression {\n  property: BuilderQueryEditorProperty;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport interface BuilderQueryEditorColumnsExpression {\n  columns?: Array<string>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorColumnsExpression: Partial<BuilderQueryEditorColumnsExpression> = {\n  columns: [],\n};\n\nexport interface SelectableValue {\n  label: string;\n  value: string;\n}\n\nexport type BuilderQueryEditorOperatorType = (string | boolean | number | SelectableValue);\n\nexport interface BuilderQueryEditorOperator {\n  labelValue?: string;\n  name: string;\n  value: string;\n}\n\nexport interface BuilderQueryEditorWhereExpressionItems {\n  operator: BuilderQueryEditorOperator;\n  property: BuilderQueryEditorProperty;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport interface BuilderQueryEditorWhereExpression {\n  expressions: Array<BuilderQueryEditorWhereExpressionItems>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorWhereExpression: Partial<BuilderQueryEditorWhereExpression> = {\n  expressions: [],\n};\n\nexport interface BuilderQueryEditorWhereExpressionArray {\n  expressions: Array<BuilderQueryEditorWhereExpression>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorWhereExpressionArray: Partial<BuilderQueryEditorWhereExpressionArray> = {\n  expressions: [],\n};\n\nexport interface BuilderQueryEditorFunctionParameterExpression {\n  fieldType: BuilderQueryEditorPropertyType;\n  type: BuilderQueryEditorExpressionType;\n  value: string;\n}\n\nexport interface BuilderQueryEditorReduceExpression {\n  focus?: boolean;\n  parameters?: Array<BuilderQueryEditorFunctionParameterExpression>;\n  property?: BuilderQueryEditorProperty;\n  reduce?: BuilderQueryEditorProperty;\n}\n\nexport const defaultBuilderQueryEditorReduceExpression: Partial<BuilderQueryEditorReduceExpression> = {\n  parameters: [],\n};\n\nexport interface BuilderQueryEditorReduceExpressionArray {\n  expressions: Array<BuilderQueryEditorReduceExpression>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorReduceExpressionArray: Partial<BuilderQueryEditorReduceExpressionArray> = {\n  expressions: [],\n};\n\nexport interface BuilderQueryEditorGroupByExpression {\n  focus?: boolean;\n  interval?: BuilderQueryEditorProperty;\n  property?: BuilderQueryEditorProperty;\n  type?: BuilderQueryEditorExpressionType;\n}\n\nexport interface BuilderQueryEditorGroupByExpressionArray {\n  expressions: Array<BuilderQueryEditorGroupByExpression>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorGroupByExpressionArray: Partial<BuilderQueryEditorGroupByExpressionArray> = {\n  expressions: [],\n};\n\nexport interface BuilderQueryEditorOrderByExpression {\n  order: BuilderQueryEditorOrderByOptions;\n  property: BuilderQueryEditorProperty;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport interface BuilderQueryEditorOrderByExpressionArray {\n  expressions: Array<BuilderQueryEditorOrderByExpression>;\n  type: BuilderQueryEditorExpressionType;\n}\n\nexport const defaultBuilderQueryEditorOrderByExpressionArray: Partial<BuilderQueryEditorOrderByExpressionArray> = {\n  expressions: [],\n};\n\nexport interface BuilderQueryExpression {\n  columns?: BuilderQueryEditorColumnsExpression;\n  from?: BuilderQueryEditorPropertyExpression;\n  fuzzySearch?: BuilderQueryEditorWhereExpressionArray;\n  groupBy?: BuilderQueryEditorGroupByExpressionArray;\n  limit?: number;\n  orderBy?: BuilderQueryEditorOrderByExpressionArray;\n  reduce?: BuilderQueryEditorReduceExpressionArray;\n  timeFilter?: BuilderQueryEditorWhereExpressionArray;\n  where?: BuilderQueryEditorWhereExpressionArray;\n}\n\nexport interface AzureResourceGraphQuery {\n  /**\n   * Azure Resource Graph KQL query to be executed.\n   */\n  query?: string;\n  /**\n   * Specifies the format results should be returned as. Defaults to table.\n   */\n  resultFormat?: string;\n}\n\nexport interface AzureMonitorResource {\n  metricNamespace?: string;\n  region?: string;\n  resourceGroup?: string;\n  resourceName?: string;\n  subscription?: string;\n}\n\nexport interface AzureMetricDimension {\n  /**\n   * Name of Dimension to be filtered on.\n   */\n  dimension?: string;\n  /**\n   * @deprecated filter is deprecated in favour of filters to support multiselect.\n   */\n  filter?: string;\n  /**\n   * Values to match with the filter.\n   */\n  filters?: Array<string>;\n  /**\n   * String denoting the filter operation. Supports 'eq' - equals,'ne' - not equals, 'sw' - starts with. Note that some dimensions may not support all operators.\n   */\n  operator?: string;\n}\n\nexport const defaultAzureMetricDimension: Partial<AzureMetricDimension> = {\n  filters: [],\n};\n\nexport type GrafanaTemplateVariableQueryType = ('AppInsightsMetricNameQuery' | 'AppInsightsGroupByQuery' | 'SubscriptionsQuery' | 'ResourceGroupsQuery' | 'ResourceNamesQuery' | 'MetricNamespaceQuery' | 'MetricNamesQuery' | 'WorkspacesQuery' | 'UnknownQuery');\n\nexport interface BaseGrafanaTemplateVariableQuery {\n  rawQuery?: string;\n}\n\nexport interface UnknownQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'UnknownQuery';\n}\n\nexport interface AppInsightsMetricNameQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'AppInsightsMetricNameQuery';\n}\n\nexport interface AppInsightsGroupByQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'AppInsightsGroupByQuery';\n  metricName: string;\n}\n\nexport interface SubscriptionsQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'SubscriptionsQuery';\n}\n\nexport interface ResourceGroupsQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'ResourceGroupsQuery';\n  subscription: string;\n}\n\nexport interface ResourceNamesQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'ResourceNamesQuery';\n  metricNamespace: string;\n  resourceGroup: string;\n  subscription: string;\n}\n\nexport interface MetricNamespaceQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'MetricNamespaceQuery';\n  metricNamespace?: string;\n  resourceGroup: string;\n  resourceName?: string;\n  subscription: string;\n}\n\n/**\n * @deprecated Use MetricNamespaceQuery instead\n */\nexport interface MetricDefinitionsQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'MetricDefinitionsQuery';\n  metricNamespace?: string;\n  resourceGroup: string;\n  resourceName?: string;\n  subscription: string;\n}\n\nexport interface MetricNamesQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'MetricNamesQuery';\n  metricNamespace: string;\n  resourceGroup: string;\n  resourceName: string;\n  subscription: string;\n}\n\nexport interface WorkspacesQuery extends BaseGrafanaTemplateVariableQuery {\n  kind: 'WorkspacesQuery';\n  subscription: string;\n}\n\nexport type GrafanaTemplateVariableQuery = (AppInsightsMetricNameQuery | AppInsightsGroupByQuery | SubscriptionsQuery | ResourceGroupsQuery | ResourceNamesQuery | MetricNamespaceQuery | MetricDefinitionsQuery | MetricNamesQuery | WorkspacesQuery | UnknownQuery);\n\nexport interface AzureMonitorDataQuery {}\n","import { EntityGroup, Function, ScalarParameter, TabularParameter } from '@kusto/monaco-kusto';\n\nimport { AzureDataSourceJsonData, AzureDataSourceSecureJsonData } from '@grafana/azure-sdk';\nimport { DataSourceInstanceSettings, DataSourceSettings, PanelData, SelectableValue, TimeRange } from '@grafana/data';\n\nimport Datasource from '../datasource';\n\nimport { AzureLogAnalyticsMetadataTable } from './logAnalyticsMetadata';\nimport { AzureMonitorQuery, ResultFormat } from './query';\n\nexport type AzureMonitorDataSourceSettings = DataSourceSettings<\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorDataSourceSecureJsonData\n>;\nexport type AzureMonitorDataSourceInstanceSettings = DataSourceInstanceSettings<AzureMonitorDataSourceJsonData>;\n\nexport interface DatasourceValidationResult {\n  status: 'success' | 'error';\n  message: string;\n  title?: string;\n}\n\nexport interface AzureMonitorDataSourceJsonData extends AzureDataSourceJsonData {\n  // monitor\n  subscriptionId?: string;\n  basicLogsEnabled?: boolean;\n\n  // logs\n  /** @deprecated Azure Logs credentials */\n  azureLogAnalyticsSameAs?: boolean;\n  /** @deprecated Azure Logs credentials */\n  logAnalyticsTenantId?: string;\n  /** @deprecated Azure Logs credentials */\n  logAnalyticsClientId?: string;\n  /** @deprecated Azure Logs credentials */\n  logAnalyticsSubscriptionId?: string;\n  /** @deprecated Azure Logs credentials */\n  logAnalyticsDefaultWorkspace?: string;\n\n  // App Insights\n  appInsightsAppId?: string;\n\n  enableSecureSocksProxy?: boolean;\n}\n\nexport interface AzureMonitorDataSourceSecureJsonData extends AzureDataSourceSecureJsonData {\n  appInsightsApiKey?: string;\n}\n\n// Represents an errors that come back from frontend requests.\n// Not totally sure how accurate this type is.\nexport type AzureMonitorErrorish = Error | string | React.ReactElement;\n\n// Azure Monitor API Types\nexport interface AzureMonitorMetricsMetadataResponse {\n  value: AzureMonitorMetricMetadataItem[];\n}\n\nexport interface AzureMonitorMetricMetadataItem {\n  id: string;\n  resourceId: string;\n  primaryAggregationType: string;\n  supportedAggregationTypes: string[];\n  name: AzureMonitorLocalizedValue;\n  dimensions?: AzureMonitorLocalizedValue[];\n  metricAvailabilities?: AzureMonitorMetricAvailabilityMetadata[];\n}\n\nexport interface AzureMonitorMetricAvailabilityMetadata {\n  timeGrain: string;\n  retention: string;\n}\n\nexport interface AzureMonitorLocalizedValue {\n  value: string;\n  localizedValue: string;\n}\n\nexport interface AzureLogsVariable {\n  text: string;\n  value: string;\n}\n\nexport interface AzureMonitorOption<T = string> {\n  label: string;\n  value: T;\n  options?: AzureMonitorOption[];\n}\n\nexport type VariableOptionGroup = { label: string; options: AzureMonitorOption[] };\n\nexport interface AzureQueryEditorFieldProps {\n  data?: PanelData;\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  subscriptionId?: string;\n  variableOptionGroup: VariableOptionGroup;\n  schema?: EngineSchema;\n  range?: TimeRange;\n\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n}\n\n// To avoid a type issue we redeclare the EngineSchema type from @kusto/monaco-kusto\nexport interface EngineSchema {\n  clusterType: 'Engine';\n  cluster: {\n    connectionString: string;\n    databases: Database[];\n  };\n  database: Database | undefined;\n  globalScalarParameters?: ScalarParameter[];\n  globalTabularParameters?: TabularParameter[];\n}\n\nexport interface Database {\n  name: string;\n  tables: AzureLogAnalyticsMetadataTable[];\n  functions: Function[];\n  majorVersion: number;\n  minorVersion: number;\n  entityGroups: EntityGroup[];\n}\n\nexport interface FormatAsFieldProps extends AzureQueryEditorFieldProps {\n  inputId: string;\n  options: Array<SelectableValue<ResultFormat>>;\n  defaultValue: ResultFormat;\n  setFormatAs: (query: AzureMonitorQuery, formatAs: ResultFormat) => AzureMonitorQuery;\n  resultFormat?: ResultFormat;\n  onLoad: (\n    query: AzureMonitorQuery,\n    defaultValue: ResultFormat,\n    handleChange: (change: SelectableValue<ResultFormat>) => void\n  ) => void;\n}\n\nexport interface AzureResourceSummaryItem {\n  subscriptionName: string;\n  resourceGroupName: string | undefined;\n  resourceName: string | undefined;\n}\n\nexport interface RawAzureSubscriptionItem {\n  subscriptionName: string;\n  subscriptionId: string;\n  subscriptionURI: string;\n  count: number;\n}\n\nexport interface RawAzureResourceGroupItem {\n  resourceGroupURI: string;\n  resourceGroupName: string;\n  count: number;\n}\n\nexport interface RawAzureResourceItem {\n  id: string;\n  name: string;\n  subscriptionId: string;\n  resourceGroup: string;\n  type: string;\n  location: string;\n}\n\nexport interface AzureGraphResponse<T = unknown> {\n  data: T;\n  // skipToken is used for pagination, to get the next page\n  $skipToken?: string;\n}\n\n// https://docs.microsoft.com/en-us/rest/api/azureresourcegraph/resourcegraph(2021-03-01)/resources/resources#queryrequestoptions\nexport interface AzureResourceGraphOptions {\n  $skip: number;\n  $skipToken: string;\n  $top: number;\n  allowPartialScopes: boolean;\n  resultFormat: 'objectArray' | 'table';\n}\n\n// Azure Monitor Metrics query API data fetcher argument types.\n// The types prefixed by Legacy are applicable to pre-version 9 of Grafana\n// that do not have a resourceUri, instead the resourceUri is built up from\n// the subscription, resource group, metric definition (a.k.a. resource type)\n// and the resource name.\nexport type GetMetricNamespacesQuery = AzureGetMetricNamespacesQuery | LegacyAzureGetMetricNamespacesQuery;\nexport type GetMetricNamesQuery = AzureGetMetricNamesQuery | LegacyAzureGetMetricNamesQuery;\nexport type GetMetricMetadataQuery = AzureGetMetricMetadataQuery | LegacyAzureGetMetricMetadataQuery;\n\nexport interface AzureGetMetricNamespacesQuery {\n  resourceUri: string;\n}\nexport interface LegacyAzureGetMetricNamespacesQuery {\n  subscription: string;\n  resourceGroup: string;\n  metricNamespace?: string;\n  resourceName?: string;\n}\n\nexport interface AzureGetMetricNamesQuery {\n  resourceUri: string;\n  metricNamespace?: string;\n  customNamespace?: string;\n}\n\nexport interface LegacyAzureGetMetricNamesQuery {\n  subscription: string;\n  resourceGroup: string;\n  resourceName: string;\n  metricNamespace: string;\n  customNamespace?: string;\n}\n\nexport interface AzureGetMetricMetadataQuery {\n  resourceUri: string;\n  metricNamespace: string;\n  customNamespace?: string;\n  metricName: string;\n}\n\nexport interface LegacyAzureGetMetricMetadataQuery {\n  subscription: string;\n  resourceGroup: string;\n  resourceName: string;\n  metricNamespace: string;\n  customNamespace?: string;\n  metricName: string;\n}\n\nexport interface AzureGetResourceNamesQuery {\n  subscriptionId?: string;\n  resourceGroup?: string;\n  metricNamespace?: string;\n  region?: string;\n  uri?: string;\n}\n\nexport interface AzureMonitorLocations {\n  displayName: string;\n  name: string;\n  supportsLogs?: boolean;\n}\n\nexport interface AzureMonitorProvidersResponse {\n  namespace: string;\n  resourceTypes: ProviderResourceType[];\n}\n\nexport interface ProviderResourceType {\n  resourceType: string;\n  locations: string[];\n  apiVersions: string[];\n  capabilities: string;\n}\n\nexport interface AzureAPIResponse<T> {\n  value: T[];\n  count?: {\n    type: string;\n    value: number;\n  };\n  status?: number;\n  statusText?: string;\n}\n\nexport interface AzureLogAnalyticsTable {\n  name: string;\n  description: string;\n}\n\nexport interface MetadataResponse {\n  tables: AzureLogAnalyticsTable[];\n}\n\nexport interface Location {\n  id: string;\n  name: string;\n  displayName: string;\n  regionalDisplayName: string;\n  metadata: LocationMetadata;\n}\n\ninterface LocationMetadata {\n  regionType: string;\n  regionCategory: string;\n  geographyGroup: string;\n  longitude: string;\n  latitude: string;\n  physicalLocation: string;\n  pairedRegion: LocationPairedRegion[];\n}\n\ninterface LocationPairedRegion {\n  name: string;\n  id: string;\n}\n\nexport interface Subscription {\n  id: string;\n  authorizationSource: string;\n  subscriptionId: string;\n  tenantId: string;\n  displayName: string;\n  state: string;\n  subscriptionPolicies: {\n    locationPlacementId: string;\n    quotaId: string;\n    spendingLimit: string;\n  };\n}\n\nexport interface Workspace {\n  properties: {\n    customerId: string;\n    provisioningState: string;\n    sku: {\n      name: string;\n    };\n    retentionInDays: number;\n    publicNetworkAccessForQuery: string;\n    publicNetworkAccessForIngestion: string;\n  };\n  id: string;\n  name: string;\n  type: string;\n  location: string;\n  tags: Record<string, string>;\n}\n\nexport interface Resource {\n  changedTime: string;\n  createdTime: string;\n  extendedLocation: { name: string; type: string };\n  id: string;\n  identity: { principalId: string; tenantId: string; type: string; userAssignedIdentities: string[] };\n  kind: string;\n  location: string;\n  managedBy: string;\n  name: string;\n  plan: { name: string; product: string; promotionCode: string; publisher: string; version: string };\n  properties: Record<string, string>;\n  provisioningState: string;\n  sku: { capacity: number; family: string; model: string; name: string; size: string; tier: string };\n  tags: Record<string, string>;\n  type: string;\n}\n\nexport interface ResourceGroup {\n  id: string;\n  location: string;\n  managedBy: string;\n  name: string;\n  properties: { provisioningState: string };\n  tags: object;\n  type: string;\n}\n\nexport interface MetricNamespace {\n  classification: 'Custom' | 'Platform' | 'Qos';\n  id: string;\n  name: string;\n  properties: { metricNamespaceName: string };\n  type: string;\n}\n\nexport interface Metric {\n  displayDescription: string;\n  errorCode: string;\n  errorMessage: string;\n  id: string;\n  name: AzureMonitorLocalizedValue;\n  timeseries: Array<{ data: MetricValue[]; metadatavalues: MetricMetadataValue[] }>;\n  type: string;\n  unit: string;\n}\n\ninterface MetricValue {\n  average: number;\n  count: number;\n  maximum: number;\n  minimum: number;\n  timeStamp: string;\n  total: number;\n}\n\ninterface MetricMetadataValue {\n  name: AzureMonitorLocalizedValue;\n  value: string;\n}\n\nexport type Category = {\n  displayName: string;\n  id: string;\n  related: {\n    queries: string[];\n    tables: string[];\n  };\n};\n\nexport type CheatsheetQuery = {\n  body: string;\n  description: string;\n  displayName: string;\n  id: string;\n  properties: {\n    ExampleQuery: boolean;\n    QueryAttributes: {\n      isMultiResource: boolean;\n    };\n  };\n  related: {\n    categories: string[];\n    resourceTypes: string[];\n    tables: string[];\n  };\n  tags: {\n    Topic: string[];\n  };\n};\n\nexport type CheatsheetQueries = {\n  [key: string]: CheatsheetQuery[];\n};\n\nexport type DropdownCategories = {\n  [key: string]: boolean;\n};\n\nexport enum QueryEditorPropertyType {\n  Number = 'number',\n  String = 'string',\n  Boolean = 'boolean',\n  DateTime = 'datetime',\n  TimeSpan = 'timeSpan',\n  Function = 'function',\n  Interval = 'interval',\n}\n\nexport interface QueryEditorProperty {\n  type: QueryEditorPropertyType;\n  name: string;\n}\n\nexport type QueryEditorOperatorType = string | boolean | number | SelectableValue<string>;\nexport type QueryEditorOperatorValueType = QueryEditorOperatorType | QueryEditorOperatorType[];\n\nexport interface QueryEditorOperator<T = QueryEditorOperatorValueType> {\n  name: string;\n  value: T;\n  labelValue?: string;\n}\n\nexport interface QueryEditorOperatorDefinition {\n  value: string;\n  supportTypes: QueryEditorPropertyType[];\n  multipleValues: boolean;\n  booleanValues: boolean;\n  label?: string;\n  description?: string;\n}\n\nexport enum AggregateFunctions {\n  Sum = 'sum',\n  Avg = 'avg',\n  Count = 'count',\n  Dcount = 'dcount',\n  Max = 'max',\n  Min = 'min',\n  Percentile = 'percentile',\n}\n\nexport enum TablePlan {\n  Analytics = 'Analytics',\n  Basic = 'Basic',\n}\n\nexport interface GetLogAnalyticsTableSuccessResponse {\n  properties: {\n    totalRetentionInDays: number;\n    archiveRetentionInDays: number;\n    lastPlanModifiedDate?: string;\n    plan: TablePlan;\n    restoredLogs?: Record<string, string | undefined>;\n    retentionInDaysAsDefault: boolean;\n    totalRetentionInDaysAsDefault: boolean;\n    schema: {\n      tableSubType: string;\n      name: string;\n      tableType: string;\n      columns: Array<Record<string, string | undefined>>;\n      standardColumns: Array<Record<string, string | undefined>>;\n      solutions: string[];\n      isTroubleshootingAllowed: boolean;\n      description?: string;\n      displayName?: string;\n      labels?: string[];\n      source?: string;\n    };\n    resultStatistics: Record<string, string | number | undefined>;\n    provisioningState: string;\n    retentionInDays: number;\n    searchResults?: Record<string, string | number | undefined>;\n    systemData?: Record<string, string | number | undefined>;\n  };\n  id: string;\n  name: string;\n  type?: string;\n}\n\nexport interface GetLogAnalyticsTableErrorResponse {\n  error: {\n    target: string;\n    message: string;\n    code: string;\n  };\n}\n\nexport type GetLogAnalyticsTableResponse = GetLogAnalyticsTableSuccessResponse | GetLogAnalyticsTableErrorResponse;\n\nexport function instanceOfLogAnalyticsTableError(\n  response: GetLogAnalyticsTableSuccessResponse | GetLogAnalyticsTableErrorResponse\n): response is GetLogAnalyticsTableErrorResponse {\n  if (!response) {\n    return false;\n  }\n  return response.hasOwnProperty('error');\n}\n","import { isValidElement } from 'react';\n\nimport { AzureMonitorErrorish } from '../types';\n\nexport function messageFromElement(error: AzureMonitorErrorish): AzureMonitorErrorish | undefined {\n  if (isValidElement(error)) {\n    return error;\n  } else {\n    return messageFromError(error);\n  }\n}\n\nexport default function messageFromError(error: any): string | undefined {\n  if (!error || typeof error !== 'object') {\n    return undefined;\n  }\n\n  if (typeof error.message === 'string') {\n    return error.message;\n  }\n\n  if (typeof error.data?.error?.message === 'string') {\n    return error.data.error.message;\n  }\n\n  // Copied from the old Angular code - this might be checking for errors in places\n  // that the new code just doesnt use.\n  // As new error objects are discovered they should be added to the above code, rather\n  // than below\n  const maybeAMessage =\n    error.error?.data?.error?.innererror?.innererror?.message ||\n    error.error?.data?.error?.innererror?.message ||\n    error.error?.data?.error?.message ||\n    error.error?.data?.message ||\n    error.data?.message ||\n    error;\n\n  if (typeof maybeAMessage === 'string') {\n    return maybeAMessage;\n  } else if (maybeAMessage && maybeAMessage.toString) {\n    return maybeAMessage.toString();\n  }\n\n  return undefined;\n}\n","import { useState, useCallback, useMemo } from 'react';\n\nimport { AzureMonitorErrorish } from '../types';\n\nimport { messageFromElement } from './messageFromError';\n\ntype SourcedError = [string, AzureMonitorErrorish];\n\nexport default function useLastError() {\n  const [errors, setErrors] = useState<SourcedError[]>([]);\n\n  // Handles errors from any child components that request data to display their options\n  const addError = useCallback((errorSource: string, error: AzureMonitorErrorish | undefined) => {\n    setErrors((errors) => {\n      const errorsCopy = [...errors];\n      const index = errors.findIndex(([vSource]) => vSource === errorSource);\n\n      // If there's already an error, remove it. If we're setting a new error\n      // below, we'll move it to the front\n      if (index > -1) {\n        errorsCopy.splice(index, 1);\n      }\n\n      // And then add the new error to the top of the array. If error is defined, it was already\n      // removed above.\n      if (error) {\n        errorsCopy.unshift([errorSource, error]);\n      }\n\n      return errorsCopy;\n    });\n  }, []);\n\n  const errorMessage = useMemo(() => {\n    const recentError = errors[0];\n    return recentError && messageFromElement(recentError[1]);\n  }, [errors]);\n\n  return [errorMessage, addError] as const;\n}\n","import React__default from 'react';\nimport { Stack } from '@grafana/ui';\nimport '@grafana/data';\n\nconst EditorStack = ({ children, wrap: wrapItems = true, ...props }) => {\n  var _a, _b;\n  return /* @__PURE__ */ React__default.createElement(Stack, { wrap: wrapItems ? \"wrap\" : undefined, direction: (_a = props.direction) != null ? _a : \"row\", gap: (_b = props.gap) != null ? _b : 2, ...props }, children);\n};\n\nexport { EditorStack };\n//# sourceMappingURL=EditorStack.js.map\n","import React__default from 'react';\nimport { EditorStack } from './EditorStack.js';\n\nconst EditorRows = ({ children }) => {\n  return /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 0.5, direction: \"column\" }, children);\n};\n\nexport { EditorRows };\n//# sourceMappingURL=EditorRows.js.map\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { EditorStack } from './EditorStack.js';\n\nconst EditorRow = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 2 }, children));\n};\nconst getStyles = (theme) => {\n  return {\n    root: css({\n      padding: theme.spacing(1),\n      backgroundColor: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default\n    })\n  };\n};\n\nexport { EditorRow };\n//# sourceMappingURL=EditorRow.js.map\n","import React__default from 'react';\nimport { EditorStack } from './EditorStack.js';\n\nconst EditorFieldGroup = ({ children }) => {\n  return /* @__PURE__ */ React__default.createElement(EditorStack, { gap: 1 }, children);\n};\n\nexport { EditorFieldGroup };\n//# sourceMappingURL=EditorFieldGroup.js.map\n","import { useCallback } from 'react';\n\nimport { CodeEditor } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\n\nconst QueryField = ({ query, onQueryChange }: AzureQueryEditorFieldProps) => {\n  const onChange = useCallback(\n    (newQuery: string) => {\n      onQueryChange({\n        ...query,\n        azureResourceGraph: {\n          ...query.azureResourceGraph,\n          query: newQuery,\n        },\n      });\n    },\n    [onQueryChange, query]\n  );\n\n  return (\n    <CodeEditor\n      value={query.azureResourceGraph?.query ?? ''}\n      language=\"kusto\"\n      height={200}\n      width=\"100%\"\n      showMiniMap={false}\n      onBlur={onChange}\n      onSave={onChange}\n    />\n  );\n};\n\nexport default QueryField;\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2, ReactUtils, Tooltip, Icon, Space, Field } from '@grafana/ui';\n\nconst EditorField = (props) => {\n  var _a;\n  const { label, optional, tooltip, tooltipInteractive, children, width, ...fieldProps } = props;\n  const styles = useStyles2(getStyles, width);\n  const childInputId = (fieldProps == null ? undefined : fieldProps.htmlFor) || ((_a = ReactUtils) == null ? undefined : _a.getChildId(children));\n  const labelEl = /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement(\"label\", { className: styles.label, htmlFor: childInputId }, label, optional && /* @__PURE__ */ React__default.createElement(\"span\", { className: styles.optional }, \" - optional\"), tooltip && /* @__PURE__ */ React__default.createElement(Tooltip, { placement: \"top\", content: tooltip, theme: \"info\", interactive: tooltipInteractive }, /* @__PURE__ */ React__default.createElement(Icon, { tabIndex: 0, name: \"info-circle\", size: \"sm\", className: styles.icon }))), /* @__PURE__ */ React__default.createElement(Space, { v: 0.5 }));\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, /* @__PURE__ */ React__default.createElement(Field, { className: styles.field, label: labelEl, ...fieldProps }, children));\n};\nconst getStyles = (theme, width) => {\n  return {\n    root: css({\n      minWidth: theme.spacing(width != null ? width : 0)\n    }),\n    label: css({\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeightMedium\n    }),\n    optional: css({\n      fontStyle: \"italic\",\n      color: theme.colors.text.secondary\n    }),\n    field: css({\n      marginBottom: 0\n      // GrafanaUI/Field has a bottom margin which we must remove\n    }),\n    icon: css({\n      color: theme.colors.text.secondary,\n      marginLeft: theme.spacing(1),\n      \":hover\": {\n        color: theme.colors.text.primary\n      }\n    })\n  };\n};\n\nexport { EditorField };\n//# sourceMappingURL=EditorField.js.map\n","import { EditorField } from '@grafana/plugin-ui';\nimport { InlineField } from '@grafana/ui';\nimport { InlineFieldProps } from '@grafana/ui/internal';\n\ninterface Props extends InlineFieldProps {\n  label: string;\n  inlineField?: boolean;\n  labelWidth?: number;\n}\n\nconst DEFAULT_LABEL_WIDTH = 18;\n\nexport const Field = (props: Props) => {\n  const { labelWidth, inlineField, ...remainingProps } = props;\n\n  if (!inlineField) {\n    return <EditorField width={labelWidth || DEFAULT_LABEL_WIDTH} {...remainingProps} />;\n  } else {\n    return <InlineField labelWidth={labelWidth || DEFAULT_LABEL_WIDTH} {...remainingProps} />;\n  }\n};\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { FieldValidationMessage, MultiSelect } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorQuery, AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { findOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\ninterface SubscriptionFieldProps extends AzureQueryEditorFieldProps {\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  subscriptions: AzureMonitorOption[];\n}\n\nconst SubscriptionField = ({ query, subscriptions, variableOptionGroup, onQueryChange }: SubscriptionFieldProps) => {\n  const [error, setError] = useState<boolean>(false);\n  const [values, setValues] = useState<Array<SelectableValue<string>>>([]);\n  const options = useMemo(() => [...subscriptions, variableOptionGroup], [subscriptions, variableOptionGroup]);\n\n  useEffect(() => {\n    if (query.subscriptions && query.subscriptions.length > 0) {\n      setValues(findOptions([...subscriptions, ...variableOptionGroup.options], query.subscriptions));\n      setError(false);\n    } else {\n      setError(true);\n    }\n  }, [query.subscriptions, subscriptions, variableOptionGroup.options]);\n\n  const onChange = (change: Array<SelectableValue<string>>) => {\n    const containsSelectAll = change.filter((c) => c.value === 'Select all subscriptions');\n    if (!change || change.length === 0) {\n      setValues([]);\n      onQueryChange({\n        ...query,\n        subscriptions: [],\n      });\n      setError(true);\n    } else if (containsSelectAll.length > 0) {\n      const allSubs = subscriptions.map((c) => c.value ?? '').filter((c) => c !== 'Select all subscriptions');\n      onQueryChange({\n        ...query,\n        subscriptions: allSubs,\n      });\n    } else {\n      const newSubs = change.map((c) => c.value ?? '');\n      onQueryChange({\n        ...query,\n        subscriptions: newSubs,\n      });\n      setValues(findOptions([...subscriptions, ...variableOptionGroup.options], newSubs));\n      setError(false);\n    }\n  };\n\n  return (\n    <Field label=\"Subscriptions\" data-testid={selectors.components.queryEditor.argsQueryEditor.subscriptions.input}>\n      <>\n        <MultiSelect\n          isClearable\n          value={values}\n          inputId=\"azure-monitor-subscriptions-field\"\n          onChange={onChange}\n          options={options}\n          width={38}\n        />\n        {error ? <FieldValidationMessage>At least one subscription must be chosen.</FieldValidationMessage> : null}\n      </>\n    </Field>\n  );\n};\n\nexport default SubscriptionField;\n","import { intersection } from 'lodash';\nimport { useState, useMemo } from 'react';\n\nimport { EditorFieldGroup, EditorRow, EditorRows } from '@grafana/plugin-ui';\n\nimport Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorErrorish, AzureMonitorOption, AzureMonitorQuery } from '../../types';\n\nimport QueryField from './QueryField';\nimport SubscriptionField from './SubscriptionField';\n\ninterface ArgQueryEditorProps {\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  subscriptionId?: string;\n  onChange: (newQuery: AzureMonitorQuery) => void;\n  variableOptionGroup: { label: string; options: AzureMonitorOption[] };\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n}\n\nconst ERROR_SOURCE = 'arg-subscriptions';\n\nfunction selectSubscriptions(\n  fetchedSubscriptions: string[],\n  currentSubscriptions?: string[],\n  currentSubscription?: string\n) {\n  let querySubscriptions = currentSubscriptions || [];\n  if (querySubscriptions.length === 0 && currentSubscription) {\n    querySubscriptions = [currentSubscription];\n  }\n  if (querySubscriptions.length === 0 && fetchedSubscriptions.length) {\n    querySubscriptions = [fetchedSubscriptions[0]];\n  }\n\n  const templateVars = querySubscriptions.filter((sub) => sub.includes('$'));\n  const commonSubscriptions = intersection(querySubscriptions, fetchedSubscriptions).concat(templateVars);\n  if (fetchedSubscriptions.length && querySubscriptions.length > commonSubscriptions.length) {\n    // If not all of the query subscriptions are in the list of fetched subscriptions, then\n    // select only the ones present (or the first one if none is present)\n    querySubscriptions = commonSubscriptions.length > 0 ? commonSubscriptions : [fetchedSubscriptions[0]];\n  }\n  return querySubscriptions;\n}\n\nconst ArgQueryEditor = ({\n  query,\n  datasource,\n  subscriptionId,\n  variableOptionGroup,\n  onChange,\n  setError,\n}: ArgQueryEditorProps) => {\n  const [subscriptions, setSubscriptions] = useState<AzureMonitorOption[]>([]);\n  useMemo(() => {\n    datasource\n      .getSubscriptions()\n      .then((results) => {\n        const selectAllSubscriptionOption = [\n          { label: 'Select all subscriptions', value: 'Select all subscriptions', description: 'Select all' },\n        ];\n        const fetchedSubscriptions = results.map((v) => ({ label: v.text, value: v.value, description: v.value }));\n        setSubscriptions(selectAllSubscriptionOption.concat(fetchedSubscriptions));\n        setError(ERROR_SOURCE, undefined);\n\n        onChange({\n          ...query,\n          subscriptions: selectSubscriptions(\n            fetchedSubscriptions.map((v) => v.value),\n            query.subscriptions,\n            query.subscription\n          ),\n        });\n      })\n      .catch((err) => setError(ERROR_SOURCE, err));\n    // We are only interested in re-fetching subscriptions if the data source changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [datasource]);\n\n  return (\n    <span data-testid={selectors.components.queryEditor.argsQueryEditor.container.input}>\n      <EditorRows>\n        <EditorRow>\n          <EditorFieldGroup>\n            <SubscriptionField\n              subscriptions={subscriptions}\n              query={query}\n              datasource={datasource}\n              subscriptionId={subscriptionId}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n      </EditorRows>\n      <QueryField\n        query={query}\n        datasource={datasource}\n        subscriptionId={subscriptionId}\n        variableOptionGroup={variableOptionGroup}\n        onQueryChange={onChange}\n        setError={setError}\n      />\n    </span>\n  );\n};\n\nexport default ArgQueryEditor;\n","import { Button } from '@grafana/ui';\nimport React__default from 'react';\nimport { EditorStack } from './EditorStack.js';\n\nconst EditorList = React__default.forwardRef(function EditorList2({ items, renderItem, onChange }, ref) {\n  const onAddItem = () => {\n    const newItems = [...items, {}];\n    onChange(newItems);\n  };\n  const onChangeItem = (itemIndex, newItem) => {\n    const newItems = [...items];\n    newItems[itemIndex] = newItem;\n    onChange(newItems);\n  };\n  const onDeleteItem = (itemIndex) => {\n    const newItems = [...items];\n    newItems.splice(itemIndex, 1);\n    onChange(newItems);\n  };\n  return /* @__PURE__ */ React__default.createElement(EditorStack, null, items.map((item, index) => /* @__PURE__ */ React__default.createElement(\"div\", { key: index }, renderItem(\n    item,\n    (newItem) => onChangeItem(index, newItem),\n    () => onDeleteItem(index)\n  ))), /* @__PURE__ */ React__default.createElement(Button, { ref, onClick: onAddItem, variant: \"secondary\", size: \"md\", icon: \"plus\", \"aria-label\": \"Add\", type: \"button\" }));\n});\n\nexport { EditorList };\n//# sourceMappingURL=EditorList.js.map\n","import { cx, css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport React__default, { Children, isValidElement, cloneElement } from 'react';\n\nconst InputGroup = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  const modifiedChildren = Children.map(children, (child) => {\n    if (isValidElement(child) && child.props.invalid) {\n      return cloneElement(child, { className: cx(child.props.className, styles.invalidChild) });\n    }\n    return child;\n  });\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, modifiedChildren);\n};\nconst borderPriority = [\n  \"\",\n  // lowest priority\n  \"base\",\n  \"hovered\",\n  \"invalid\",\n  \"focused\"\n  // highest priority\n];\nconst getStyles = () => ({\n  root: css({\n    display: \"flex\",\n    // Style the direct children of the component\n    \"> *\": {\n      \"&:not(:first-child)\": {\n        // Negative margin hides the double-border on adjacent selects\n        marginLeft: -1\n      },\n      \"&:first-child\": {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      },\n      \"&:last-child\": {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      \"&:not(:first-child):not(:last-child)\": {\n        borderRadius: 0\n      },\n      //\n      position: \"relative\",\n      zIndex: borderPriority.indexOf(\"base\"),\n      // Adjacent borders are overlapping, so raise children up when hovering etc\n      // so all that child's borders are visible.\n      \"&:hover\": {\n        zIndex: borderPriority.indexOf(\"hovered\")\n      },\n      \"&:focus-within\": {\n        zIndex: borderPriority.indexOf(\"focused\")\n      }\n    }\n  }),\n  invalidChild: css({\n    zIndex: borderPriority.indexOf(\"invalid\")\n  })\n});\n\nexport { InputGroup };\n//# sourceMappingURL=InputGroup.js.map\n","import { cx, css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2, Button } from '@grafana/ui';\n\nconst AccessoryButton = ({ className, ...props }) => {\n  const styles = useStyles2(getButtonStyles);\n  return /* @__PURE__ */ React__default.createElement(Button, { ...props, className: cx(className, styles.button) });\n};\nconst getButtonStyles = (theme) => ({\n  button: css({\n    paddingLeft: theme.spacing(3 / 2),\n    paddingRight: theme.spacing(3 / 2)\n  })\n});\n\nexport { AccessoryButton };\n//# sourceMappingURL=AccessoryButton.js.map\n","import { escapeRegExp } from 'lodash';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorGroupByExpression,\n  BuilderQueryEditorOrderByExpression,\n  BuilderQueryEditorPropertyExpression,\n  BuilderQueryEditorPropertyType,\n  BuilderQueryEditorReduceExpression,\n  BuilderQueryEditorWhereExpression,\n  BuilderQueryExpression,\n} from '../../dataquery.gen';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nconst DYNAMIC_TYPE_ARRAY_DELIMITER = '[\"`indexer`\"]';\nexport const inputFieldSize = 20;\n\nexport const valueToDefinition = (name: string) => {\n  return {\n    value: name,\n    label: name.replace(new RegExp(escapeRegExp(DYNAMIC_TYPE_ARRAY_DELIMITER), 'g'), '[ ]'),\n  };\n};\n\nexport const DEFAULT_LOGS_BUILDER_QUERY: BuilderQueryExpression = {\n  columns: { columns: [], type: BuilderQueryEditorExpressionType.Property },\n  from: {\n    type: BuilderQueryEditorExpressionType.Property,\n    property: { type: BuilderQueryEditorPropertyType.String, name: '' },\n  },\n  groupBy: { expressions: [], type: BuilderQueryEditorExpressionType.Group_by },\n  reduce: { expressions: [], type: BuilderQueryEditorExpressionType.Reduce },\n  where: { expressions: [], type: BuilderQueryEditorExpressionType.And },\n  limit: 1000,\n};\n\nexport const OPERATORS_BY_TYPE: Record<string, Array<SelectableValue<string>>> = {\n  string: [\n    { label: '==', value: '==' },\n    { label: '!=', value: '!=' },\n    { label: 'contains', value: 'contains' },\n    { label: '!contains', value: '!contains' },\n    { label: 'startswith', value: 'startswith' },\n    { label: 'endswith', value: 'endswith' },\n  ],\n  int: [\n    { label: '==', value: '==' },\n    { label: '!=', value: '!=' },\n    { label: '>', value: '>' },\n    { label: '<', value: '<' },\n    { label: '>=', value: '>=' },\n    { label: '<=', value: '<=' },\n  ],\n  datetime: [\n    { label: 'before', value: '<' },\n    { label: 'after', value: '>' },\n    { label: 'between', value: 'between' },\n  ],\n  bool: [\n    { label: '==', value: '==' },\n    { label: '!=', value: '!=' },\n  ],\n};\n\nexport const toOperatorOptions = (type: string): Array<SelectableValue<string>> => {\n  return OPERATORS_BY_TYPE[type] || OPERATORS_BY_TYPE.string;\n};\n\nexport const removeExtraQuotes = (value: string): string => {\n  let strValue = String(value).trim();\n  if ((strValue.startsWith(\"'\") && strValue.endsWith(\"'\")) || (strValue.startsWith('\"') && strValue.endsWith('\"'))) {\n    return strValue.slice(1, -1);\n  }\n  return strValue;\n};\n\nexport interface BuildAndUpdateOptions {\n  query: AzureMonitorQuery;\n  onQueryUpdate: (newQuery: AzureMonitorQuery) => void;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  limit?: number;\n  reduce?: BuilderQueryEditorReduceExpression[];\n  where?: BuilderQueryEditorWhereExpression[];\n  fuzzySearch?: BuilderQueryEditorWhereExpression[];\n  groupBy?: BuilderQueryEditorGroupByExpression[];\n  orderBy?: BuilderQueryEditorOrderByExpression[];\n  columns?: string[];\n  from?: BuilderQueryEditorPropertyExpression;\n  basicLogsQuery?: boolean;\n}\n\nexport const aggregateOptions = [\n  { label: 'sum', value: 'sum' },\n  { label: 'avg', value: 'avg' },\n  { label: 'percentile', value: 'percentile' },\n  { label: 'count', value: 'count' },\n  { label: 'min', value: 'min' },\n  { label: 'max', value: 'max' },\n  { label: 'dcount', value: 'dcount' },\n  { label: 'stdev', value: 'stdev' },\n];\n","import React, { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InputGroup, AccessoryButton } from '@grafana/plugin-ui';\nimport { Select, Label, Input } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorPropertyType,\n  BuilderQueryEditorReduceExpression,\n} from '../../dataquery.gen';\n\nimport { aggregateOptions, inputFieldSize } from './utils';\n\ninterface AggregateItemProps {\n  aggregate: BuilderQueryEditorReduceExpression;\n  columns: Array<SelectableValue<string>>;\n  onChange: (item: BuilderQueryEditorReduceExpression) => void;\n  onDelete: () => void;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nconst AggregateItem: React.FC<AggregateItemProps> = ({\n  aggregate,\n  onChange,\n  onDelete,\n  columns,\n  templateVariableOptions,\n}) => {\n  const isPercentile = aggregate.reduce?.name === 'percentile';\n  const isCountAggregate = aggregate.reduce?.name?.includes('count');\n\n  const [percentileValue, setPercentileValue] = useState(aggregate.parameters?.[0]?.value || '');\n  const [columnValue, setColumnValue] = useState(\n    isPercentile ? aggregate.parameters?.[1]?.value || '' : aggregate.property?.name || ''\n  );\n\n  const safeTemplateVariables = Array.isArray(templateVariableOptions)\n    ? templateVariableOptions\n    : [templateVariableOptions];\n\n  const selectableOptions = columns.concat(safeTemplateVariables);\n\n  const buildPercentileParams = (percentile: string, column: string) => [\n    {\n      type: BuilderQueryEditorExpressionType.Function_parameter,\n      fieldType: BuilderQueryEditorPropertyType.Number,\n      value: percentile,\n    },\n    {\n      type: BuilderQueryEditorExpressionType.Function_parameter,\n      fieldType: BuilderQueryEditorPropertyType.String,\n      value: column,\n    },\n  ];\n\n  const updateAggregate = (updates: Partial<BuilderQueryEditorReduceExpression>) => {\n    const base: BuilderQueryEditorReduceExpression = {\n      ...aggregate,\n      ...updates,\n    };\n\n    onChange(base);\n  };\n\n  const handleAggregateChange = (funcName?: string) => {\n    updateAggregate({\n      reduce: { name: funcName || '', type: BuilderQueryEditorPropertyType.Function },\n    });\n  };\n\n  const handlePercentileChange = (value?: string) => {\n    const newValue = value || '';\n    setPercentileValue(newValue);\n\n    const percentileParams = buildPercentileParams(newValue, columnValue);\n    updateAggregate({ parameters: percentileParams });\n  };\n\n  const handleColumnChange = (value?: string) => {\n    const newCol = value || '';\n    setColumnValue(newCol);\n\n    if (isPercentile) {\n      const percentileParams = buildPercentileParams(percentileValue, newCol);\n      updateAggregate({\n        parameters: percentileParams,\n        property: {\n          name: newCol,\n          type: BuilderQueryEditorPropertyType.String,\n        },\n      });\n    } else {\n      updateAggregate({\n        property: {\n          name: newCol,\n          type: BuilderQueryEditorPropertyType.String,\n        },\n      });\n    }\n  };\n\n  return (\n    <InputGroup>\n      <Select\n        aria-label=\"aggregate function\"\n        width={inputFieldSize}\n        value={aggregate.reduce?.name ? { label: aggregate.reduce.name, value: aggregate.reduce.name } : null}\n        options={aggregateOptions}\n        onChange={(e) => handleAggregateChange(e.value)}\n      />\n\n      {isPercentile ? (\n        <>\n          <Input\n            type=\"number\"\n            min={0}\n            max={100}\n            step={1}\n            value={percentileValue ?? ''}\n            width={inputFieldSize}\n            onChange={(e) => {\n              const val = Number(e.currentTarget.value);\n              if (!isNaN(val) && val >= 0 && val <= 100) {\n                handlePercentileChange(val.toString());\n              }\n            }}\n          />\n          <Label style={{ margin: '9px 9px 0 9px' }}>OF</Label>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {!isCountAggregate ? (\n        <Select\n          aria-label=\"column\"\n          width={inputFieldSize}\n          value={columnValue ? { label: columnValue, value: columnValue } : null}\n          options={selectableOptions}\n          onChange={(e) => handleColumnChange(e.value)}\n        />\n      ) : (\n        <></>\n      )}\n\n      <AccessoryButton aria-label=\"remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} />\n    </InputGroup>\n  );\n};\n\nexport default AggregateItem;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorList, EditorRow } from '@grafana/plugin-ui';\n\nimport { BuilderQueryEditorReduceExpression } from '../../dataquery.gen';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nimport AggregateItem from './AggregateItem';\nimport { BuildAndUpdateOptions } from './utils';\n\ninterface AggregateSectionProps {\n  query: AzureMonitorQuery;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  templateVariableOptions: SelectableValue<string>;\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n}\nexport const AggregateSection: React.FC<AggregateSectionProps> = ({\n  query,\n  allColumns,\n  buildAndUpdateQuery,\n  templateVariableOptions,\n}) => {\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n  const [aggregates, setAggregates] = useState<BuilderQueryEditorReduceExpression[]>(\n    builderQuery?.reduce?.expressions || []\n  );\n  const prevTable = useRef<string | null>(builderQuery?.from?.property.name || null);\n  const hasLoadedAggregates = useRef(false);\n\n  useEffect(() => {\n    const currentTable = builderQuery?.from?.property.name || null;\n\n    if (prevTable.current !== currentTable || builderQuery?.reduce?.expressions.length === 0) {\n      setAggregates([]);\n      hasLoadedAggregates.current = false;\n      prevTable.current = currentTable;\n    }\n  }, [builderQuery]);\n\n  const availableColumns: Array<SelectableValue<string>> = builderQuery?.columns?.columns?.length\n    ? builderQuery.columns.columns.map((col) => ({ label: col, value: col }))\n    : allColumns.map((col) => ({ label: col.name, value: col.name }));\n\n  const onChange = (newItems: Array<Partial<BuilderQueryEditorReduceExpression>>) => {\n    setAggregates(newItems);\n\n    buildAndUpdateQuery({\n      reduce: newItems,\n    });\n  };\n\n  const onDeleteAggregate = (aggregateToDelete: BuilderQueryEditorReduceExpression) => {\n    setAggregates((prevAggregates) => {\n      const updatedAggregates = prevAggregates.filter(\n        (agg) =>\n          agg.property?.name !== aggregateToDelete.property?.name || agg.reduce?.name !== aggregateToDelete.reduce?.name\n      );\n\n      buildAndUpdateQuery({\n        reduce: updatedAggregates.length === 0 ? [] : updatedAggregates,\n      });\n\n      return updatedAggregates;\n    });\n  };\n\n  return (\n    <div data-testid=\"aggregate-section\">\n      <EditorRow>\n        <EditorFieldGroup>\n          <EditorField\n            label=\"Aggregate\"\n            optional={true}\n            tooltip={`Perform calculations across rows of data, such as count, sum, average, minimum, maximum, standard deviation or percentiles.`}\n          >\n            <EditorList\n              items={aggregates}\n              onChange={onChange}\n              renderItem={makeRenderAggregate(availableColumns, onDeleteAggregate, templateVariableOptions)}\n            />\n          </EditorField>\n        </EditorFieldGroup>\n      </EditorRow>\n    </div>\n  );\n};\n\nfunction makeRenderAggregate(\n  availableColumns: Array<SelectableValue<string>>,\n  onDeleteAggregate: (aggregate: BuilderQueryEditorReduceExpression) => void,\n  templateVariableOptions: SelectableValue<string>\n) {\n  return function renderAggregate(\n    item: BuilderQueryEditorReduceExpression,\n    onChange: (item: BuilderQueryEditorReduceExpression) => void\n  ) {\n    return (\n      <AggregateItem\n        aggregate={item}\n        onChange={onChange}\n        onDelete={() => onDeleteAggregate(item)}\n        columns={availableColumns}\n        templateVariableOptions={templateVariableOptions}\n      />\n    );\n  };\n}\n","import {\n  BuilderQueryEditorWhereExpression,\n  BuilderQueryEditorWhereExpressionArray,\n  BuilderQueryEditorWhereExpressionItems,\n  BuilderQueryExpression,\n} from '../../dataquery.gen';\n\nconst isNestedExpression = (\n  exp: BuilderQueryEditorWhereExpression | BuilderQueryEditorWhereExpressionItems\n): exp is BuilderQueryEditorWhereExpressionItems =>\n  'operator' in exp &&\n  'property' in exp &&\n  typeof exp.operator?.name === 'string' &&\n  typeof exp.property?.name === 'string';\n\nconst buildCondition = (\n  exp: BuilderQueryEditorWhereExpression | BuilderQueryEditorWhereExpressionItems\n): string | undefined => {\n  if ('expressions' in exp && Array.isArray(exp.expressions)) {\n    const isGroupOfFilters = exp.expressions.every((e) => 'operator' in e && 'property' in e);\n\n    const nested = exp.expressions.map(buildCondition).filter((c): c is string => Boolean(c));\n\n    if (nested.length === 0) {\n      return;\n    }\n\n    const joiner = isGroupOfFilters ? ' or ' : ' and ';\n    const joined = nested.join(joiner);\n\n    return nested.length > 1 ? `(${joined})` : joined;\n  }\n\n  if (isNestedExpression(exp)) {\n    const { name: op, value } = exp.operator;\n    const { name: prop } = exp.property;\n    const escapedValue = String(value).replace(/'/g, \"''\");\n    return op === '$__timeFilter' ? `$__timeFilter(${prop})` : `${prop} ${op} '${escapedValue}'`;\n  }\n\n  return;\n};\n\nexport const appendWhere = (\n  phrases: string[],\n  timeFilter?: BuilderQueryEditorWhereExpressionArray,\n  fuzzySearch?: BuilderQueryEditorWhereExpressionArray,\n  where?: BuilderQueryEditorWhereExpressionArray\n): void => {\n  const groups = [timeFilter, fuzzySearch, where];\n\n  groups.forEach((group) => {\n    group?.expressions.forEach((exp) => {\n      const condition = buildCondition(exp);\n      if (condition) {\n        phrases.push(`where ${condition}`);\n      }\n    });\n  });\n};\n\nconst appendProject = (builderQuery: BuilderQueryExpression, phrases: string[]) => {\n  const selectedColumns = builderQuery.columns?.columns || [];\n  if (selectedColumns.length > 0) {\n    phrases.push(`project ${selectedColumns.join(', ')}`);\n  }\n};\n\nconst appendSummarize = (builderQuery: BuilderQueryExpression, phrases: string[]) => {\n  const summarizeAlreadyAdded = phrases.some((phrase) => phrase.startsWith('summarize'));\n  if (summarizeAlreadyAdded) {\n    return;\n  }\n\n  const reduceExprs = builderQuery.reduce?.expressions ?? [];\n  const groupBy = builderQuery.groupBy?.expressions?.map((exp) => exp.property?.name).filter(Boolean) ?? [];\n\n  const summarizeParts = reduceExprs\n    .map((expr) => {\n      if (!expr.reduce?.name) {\n        return;\n      }\n\n      const func = expr.reduce.name;\n\n      if (func === 'percentile') {\n        const percentileValue = expr.parameters?.[0]?.value;\n        const column = expr.parameters?.[1]?.value ?? expr.property?.name ?? '';\n        return column ? `percentile(${percentileValue}, ${column})` : null;\n      }\n\n      const column = expr.property?.name ?? '';\n      return func === 'count' ? 'count()' : column ? `${func}(${column})` : func;\n    })\n    .filter(Boolean);\n\n  if (summarizeParts.length === 0 && groupBy.length === 0) {\n    return;\n  }\n\n  const summarizeClause =\n    summarizeParts.length > 0\n      ? `summarize ${summarizeParts.join(', ')}${groupBy.length > 0 ? ` by ${groupBy.join(', ')}` : ''}`\n      : `summarize by ${groupBy.join(', ')}`;\n\n  phrases.push(summarizeClause);\n};\n\nconst appendOrderBy = (builderQuery: BuilderQueryExpression, phrases: string[]) => {\n  const orderBy = builderQuery.orderBy?.expressions || [];\n  if (!orderBy.length) {\n    return;\n  }\n\n  const clauses = orderBy.map((order) => `${order.property?.name} ${order.order}`).filter(Boolean);\n  if (clauses.length > 0) {\n    phrases.push(`order by ${clauses.join(', ')}`);\n  }\n};\n\nconst appendLimit = (builderQuery: BuilderQueryExpression, phrases: string[]) => {\n  if (builderQuery.limit && builderQuery.limit > 0) {\n    phrases.push(`limit ${builderQuery.limit}`);\n  }\n};\n\nconst toQuery = (builderQuery: BuilderQueryExpression): string => {\n  const { from, timeFilter, fuzzySearch, where } = builderQuery;\n  if (!from?.property?.name) {\n    return '';\n  }\n\n  const phrases: string[] = [];\n  phrases.push(from.property.name);\n\n  appendWhere(phrases, timeFilter, fuzzySearch, where);\n  appendProject(builderQuery, phrases);\n  appendSummarize(builderQuery, phrases);\n  appendOrderBy(builderQuery, phrases);\n  appendLimit(builderQuery, phrases);\n\n  return phrases.join('\\n| ');\n};\n\nexport const AzureMonitorKustoQueryBuilder = {\n  toQuery,\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Button, Combobox, ComboboxOption, Label, Select } from '@grafana/ui';\n\nimport { BuilderQueryEditorWhereExpressionItems } from '../../dataquery.gen';\n\nimport { inputFieldSize, toOperatorOptions, valueToDefinition } from './utils';\n\ninterface FilterItemProps {\n  filter: BuilderQueryEditorWhereExpressionItems;\n  filterIndex: number;\n  groupIndex: number;\n  usedColumns: string[];\n  selectableOptions: Array<SelectableValue<string>>;\n  onChange: (groupIndex: number, field: 'property' | 'operator' | 'value', value: string, filterIndex: number) => void;\n  onDelete: (groupIndex: number, filterIndex: number) => void;\n  getFilterValues: (\n    filter: BuilderQueryEditorWhereExpressionItems,\n    inputValue: string\n  ) => Promise<Array<ComboboxOption<string>>>;\n  showOr: boolean;\n}\n\nexport const FilterItem: React.FC<FilterItemProps> = ({\n  filter,\n  filterIndex,\n  groupIndex,\n  usedColumns,\n  selectableOptions,\n  onChange,\n  onDelete,\n  getFilterValues,\n  showOr,\n}) => {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <Select\n        aria-label=\"column\"\n        width={inputFieldSize}\n        value={valueToDefinition(filter.property.name)}\n        options={selectableOptions.filter((opt) => !usedColumns.includes(opt.value!))}\n        onChange={(e) => e.value && onChange(groupIndex, 'property', e.value, filterIndex)}\n      />\n      <Select\n        aria-label=\"operator\"\n        width={12}\n        value={{ label: filter.operator.name, value: filter.operator.name }}\n        options={toOperatorOptions('string')}\n        onChange={(e) => e.value && onChange(groupIndex, 'operator', e.value, filterIndex)}\n      />\n      <Combobox\n        aria-label=\"column value\"\n        value={\n          filter.operator.value\n            ? {\n                label: String(filter.operator.value),\n                value: String(filter.operator.value),\n              }\n            : null\n        }\n        options={(inputValue: string) => getFilterValues(filter, inputValue)}\n        onChange={(e) => e.value && onChange(groupIndex, 'value', String(e.value), filterIndex)}\n        width={inputFieldSize}\n        disabled={!filter.property?.name}\n      />\n      <Button variant=\"secondary\" icon=\"times\" onClick={() => onDelete(groupIndex, filterIndex)} />\n      {showOr && <Label style={{ padding: '9px 14px' }}>OR</Label>}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport { CoreApp, getDefaultTimeRange, SelectableValue, TimeRange } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorRow, InputGroup } from '@grafana/plugin-ui';\nimport { Button, ComboboxOption, Label, useStyles2 } from '@grafana/ui';\n\nimport {\n  AzureQueryType,\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorPropertyType,\n  BuilderQueryEditorWhereExpression,\n  BuilderQueryEditorWhereExpressionItems,\n} from '../../dataquery.gen';\nimport Datasource from '../../datasource';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nimport { FilterItem } from './FilterItem';\nimport { BuildAndUpdateOptions } from './utils';\n\ninterface FilterSectionProps {\n  query: AzureMonitorQuery;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n  templateVariableOptions: SelectableValue<string>;\n  datasource: Datasource;\n  timeRange?: TimeRange;\n}\n\nconst filterDynamicColumns = (columns: string[], allColumns: AzureLogAnalyticsMetadataColumn[]) => {\n  return columns.filter((col) =>\n    allColumns.some((completeCol) => completeCol.name === col && completeCol.type !== 'dynamic')\n  );\n};\n\nexport const FilterSection: React.FC<FilterSectionProps> = ({\n  buildAndUpdateQuery,\n  query,\n  allColumns,\n  templateVariableOptions,\n  datasource,\n  timeRange,\n}) => {\n  const styles = useStyles2(() => ({ filters: css({ marginBottom: '8px' }) }));\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n\n  const prevTable = useRef<string | null>(builderQuery?.from?.property.name || null);\n  const [filters, setFilters] = useState<BuilderQueryEditorWhereExpression[]>(\n    builderQuery?.where?.expressions?.map((group) => ({\n      ...group,\n      expressions: group.expressions ?? [],\n    })) || []\n  );\n  const hasLoadedFilters = useRef(false);\n\n  const variableOptions = Array.isArray(templateVariableOptions) ? templateVariableOptions : [templateVariableOptions];\n\n  const availableColumns: Array<SelectableValue<string>> = builderQuery?.columns?.columns?.length\n    ? filterDynamicColumns(builderQuery.columns.columns, allColumns).map((col) => ({ label: col, value: col }))\n    : allColumns.filter((col) => col.type !== 'dynamic').map((col) => ({ label: col.name, value: col.name }));\n\n  const selectableOptions = [...availableColumns, ...variableOptions];\n\n  const usedColumnsInOtherGroups = (currentGroupIndex: number): string[] => {\n    return filters\n      .flatMap((group, idx) => (idx !== currentGroupIndex ? group.expressions : []))\n      .map((exp) => exp.property.name)\n      .filter(Boolean);\n  };\n\n  useEffect(() => {\n    const currentTable = builderQuery?.from?.property.name || null;\n    if (prevTable.current !== currentTable || builderQuery?.where?.expressions.length === 0) {\n      setFilters([]);\n      hasLoadedFilters.current = false;\n      prevTable.current = currentTable;\n    }\n  }, [builderQuery]);\n\n  const updateFilters = (updated: BuilderQueryEditorWhereExpression[]) => {\n    setFilters(updated);\n    buildAndUpdateQuery({ where: updated });\n  };\n\n  const onAddOrFilters = (\n    groupIndex: number,\n    field: 'property' | 'operator' | 'value',\n    value: string,\n    filterIndex?: number\n  ) => {\n    const updated = [...filters];\n    const group = updated[groupIndex];\n    if (!group) {\n      return;\n    }\n\n    let filter: BuilderQueryEditorWhereExpressionItems =\n      filterIndex !== undefined\n        ? { ...group.expressions[filterIndex] }\n        : {\n            type: BuilderQueryEditorExpressionType.Operator,\n            property: { name: '', type: BuilderQueryEditorPropertyType.String },\n            operator: { name: '==', value: '' },\n          };\n\n    if (field === 'property') {\n      filter.property.name = value;\n      filter.operator.value = '';\n    } else if (field === 'operator') {\n      filter.operator.name = value;\n    } else if (field === 'value') {\n      filter.operator.value = value;\n    }\n\n    const isValid = filter.property.name && filter.operator.name && filter.operator.value !== '';\n\n    if (filterIndex !== undefined) {\n      group.expressions[filterIndex] = filter;\n    } else {\n      group.expressions.push(filter);\n    }\n\n    updated[groupIndex] = group;\n    setFilters(updated);\n    if (isValid) {\n      updateFilters(updated);\n    }\n  };\n\n  const onAddAndFilters = () => {\n    const updated = [\n      ...filters,\n      {\n        type: BuilderQueryEditorExpressionType.Or,\n        expressions: [\n          {\n            type: BuilderQueryEditorExpressionType.Operator,\n            property: { name: '', type: BuilderQueryEditorPropertyType.String },\n            operator: { name: '==', value: '' },\n          },\n        ],\n      },\n    ];\n    updateFilters(updated);\n  };\n\n  const onDeleteFilter = (groupIndex: number, filterIndex: number) => {\n    const updated = [...filters];\n    updated[groupIndex].expressions.splice(filterIndex, 1);\n    if (updated[groupIndex].expressions.length === 0) {\n      updated.splice(groupIndex, 1);\n    }\n    updateFilters(updated);\n  };\n\n  const getFilterValues = async (filter: BuilderQueryEditorWhereExpressionItems) => {\n    const from = timeRange?.from?.toISOString();\n    const to = timeRange?.to?.toISOString();\n    const timeColumn = query.azureLogAnalytics?.timeColumn || 'TimeGenerated';\n\n    const kustoQuery = `\n    ${query.azureLogAnalytics?.builderQuery?.from?.property.name}\n    | where ${timeColumn} >= datetime(${from}) and ${timeColumn} <= datetime(${to})\n    | distinct ${filter.property.name}\n    | limit 1000\n  `;\n\n    const results = await lastValueFrom(\n      datasource.azureLogAnalyticsDatasource.query({\n        requestId: 'azure-logs-builder-filter-values',\n        interval: '',\n        intervalMs: 0,\n        scopedVars: {},\n        timezone: '',\n        app: CoreApp.Unknown,\n        startTime: 0,\n        range: timeRange || getDefaultTimeRange(),\n        targets: [\n          {\n            refId: 'A',\n            queryType: AzureQueryType.LogAnalytics,\n            azureLogAnalytics: {\n              query: kustoQuery,\n              resources: query.azureLogAnalytics?.resources ?? [],\n            },\n          },\n        ],\n      })\n    );\n\n    if (results.state === 'Done') {\n      const values = results.data?.[0]?.fields?.[0]?.values ?? [];\n\n      return values.toArray().map(\n        (v: unknown): ComboboxOption<string> => ({\n          label: String(v),\n          value: String(v),\n        })\n      );\n    }\n\n    return [];\n  };\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField label=\"Filters\" optional tooltip=\"Narrow results by applying conditions to specific columns.\">\n          <div className={styles.filters}>\n            {filters.length === 0 || filters.every((g) => g.expressions.length === 0) ? (\n              <InputGroup>\n                <Button variant=\"secondary\" onClick={onAddAndFilters} icon=\"plus\" />\n              </InputGroup>\n            ) : (\n              <>\n                {filters.map((group, groupIndex) => (\n                  <div key={groupIndex}>\n                    {groupIndex > 0 && filters[groupIndex - 1]?.expressions.length > 0 && (\n                      <Label style={{ padding: '9px 14px' }}>AND</Label>\n                    )}\n                    <InputGroup>\n                      <>\n                        {group.expressions.map((filter, filterIndex) => (\n                          <FilterItem\n                            key={`${groupIndex}-${filterIndex}`}\n                            filter={filter}\n                            filterIndex={filterIndex}\n                            groupIndex={groupIndex}\n                            usedColumns={usedColumnsInOtherGroups(groupIndex)}\n                            selectableOptions={selectableOptions}\n                            onChange={onAddOrFilters}\n                            onDelete={onDeleteFilter}\n                            getFilterValues={getFilterValues}\n                            showOr={filterIndex < group.expressions.length - 1}\n                          />\n                        ))}\n                      </>\n                      <Button\n                        variant=\"secondary\"\n                        style={{ marginLeft: '15px' }}\n                        onClick={() => onAddOrFilters(groupIndex, 'property', '')}\n                        icon=\"plus\"\n                      />\n                    </InputGroup>\n                  </div>\n                ))}\n                {filters.some((g) => g.expressions.length > 0) && (\n                  <Button variant=\"secondary\" onClick={onAddAndFilters} style={{ marginTop: '8px' }}>\n                    Add group\n                  </Button>\n                )}\n              </>\n            )}\n          </div>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorRow, EditorFieldGroup, EditorField, InputGroup } from '@grafana/plugin-ui';\nimport { Button, Input, Select } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorWhereExpression,\n  BuilderQueryEditorPropertyType,\n} from '../../dataquery.gen';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nimport { BuildAndUpdateOptions, removeExtraQuotes } from './utils';\n\ninterface FuzzySearchProps {\n  query: AzureMonitorQuery;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nexport const FuzzySearch: React.FC<FuzzySearchProps> = ({\n  buildAndUpdateQuery,\n  query,\n  allColumns,\n  templateVariableOptions,\n}) => {\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n  const prevTable = useRef<string | null>(builderQuery?.from?.property.name || null);\n\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedColumn, setSelectedColumn] = useState<string>('');\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const hasLoadedFuzzySearch = useRef(false);\n\n  useEffect(() => {\n    const currentTable = builderQuery?.from?.property.name || null;\n\n    if (prevTable.current !== currentTable) {\n      setSearchTerm('');\n      setSelectedColumn('');\n      setIsOpen(false);\n      hasLoadedFuzzySearch.current = false;\n      prevTable.current = currentTable;\n    }\n\n    if (!hasLoadedFuzzySearch.current && builderQuery?.fuzzySearch?.expressions?.length) {\n      const fuzzy = builderQuery.fuzzySearch.expressions[0];\n      setSearchTerm(removeExtraQuotes(String(fuzzy.expressions[0].operator?.value ?? '')));\n      setSelectedColumn(fuzzy.expressions[0].property?.name ?? '*');\n      setIsOpen(true);\n      hasLoadedFuzzySearch.current = true;\n    }\n  }, [builderQuery]);\n\n  const columnOptions: Array<SelectableValue<string>> = allColumns.map((col) => ({\n    label: col.name,\n    value: col.name,\n  }));\n\n  const safeTemplateVariables: Array<SelectableValue<string>> = Array.isArray(templateVariableOptions)\n    ? templateVariableOptions\n    : [templateVariableOptions];\n\n  const defaultColumn: SelectableValue<string> = { label: 'All Columns *', value: '*' };\n  const selectableOptions = [defaultColumn, ...columnOptions, ...safeTemplateVariables];\n\n  const updateFuzzySearch = (column: string, term: string) => {\n    setSearchTerm(term);\n    setSelectedColumn(column);\n\n    const fuzzyExpression: BuilderQueryEditorWhereExpression = {\n      type: BuilderQueryEditorExpressionType.Operator,\n      expressions: [\n        {\n          type: BuilderQueryEditorExpressionType.Property,\n          operator: { name: 'has', value: term },\n          property: { name: column || '*', type: BuilderQueryEditorPropertyType.String },\n        },\n      ],\n    };\n\n    buildAndUpdateQuery({\n      fuzzySearch: term ? [fuzzyExpression] : [],\n    });\n  };\n\n  const onDeleteFuzzySearch = () => {\n    setSearchTerm('');\n    setSelectedColumn('');\n    setIsOpen(false);\n\n    buildAndUpdateQuery({\n      fuzzySearch: [],\n    });\n  };\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField\n          label=\"Fuzzy Search\"\n          optional={true}\n          tooltip={`Find approximate text matches with tolerance for spelling variations. By default, fuzzy search scans all\n              columns (*) in the entire table, not just specific fields.`}\n        >\n          <InputGroup>\n            {isOpen ? (\n              <>\n                <Input\n                  className=\"width-10\"\n                  type=\"text\"\n                  placeholder=\"Enter search term\"\n                  value={searchTerm}\n                  onChange={(e) => updateFuzzySearch(selectedColumn, e.currentTarget.value)}\n                />\n                <Select\n                  aria-label=\"Select Column\"\n                  options={selectableOptions}\n                  value={{ label: selectedColumn || '*', value: selectedColumn || '*' }}\n                  onChange={(e: SelectableValue<string>) => updateFuzzySearch(e.value ?? '*', searchTerm)}\n                  width=\"auto\"\n                />\n                <Button variant=\"secondary\" icon=\"times\" onClick={onDeleteFuzzySearch} />\n              </>\n            ) : (\n              <Button variant=\"secondary\" onClick={() => setIsOpen(true)} icon=\"plus\" />\n            )}\n          </InputGroup>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { AccessoryButton, InputGroup } from '@grafana/plugin-ui';\nimport { Select } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorGroupByExpression,\n  BuilderQueryEditorPropertyType,\n  BuilderQueryEditorExpressionType,\n} from '../../dataquery.gen';\n\nimport { inputFieldSize } from './utils';\n\ninterface GroupByItemProps {\n  groupBy: BuilderQueryEditorGroupByExpression;\n  columns: Array<SelectableValue<string>>;\n  onChange: (item: BuilderQueryEditorGroupByExpression) => void;\n  onDelete: () => void;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nexport const GroupByItem: React.FC<GroupByItemProps> = ({\n  groupBy,\n  onChange,\n  onDelete,\n  columns,\n  templateVariableOptions,\n}) => {\n  const columnOptions: Array<SelectableValue<string>> =\n    columns.length > 0\n      ? columns.map((c) => ({ label: c.label, value: c.value }))\n      : [{ label: 'No columns available', value: '' }];\n\n  const selectableOptions: Array<SelectableValue<string>> = [\n    ...columnOptions,\n    ...(templateVariableOptions\n      ? Array.isArray(templateVariableOptions)\n        ? templateVariableOptions\n        : [templateVariableOptions]\n      : []),\n  ];\n\n  const handleChange = (selectedValue: SelectableValue<string>) => {\n    if (!selectedValue.value) {\n      return;\n    }\n\n    const isTemplateVariable = selectedValue.value.startsWith('$');\n    const selectedColumn = columns.find((c) => c.value === selectedValue.value);\n\n    onChange({\n      ...groupBy,\n      property: {\n        name: selectedValue.value,\n        type: isTemplateVariable\n          ? BuilderQueryEditorPropertyType.String\n          : selectedColumn?.type || BuilderQueryEditorPropertyType.String,\n      },\n      interval: groupBy.interval,\n      type: BuilderQueryEditorExpressionType.Group_by,\n    });\n  };\n\n  return (\n    <InputGroup>\n      <Select\n        aria-label=\"column\"\n        width={inputFieldSize}\n        value={groupBy.property?.name ? { label: groupBy.property.name, value: groupBy.property.name } : null}\n        options={selectableOptions}\n        allowCustomValue\n        onChange={handleChange}\n      />\n      <AccessoryButton aria-label=\"remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} />\n    </InputGroup>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorList, EditorRow, InputGroup } from '@grafana/plugin-ui';\nimport { Button } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorGroupByExpression,\n  BuilderQueryEditorPropertyType,\n} from '../../dataquery.gen';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nimport { GroupByItem } from './GroupByItem';\nimport { BuildAndUpdateOptions } from './utils';\n\ninterface GroupBySectionProps {\n  query: AzureMonitorQuery;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n  templateVariableOptions: SelectableValue<string>;\n}\n\nexport const GroupBySection: React.FC<GroupBySectionProps> = ({\n  query,\n  buildAndUpdateQuery,\n  allColumns,\n  templateVariableOptions,\n}) => {\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n  const prevTable = useRef<string | null>(builderQuery?.from?.property.name || null);\n  const [groupBys, setGroupBys] = useState<BuilderQueryEditorGroupByExpression[]>(\n    builderQuery?.groupBy?.expressions || []\n  );\n\n  const hasLoadedGroupBy = useRef(false);\n\n  useEffect(() => {\n    const currentTable = builderQuery?.from?.property.name || null;\n\n    if (prevTable.current !== currentTable || builderQuery?.groupBy?.expressions.length === 0) {\n      setGroupBys([]);\n      hasLoadedGroupBy.current = false;\n      prevTable.current = currentTable;\n    }\n  }, [builderQuery]);\n\n  const availableColumns: Array<SelectableValue<string>> = [];\n  const columns = builderQuery?.columns?.columns ?? [];\n\n  if (columns.length > 0) {\n    availableColumns.push(\n      ...columns.map((col) => ({\n        label: col,\n        value: col,\n      }))\n    );\n  } else {\n    availableColumns.push(\n      ...allColumns.map((col) => ({\n        label: col.name,\n        value: col.name,\n      }))\n    );\n  }\n\n  const handleGroupByChange = (newItems: Array<Partial<BuilderQueryEditorGroupByExpression>>) => {\n    setGroupBys(newItems);\n\n    buildAndUpdateQuery({\n      groupBy: newItems,\n    });\n  };\n\n  const onDeleteGroupBy = (propertyName: string) => {\n    setGroupBys((prevGroupBys) => {\n      const updatedGroupBys = prevGroupBys.filter((gb) => gb.property?.name !== propertyName);\n\n      buildAndUpdateQuery({\n        groupBy: updatedGroupBys,\n      });\n\n      return updatedGroupBys;\n    });\n  };\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField\n          label=\"Group by\"\n          optional={true}\n          tooltip={`Organize results into categories based on specified columns. Group by can be used independently to list\n              unique values in selected columns, or combined with aggregate functions to produce summary statistics for\n              each group. When used alone, it returns distinct combinations of the specified columns.`}\n        >\n          <InputGroup>\n            {groupBys.length > 0 ? (\n              <EditorList\n                items={groupBys}\n                onChange={handleGroupByChange}\n                renderItem={makeRenderGroupBy(availableColumns, onDeleteGroupBy, templateVariableOptions)}\n              />\n            ) : (\n              <Button\n                variant=\"secondary\"\n                icon=\"plus\"\n                onClick={() =>\n                  handleGroupByChange([\n                    {\n                      type: BuilderQueryEditorExpressionType.Group_by,\n                      property: { type: BuilderQueryEditorPropertyType.String, name: '' },\n                    },\n                  ])\n                }\n              />\n            )}\n          </InputGroup>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n\nconst makeRenderGroupBy = (\n  columns: Array<SelectableValue<string>>,\n  onDeleteGroupBy: (propertyName: string) => void,\n  templateVariableOptions: SelectableValue<string>\n) => {\n  return (\n    item: BuilderQueryEditorGroupByExpression,\n    onChangeItem: (updatedItem: BuilderQueryEditorGroupByExpression) => void,\n    onDeleteItem: () => void\n  ) => (\n    <GroupByItem\n      groupBy={item}\n      onChange={(updatedItem) => {\n        onChangeItem(updatedItem);\n      }}\n      onDelete={() => {\n        if (item.property?.name) {\n          onDeleteGroupBy(item.property.name);\n        }\n        onDeleteItem();\n      }}\n      columns={columns}\n      templateVariableOptions={templateVariableOptions}\n    />\n  );\n};\n","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./prism-tomorrow.min.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./prism-tomorrow.min.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { css } from '@emotion/css';\nimport Prism from 'prismjs';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorRow } from '@grafana/plugin-ui';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport 'prismjs/components/prism-kusto';\nimport 'prismjs/themes/prism-tomorrow.min.css';\n\ninterface KQLPreviewProps {\n  query: string;\n  hidden: boolean;\n  setHidden: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst KQLPreview: React.FC<KQLPreviewProps> = ({ query, hidden, setHidden }) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [query]);\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField label=\"Query Preview\">\n          <>\n            <Button hidden={!hidden} variant=\"secondary\" onClick={() => setHidden(false)} size=\"sm\">\n              show\n            </Button>\n            <div className={styles.codeBlock} hidden={hidden}>\n              <pre className={styles.code}>\n                <code className=\"language-kusto\">{query}</code>\n              </pre>\n            </div>\n            <Button hidden={hidden} variant=\"secondary\" onClick={() => setHidden(true)} size=\"sm\">\n              hide\n            </Button>\n          </>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    codeBlock: css({\n      width: '100%',\n      display: 'table',\n      tableLayout: 'fixed',\n    }),\n    code: css({\n      marginBottom: '4px',\n    }),\n  };\n};\n\nexport default KQLPreview;\n","import { useState } from 'react';\n\nimport { EditorRow, EditorFieldGroup, EditorField } from '@grafana/plugin-ui';\nimport { Input } from '@grafana/ui';\n\nimport { BuildAndUpdateOptions } from './utils';\n\ninterface LimitSectionProps {\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n}\n\nexport const LimitSection: React.FC<LimitSectionProps> = (props) => {\n  const { buildAndUpdateQuery } = props;\n  const [limit, setLimit] = useState<number>(1000);\n\n  const handleQueryLimitUpdate = (newLimit: number) => {\n    buildAndUpdateQuery({\n      limit: newLimit,\n    });\n  };\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField label=\"Limit\" optional={true} tooltip={`Restrict the number of rows returned (default is 1000).`}>\n          <Input\n            className=\"width-5\"\n            type=\"number\"\n            placeholder=\"Enter limit\"\n            value={limit}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const newValue = e.target.value.replace(/[^0-9]/g, '');\n              setLimit(Number(newValue));\n              handleQueryLimitUpdate(Number(newValue));\n            }}\n          />\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorRow, InputGroup } from '@grafana/plugin-ui';\nimport { Button, Select, Label } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorOrderByExpression,\n  BuilderQueryEditorOrderByOptions,\n  BuilderQueryEditorPropertyType,\n} from '../../dataquery.gen';\nimport { AzureLogAnalyticsMetadataColumn, AzureMonitorQuery } from '../../types';\n\nimport { BuildAndUpdateOptions, inputFieldSize } from './utils';\n\ninterface OrderBySectionProps {\n  query: AzureMonitorQuery;\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n}\n\nexport const OrderBySection: React.FC<OrderBySectionProps> = ({ query, allColumns, buildAndUpdateQuery }) => {\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n  const prevTable = useRef<string | null>(builderQuery?.from?.property.name || null);\n  const hasLoadedOrderBy = useRef(false);\n\n  const [orderBy, setOrderBy] = useState<BuilderQueryEditorOrderByExpression[]>(\n    builderQuery?.orderBy?.expressions || []\n  );\n\n  useEffect(() => {\n    const currentTable = builderQuery?.from?.property.name || null;\n\n    if (prevTable.current !== currentTable || builderQuery?.orderBy?.expressions.length === 0) {\n      setOrderBy([]);\n      hasLoadedOrderBy.current = false;\n      prevTable.current = currentTable;\n    }\n  }, [builderQuery]);\n\n  const groupByColumns = builderQuery?.groupBy?.expressions?.map((g) => g.property?.name) || [];\n  const aggregateColumns = builderQuery?.reduce?.expressions?.map((r) => r.property?.name) || [];\n  const selectedColumns = builderQuery?.columns?.columns || [];\n\n  const allAvailableColumns =\n    groupByColumns.length > 0\n      ? groupByColumns\n      : aggregateColumns.length > 0\n        ? aggregateColumns\n        : selectedColumns.length > 0\n          ? selectedColumns\n          : allColumns.map((col) => col.name);\n\n  const columnOptions = allAvailableColumns.map((col) => ({\n    label: col,\n    value: col,\n  }));\n\n  const orderOptions: Array<SelectableValue<string>> = [\n    { label: 'Ascending', value: 'asc' },\n    { label: 'Descending', value: 'desc' },\n  ];\n\n  const handleOrderByChange = (index: number, key: 'column' | 'order', value: string) => {\n    setOrderBy((prev) => {\n      const updated = [...prev];\n\n      if (index === -1) {\n        updated.push({\n          property: { name: value, type: BuilderQueryEditorPropertyType.String },\n          order: BuilderQueryEditorOrderByOptions.Asc,\n          type: BuilderQueryEditorExpressionType.Order_by,\n        });\n      } else {\n        updated[index] = {\n          ...updated[index],\n          property:\n            key === 'column' ? { name: value, type: BuilderQueryEditorPropertyType.String } : updated[index].property,\n          order:\n            key === 'order' &&\n            (value === BuilderQueryEditorOrderByOptions.Asc || value === BuilderQueryEditorOrderByOptions.Desc)\n              ? value\n              : updated[index].order,\n        };\n      }\n\n      buildAndUpdateQuery({\n        orderBy: updated,\n      });\n\n      return updated;\n    });\n  };\n\n  const onDeleteOrderBy = (index: number) => {\n    setOrderBy((prev) => {\n      const updated = prev.filter((_, i) => i !== index);\n\n      buildAndUpdateQuery({\n        orderBy: updated,\n      });\n\n      return updated;\n    });\n  };\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField\n          label=\"Order By\"\n          optional={true}\n          tooltip={`Sort results based on one or more columns in ascending or descending order.`}\n        >\n          <>\n            {orderBy.length > 0 ? (\n              orderBy.map((entry, index) => (\n                <InputGroup key={index}>\n                  <Select\n                    aria-label=\"Order by column\"\n                    width={inputFieldSize}\n                    value={entry.property?.name ? { label: entry.property.name, value: entry.property.name } : null}\n                    options={columnOptions}\n                    onChange={(e) => e.value && handleOrderByChange(index, 'column', e.value)}\n                  />\n                  <Label style={{ margin: '9px 9px 0 9px' }}>BY</Label>\n                  <Select\n                    aria-label=\"Order Direction\"\n                    width={inputFieldSize}\n                    value={orderOptions.find((o) => o.value === entry.order) || null}\n                    options={orderOptions}\n                    onChange={(e) => e.value && handleOrderByChange(index, 'order', e.value)}\n                  />\n                  <Button variant=\"secondary\" icon=\"times\" onClick={() => onDeleteOrderBy(index)} />\n                  {index === orderBy.length - 1 ? (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleOrderByChange(-1, 'column', '')}\n                      icon=\"plus\"\n                      style={{ marginLeft: '15px' }}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </InputGroup>\n              ))\n            ) : (\n              <InputGroup>\n                <Button variant=\"secondary\" onClick={() => handleOrderByChange(-1, 'column', '')} icon=\"plus\" />\n              </InputGroup>\n            )}\n          </>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorField, EditorFieldGroup, EditorRow, InputGroup } from '@grafana/plugin-ui';\nimport { Button, Select } from '@grafana/ui';\n\nimport { BuilderQueryEditorExpressionType, BuilderQueryEditorPropertyType } from '../../dataquery.gen';\nimport {\n  AzureMonitorQuery,\n  AzureLogAnalyticsMetadataColumn,\n  AzureLogAnalyticsMetadataTable,\n  TablePlan,\n} from '../../types';\n\nimport { BuildAndUpdateOptions, inputFieldSize } from './utils';\n\ninterface TableSectionProps {\n  allColumns: AzureLogAnalyticsMetadataColumn[];\n  tables: AzureLogAnalyticsMetadataTable[];\n  query: AzureMonitorQuery;\n  buildAndUpdateQuery: (options: Partial<BuildAndUpdateOptions>) => void;\n  templateVariableOptions?: SelectableValue<string>;\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  isLoadingSchema: boolean;\n}\n\nexport const TableSection: React.FC<TableSectionProps> = (props) => {\n  const { allColumns, query, tables, buildAndUpdateQuery, templateVariableOptions, isLoadingSchema } = props;\n  const builderQuery = query.azureLogAnalytics?.builderQuery;\n  const selectedColumns = query.azureLogAnalytics?.builderQuery?.columns?.columns || [];\n\n  const tableOptions: Array<SelectableValue<string>> = tables.map((t) => ({\n    label: t.name,\n    value: t.name,\n    description: t.plan === TablePlan.Basic ? 'Selecting this table will switch the query mode to Basic Logs' : '',\n  }));\n\n  const columnOptions: Array<SelectableValue<string>> = allColumns.map((col) => ({\n    label: col.name,\n    value: col.name,\n    type: col.type,\n  }));\n\n  const selectAllOption: SelectableValue<string> = {\n    label: 'All Columns',\n    value: '__all_columns__',\n  };\n\n  const selectableOptions: Array<SelectableValue<string>> = [\n    selectAllOption,\n    ...columnOptions,\n    ...(templateVariableOptions\n      ? Array.isArray(templateVariableOptions)\n        ? templateVariableOptions\n        : [templateVariableOptions]\n      : []),\n  ];\n\n  const handleTableChange = (selected: SelectableValue<string>) => {\n    const selectedTable = tables.find((t) => t.name === selected.value);\n    if (!selectedTable) {\n      return;\n    }\n\n    buildAndUpdateQuery({\n      from: {\n        property: {\n          name: selectedTable.name,\n          type: BuilderQueryEditorPropertyType.String,\n        },\n        type: BuilderQueryEditorExpressionType.Property,\n      },\n      reduce: [],\n      where: [],\n      fuzzySearch: [],\n      groupBy: [],\n      orderBy: [],\n      columns: [],\n      basicLogsQuery: selectedTable.plan === TablePlan.Basic,\n    });\n  };\n\n  const handleColumnsChange = (selected: SelectableValue<string> | Array<SelectableValue<string>> | null) => {\n    const selectedArray = Array.isArray(selected) ? selected : selected ? [selected] : [];\n\n    if (selectedArray.length === 0) {\n      buildAndUpdateQuery({ columns: [] });\n      return;\n    }\n\n    const includesAll = selectedArray.some((opt) => opt.value === '__all_columns__');\n    const lastSelected = selectedArray[selectedArray.length - 1];\n\n    if (includesAll && lastSelected.value === '__all_columns__') {\n      buildAndUpdateQuery({\n        columns: allColumns.map((col) => col.name),\n      });\n      return;\n    }\n\n    if (includesAll && selectedArray.length > 1) {\n      const filtered = selectedArray.filter((opt) => opt.value !== '__all_columns__');\n      buildAndUpdateQuery({\n        columns: filtered.map((opt) => opt.value!),\n      });\n      return;\n    }\n\n    if (includesAll && selectedArray.length === 1) {\n      buildAndUpdateQuery({\n        columns: allColumns.map((col) => col.name),\n      });\n      return;\n    }\n\n    buildAndUpdateQuery({\n      columns: selectedArray.map((opt) => opt.value!),\n    });\n  };\n\n  const onDeleteAllColumns = () => {\n    buildAndUpdateQuery({\n      columns: [],\n    });\n  };\n\n  const allColumnNames = allColumns.length > 0 ? allColumns.map((col) => col.name) : [];\n\n  const areAllColumnsSelected =\n    allColumnNames.length > 0 &&\n    selectedColumns.length > 0 &&\n    selectedColumns.length === allColumnNames.length &&\n    allColumnNames.every((col) => selectedColumns.includes(col));\n\n  const columnSelectValue: Array<SelectableValue<string>> = areAllColumnsSelected\n    ? [selectAllOption]\n    : selectedColumns.map((col) => ({ label: col, value: col }));\n\n  return (\n    <EditorRow>\n      <EditorFieldGroup>\n        <EditorField label=\"Table\">\n          <Select\n            aria-label=\"Table\"\n            value={builderQuery?.from?.property.name}\n            options={tableOptions}\n            placeholder=\"Select a table\"\n            onChange={handleTableChange}\n            width={inputFieldSize}\n            isLoading={isLoadingSchema}\n          />\n        </EditorField>\n        <EditorField label=\"Columns\">\n          <InputGroup>\n            <Select\n              aria-label=\"Columns\"\n              isMulti\n              isClearable\n              closeMenuOnSelect={false}\n              value={columnSelectValue}\n              options={selectableOptions}\n              placeholder=\"Select columns\"\n              onChange={handleColumnsChange}\n              isDisabled={!builderQuery?.from?.property.name}\n              width={30}\n            />\n            <Button variant=\"secondary\" icon=\"times\" onClick={onDeleteAllColumns} />\n          </InputGroup>\n        </EditorField>\n      </EditorFieldGroup>\n    </EditorRow>\n  );\n};\n","import React, { useMemo, useState, useCallback } from 'react';\n\nimport { SelectableValue, TimeRange } from '@grafana/data';\nimport { EditorRows } from '@grafana/plugin-ui';\nimport { Alert } from '@grafana/ui';\n\nimport {\n  BuilderQueryEditorExpressionType,\n  BuilderQueryEditorPropertyType,\n  BuilderQueryEditorReduceExpression,\n  BuilderQueryEditorWhereExpression,\n  BuilderQueryEditorGroupByExpression,\n  BuilderQueryEditorOrderByExpression,\n  BuilderQueryEditorPropertyExpression,\n  BuilderQueryExpression,\n} from '../../dataquery.gen';\nimport Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport {\n  AzureLogAnalyticsMetadataTable,\n  AzureLogAnalyticsMetadataColumn,\n  AzureMonitorQuery,\n  EngineSchema,\n} from '../../types';\n\nimport { AggregateSection } from './AggregationSection';\nimport { AzureMonitorKustoQueryBuilder } from './AzureMonitorKustoQueryBuilder';\nimport { FilterSection } from './FilterSection';\nimport { FuzzySearch } from './FuzzySearch';\nimport { GroupBySection } from './GroupBySection';\nimport KQLPreview from './KQLPreview';\nimport { LimitSection } from './LimitSection';\nimport { OrderBySection } from './OrderBySection';\nimport { TableSection } from './TableSection';\nimport { DEFAULT_LOGS_BUILDER_QUERY } from './utils';\n\ninterface LogsQueryBuilderProps {\n  query: AzureMonitorQuery;\n  basicLogsEnabled: boolean;\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  schema: EngineSchema;\n  templateVariableOptions: SelectableValue<string>;\n  datasource: Datasource;\n  timeRange?: TimeRange;\n  isLoadingSchema: boolean;\n}\n\nexport const LogsQueryBuilder: React.FC<LogsQueryBuilderProps> = (props) => {\n  const { query, onQueryChange, schema, datasource, timeRange, isLoadingSchema } = props;\n  const [isKQLPreviewHidden, setIsKQLPreviewHidden] = useState<boolean>(true);\n\n  const tables: AzureLogAnalyticsMetadataTable[] = useMemo(() => {\n    return schema?.database?.tables || [];\n  }, [schema?.database]);\n\n  const builderQuery: BuilderQueryExpression = query.azureLogAnalytics?.builderQuery || DEFAULT_LOGS_BUILDER_QUERY;\n\n  const allColumns: AzureLogAnalyticsMetadataColumn[] = useMemo(() => {\n    const tableName = builderQuery.from?.property.name;\n    const selectedTable = tables.find((table) => table.name === tableName);\n    return selectedTable?.columns || [];\n  }, [builderQuery, tables]);\n\n  const buildAndUpdateQuery = useCallback(\n    ({\n      limit,\n      reduce,\n      where,\n      fuzzySearch,\n      groupBy,\n      orderBy,\n      columns,\n      from,\n      basicLogsQuery,\n    }: {\n      limit?: number;\n      reduce?: BuilderQueryEditorReduceExpression[];\n      where?: BuilderQueryEditorWhereExpression[];\n      fuzzySearch?: BuilderQueryEditorWhereExpression[];\n      groupBy?: BuilderQueryEditorGroupByExpression[];\n      orderBy?: BuilderQueryEditorOrderByExpression[];\n      columns?: string[];\n      from?: BuilderQueryEditorPropertyExpression;\n      basicLogsQuery?: boolean;\n    }) => {\n      const datetimeColumn = allColumns.find((col) => col.type === 'datetime')?.name || 'TimeGenerated';\n\n      const timeFilterExpression: BuilderQueryEditorWhereExpression = {\n        type: BuilderQueryEditorExpressionType.Or,\n        expressions: [\n          {\n            type: BuilderQueryEditorExpressionType.Operator,\n            operator: { name: '$__timeFilter', value: datetimeColumn },\n            property: { name: datetimeColumn, type: BuilderQueryEditorPropertyType.Datetime },\n          },\n        ],\n      };\n\n      const updatedBuilderQuery: BuilderQueryExpression = {\n        ...builderQuery,\n        ...(limit !== undefined ? { limit } : {}),\n        ...(reduce !== undefined\n          ? { reduce: { expressions: reduce, type: BuilderQueryEditorExpressionType.Reduce } }\n          : {}),\n        ...(where !== undefined ? { where: { expressions: where, type: BuilderQueryEditorExpressionType.And } } : {}),\n        ...(fuzzySearch !== undefined\n          ? { fuzzySearch: { expressions: fuzzySearch, type: BuilderQueryEditorExpressionType.And } }\n          : {}),\n        ...(groupBy !== undefined\n          ? { groupBy: { expressions: groupBy, type: BuilderQueryEditorExpressionType.Group_by } }\n          : {}),\n        ...(orderBy !== undefined\n          ? { orderBy: { expressions: orderBy, type: BuilderQueryEditorExpressionType.Order_by } }\n          : {}),\n        ...(columns !== undefined ? { columns: { columns, type: BuilderQueryEditorExpressionType.Property } } : {}),\n        ...(from !== undefined ? { from } : {}),\n        timeFilter: { expressions: [timeFilterExpression], type: BuilderQueryEditorExpressionType.And },\n      };\n\n      const updatedQueryString = AzureMonitorKustoQueryBuilder.toQuery(updatedBuilderQuery);\n\n      onQueryChange({\n        ...query,\n        azureLogAnalytics: {\n          ...query.azureLogAnalytics,\n          builderQuery: updatedBuilderQuery,\n          query: updatedQueryString,\n          basicLogsQuery: from ? basicLogsQuery : query.azureLogAnalytics?.basicLogsQuery,\n        },\n      });\n    },\n    [query, builderQuery, onQueryChange, allColumns]\n  );\n\n  return (\n    <span data-testid={selectors.components.queryEditor.logsQueryEditor.container.input}>\n      <EditorRows>\n        {schema && tables.length === 0 && (\n          <Alert severity=\"warning\" title=\"Resource loaded successfully but without any tables\" />\n        )}\n        <TableSection\n          {...props}\n          tables={tables}\n          allColumns={allColumns}\n          buildAndUpdateQuery={buildAndUpdateQuery}\n          isLoadingSchema={isLoadingSchema}\n        />\n        <FilterSection\n          {...props}\n          allColumns={allColumns}\n          buildAndUpdateQuery={buildAndUpdateQuery}\n          datasource={datasource}\n          timeRange={timeRange}\n        />\n        <AggregateSection {...props} allColumns={allColumns} buildAndUpdateQuery={buildAndUpdateQuery} />\n        <GroupBySection {...props} allColumns={allColumns} buildAndUpdateQuery={buildAndUpdateQuery} />\n        <OrderBySection {...props} allColumns={allColumns} buildAndUpdateQuery={buildAndUpdateQuery} />\n        <FuzzySearch {...props} allColumns={allColumns} buildAndUpdateQuery={buildAndUpdateQuery} />\n        <LimitSection {...props} buildAndUpdateQuery={buildAndUpdateQuery} />\n        <KQLPreview\n          query={query.azureLogAnalytics?.query || ''}\n          hidden={isKQLPreviewHidden}\n          setHidden={setIsKQLPreviewHidden}\n        />\n      </EditorRows>\n    </span>\n  );\n};\n","import { useState } from 'react';\nimport * as React from 'react';\n\nimport { Collapse, Space } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorResource } from '../../types';\n\nexport interface ResourcePickerProps<T> {\n  resources: T[];\n  onChange: (resources: T[]) => void;\n  renderAdvanced: (resources: T[], onChange: (resources: T[]) => void) => React.ReactNode;\n}\n\nconst AdvancedMulti = ({ resources, onChange, renderAdvanced }: ResourcePickerProps<string | AzureMonitorResource>) => {\n  const [isAdvancedOpen, setIsAdvancedOpen] = useState(!!resources.length && JSON.stringify(resources).includes('$'));\n\n  return (\n    <div data-testid={selectors.components.queryEditor.resourcePicker.advanced.collapse}>\n      <Collapse\n        collapsible\n        label=\"Advanced\"\n        isOpen={isAdvancedOpen}\n        onToggle={() => setIsAdvancedOpen(!isAdvancedOpen)}\n      >\n        {renderAdvanced(resources, onChange)}\n        <Space v={2} />\n      </Collapse>\n    </div>\n  );\n};\n\nexport default AdvancedMulti;\n","export enum ResourceRowType {\n  Subscription = 'Subscription',\n  ResourceGroup = 'ResourceGroup',\n  Resource = 'Resource',\n  VariableGroup = 'TemplateVariableGroup',\n  Variable = 'TemplateVariable',\n}\n\nexport interface ResourceRow {\n  id: string; // azure's raw data id usually passes along a uri (except in the case of subscriptions), to make things less confusing for ourselves we parse the id string out of the uri or vice versa\n  uri: string; // ex: /subscriptions/subid123\n  name: string;\n  type: ResourceRowType;\n  typeLabel: string;\n  location?: string;\n  children?: ResourceRowGroup;\n}\n\nexport type ResourceRowGroup = ResourceRow[];\n","import { Icon } from '@grafana/ui';\n\nimport { ResourceRow, ResourceRowType } from './types';\n\ninterface EntryIconProps {\n  entry: ResourceRow;\n  isOpen: boolean;\n}\n\nexport const EntryIcon = ({ isOpen, entry: { type } }: EntryIconProps) => {\n  switch (type) {\n    case ResourceRowType.Subscription:\n      return <Icon name=\"layer-group\" />;\n\n    case ResourceRowType.ResourceGroup:\n      return <Icon name={isOpen ? 'folder-open' : 'folder'} />;\n\n    case ResourceRowType.Resource:\n      return <Icon name=\"cube\" />;\n\n    case ResourceRowType.VariableGroup:\n      return <Icon name=\"x\" />;\n\n    case ResourceRowType.Variable:\n      return <Icon name=\"x\" />;\n\n    default:\n      return null;\n  }\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css({\n    width: '100%',\n    tableLayout: 'fixed',\n    overflow: 'scroll',\n  }),\n\n  scrollableTable: css({\n    overflow: 'auto',\n  }),\n\n  tableScroller: css({\n    maxHeight: '16vh',\n  }),\n\n  selectedTableScroller: css({\n    maxHeight: '13vh',\n  }),\n\n  header: css({\n    background: theme.colors.background.secondary,\n  }),\n\n  row: css({\n    borderBottom: `1px solid ${theme.colors.border.weak}`,\n\n    '&:last-of-type': {\n      borderBottomColor: theme.colors.border.medium,\n    },\n  }),\n\n  disabledRow: css({\n    opacity: 0.5,\n  }),\n\n  cell: css({\n    padding: theme.spacing(1, 1, 1, 0),\n    width: '25%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    '&:first-of-type': {\n      width: '50%',\n      padding: theme.spacing(1, 1, 1, 2),\n    },\n  }),\n\n  collapseButton: css({ margin: 0 }),\n\n  loadingCell: css({\n    textAlign: 'center',\n  }),\n\n  spinner: css({\n    marginBottom: 0,\n  }),\n\n  nestedEntry: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n\n  entryContentItem: css({\n    margin: theme.spacing(0, 1, 0, 0),\n  }),\n\n  truncated: css({\n    minWidth: 0,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  }),\n\n  resourceField: css({\n    maxWidth: theme.spacing(36),\n    overflow: 'hidden',\n  }),\n\n  resourceFieldButton: css({\n    padding: '7px',\n    textAlign: 'left',\n  }),\n\n  nestedRowCheckbox: css({\n    zIndex: 0,\n  }),\n\n  selectionFooter: css({\n    background: theme.colors.background.primary,\n    paddingTop: theme.spacing(2),\n  }),\n\n  loadingWrapper: css({\n    textAlign: 'center',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    color: theme.colors.text.secondary,\n  }),\n\n  resultLimit: css({\n    margin: '4px 0',\n    fontStyle: 'italic',\n  }),\n\n  modal: css({\n    width: theme.breakpoints.values.lg,\n  }),\n});\n\nexport default getStyles;\n","import { cx } from '@emotion/css';\nimport { useCallback, useEffect } from 'react';\nimport * as React from 'react';\n\nimport { Checkbox, IconButton, useStyles2, useTheme2, Space } from '@grafana/ui';\n\nimport { EntryIcon } from './EntryIcon';\nimport getStyles from './styles';\nimport { ResourceRow } from './types';\n\ninterface NestedEntryProps {\n  level: number;\n  entry: ResourceRow;\n  isSelected: boolean;\n  isSelectable: boolean;\n  isOpen: boolean;\n  isDisabled: boolean;\n  scrollIntoView?: boolean;\n  onToggleCollapse: (row: ResourceRow) => void;\n  onSelectedChange: (row: ResourceRow, selected: boolean) => void;\n}\n\nexport const NestedEntry = ({\n  entry,\n  isSelected,\n  isDisabled,\n  isOpen,\n  isSelectable,\n  level,\n  scrollIntoView,\n  onToggleCollapse,\n  onSelectedChange,\n}: NestedEntryProps) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const hasChildren = !!entry.children;\n\n  const handleToggleCollapse = useCallback(() => {\n    onToggleCollapse(entry);\n  }, [onToggleCollapse, entry]);\n\n  const handleSelectedChanged = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const isSelected = ev.target.checked;\n      onSelectedChange(entry, isSelected);\n    },\n    [entry, onSelectedChange]\n  );\n\n  const checkboxId = `${scrollIntoView ? 'table' : 'summary'}_checkbox_${entry.uri}`;\n\n  // Scroll to the selected element if it's not in the view\n  // Only do it once, when the component is mounted\n  useEffect(() => {\n    if (isSelected && scrollIntoView) {\n      document.getElementById(checkboxId)?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className={styles.nestedEntry} style={{ marginLeft: level * (3 * theme.spacing.gridSize) }}>\n      {hasChildren ? (\n        <IconButton\n          className={styles.collapseButton}\n          name={isOpen ? 'angle-down' : 'angle-right'}\n          aria-label={isOpen ? `Collapse ${entry.name}` : `Expand ${entry.name}`}\n          onClick={handleToggleCollapse}\n          id={entry.id}\n        />\n      ) : (\n        <Space layout=\"inline\" h={2} />\n      )}\n\n      <Space layout=\"inline\" h={2} />\n\n      {isSelectable && (\n        <>\n          <Checkbox\n            id={checkboxId}\n            onChange={handleSelectedChanged}\n            disabled={isDisabled}\n            value={isSelected}\n            className={styles.nestedRowCheckbox}\n          />\n          <Space layout=\"inline\" h={2} />\n        </>\n      )}\n\n      <EntryIcon entry={entry} isOpen={isOpen} />\n      <Space layout=\"inline\" h={1} />\n\n      <label htmlFor={checkboxId} className={cx(styles.entryContentItem, styles.truncated)}>\n        {entry.name}\n      </label>\n    </div>\n  );\n};\n","// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Reflect.ownKeys(obj).forEach((key) => {\n      iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  const isPlain = isPlainObject(base);\n  if (strict === true || strict === \"class_only\" && !isPlain) {\n    const descriptors = Object.getOwnPropertyDescriptors(base);\n    delete descriptors[DRAFT_STATE];\n    let keys = Reflect.ownKeys(descriptors);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const desc = descriptors[key];\n      if (desc.writable === false) {\n        desc.writable = true;\n        desc.configurable = true;\n      }\n      if (desc.get || desc.set)\n        descriptors[key] = {\n          configurable: true,\n          writable: true,\n          // could live with !!desc.set as well here...\n          enumerable: desc.enumerable,\n          value: base[key]\n        };\n    }\n    return Object.create(getPrototypeOf(base), descriptors);\n  } else {\n    const proto = getPrototypeOf(base);\n    if (proto !== null && isPlain) {\n      return { ...base };\n    }\n    const obj = Object.create(proto);\n    return Object.assign(obj, base);\n  }\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    Object.entries(obj).forEach(([key, value]) => freeze(value, true));\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path)\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if ((!parentState || !parentState.scope_.parent_) && typeof prop !== \"symbol\" && Object.prototype.propertyIsEnumerable.call(targetObject, prop))\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","import { TemplateSrv } from '@grafana/runtime';\n\nimport { AzureMonitorResource, GetMetricNamespacesQuery, GetMetricNamesQuery } from '../types';\n\nexport default class UrlBuilder {\n  static buildResourceUri(templateSrv: TemplateSrv, resource: AzureMonitorResource, multipleResources?: boolean) {\n    const urlArray = [];\n    const { subscription, resourceGroup, metricNamespace, resourceName } = resource;\n    if (subscription) {\n      urlArray.push('/subscriptions', subscription);\n      if (resourceGroup && !multipleResources) {\n        urlArray.push('resourceGroups', resourceGroup);\n\n        if (metricNamespace && resourceName) {\n          const metricNamespaceProcessed = templateSrv.replace(metricNamespace);\n          const metricNamespaceArray = metricNamespace.split('/');\n          const resourceNameProcessed = templateSrv.replace(resourceName);\n          const resourceNameArray = resourceName.split('/');\n          const provider = metricNamespaceArray.shift();\n          if (provider) {\n            urlArray.push('providers', provider);\n          }\n\n          if (\n            metricNamespaceProcessed.toLowerCase().startsWith('microsoft.storage/storageaccounts/') &&\n            !resourceNameProcessed.endsWith('default')\n          ) {\n            resourceNameArray.push('default');\n          }\n\n          if (resourceNameArray.length > metricNamespaceArray.length) {\n            const parentResource = resourceNameArray.shift();\n            if (parentResource) {\n              urlArray.push(parentResource);\n            }\n          }\n\n          for (const i in metricNamespaceArray) {\n            urlArray.push(metricNamespaceArray[i]);\n            urlArray.push(resourceNameArray[i]);\n          }\n        }\n      }\n    }\n\n    return urlArray.join('/');\n  }\n\n  static buildAzureMonitorGetMetricNamespacesUrl(\n    baseUrl: string,\n    apiVersion: string,\n    query: GetMetricNamespacesQuery,\n    globalRegion: boolean,\n    templateSrv: TemplateSrv,\n    region?: string\n  ) {\n    let resourceUri: string;\n\n    if ('resourceUri' in query) {\n      resourceUri = query.resourceUri;\n    } else {\n      const { subscription, resourceGroup, metricNamespace, resourceName } = query;\n      resourceUri = UrlBuilder.buildResourceUri(templateSrv, {\n        subscription,\n        resourceGroup,\n        metricNamespace,\n        resourceName,\n      });\n    }\n\n    return `${baseUrl}${resourceUri}/providers/microsoft.insights/metricNamespaces?api-version=${apiVersion}${\n      region ? `&region=${region}` : globalRegion ? '&region=global' : ''\n    }`;\n  }\n\n  static buildAzureMonitorGetMetricNamesUrl(\n    baseUrl: string,\n    apiVersion: string,\n    query: GetMetricNamesQuery,\n    templateSrv: TemplateSrv,\n    multipleResources?: boolean,\n    region?: string\n  ) {\n    let resourceUri: string;\n    const { customNamespace, metricNamespace } = query;\n    if ('resourceUri' in query) {\n      resourceUri = query.resourceUri;\n    } else {\n      const { subscription, resourceGroup, metricNamespace, resourceName } = query;\n      resourceUri = UrlBuilder.buildResourceUri(\n        templateSrv,\n        {\n          subscription,\n          resourceGroup,\n          metricNamespace,\n          resourceName,\n        },\n        multipleResources\n      );\n    }\n    let url = `${baseUrl}${resourceUri}/providers/microsoft.insights/metricdefinitions?api-version=${apiVersion}`;\n    if (customNamespace) {\n      url += `&metricnamespace=${encodeURIComponent(customNamespace)}`;\n    }\n\n    if (multipleResources && !customNamespace && metricNamespace) {\n      url += `&metricnamespace=${encodeURIComponent(metricNamespace)}`;\n    }\n\n    if (region && multipleResources) {\n      url += `&region=${region}`;\n    }\n\n    return url;\n  }\n\n  static buildAzureMonitorGetLogsTableUrl(\n    baseUrl: string,\n    resourceUri: string,\n    tableName: string,\n    apiVersion = '2025-02-01'\n  ) {\n    return `${baseUrl}${resourceUri}/tables/${tableName}?api-version=${apiVersion}`;\n  }\n}\n","import { produce } from 'immer';\n\nimport { getTemplateSrv } from '@grafana/runtime';\n\nimport UrlBuilder from '../../azure_monitor/url_builder';\nimport { ResourcePickerQueryType } from '../../resourcePicker/resourcePickerData';\nimport { AzureMonitorResource, AzureMonitorQuery } from '../../types';\n\nimport { ResourceRow, ResourceRowGroup } from './types';\n\n// This regex matches URIs representing:\n//  - subscriptions: /subscriptions/44693801-6ee6-49de-9b2d-9106972f9572\n//  - resource groups: /subscriptions/44693801-6ee6-49de-9b2d-9106972f9572/resourceGroups/cloud-datasources\n//  - resources: /subscriptions/44693801-6ee6-49de-9b2d-9106972f9572/resourceGroups/cloud-datasources/providers/Microsoft.Compute/virtualMachines/GithubTestDataVM\nconst RESOURCE_URI_REGEX =\n  /\\/subscriptions\\/(?<subscription>[^/]+)(?:\\/resourceGroups\\/(?<resourceGroup>[^/]+)(?:\\/providers\\/(?<metricNamespaceAndResource>.+))?)?/i;\n\ntype RegexGroups = Record<string, string | undefined>;\n\nfunction parseNamespaceAndName(metricNamespaceAndName?: string) {\n  if (!metricNamespaceAndName) {\n    return {};\n  }\n  const stringArray = metricNamespaceAndName.split('/');\n  // The first two groups belong to the namespace (e.g. Microsoft.Storage/storageAccounts)\n  const namespaceArray = stringArray.splice(0, 2);\n  // The next element belong to the resource name (e.g. storageAcc1)\n  const resourceNameArray = stringArray.splice(0, 1);\n  // If there are more elements, keep adding them to the namespace and resource name, alternatively\n  // e.g (blobServices/default)\n  while (stringArray.length) {\n    const nextElem = stringArray.shift()!;\n    stringArray.length % 2 === 0 ? resourceNameArray.push(nextElem) : namespaceArray.push(nextElem);\n  }\n  return { metricNamespace: namespaceArray.join('/'), resourceName: resourceNameArray.join('/') };\n}\n\nexport function parseResourceURI(resourceURI: string): AzureMonitorResource {\n  const matches = RESOURCE_URI_REGEX.exec(resourceURI);\n  const groups: RegexGroups = matches?.groups ?? {};\n  const { subscription, resourceGroup, metricNamespaceAndResource } = groups;\n  const { metricNamespace, resourceName } = parseNamespaceAndName(metricNamespaceAndResource);\n\n  return { subscription, resourceGroup, metricNamespace, resourceName };\n}\n\nexport function parseMultipleResourceDetails(resources: Array<string | AzureMonitorResource>, location?: string) {\n  return resources.map((resource) => {\n    return parseResourceDetails(resource, location);\n  });\n}\n\nexport function parseResourceDetails(resource: string | AzureMonitorResource, location?: string) {\n  if (typeof resource === 'string') {\n    const res = parseResourceURI(resource);\n    if (location) {\n      res.region = location;\n    }\n    return res;\n  }\n  return resource;\n}\n\nexport function resourcesToStrings(resources: Array<string | AzureMonitorResource>) {\n  return resources.map((resource) => resourceToString(resource));\n}\n\nexport function resourceToString(resource?: string | AzureMonitorResource) {\n  return resource\n    ? typeof resource === 'string'\n      ? resource\n      : UrlBuilder.buildResourceUri(getTemplateSrv(), resource)\n    : '';\n}\n\nexport function isGUIDish(input: string) {\n  return !!input.match(/^[A-Z0-9]+/i);\n}\n\nfunction compareNamespaceAndName(\n  rowNamespace?: string,\n  rowName?: string,\n  resourceNamespace?: string,\n  resourceName?: string\n) {\n  // StorageAccounts subresources are not listed independently\n  if (resourceNamespace?.startsWith('microsoft.storage/storageaccounts')) {\n    resourceNamespace = 'microsoft.storage/storageaccounts';\n    if (resourceName?.endsWith('/default')) {\n      resourceName = resourceName.slice(0, -'/default'.length);\n    }\n  }\n  return rowNamespace === resourceNamespace && rowName === resourceName;\n}\n\nexport function matchURI(rowURI: string, resourceURI: string) {\n  const targetParams = parseResourceDetails(resourceURI);\n  const rowParams = parseResourceDetails(rowURI);\n\n  return (\n    rowParams?.subscription === targetParams?.subscription &&\n    rowParams?.resourceGroup?.toLowerCase() === targetParams?.resourceGroup?.toLowerCase() &&\n    compareNamespaceAndName(\n      rowParams?.metricNamespace?.toLowerCase(),\n      rowParams?.resourceName,\n      targetParams?.metricNamespace?.toLowerCase(),\n      targetParams?.resourceName\n    )\n  );\n}\n\nexport function findRows(rows: ResourceRowGroup, uris: string[]): ResourceRow[] {\n  const result: ResourceRow[] = [];\n  uris.forEach((uri) => {\n    const row = findRow(rows, uri);\n    if (row) {\n      result.push(row);\n    }\n  });\n  return result;\n}\n\nexport function findRow(rows: ResourceRowGroup, uri: string): ResourceRow | undefined {\n  for (const row of rows) {\n    if (matchURI(row.uri, uri)) {\n      return row;\n    }\n\n    if (row.children) {\n      const result = findRow(row.children, uri);\n\n      if (result) {\n        return result;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport function addResources(rows: ResourceRowGroup, targetParentId: string, newResources: ResourceRowGroup) {\n  return produce(rows, (draftState) => {\n    const draftRow = findRow(draftState, targetParentId);\n\n    // we can't find the selected resource in our list of resources,\n    // probably means user has either mistyped in the input field\n    // or is using template variables.\n    // either way no need to throw, just show that none of the resources are checked\n    if (!draftRow) {\n      return;\n    }\n\n    draftRow.children = newResources;\n  });\n}\n\nexport function setResources(\n  query: AzureMonitorQuery,\n  type: ResourcePickerQueryType,\n  resources: Array<string | AzureMonitorResource>\n): AzureMonitorQuery {\n  if (type === 'logs') {\n    // Resource URI for LogAnalytics\n    return {\n      ...query,\n      azureLogAnalytics: {\n        ...query.azureLogAnalytics,\n        resources: resourcesToStrings(resources).filter((resource) => resource !== ''),\n      },\n    };\n  }\n  if (type === 'traces') {\n    // Resource URI for Traces\n    return {\n      ...query,\n      azureTraces: {\n        ...query.azureTraces,\n        resources: resourcesToStrings(resources).filter((resource) => resource !== ''),\n      },\n    };\n  }\n\n  // Resource object for metrics\n  const parsedResource = resources.length ? parseResourceDetails(resources[0]) : {};\n  return {\n    ...query,\n    subscription: parsedResource.subscription,\n    azureMonitor: {\n      ...query.azureMonitor,\n      metricNamespace: parsedResource.metricNamespace?.toLocaleLowerCase(),\n      region: parsedResource.region,\n      resources: parseMultipleResourceDetails(resources).filter(\n        (resource) =>\n          resource.resourceName !== '' &&\n          resource.metricNamespace !== '' &&\n          resource.subscription !== '' &&\n          resource.resourceGroup !== ''\n      ),\n      metricName: undefined,\n      aggregation: undefined,\n      timeGrain: '',\n      dimensionFilters: [],\n    },\n  };\n}\n","import { cx } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { FadeTransition, LoadingPlaceholder, useStyles2 } from '@grafana/ui';\n\nimport { NestedEntry } from './NestedEntry';\nimport getStyles from './styles';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from './types';\nimport { findRow } from './utils';\n\ninterface NestedRowProps {\n  row: ResourceRow;\n  level: number;\n  selectedRows: ResourceRowGroup;\n  requestNestedRows: (row: ResourceRow) => Promise<void>;\n  onRowSelectedChange: (row: ResourceRow, selected: boolean) => void;\n  selectableEntryTypes: ResourceRowType[];\n  disableRow: (row: ResourceRow, selectedRows: ResourceRowGroup) => boolean;\n  scrollIntoView?: boolean;\n}\n\nconst NestedRow = ({\n  row,\n  selectedRows,\n  level,\n  requestNestedRows,\n  onRowSelectedChange,\n  selectableEntryTypes,\n  scrollIntoView,\n  disableRow,\n}: NestedRowProps) => {\n  const styles = useStyles2(getStyles);\n  const [rowStatus, setRowStatus] = useState<'open' | 'closed' | 'loading'>('closed');\n\n  const isSelected = !!selectedRows.find((v) => v.uri.toLowerCase() === row.uri.toLowerCase());\n  const isDisabled = !isSelected && disableRow(row, selectedRows);\n  const isOpen = rowStatus === 'open';\n\n  const onRowToggleCollapse = async () => {\n    if (rowStatus === 'open') {\n      setRowStatus('closed');\n      return;\n    }\n    setRowStatus('loading');\n    requestNestedRows(row)\n      .then(() => setRowStatus('open'))\n      .catch(() => setRowStatus('closed'));\n  };\n\n  // opens the resource group on load of component if there was a previously saved selection\n  useEffect(() => {\n    // Assuming we don't have multi-select yet\n    const selectedRow = selectedRows[0];\n\n    const containsChild = selectedRow && !!findRow(row.children ?? [], selectedRow.uri);\n\n    if (containsChild) {\n      setRowStatus('open');\n    }\n  }, [selectedRows, row]);\n\n  return (\n    <>\n      <tr className={cx(styles.row, isDisabled && styles.disabledRow)} key={row.id}>\n        <td className={styles.cell}>\n          <NestedEntry\n            level={level}\n            isSelected={isSelected}\n            isDisabled={isDisabled}\n            isOpen={isOpen}\n            entry={row}\n            onToggleCollapse={onRowToggleCollapse}\n            onSelectedChange={onRowSelectedChange}\n            isSelectable={selectableEntryTypes.some((type) => type === row.type)}\n            scrollIntoView={scrollIntoView}\n          />\n        </td>\n\n        <td className={styles.cell}>{row.typeLabel}</td>\n\n        <td className={styles.cell}>{row.location ?? '-'}</td>\n      </tr>\n\n      {isOpen &&\n        row.children &&\n        Object.keys(row.children).length > 0 &&\n        row.children.map((childRow) => (\n          <NestedRow\n            key={childRow.uri}\n            row={childRow}\n            selectedRows={selectedRows}\n            level={level + 1}\n            requestNestedRows={requestNestedRows}\n            onRowSelectedChange={onRowSelectedChange}\n            selectableEntryTypes={selectableEntryTypes}\n            scrollIntoView={scrollIntoView}\n            disableRow={disableRow}\n          />\n        ))}\n\n      <FadeTransition visible={rowStatus === 'loading'}>\n        <tr>\n          <td className={cx(styles.cell, styles.loadingCell)} colSpan={3}>\n            <LoadingPlaceholder text=\"Loading...\" className={styles.spinner} />\n          </td>\n        </tr>\n      </FadeTransition>\n    </>\n  );\n};\n\nexport default NestedRow;\n","import { debounce } from 'lodash';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { Icon, Input } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\n\nconst Search = ({ searchFn }: { searchFn: (searchPhrase: string) => void }) => {\n  const [searchFilter, setSearchFilter] = useState('');\n\n  const debouncedSearch = useMemo(() => debounce(searchFn, 600), [searchFn]);\n  useEffect(() => {\n    return () => {\n      // Stop the invocation of the debounced function after unmounting\n      debouncedSearch.cancel();\n    };\n  }, [debouncedSearch]);\n\n  return (\n    <Input\n      aria-label=\"resource search\"\n      prefix={<Icon name=\"search\" />}\n      value={searchFilter}\n      onChange={(event) => {\n        const searchPhrase = event.currentTarget.value;\n        setSearchFilter(searchPhrase);\n        debouncedSearch(searchPhrase);\n      }}\n      placeholder=\"search for a resource\"\n      data-testid={selectors.components.queryEditor.resourcePicker.search.input}\n    />\n  );\n};\n\nexport default Search;\n","import { cx } from '@emotion/css';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { Alert, Button, LoadingPlaceholder, Modal, useStyles2, Space } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport ResourcePickerData, { ResourcePickerQueryType } from '../../resourcePicker/resourcePickerData';\nimport { AzureMonitorResource } from '../../types';\nimport messageFromError from '../../utils/messageFromError';\n\nimport AdvancedMulti from './AdvancedMulti';\nimport NestedRow from './NestedRow';\nimport Search from './Search';\nimport getStyles from './styles';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from './types';\nimport { findRows, parseMultipleResourceDetails, resourcesToStrings, matchURI, resourceToString } from './utils';\n\ninterface ResourcePickerProps<T> {\n  resourcePickerData: ResourcePickerData;\n  resources: T[];\n  selectableEntryTypes: ResourceRowType[];\n  queryType: ResourcePickerQueryType;\n\n  onApply: (resources: T[]) => void;\n  onCancel: () => void;\n  disableRow: (row: ResourceRow, selectedRows: ResourceRowGroup) => boolean;\n  renderAdvanced: (resources: T[], onChange: (resources: T[]) => void) => React.ReactNode;\n  selectionNotice?: (selectedRows: ResourceRowGroup) => string;\n}\n\nconst ResourcePicker = ({\n  resourcePickerData,\n  resources,\n  onApply,\n  onCancel,\n  selectableEntryTypes,\n  queryType,\n  disableRow,\n  renderAdvanced,\n  selectionNotice,\n}: ResourcePickerProps<string | AzureMonitorResource>) => {\n  const styles = useStyles2(getStyles);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [rows, setRows] = useState<ResourceRowGroup>([]);\n  const [selectedRows, setSelectedRows] = useState<ResourceRowGroup>([]);\n  const [internalSelected, setInternalSelected] = useState(resources);\n  const [errorMessage, setErrorMessage] = useState<string | undefined>(undefined);\n  const [shouldShowLimitFlag, setShouldShowLimitFlag] = useState(false);\n  const selectionNoticeText = selectionNotice?.(selectedRows);\n\n  // Sync the resourceURI prop to internal state\n  useEffect(() => {\n    setInternalSelected(resources);\n  }, [resources]);\n\n  const loadInitialData = useCallback(async () => {\n    if (!isLoading) {\n      try {\n        setIsLoading(true);\n        const resources = await resourcePickerData.fetchInitialRows(\n          queryType,\n          parseMultipleResourceDetails(internalSelected ?? {})\n        );\n        setRows(resources);\n      } catch (error) {\n        setErrorMessage(messageFromError(error));\n      }\n      setIsLoading(false);\n    }\n  }, [internalSelected, isLoading, resourcePickerData, queryType]);\n\n  useEffectOnce(() => {\n    loadInitialData();\n  });\n\n  // Avoid using empty resources\n  const isValid = (r: string | AzureMonitorResource) =>\n    typeof r === 'string' ? r !== '' : r.subscription && r.resourceGroup && r.resourceName && r.metricNamespace;\n\n  // set selected row data whenever row or selection changes\n  useEffect(() => {\n    if (!internalSelected) {\n      setSelectedRows([]);\n    }\n\n    const sanitized = internalSelected.filter((r) => isValid(r));\n    const found = internalSelected && findRows(rows, resourcesToStrings(sanitized));\n    if (sanitized?.length > found.length) {\n      // Not all the selected items are in the current rows, so we need to generate the row\n      // information for those.\n      return setSelectedRows(resourcePickerData.parseRows(sanitized));\n    }\n    if (found && found.length) {\n      return setSelectedRows(found);\n    }\n    return setSelectedRows([]);\n  }, [internalSelected, rows, resourcePickerData]);\n\n  // Request resources for an expanded resource group\n  const requestNestedRows = useCallback(\n    async (parentRow: ResourceRow) => {\n      // clear error message (also when loading cached resources)\n      setErrorMessage(undefined);\n\n      // If we already have children, we don't need to re-fetch them.\n      if (parentRow.children?.length) {\n        return;\n      }\n\n      try {\n        const nestedRows = await resourcePickerData.fetchAndAppendNestedRow(rows, parentRow, queryType);\n        setRows(nestedRows);\n      } catch (error) {\n        setErrorMessage(messageFromError(error));\n        throw error;\n      }\n    },\n    [resourcePickerData, rows, queryType]\n  );\n\n  const handleSelectionChanged = useCallback(\n    (row: ResourceRow, isSelected: boolean) => {\n      if (isSelected) {\n        const newRes = queryType === 'logs' ? row.uri : parseMultipleResourceDetails([row.uri], row.location)[0];\n        const newSelected = internalSelected ? internalSelected.concat(newRes) : [newRes];\n        setInternalSelected(newSelected.filter((r) => isValid(r)));\n      } else {\n        const newInternalSelected = internalSelected?.filter((r) => {\n          return !matchURI(resourceToString(r), row.uri);\n        });\n        setInternalSelected(newInternalSelected);\n      }\n    },\n    [queryType, internalSelected, setInternalSelected]\n  );\n\n  const handleApply = useCallback(() => {\n    if (internalSelected) {\n      onApply(queryType === 'logs' ? internalSelected : parseMultipleResourceDetails(internalSelected));\n    }\n  }, [queryType, internalSelected, onApply]);\n\n  const handleSearch = useCallback(\n    async (searchWord: string) => {\n      // clear errors and warnings\n      setErrorMessage(undefined);\n      setShouldShowLimitFlag(false);\n\n      if (!searchWord) {\n        loadInitialData();\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        const searchResults = await resourcePickerData.search(searchWord, queryType);\n        setRows(searchResults);\n        if (searchResults.length >= resourcePickerData.resultLimit) {\n          setShouldShowLimitFlag(true);\n        }\n      } catch (err) {\n        setErrorMessage(messageFromError(err));\n      }\n      setIsLoading(false);\n    },\n    [loadInitialData, resourcePickerData, queryType]\n  );\n\n  return (\n    <>\n      <Search searchFn={handleSearch} />\n      {shouldShowLimitFlag ? (\n        <p className={styles.resultLimit}>Showing first {resourcePickerData.resultLimit} results</p>\n      ) : (\n        <Space v={2} />\n      )}\n\n      <table className={styles.table}>\n        <thead>\n          <tr className={cx(styles.row, styles.header)}>\n            <td className={styles.cell}>Scope</td>\n            <td className={styles.cell}>Type</td>\n            <td className={styles.cell}>Location</td>\n          </tr>\n        </thead>\n      </table>\n\n      <div className={cx(styles.scrollableTable, styles.tableScroller)}>\n        <table className={styles.table}>\n          <tbody>\n            {isLoading && (\n              <tr className={cx(styles.row)}>\n                <td className={styles.cell}>\n                  <LoadingPlaceholder text={'Loading...'} />\n                </td>\n              </tr>\n            )}\n            {!isLoading && rows.length === 0 && (\n              <tr className={cx(styles.row)}>\n                <td className={styles.cell} aria-live=\"polite\">\n                  No resources found\n                </td>\n              </tr>\n            )}\n            {!isLoading &&\n              rows.map((row) => (\n                <NestedRow\n                  key={row.uri}\n                  row={row}\n                  selectedRows={selectedRows}\n                  level={0}\n                  requestNestedRows={requestNestedRows}\n                  onRowSelectedChange={handleSelectionChanged}\n                  selectableEntryTypes={selectableEntryTypes}\n                  scrollIntoView={true}\n                  disableRow={disableRow}\n                />\n              ))}\n          </tbody>\n        </table>\n      </div>\n\n      <footer className={styles.selectionFooter}>\n        {selectedRows.length > 0 && (\n          <>\n            <h5>Selection</h5>\n\n            <div className={cx(styles.scrollableTable, styles.selectedTableScroller)}>\n              <table className={styles.table}>\n                <tbody>\n                  {selectedRows.map((row) => (\n                    <NestedRow\n                      key={row.uri}\n                      row={row}\n                      selectedRows={selectedRows}\n                      level={0}\n                      requestNestedRows={requestNestedRows}\n                      onRowSelectedChange={handleSelectionChanged}\n                      selectableEntryTypes={selectableEntryTypes}\n                      disableRow={() => false}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <Space v={2} />\n            {selectionNoticeText?.length ? (\n              <Alert title=\"\" severity=\"info\">\n                {selectionNoticeText}\n              </Alert>\n            ) : null}\n          </>\n        )}\n\n        <AdvancedMulti\n          resources={internalSelected}\n          onChange={(r) => setInternalSelected(r)}\n          renderAdvanced={renderAdvanced}\n        />\n\n        {errorMessage && (\n          <>\n            <Space v={2} />\n            <Alert severity=\"error\" title=\"An error occurred while requesting resources from Azure Monitor\">\n              {errorMessage}\n            </Alert>\n          </>\n        )}\n\n        <Modal.ButtonRow>\n          <Button onClick={onCancel} variant=\"secondary\" fill=\"outline\">\n            Cancel\n          </Button>\n          <Button\n            disabled={!!errorMessage || !internalSelected.every(isValid)}\n            onClick={handleApply}\n            data-testid={selectors.components.queryEditor.resourcePicker.apply.button}\n          >\n            Apply\n          </Button>\n        </Modal.ButtonRow>\n      </footer>\n    </>\n  );\n};\n\nexport default ResourcePicker;\n","import { cx } from '@emotion/css';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\n\nimport { Button, Icon, Modal, useStyles2, IconName } from '@grafana/ui';\n\nimport Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport { ResourcePickerQueryType } from '../../resourcePicker/resourcePickerData';\nimport { AzureQueryEditorFieldProps, AzureMonitorResource } from '../../types';\nimport ResourcePicker from '../ResourcePicker';\nimport getStyles from '../ResourcePicker/styles';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from '../ResourcePicker/types';\nimport { parseMultipleResourceDetails, setResources } from '../ResourcePicker/utils';\nimport { Field } from '../shared/Field';\n\ninterface ResourceFieldProps<T> extends AzureQueryEditorFieldProps {\n  selectableEntryTypes: ResourceRowType[];\n  queryType: ResourcePickerQueryType;\n  resources: T[];\n  inlineField?: boolean;\n  labelWidth?: number;\n  disableRow: (row: ResourceRow, selectedRows: ResourceRowGroup) => boolean;\n  renderAdvanced: (resources: T[], onChange: (resources: T[]) => void) => React.ReactNode;\n  selectionNotice?: (selectedRows: ResourceRowGroup) => string;\n}\n\ntype Props = ResourceFieldProps<string | AzureMonitorResource>;\n\nconst ResourceField = ({\n  query,\n  datasource,\n  onQueryChange,\n  selectableEntryTypes,\n  queryType,\n  resources,\n  inlineField,\n  labelWidth,\n  disableRow,\n  renderAdvanced,\n  selectionNotice,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n  const [pickerIsOpen, setPickerIsOpen] = useState(false);\n\n  const handleOpenPicker = useCallback(() => {\n    setPickerIsOpen(true);\n  }, []);\n\n  const closePicker = useCallback(() => {\n    setPickerIsOpen(false);\n  }, []);\n\n  const handleApply = useCallback(\n    (resources: Array<string | AzureMonitorResource>) => {\n      onQueryChange(setResources(query, queryType, resources));\n      closePicker();\n    },\n    [closePicker, onQueryChange, query, queryType]\n  );\n\n  return (\n    <span data-testid={selectors.components.queryEditor.resourcePicker.select.button}>\n      <Modal\n        className={styles.modal}\n        title=\"Select a resource\"\n        isOpen={pickerIsOpen}\n        onDismiss={closePicker}\n        // The growing number of rows added to the modal causes a focus\n        // error in the modal, making it impossible to click on new elements\n        trapFocus={false}\n      >\n        <ResourcePicker\n          resourcePickerData={datasource.resourcePickerData}\n          resources={resources}\n          onApply={handleApply}\n          onCancel={closePicker}\n          selectableEntryTypes={selectableEntryTypes}\n          queryType={queryType}\n          disableRow={disableRow}\n          renderAdvanced={renderAdvanced}\n          selectionNotice={selectionNotice}\n        />\n      </Modal>\n      <Field label=\"Resource\" inlineField={inlineField} labelWidth={labelWidth}>\n        <Button className={styles.resourceFieldButton} variant=\"secondary\" onClick={handleOpenPicker} type=\"button\">\n          <ResourceLabel resources={resources} datasource={datasource} />\n        </Button>\n      </Field>\n    </span>\n  );\n};\n\ninterface ResourceLabelProps<T> {\n  resources: T[];\n  datasource: Datasource;\n}\n\nconst ResourceLabel = ({ resources, datasource }: ResourceLabelProps<string | AzureMonitorResource>) => {\n  const [resourcesComponents, setResourcesComponents] = useState(parseMultipleResourceDetails(resources));\n\n  useEffect(() => {\n    setResourcesComponents(parseMultipleResourceDetails(resources));\n  }, [resources]);\n\n  if (!resources.length) {\n    return <>Select a resource</>;\n  }\n\n  return <FormattedResource resources={resourcesComponents} />;\n};\n\ninterface FormattedResourceProps {\n  resources: AzureMonitorResource[];\n}\n\nconst FormattedResource = ({ resources }: FormattedResourceProps) => {\n  const styles = useStyles2(getStyles);\n\n  let icon: IconName = 'cube';\n  const items: string[] = [];\n  resources.forEach((resource) => {\n    if (resource.resourceName) {\n      items.push(resource.resourceName.split('/')[0]);\n      return;\n    }\n    if (resource.resourceGroup) {\n      icon = 'folder';\n      items.push(resource.resourceGroup);\n      return;\n    }\n    if (resource.subscription) {\n      icon = 'layer-group';\n      items.push(resource.subscription);\n      return;\n    }\n  });\n  return (\n    <span className={cx(styles.truncated, styles.resourceField)}>\n      <Icon name={icon} />\n      {items.join(', ')}\n    </span>\n  );\n};\n\nexport default ResourceField;\n","import { useCallback, useMemo } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { FormatAsFieldProps, ResultFormat } from '../../types';\n\nimport { Field } from './Field';\n\nconst FormatAsField = ({\n  query,\n  variableOptionGroup,\n  onQueryChange,\n  inputId,\n  options: formatOptions,\n  defaultValue,\n  onLoad,\n  setFormatAs,\n  resultFormat,\n}: FormatAsFieldProps) => {\n  const options = useMemo(() => [...formatOptions, variableOptionGroup], [variableOptionGroup, formatOptions]);\n\n  const handleChange = useCallback(\n    (change: SelectableValue<ResultFormat>) => {\n      const { value } = change;\n      if (!value) {\n        return;\n      }\n\n      const newQuery = setFormatAs(query, value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query, setFormatAs]\n  );\n\n  useEffectOnce(() => {\n    //sets to default if the value is not found in the list\n    if (!formatOptions.find((item) => item.value === resultFormat)) {\n      handleChange({ value: defaultValue });\n    }\n    onLoad(query, defaultValue, handleChange);\n  });\n\n  return (\n    <Field label=\"Format as\" data-testid={selectors.components.queryEditor.logsQueryEditor.formatSelection.input}>\n      <Select\n        inputId={`${inputId}-format-as-field`}\n        value={resultFormat}\n        onChange={handleChange}\n        options={options}\n        width={20}\n      />\n    </Field>\n  );\n};\n\nexport default FormatAsField;\n","import { css } from '@emotion/css';\nimport { useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { AccessoryButton } from '@grafana/plugin-ui';\nimport { Icon, Input, Tooltip, Label, Button, useStyles2 } from '@grafana/ui';\n\nexport interface ResourcePickerProps<T> {\n  resources: T[];\n  onChange: (resources: T[]) => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  resourceList: css({ width: '100%', display: 'flex', marginBlock: theme.spacing(1) }),\n});\n\nconst AdvancedResourcePicker = ({ resources, onChange }: ResourcePickerProps<string>) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    // Ensure there is at least one resource\n    if (resources.length === 0) {\n      onChange(['']);\n    }\n  }, [resources, onChange]);\n\n  const onResourceChange = (index: number, resource: string) => {\n    const newResources = [...resources];\n    newResources[index] = resource;\n    onChange(newResources);\n  };\n\n  const removeResource = (index: number) => {\n    const newResources = [...resources];\n    newResources.splice(index, 1);\n    onChange(newResources);\n  };\n\n  const addResource = () => {\n    onChange(resources.concat(''));\n  };\n\n  return (\n    <>\n      <Label>\n        <h6>\n          Resource URI(s){' '}\n          <Tooltip\n            content={\n              <>\n                Manually edit the{' '}\n                <a\n                  href=\"https://docs.microsoft.com/en-us/azure/azure-monitor/logs/log-standard-columns#_resourceid\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  resource uri\n                </a>\n                . Supports the use of multiple template variables (ex: /subscriptions/$subId/resourceGroups/$rg)\n              </>\n            }\n            placement=\"right\"\n            interactive={true}\n          >\n            <Icon name=\"info-circle\" />\n          </Tooltip>\n        </h6>\n      </Label>\n      {resources.map((resource, index) => (\n        <div key={`resource-${index + 1}`}>\n          <div className={styles.resourceList}>\n            <Input\n              id={`input-advanced-resource-picker-${index + 1}`}\n              value={resource}\n              onChange={(event) => onResourceChange(index, event.currentTarget.value)}\n              placeholder=\"ex: /subscriptions/$subId\"\n              data-testid={`input-advanced-resource-picker-${index + 1}`}\n            />\n            <AccessoryButton\n              aria-label=\"remove\"\n              icon=\"times\"\n              variant=\"secondary\"\n              onClick={() => removeResource(index)}\n              data-testid={`remove-resource`}\n              hidden={resources.length === 1}\n            />\n          </div>\n        </div>\n      ))}\n      <Button aria-label=\"Add\" icon=\"plus\" variant=\"secondary\" onClick={addResource} type=\"button\">\n        Add resource URI\n      </Button>\n    </>\n  );\n};\n\nexport default AdvancedResourcePicker;\n","import { SelectableValue } from '@grafana/data';\n\nimport { AzureMonitorQuery, ResultFormat } from '../../types';\n\nexport function setKustoQuery(query: AzureMonitorQuery, kustoQuery: string): AzureMonitorQuery {\n  return {\n    ...query,\n    azureLogAnalytics: {\n      ...query.azureLogAnalytics,\n      query: kustoQuery,\n    },\n  };\n}\n\nexport function setFormatAs(query: AzureMonitorQuery, formatAs: ResultFormat): AzureMonitorQuery {\n  return {\n    ...query,\n    azureLogAnalytics: {\n      ...query.azureLogAnalytics,\n      resultFormat: formatAs,\n    },\n  };\n}\n\nexport function setDashboardTime(query: AzureMonitorQuery, dashboardTime: string): AzureMonitorQuery {\n  return {\n    ...query,\n    azureLogAnalytics: {\n      ...query.azureLogAnalytics,\n      dashboardTime: dashboardTime === 'dashboard' ? true : false,\n    },\n  };\n}\n\nexport function setTimeColumn(query: AzureMonitorQuery, timeColumn: string): AzureMonitorQuery {\n  return {\n    ...query,\n    azureLogAnalytics: {\n      ...query.azureLogAnalytics,\n      timeColumn,\n    },\n  };\n}\n\nexport function setBasicLogsQuery(query: AzureMonitorQuery, basicLogsQuery: boolean): AzureMonitorQuery {\n  return {\n    ...query,\n    azureLogAnalytics: {\n      ...query.azureLogAnalytics,\n      basicLogsQuery,\n    },\n  };\n}\nexport function onLoad(\n  query: AzureMonitorQuery,\n  defaultValue: ResultFormat,\n  handleChange: (change: SelectableValue<ResultFormat>) => void\n) {\n  if (!query.azureLogAnalytics) {\n    handleChange({ value: defaultValue });\n    return;\n  }\n  if (!query.azureLogAnalytics.resultFormat) {\n    handleChange({ value: ResultFormat.TimeSeries });\n  }\n}\n","import { useState } from 'react';\n\nimport { ConfirmModal, InlineField, RadioButtonGroup } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\n\nimport { setBasicLogsQuery, setDashboardTime, setKustoQuery } from './setQueryValue';\n\nexport function LogsManagement({ query, onQueryChange: onChange }: AzureQueryEditorFieldProps) {\n  const [basicLogsAckOpen, setBasicLogsAckOpen] = useState<boolean>(false);\n  return (\n    <>\n      <ConfirmModal\n        isOpen={basicLogsAckOpen}\n        title=\"Basic Logs Queries\"\n        body=\"Are you sure you want to switch to Basic Logs?\"\n        description=\"Basic Logs queries incur cost based on the amount of data scanned.\"\n        confirmText=\"Confirm\"\n        onConfirm={() => {\n          setBasicLogsAckOpen(false);\n          let updatedBasicLogsQuery = setBasicLogsQuery(query, true);\n          // if basic logs selected, set dashboard time\n          updatedBasicLogsQuery = setDashboardTime(updatedBasicLogsQuery, 'dashboard');\n          onChange(setKustoQuery(updatedBasicLogsQuery, ''));\n        }}\n        onDismiss={() => {\n          setBasicLogsAckOpen(false);\n          onChange(setBasicLogsQuery(query, false));\n        }}\n        confirmButtonVariant=\"primary\"\n      />\n      <InlineField label=\"Logs\" tooltip={<span>Specifies whether to run a Basic or Analytics Logs query.</span>}>\n        <RadioButtonGroup\n          options={[\n            { label: 'Analytics', value: false },\n            { label: 'Basic', value: true },\n          ]}\n          value={query.azureLogAnalytics?.basicLogsQuery ?? false}\n          size={'md'}\n          onChange={(val) => {\n            setBasicLogsAckOpen(val);\n            if (!val) {\n              const updatedBasicLogsQuery = setBasicLogsQuery(query, val);\n              onChange(setKustoQuery(updatedBasicLogsQuery, ''));\n            }\n          }}\n        />\n      </InlineField>\n    </>\n  );\n}\n","import { EngineSchema, getKustoWorker } from '@kusto/monaco-kusto';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { CodeEditor, Monaco, MonacoEditor } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\n\nimport { setKustoQuery } from './setQueryValue';\n\ninterface MonacoEditorValues {\n  editor: MonacoEditor;\n  monaco: Monaco;\n}\n\nconst QueryField = ({ query, onQueryChange, schema }: AzureQueryEditorFieldProps) => {\n  const [monaco, setMonaco] = useState<MonacoEditorValues | undefined>();\n\n  useEffect(() => {\n    if (!schema || !monaco) {\n      return;\n    }\n\n    const setupEditor = async ({ monaco, editor }: MonacoEditorValues, schema: EngineSchema) => {\n      try {\n        const model = editor.getModel();\n        if (model) {\n          const kustoWorker = await getKustoWorker();\n          const kustoMode = await kustoWorker(model?.uri);\n          await kustoMode.setSchema(schema);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    setupEditor(monaco, schema).catch((err) => console.error(err));\n  }, [schema, monaco]);\n\n  const handleEditorMount = useCallback((editor: MonacoEditor, monaco: Monaco) => {\n    setMonaco({ monaco, editor });\n  }, []);\n\n  const onChange = useCallback(\n    (newQuery: string) => {\n      onQueryChange(setKustoQuery(query, newQuery));\n    },\n    [onQueryChange, query]\n  );\n\n  return (\n    <CodeEditor\n      value={query.azureLogAnalytics?.query ?? ''}\n      language=\"kusto\"\n      height={200}\n      width=\"100%\"\n      showMiniMap={false}\n      onBlur={onChange}\n      onSave={onChange}\n      onEditorDidMount={handleEditorMount}\n    />\n  );\n};\n\nexport default QueryField;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, RadioButtonGroup, Select } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\n\nimport { setDashboardTime, setTimeColumn } from './setQueryValue';\n\nexport function TimeManagement({ query, onQueryChange: onChange, schema }: AzureQueryEditorFieldProps) {\n  const [defaultTimeColumns, setDefaultTimeColumns] = useState<SelectableValue[] | undefined>();\n  const [timeColumns, setTimeColumns] = useState<SelectableValue[] | undefined>();\n  const [disabledTimePicker, setDisabledTimePicker] = useState<boolean>(false);\n\n  const setDefaultColumn = useCallback((column: string) => onChange(setTimeColumn(query, column)), [query, onChange]);\n\n  useEffect(() => {\n    if (schema && query.azureLogAnalytics?.dashboardTime) {\n      const timeColumnOptions: SelectableValue[] = [];\n      const timeColumnsSet: Set<string> = new Set();\n      const defaultColumnsMap: Map<string, SelectableValue> = new Map();\n      const db = schema.database;\n      if (db) {\n        for (const table of db.tables) {\n          const cols = table.columns.reduce<SelectableValue[]>((prev, curr, i) => {\n            if (curr.type === 'datetime') {\n              if (!table.timespanColumn || table.timespanColumn !== curr.name) {\n                prev.push({ value: curr.name, label: `${table.name} > ${curr.name}` });\n                timeColumnsSet.add(curr.name);\n              }\n            }\n            return prev;\n          }, []);\n          timeColumnOptions.push(...cols);\n          if (table.timespanColumn && !defaultColumnsMap.has(table.timespanColumn)) {\n            defaultColumnsMap.set(table.timespanColumn, {\n              value: table.timespanColumn,\n              label: table.timespanColumn,\n            });\n          }\n        }\n      }\n      setTimeColumns(timeColumnOptions);\n      const defaultColumns = Array.from(defaultColumnsMap.values());\n      setDefaultTimeColumns(defaultColumns);\n\n      // Set default value\n      if (\n        !query.azureLogAnalytics.timeColumn ||\n        (query.azureLogAnalytics.timeColumn &&\n          !timeColumnsSet.has(query.azureLogAnalytics.timeColumn) &&\n          !defaultColumnsMap.has(query.azureLogAnalytics.timeColumn))\n      ) {\n        if (defaultColumns && defaultColumns.length) {\n          setDefaultColumn(defaultColumns[0].value);\n          setDefaultColumn(defaultColumns[0].value);\n          return;\n        } else if (timeColumnOptions && timeColumnOptions.length) {\n          setDefaultColumn(timeColumnOptions[0].value);\n          return;\n        } else {\n          setDefaultColumn('TimeGenerated');\n          return;\n        }\n      }\n    }\n  }, [schema, query.azureLogAnalytics?.dashboardTime, query.azureLogAnalytics?.timeColumn, setDefaultColumn]);\n\n  const handleTimeColumnChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setTimeColumn(query, change.value);\n      onChange(newQuery);\n    },\n    [onChange, query]\n  );\n\n  useEffect(() => {\n    if (query.azureLogAnalytics?.basicLogsQuery) {\n      setDisabledTimePicker(true);\n    } else {\n      setDisabledTimePicker(false);\n    }\n  }, [query.azureLogAnalytics?.basicLogsQuery]);\n\n  return (\n    <>\n      <InlineField\n        label=\"Time-range\"\n        tooltip={\n          <span>\n            Specifies the time-range used to query. The <code>Query</code> option will only use time-ranges specified in\n            the query. <code>Dashboard</code> will only use the Grafana time-range. In Logs Builder mode, only Dashboard\n            time will be used.\n          </span>\n        }\n      >\n        <RadioButtonGroup\n          options={[\n            { label: 'Query', value: 'query', disabled: query.azureLogAnalytics?.mode === 'builder' },\n            { label: 'Dashboard', value: 'dashboard' },\n          ]}\n          value={\n            query.azureLogAnalytics?.dashboardTime || query.azureLogAnalytics?.mode === 'builder'\n              ? 'dashboard'\n              : 'query'\n          }\n          size={'md'}\n          onChange={(val) => onChange(setDashboardTime(query, val))}\n          disabled={disabledTimePicker}\n          disabledOptions={disabledTimePicker ? ['query'] : []}\n        />\n      </InlineField>\n      {(query.azureLogAnalytics?.dashboardTime || query.azureLogAnalytics?.mode === 'builder') && (\n        <InlineField\n          label=\"Time Column\"\n          tooltip={\n            <span>\n              Specifies the time column used for filtering. Defaults to the first tables <code>timeSpan</code> column,\n              the first <code>datetime</code> column found or <code>TimeGenerated</code>.\n            </span>\n          }\n        >\n          <Select\n            options={[\n              {\n                label: 'Default time columns',\n                options: defaultTimeColumns ?? [{ value: 'TimeGenerated', label: 'TimeGenerated' }],\n              },\n              {\n                label: 'Other time columns',\n                options: timeColumns ?? [],\n              },\n            ]}\n            onChange={handleTimeColumnChange}\n            value={\n              query.azureLogAnalytics?.timeColumn\n                ? query.azureLogAnalytics?.timeColumn\n                : defaultTimeColumns\n                  ? defaultTimeColumns[0]\n                  : timeColumns\n                    ? timeColumns[0]\n                    : { value: 'TimeGenerated', label: 'TimeGenerated' }\n            }\n            allowCustomValue\n          />\n        </InlineField>\n      )}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport Datasource from '../../datasource';\nimport { AzureMonitorQuery } from '../../types';\nimport { isGUIDish } from '../ResourcePicker/utils';\n\nasync function migrateWorkspaceQueryToResourceQuery(\n  datasource: Datasource,\n  query: AzureMonitorQuery,\n  onChange: (newQuery: AzureMonitorQuery) => void\n) {\n  if (query.azureLogAnalytics?.workspace !== undefined && !query.azureLogAnalytics.resources) {\n    const isWorkspaceGUID = isGUIDish(query.azureLogAnalytics.workspace);\n    let resource: string;\n\n    if (isWorkspaceGUID) {\n      resource = await datasource.resourcePickerData.getResourceURIFromWorkspace(query.azureLogAnalytics.workspace);\n    } else {\n      // The value of workspace is probably a template variable so we just migrate it over as-is\n      resource = query.azureLogAnalytics.workspace;\n    }\n\n    const newQuery = {\n      ...query,\n      azureLogAnalytics: {\n        ...query.azureLogAnalytics,\n        resource: resource,\n        workspace: undefined,\n      },\n    };\n\n    delete newQuery.azureLogAnalytics.workspace;\n\n    onChange(newQuery);\n  }\n}\n\ninterface ErrorMessage {\n  title: string;\n  message: string;\n}\n\nexport default function useMigrations(\n  datasource: Datasource,\n  query: AzureMonitorQuery,\n  onChange: (newQuery: AzureMonitorQuery) => void\n) {\n  const [migrationError, setMigrationError] = useState<ErrorMessage>();\n\n  useEffect(() => {\n    migrateWorkspaceQueryToResourceQuery(datasource, query, onChange).catch((err) =>\n      setMigrationError({\n        title: 'Unable to migrate workspace as a resource',\n        message: err.message,\n      })\n    );\n  }, [datasource, query, onChange]);\n\n  return migrationError;\n}\n","import { getTemplateSrv } from '@grafana/runtime';\n\nimport { parseResourceURI } from '../ResourcePicker/utils';\n\nexport function shouldShowBasicLogsToggle(resources: string[], basicLogsEnabled: boolean) {\n  const selectedResource = getTemplateSrv()?.replace(resources[0]);\n  return (\n    basicLogsEnabled &&\n    resources.length === 1 &&\n    parseResourceURI(selectedResource).metricNamespace?.toLowerCase() === 'microsoft.operationalinsights/workspaces'\n  );\n}\n\nexport function calculateTimeRange(from: number, to: number): number {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const timeRange = (to - from) / day;\n\n  return timeRange;\n}\n","import { useEffect, useState } from 'react';\n\nimport { PanelData, TimeRange } from '@grafana/data';\nimport { EditorFieldGroup, EditorRow, EditorRows } from '@grafana/plugin-ui';\nimport { config, getTemplateSrv } from '@grafana/runtime';\nimport { Alert, LinkButton, Space, Text, TextLink } from '@grafana/ui';\n\nimport { LogsEditorMode } from '../../dataquery.gen';\nimport Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport {\n  AzureMonitorErrorish,\n  AzureMonitorOption,\n  AzureMonitorQuery,\n  ResultFormat,\n  EngineSchema,\n  AzureLogAnalyticsMetadataTable,\n} from '../../types';\nimport { LogsQueryBuilder } from '../LogsQueryBuilder/LogsQueryBuilder';\nimport ResourceField from '../ResourceField';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from '../ResourcePicker/types';\nimport { parseResourceDetails } from '../ResourcePicker/utils';\nimport FormatAsField from '../shared/FormatAsField';\n\nimport AdvancedResourcePicker from './AdvancedResourcePicker';\nimport { LogsManagement } from './LogsManagement';\nimport QueryField from './QueryField';\nimport { TimeManagement } from './TimeManagement';\nimport { onLoad, setBasicLogsQuery, setFormatAs, setKustoQuery } from './setQueryValue';\nimport useMigrations from './useMigrations';\nimport { shouldShowBasicLogsToggle } from './utils';\n\ninterface LogsQueryEditorProps {\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  basicLogsEnabled: boolean;\n  subscriptionId?: string;\n  onChange: (newQuery: AzureMonitorQuery) => void;\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  variableOptionGroup: { label: string; options: AzureMonitorOption[] };\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n  hideFormatAs?: boolean;\n  timeRange?: TimeRange;\n  data?: PanelData;\n}\n\nconst LogsQueryEditor = ({\n  query,\n  datasource,\n  basicLogsEnabled,\n  subscriptionId,\n  variableOptionGroup,\n  onChange,\n  onQueryChange,\n  setError,\n  hideFormatAs,\n  timeRange,\n  data,\n}: LogsQueryEditorProps) => {\n  const migrationError = useMigrations(datasource, query, onChange);\n  const [showBasicLogsToggle, setShowBasicLogsToggle] = useState<boolean>(\n    shouldShowBasicLogsToggle(query.azureLogAnalytics?.resources || [], basicLogsEnabled)\n  );\n  const [dataIngestedWarning, setDataIngestedWarning] = useState<React.ReactNode | null>(null);\n  const templateSrv = getTemplateSrv();\n  const from = templateSrv?.replace('$__from');\n  const to = templateSrv?.replace('$__to');\n  const templateVariableOptions = templateSrv.getVariables();\n  const isBasicLogsQuery = (basicLogsEnabled && query.azureLogAnalytics?.basicLogsQuery) ?? false;\n  const [isLoadingSchema, setIsLoadingSchema] = useState<boolean>(false);\n\n  const disableRow = (row: ResourceRow, selectedRows: ResourceRowGroup) => {\n    if (selectedRows.length === 0) {\n      // Only if there is some resource(s) selected we should disable rows\n      return false;\n    }\n\n    if (isBasicLogsQuery && selectedRows.length === 1) {\n      // Basic logs queries can only have one resource selected\n      return true;\n    }\n\n    const rowResourceNS = parseResourceDetails(row.uri, row.location).metricNamespace?.toLowerCase();\n    const selectedRowSampleNs = parseResourceDetails(\n      selectedRows[0].uri,\n      selectedRows[0].location\n    ).metricNamespace?.toLowerCase();\n    // Only resources with the same metricNamespace can be selected\n    return rowResourceNS !== selectedRowSampleNs;\n  };\n  const [schema, setSchema] = useState<EngineSchema | undefined>();\n\n  useEffect(() => {\n    const resources = query.azureLogAnalytics?.resources;\n    if (resources) {\n      setIsLoadingSchema(true);\n      const fetchAllPlans = async (tables: AzureLogAnalyticsMetadataTable[]) => {\n        const promises = [];\n        for (const table of tables) {\n          promises.push({\n            ...table,\n            plan: await datasource.azureMonitorDatasource.getWorkspaceTablePlan(resources, table.name),\n          });\n        }\n\n        const tablesWithPlan = await Promise.all(promises);\n        return tablesWithPlan;\n      };\n      datasource.azureLogAnalyticsDatasource.getKustoSchema(resources[0]).then((schema) => {\n        if (schema?.database?.tables && query.azureLogAnalytics?.mode === LogsEditorMode.Builder) {\n          fetchAllPlans(schema?.database?.tables).then(async (t) => {\n            if (schema.database?.tables) {\n              schema.database.tables = t;\n            }\n            setSchema(schema);\n          });\n        } else {\n          setSchema(schema);\n        }\n        setIsLoadingSchema(false);\n      });\n    }\n  }, [\n    query.azureLogAnalytics?.resources,\n    datasource.azureLogAnalyticsDatasource,\n    datasource.azureMonitorDatasource,\n    query.azureLogAnalytics?.mode,\n  ]);\n\n  useEffect(() => {\n    if (shouldShowBasicLogsToggle(query.azureLogAnalytics?.resources || [], basicLogsEnabled)) {\n      setShowBasicLogsToggle(true);\n    } else {\n      setShowBasicLogsToggle(false);\n    }\n  }, [basicLogsEnabled, query.azureLogAnalytics?.resources, templateSrv]);\n\n  useEffect(() => {\n    if ((!basicLogsEnabled || !showBasicLogsToggle) && query.azureLogAnalytics?.basicLogsQuery) {\n      const updatedBasicLogsQuery = setBasicLogsQuery(query, false);\n      onChange(setKustoQuery(updatedBasicLogsQuery, ''));\n    }\n  }, [basicLogsEnabled, onChange, query, showBasicLogsToggle]);\n\n  useEffect(() => {\n    const hasRawKql = !!query.azureLogAnalytics?.query;\n    const hasNoBuilder = !query.azureLogAnalytics?.builderQuery;\n    const modeUnset = query.azureLogAnalytics?.mode === undefined;\n\n    if (hasRawKql && hasNoBuilder && modeUnset) {\n      onChange({\n        ...query,\n        azureLogAnalytics: {\n          ...query.azureLogAnalytics,\n          mode: LogsEditorMode.Raw,\n        },\n      });\n    }\n  }, [query, onChange]);\n\n  useEffect(() => {\n    if (query.azureLogAnalytics?.mode === LogsEditorMode.Raw && query.azureLogAnalytics?.builderQuery !== undefined) {\n      onQueryChange({\n        ...query,\n        azureLogAnalytics: {\n          ...query.azureLogAnalytics,\n          builderQuery: undefined,\n          query: '',\n        },\n      });\n    }\n  }, [query.azureLogAnalytics?.mode, onQueryChange, query]);\n\n  useEffect(() => {\n    const getBasicLogsUsage = async (query: AzureMonitorQuery) => {\n      try {\n        if (showBasicLogsToggle && query.azureLogAnalytics?.basicLogsQuery && !!query.azureLogAnalytics.query) {\n          const querySplit = query.azureLogAnalytics.query.split('|');\n          // Basic Logs queries are required to start the query with a table\n          const table = querySplit[0].trim();\n          const dataIngested = await datasource.azureLogAnalyticsDatasource.getBasicLogsQueryUsage(query, table);\n          const textToShow = !!dataIngested\n            ? `This query is processing ${dataIngested} GiB when run. `\n            : 'This is a Basic Logs query and incurs cost per GiB scanned. ';\n          setDataIngestedWarning(\n            <>\n              <Text color=\"primary\">\n                {textToShow}{' '}\n                <TextLink\n                  href=\"https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1\"\n                  external\n                >\n                  Learn More\n                </TextLink>\n              </Text>\n            </>\n          );\n        } else {\n          setDataIngestedWarning(null);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getBasicLogsUsage(query).catch((err) => console.error(err));\n  }, [datasource.azureLogAnalyticsDatasource, query, showBasicLogsToggle, from, to]);\n  let portalLinkButton = null;\n\n  if (data?.series) {\n    const querySeries = data.series.find((result) => result.refId === query.refId);\n    if (querySeries && querySeries.meta?.custom?.azurePortalLink) {\n      portalLinkButton = (\n        <>\n          <LinkButton\n            size=\"md\"\n            target=\"_blank\"\n            style={{ marginTop: '22px' }}\n            href={querySeries.meta?.custom?.azurePortalLink}\n          >\n            View query in Azure Portal\n          </LinkButton>\n        </>\n      );\n    }\n  }\n\n  return (\n    <span data-testid={selectors.components.queryEditor.logsQueryEditor.container.input}>\n      <EditorRows>\n        <EditorRow>\n          <EditorFieldGroup>\n            <ResourceField\n              query={query}\n              datasource={datasource}\n              inlineField={true}\n              labelWidth={10}\n              subscriptionId={subscriptionId}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              selectableEntryTypes={[\n                ResourceRowType.Subscription,\n                ResourceRowType.ResourceGroup,\n                ResourceRowType.Resource,\n                ResourceRowType.Variable,\n              ]}\n              resources={query.azureLogAnalytics?.resources ?? []}\n              queryType=\"logs\"\n              disableRow={disableRow}\n              renderAdvanced={(resources, onChange) => (\n                // It's required to cast resources because the resource picker\n                // specifies the type to string | AzureMonitorResource.\n                // eslint-disable-next-line\n                <AdvancedResourcePicker resources={resources as string[]} onChange={onChange} />\n              )}\n              selectionNotice={(selected) => {\n                if (selected.length === 1 && isBasicLogsQuery) {\n                  return 'When using Basic Logs, you may only select one resource at a time.';\n                }\n                return 'You may only choose items of the same resource type.';\n              }}\n            />\n            {showBasicLogsToggle && (\n              <LogsManagement\n                query={query}\n                datasource={datasource}\n                variableOptionGroup={variableOptionGroup}\n                onQueryChange={onChange}\n                setError={setError}\n              />\n            )}\n            <TimeManagement\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              schema={schema}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n        <Space />\n        {query.azureLogAnalytics?.mode === LogsEditorMode.Builder &&\n        !!config.featureToggles.azureMonitorLogsBuilderEditor ? (\n          <LogsQueryBuilder\n            query={query}\n            schema={schema!}\n            basicLogsEnabled={basicLogsEnabled}\n            onQueryChange={onQueryChange}\n            templateVariableOptions={templateVariableOptions}\n            datasource={datasource}\n            timeRange={timeRange}\n            isLoadingSchema={isLoadingSchema}\n          />\n        ) : (\n          <QueryField\n            query={query}\n            datasource={datasource}\n            subscriptionId={subscriptionId}\n            variableOptionGroup={variableOptionGroup}\n            onQueryChange={onChange}\n            setError={setError}\n            schema={schema}\n          />\n        )}\n        {dataIngestedWarning}\n        <EditorRow>\n          <EditorFieldGroup>\n            {!hideFormatAs && (\n              <FormatAsField\n                query={query}\n                datasource={datasource}\n                subscriptionId={subscriptionId}\n                variableOptionGroup={variableOptionGroup}\n                onQueryChange={onChange}\n                setError={setError}\n                inputId={'azure-monitor-logs'}\n                options={[\n                  { label: 'Log', value: ResultFormat.Logs },\n                  { label: 'Time series', value: ResultFormat.TimeSeries },\n                  { label: 'Table', value: ResultFormat.Table },\n                ]}\n                defaultValue={ResultFormat.Logs}\n                setFormatAs={setFormatAs}\n                resultFormat={query.azureLogAnalytics?.resultFormat}\n                onLoad={onLoad}\n              />\n            )}\n            {portalLinkButton}\n            {migrationError && <Alert title={migrationError.title}>{migrationError.message}</Alert>}\n          </EditorFieldGroup>\n        </EditorRow>\n      </EditorRows>\n    </span>\n  );\n};\n\nexport default LogsQueryEditor;\n","import { css, cx } from '@emotion/css';\nimport Prism, { Grammar } from 'prismjs';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nexport interface Props {\n  query: string;\n  lang: {\n    grammar: Grammar;\n    name: string;\n  };\n  className?: string;\n}\nexport function RawQuery({ query, lang, className }: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const highlighted = Prism.highlight(query, lang.grammar, lang.name);\n\n  return (\n    <div\n      className={cx(styles.editorField, 'prism-syntax-highlight', className)}\n      aria-label=\"selector\"\n      dangerouslySetInnerHTML={{ __html: highlighted }}\n    />\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    editorField: css({\n      fontFamily: theme.typography.fontFamilyMonospace,\n      fontSize: theme.typography.bodySmall.fontSize,\n    }),\n  };\n};\n","import { Grammar } from 'prismjs';\n\nimport { CompletionItem } from '@grafana/ui';\n\nexport const QUERY_COMMANDS: CompletionItem[] = [\n  {\n    label: 'fields',\n    documentation: 'Retrieves the specified fields from log events',\n  },\n  { label: 'display', documentation: 'Specifies which fields to display in the query results' },\n  {\n    label: 'filter',\n    documentation: 'Filters the results of a query based on one or more conditions',\n  },\n  {\n    label: 'stats',\n    documentation: 'Calculates aggregate statistics based on the values of log fields',\n  },\n  { label: 'sort', documentation: 'Sorts the retrieved log events' },\n  { label: 'limit', documentation: 'Specifies the number of log events returned by the query' },\n  {\n    label: 'parse',\n    documentation:\n      'Extracts data from a log field, creating one or more ephemeral fields that you can process further in the query',\n  },\n];\n\nexport const COMPARISON_OPERATORS = ['=', '!=', '<', '<=', '>', '>='];\nexport const ARITHMETIC_OPERATORS = ['+', '-', '*', '/', '^', '%'];\n\nexport const NUMERIC_OPERATORS = [\n  {\n    label: 'abs',\n    detail: 'abs(a)',\n    documentation: 'Absolute value.',\n  },\n  {\n    label: 'ceil',\n    detail: 'ceil(a)',\n    documentation: 'Round to ceiling (the smallest integer that is greater than the value of a).',\n  },\n  {\n    label: 'floor',\n    detail: 'floor(a)',\n    documentation: 'Round to floor (the largest integer that is smaller than the value of a).',\n  },\n  {\n    label: 'greatest',\n    detail: 'greatest(a,b, ... z)',\n    documentation: 'Returns the largest value.',\n  },\n  {\n    label: 'least',\n    detail: 'least(a, b, ... z)',\n    documentation: 'Returns the smallest value.',\n  },\n  {\n    label: 'log',\n    detail: 'log(a)',\n    documentation: 'Natural logarithm.',\n  },\n  {\n    label: 'sqrt',\n    detail: 'sqrt(a)',\n    documentation: 'Square root.',\n  },\n];\n\nexport const GENERAL_FUNCTIONS = [\n  {\n    label: 'ispresent',\n    detail: 'ispresent(fieldname)',\n    documentation: 'Returns true if the field exists.',\n  },\n  {\n    label: 'coalesce',\n    detail: 'coalesce(fieldname1, fieldname2, ... fieldnamex)',\n    documentation: 'Returns the first non-null value from the list.',\n  },\n];\n\nexport const STRING_FUNCTIONS = [\n  {\n    label: 'isempty',\n    detail: 'isempty(fieldname)',\n    documentation: 'Returns true if the field is missing or is an empty string.',\n  },\n  {\n    label: 'isblank',\n    detail: 'isblank(fieldname)',\n    documentation: 'Returns true if the field is missing, an empty string, or contains only white space.',\n  },\n  {\n    label: 'concat',\n    detail: 'concat(string1, string2, ... stringz)',\n    documentation: 'Concatenates the strings.',\n  },\n  {\n    label: 'ltrim',\n    detail: 'ltrim(string) or ltrim(string1, string2)',\n    documentation:\n      'Remove white space from the left of the string. If the function has a second string argument, it removes the characters of string2 from the left of string1.',\n  },\n  {\n    label: 'rtrim',\n    detail: 'rtrim(string) or rtrim(string1, string2)',\n    documentation:\n      'Remove white space from the right of the string. If the function has a second string argument, it removes the characters of string2 from the right of string1.',\n  },\n  {\n    label: 'trim',\n    detail: 'trim(string) or trim(string1, string2)',\n    documentation:\n      'Remove white space from both ends of the string. If the function has a second string argument, it removes the characters of string2 from both sides of string1.',\n  },\n  {\n    label: 'strlen',\n    detail: 'strlen(string)',\n    documentation: 'Returns the length of the string in Unicode code points.',\n  },\n  {\n    label: 'toupper',\n    detail: 'toupper(string)',\n    documentation: 'Converts the string to uppercase.',\n  },\n  {\n    label: 'tolower',\n    detail: 'tolower(string)',\n    documentation: 'Converts the string to lowercase.',\n  },\n  {\n    label: 'substr',\n    detail: 'substr(string1, x), or substr(string1, x, y)',\n    documentation:\n      'Returns a substring from the index specified by the number argument to the end of the string. If the function has a second number argument, it contains the length of the substring to be retrieved.',\n  },\n  {\n    label: 'replace',\n    detail: 'replace(string1, string2, string3)',\n    documentation: 'Replaces all instances of string2 in string1 with string3.',\n  },\n  {\n    label: 'strcontains',\n    detail: 'strcontains(string1, string2)',\n    documentation: 'Returns 1 if string1 contains string2 and 0 otherwise.',\n  },\n];\n\nexport const DATETIME_FUNCTIONS = [\n  {\n    label: 'bin',\n    detail: 'bin(period)',\n    documentation: 'Rounds the value of @timestamp to the given period and then truncates.',\n  },\n  {\n    label: 'datefloor',\n    detail: 'datefloor(a, period)',\n    documentation: 'Truncates the timestamp to the given period.',\n  },\n  {\n    label: 'dateceil',\n    detail: 'dateceil(a, period)',\n    documentation: 'Rounds up the timestamp to the given period and then truncates.',\n  },\n  {\n    label: 'fromMillis',\n    detail: 'fromMillis(fieldname)',\n    documentation:\n      'Interprets the input field as the number of milliseconds since the Unix epoch and converts it to a timestamp.',\n  },\n  {\n    label: 'toMillis',\n    detail: 'toMillis(fieldname)',\n    documentation:\n      'Converts the timestamp found in the named field into a number representing the milliseconds since the Unix epoch.',\n  },\n];\n\nexport const IP_FUNCTIONS = [\n  {\n    label: 'isValidIp',\n    detail: 'isValidIp(fieldname)',\n    documentation: 'Returns true if the field is a valid v4 or v6 IP address.',\n  },\n  {\n    label: 'isValidIpV4',\n    detail: 'isValidIpV4(fieldname)',\n    documentation: 'Returns true if the field is a valid v4 IP address.',\n  },\n  {\n    label: 'isValidIpV6',\n    detail: 'isValidIpV6(fieldname)',\n    documentation: 'Returns true if the field is a valid v6 IP address.',\n  },\n  {\n    label: 'isIpInSubnet',\n    detail: 'isIpInSubnet(fieldname, string)',\n    documentation: 'Returns true if the field is a valid v4 or v6 IP address within the specified v4 or v6 subnet.',\n  },\n  {\n    label: 'isIpv4InSubnet',\n    detail: 'isIpv4InSubnet(fieldname, string)',\n    documentation: 'Returns true if the field is a valid v4 IP address within the specified v4 subnet.',\n  },\n  {\n    label: 'isIpv6InSubnet',\n    detail: 'isIpv6InSubnet(fieldname, string)',\n    documentation: 'Returns true if the field is a valid v6 IP address within the specified v6 subnet.',\n  },\n];\n\nexport const BOOLEAN_FUNCTIONS = [\n  {\n    label: 'ispresent',\n    detail: 'ispresent(fieldname)',\n    documentation: 'Returns true if the field exists.',\n  },\n  {\n    label: 'isempty',\n    detail: 'isempty(fieldname)',\n    documentation: 'Returns true if the field is missing or is an empty string.',\n  },\n  {\n    label: 'isblank',\n    detail: 'isblank(fieldname)',\n    documentation: 'Returns true if the field is missing, an empty string, or contains only white space.',\n  },\n  {\n    label: 'strcontains',\n    detail: 'strcontains(string1, string2)',\n    documentation: 'Returns 1 if string1 contains string2 and 0 otherwise.',\n  },\n  ...IP_FUNCTIONS,\n];\n\nexport const AGGREGATION_FUNCTIONS_STATS = [\n  {\n    label: 'avg',\n    detail: 'avg(NumericFieldname)',\n    documentation: 'The average of the values in the specified field.',\n  },\n  {\n    label: 'count',\n    detail: 'count(fieldname) or count(*)',\n    documentation: 'Counts the log records.',\n  },\n  {\n    label: 'count_distinct',\n    detail: 'count_distinct(fieldname)',\n    documentation: 'Returns the number of unique values for the field.',\n  },\n  {\n    label: 'max',\n    detail: 'max(fieldname)',\n    documentation: 'The maximum of the values for this log field in the queried logs.',\n  },\n  {\n    label: 'min',\n    detail: 'min(fieldname)',\n    documentation: 'The minimum of the values for this log field in the queried logs.',\n  },\n  {\n    label: 'pct',\n    detail: 'pct(fieldname, value)',\n    documentation: 'A percentile indicates the relative standing of a value in a datas.',\n  },\n  {\n    label: 'stddev',\n    detail: 'stddev(NumericFieldname)',\n    documentation: 'The standard deviation of the values in the specified field.',\n  },\n  {\n    label: 'sum',\n    detail: 'sum(NumericFieldname)',\n    documentation: 'The sum of the values in the specified field.',\n  },\n];\n\nexport const NON_AGGREGATION_FUNCS_STATS = [\n  {\n    label: 'earliest',\n    detail: 'earliest(fieldname)',\n    documentation:\n      'Returns the value of fieldName from the log event that has the earliest time stamp in the queried logs.',\n  },\n  {\n    label: 'latest',\n    detail: 'latest(fieldname)',\n    documentation:\n      'Returns the value of fieldName from the log event that has the latest time stamp in the queried logs.',\n  },\n  {\n    label: 'sortsFirst',\n    detail: 'sortsFirst(fieldname)',\n    documentation: 'Returns the value of fieldName that sorts first in the queried logs.',\n  },\n  {\n    label: 'sortsLast',\n    detail: 'sortsLast(fieldname)',\n    documentation: 'Returns the value of fieldName that sorts last in the queried logs.',\n  },\n];\n\nexport const STATS_FUNCS = [...AGGREGATION_FUNCTIONS_STATS, ...NON_AGGREGATION_FUNCS_STATS];\n\nexport const KEYWORDS = ['as', 'like', 'by', 'in', 'desc', 'asc'];\nexport const FIELD_AND_FILTER_FUNCTIONS = [\n  ...NUMERIC_OPERATORS,\n  ...GENERAL_FUNCTIONS,\n  ...STRING_FUNCTIONS,\n  ...DATETIME_FUNCTIONS,\n  ...IP_FUNCTIONS,\n];\n\nexport const FUNCTIONS = [...FIELD_AND_FILTER_FUNCTIONS, ...STATS_FUNCS];\n\nconst tokenizer: Grammar = {\n  comment: {\n    pattern: /^#.*/,\n    greedy: true,\n  },\n  backticks: {\n    pattern: /`.*?`/,\n    alias: 'string',\n    greedy: true,\n  },\n  quote: {\n    pattern: /\".*?\"/,\n    alias: 'string',\n    greedy: true,\n  },\n  regex: {\n    pattern: /\\/.*?\\/(?=\\||\\s*$|,)/,\n    greedy: true,\n  },\n  'query-command': {\n    pattern: new RegExp(`\\\\b(?:${QUERY_COMMANDS.map((command) => command.label).join('|')})\\\\b`, 'i'),\n    alias: 'function',\n  },\n  function: {\n    pattern: new RegExp(`\\\\b(?:${FUNCTIONS.map((f) => f.label).join('|')})\\\\b`, 'i'),\n  },\n  keyword: {\n    pattern: new RegExp(`(\\\\s+)(${KEYWORDS.join('|')})(?=\\\\s+)`, 'i'),\n    lookbehind: true,\n  },\n  'log-group-name': {\n    pattern: /[\\.\\-_/#A-Za-z0-9]+/,\n  },\n  'field-name': {\n    pattern: /(@?[_a-zA-Z]+[_.0-9a-zA-Z]*)|(`((\\\\`)|([^`]))*?`)/,\n    greedy: true,\n  },\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  'command-separator': {\n    pattern: /\\|/,\n    alias: 'punctuation',\n  },\n  'comparison-operator': {\n    pattern: /([<>]=?)|(!?=)/,\n  },\n  punctuation: /[{}()`,.]/,\n  whitespace: /\\s+/,\n};\n\nexport default tokenizer;\n","import { css } from '@emotion/css';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport {\n  Button,\n  Card,\n  Collapse,\n  Field,\n  Input,\n  LoadingPlaceholder,\n  ScrollContainer,\n  Select,\n  useStyles2,\n} from '@grafana/ui';\n\nimport AzureLogAnalyticsDatasource from '../../azure_log_analytics/azure_log_analytics_datasource';\nimport {\n  AzureMonitorQuery,\n  AzureQueryType,\n  Category,\n  CheatsheetQueries,\n  CheatsheetQuery,\n  DropdownCategories,\n} from '../../types';\n\nimport { RawQuery } from './RawQuery';\nimport tokenizer from './syntax';\n\nexport interface AzureCheatSheetProps {\n  onChange: (query: AzureMonitorQuery) => void;\n  query: AzureMonitorQuery;\n  datasource: AzureLogAnalyticsDatasource;\n}\n\nconst AzureCheatSheet = (props: AzureCheatSheetProps) => {\n  const [cheatsheetQueries, setCheatsheetQueries] = useState<CheatsheetQueries | null>(null);\n  const [areDropdownsOpen, setAreDropdownsOpen] = useState<DropdownCategories>({});\n  const [visibleQueries, setVisibleQueries] = useState<CheatsheetQueries | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const styles = useStyles2(getStyles);\n  const lang = { grammar: tokenizer, name: 'kql' };\n  const dropdownMenu = useMemo(() => {\n    if (cheatsheetQueries) {\n      return Object.keys(cheatsheetQueries).map((category): SelectableValue<string> => {\n        return {\n          label: category,\n          value: category,\n        };\n      });\n    }\n    return [];\n  }, [cheatsheetQueries]);\n\n  const getCheatsheetQueries = async () => {\n    await props.datasource.getAzureLogAnalyticsCheatsheetQueries().then((result) => {\n      result.categories.sort((a: Category, b: Category) => {\n        return a.displayName.toLowerCase() === b.displayName.toLowerCase()\n          ? 0\n          : a.displayName.toLowerCase() < b.displayName.toLowerCase()\n            ? -1\n            : 1;\n      });\n      const alphabetizedQueries = result.categories.reduce(\n        (queriesByCategory: CheatsheetQueries, category: Category) => {\n          const categoryQueries = category.related.queries.map((queryId: string) => {\n            return result.queries.find((query: CheatsheetQuery) => query.id === queryId);\n          });\n          queriesByCategory[category.displayName] = categoryQueries;\n          setAreDropdownsOpen({ ...areDropdownsOpen, [category.id]: false });\n          return queriesByCategory;\n        },\n        {}\n      );\n      setCheatsheetQueries(alphabetizedQueries);\n      setVisibleQueries(alphabetizedQueries);\n      setIsLoading(false);\n      return alphabetizedQueries;\n    });\n  };\n\n  useEffect(() => {\n    if (!cheatsheetQueries) {\n      getCheatsheetQueries();\n    }\n  });\n\n  const filterQueriesBySearch = (searchValue: string) => {\n    const visibleQueriesCategories = Object.keys(visibleQueries!);\n    if (searchValue.length > 0 && cheatsheetQueries) {\n      const filteredQueries: CheatsheetQueries = Object.keys(cheatsheetQueries).reduce(\n        (filteredQueriesBySearch: CheatsheetQueries, category) => {\n          const filters = cheatsheetQueries![category]!.filter((query) => {\n            return query.displayName.toLowerCase().includes(searchValue.toLowerCase());\n          });\n          if (visibleQueriesCategories.includes(category)) {\n            filteredQueriesBySearch[category] = filters;\n          }\n          return filteredQueriesBySearch;\n        },\n        {}\n      );\n\n      setVisibleQueries(filteredQueries);\n      return filteredQueries;\n    } else {\n      if (Object.keys(visibleQueries!).length !== Object.keys(cheatsheetQueries!).length) {\n        setVisibleQueries(visibleQueries);\n        return visibleQueries;\n      } else {\n        setVisibleQueries(cheatsheetQueries);\n        return cheatsheetQueries;\n      }\n    }\n  };\n\n  const filterQueriesByCategory = (categories: SelectableValue<string>) => {\n    if (categories.length > 0) {\n      const selectedCategories = categories.map((selectedCategory: SelectableValue) => selectedCategory.label);\n      const updatedVisibleQueries = selectedCategories.reduce(\n        (updatedVisibleQueries: CheatsheetQueries, queryCategory: string) => {\n          updatedVisibleQueries[queryCategory] = cheatsheetQueries![queryCategory]!;\n          return updatedVisibleQueries;\n        },\n        {}\n      );\n      setVisibleQueries(updatedVisibleQueries);\n    } else {\n      setVisibleQueries(cheatsheetQueries);\n    }\n  };\n\n  return (\n    <div>\n      {!isLoading && visibleQueries ? (\n        <div>\n          <div className={styles.filterAlignment}>\n            <Input\n              value={searchInputValue}\n              onChange={(e) => {\n                setSearchInputValue(e.currentTarget.value);\n                const filteredQueries = filterQueriesBySearch(e.currentTarget.value);\n                setVisibleQueries(filteredQueries);\n              }}\n              placeholder=\"Search Logs queries\"\n              width={40}\n            />\n            <Field label=\"Categories\" className={styles.categoryDropdown}>\n              <Select\n                options={dropdownMenu}\n                value={''}\n                onChange={(a) => filterQueriesByCategory(a)}\n                allowCustomValue={false}\n                backspaceRemovesValue={true}\n                placeholder=\"All categories\"\n                isClearable={true}\n                noOptionsMessage=\"Unable to list all categories\"\n                formatCreateLabel={(input: string) => `Category: ${input}`}\n                isSearchable={true}\n                isMulti={true}\n                width={40}\n              />\n            </Field>\n          </div>\n          <div className={styles.spacing}>\n            Query results:{' '}\n            {Object.keys(visibleQueries).reduce((totalQueries: number, category) => {\n              totalQueries = visibleQueries[category]!.length + totalQueries;\n              return totalQueries;\n            }, 0)}\n          </div>\n          <ScrollContainer showScrollIndicators maxHeight=\"350px\">\n            {Object.keys(visibleQueries).map((category: string) => {\n              if (visibleQueries[category]!.length) {\n                return (\n                  <Collapse\n                    label={category + ' ' + `(${visibleQueries[category]!.length})`}\n                    collapsible={true}\n                    isOpen={areDropdownsOpen[category]}\n                    onToggle={(isOpen) => setAreDropdownsOpen({ ...areDropdownsOpen, [category]: isOpen })}\n                    key={category}\n                  >\n                    {visibleQueries[category]!.map((query) => {\n                      return (\n                        <Card className={styles.card} key={query.id}>\n                          <Card.Heading>{query.displayName}</Card.Heading>\n                          <ScrollContainer showScrollIndicators maxHeight=\"100px\">\n                            <RawQuery\n                              aria-label={`${query.displayName} raw query`}\n                              query={query.body}\n                              lang={lang}\n                              className={styles.rawQuery}\n                            />\n                          </ScrollContainer>\n                          <Card.Actions>\n                            <Button\n                              size=\"sm\"\n                              aria-label=\"use this query button\"\n                              onClick={() => {\n                                props.onChange({\n                                  refId: 'A',\n                                  queryType: AzureQueryType.LogAnalytics,\n                                  azureLogAnalytics: { query: query.body },\n                                  datasource: props.datasource,\n                                });\n                                reportInteraction('grafana_azure_cheatsheet_logs_query_selected', {\n                                  id: query.id,\n                                  queryName: query.displayName,\n                                  query: query.body,\n                                  queryCategories: query.related.categories,\n                                });\n                              }}\n                            >\n                              Use this query\n                            </Button>\n                          </Card.Actions>\n                        </Card>\n                      );\n                    })}\n                  </Collapse>\n                );\n              }\n              return;\n            })}\n          </ScrollContainer>\n        </div>\n      ) : (\n        <LoadingPlaceholder text=\"Loading...\" />\n      )}\n    </div>\n  );\n};\n\nexport default AzureCheatSheet;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    card: css({\n      width: '90%',\n      display: 'flex',\n      flexDirection: 'column',\n    }),\n    rawQuery: css({\n      backgroundColor: `${theme.colors.background.primary}`,\n      padding: `${theme.spacing(1)}`,\n      marginTop: `${theme.spacing(1)}`,\n    }),\n    spacing: css({\n      marginBottom: `${theme.spacing(1)}`,\n    }),\n    filterAlignment: css({\n      display: 'flex',\n    }),\n    categoryDropdown: css({\n      margin: '0 0 10px 10px',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n    }),\n  };\n};\n","import { CoreApp } from '@grafana/data';\nimport { Modal } from '@grafana/ui';\n\nimport AzureLogAnalyticsDatasource from '../../azure_log_analytics/azure_log_analytics_datasource';\nimport { AzureMonitorQuery } from '../../dataquery.gen';\n\nimport AzureCheatSheet from './AzureCheatSheet';\n\ntype Props = {\n  isOpen: boolean;\n  app?: CoreApp;\n  onClose: () => void;\n  onChange: (query: AzureMonitorQuery) => void;\n  onAddQuery?: (query: AzureMonitorQuery) => void;\n  datasource: AzureLogAnalyticsDatasource;\n};\n\nexport const AzureCheatSheetModal = (props: Props) => {\n  const { isOpen, onClose, datasource, onChange } = props;\n\n  return (\n    <Modal aria-label=\"Kick start your query modal\" isOpen={isOpen} title=\"Kick start your query\" onDismiss={onClose}>\n      <AzureCheatSheet\n        onChange={(a) => {\n          onChange(a);\n          onClose();\n        }}\n        query={{ refId: 'A' }}\n        datasource={datasource}\n      ></AzureCheatSheet>\n    </Modal>\n  );\n};\n","/**\nThis list is obtained parsing https://docs.microsoft.com/en-us/azure/governance/resource-graph/reference/supported-tables-resources\nTo programatically get the list, execute in the browser console:\n \n const i = {};\n document.querySelectorAll('li').forEach((li) => { \n    const m = li.textContent.match(/(.*\\..*\\/.*?)\\s\\((.*)\\)/);\n    if (m) {\n      i[m[1].toLowerCase()] = m[2];\n    }\n  });\n  i;\n \nNote: Validate that the output makes sense, the format of the page may change.\n */\nexport const resourceTypeDisplayNames: { [k: string]: string } = {\n  '84codes.cloudamqp/servers': 'CloudAMQP',\n  'citrix.services/xenappessentials': 'Citrix Virtual Apps Essentials',\n  'citrix.services/xendesktopessentials': 'Citrix Virtual Desktops Essentials',\n  'dynatrace.observability/monitors': 'Dynatrace',\n  'github.enterprise/accounts': 'GitHub AE',\n  'livearena.broadcast/services': 'LiveArena Broadcast',\n  'mailjet.email/services': 'Mailjet Email Service',\n  'microsoft.aad/domainservices': 'Azure AD Domain Services',\n  'microsoft.aadiam/privatelinkforazuread': 'Private Link for Azure AD',\n  'microsoft.agfoodplatform/farmbeats': 'Azure FarmBeats',\n  'microsoft.analysisservices/servers': 'Analysis Services',\n  'microsoft.anybuild/clusters': 'AnyBuild clusters',\n  'microsoft.apimanagement/service': 'API Management services',\n  'microsoft.appconfiguration/configurationstores': 'App Configuration',\n  'microsoft.appplatform/spring': 'Azure Spring Cloud',\n  'microsoft.attestation/attestationproviders': 'Attestation providers',\n  'microsoft.authorization/resourcemanagementprivatelinks': 'Resource management private links',\n  'microsoft.automation/automationaccounts': 'Automation Accounts',\n  'microsoft.automation/automationaccounts/runbooks': 'Runbook',\n  'microsoft.autonomoussystems/workspaces': 'Bonsai',\n  'microsoft.avs/privateclouds': 'AVS Private clouds',\n  'microsoft.azureactivedirectory/b2cdirectories': 'B2C Tenants',\n  'microsoft.azureactivedirectory/guestusages': 'Guest Usages',\n  'microsoft.azurearcdata/datacontrollers': 'Azure Arc data controllers',\n  'microsoft.azurearcdata/postgresinstances': 'Azure Arc-enabled PostgreSQL Hyperscale server groups',\n  'microsoft.azurearcdata/sqlmanagedinstances': 'SQL managed instances - Azure Arc',\n  'microsoft.azurearcdata/sqlserverinstances': 'SQL Server - Azure Arc',\n  'microsoft.azuredata/sqlserverregistrations': 'SQL Server registries',\n  'microsoft.azurepercept/accounts': 'Azure Percept accounts',\n  'microsoft.azurestack/registrations': 'Azure Stack Hubs',\n  'microsoft.azurestackhci/clusters': 'Azure Stack HCI',\n  'microsoft.azurestackhci/virtualmachines': 'Azure Stack HCI virtual machine - Azure Arc',\n  'microsoft.baremetal/crayservers': 'Cray Servers',\n  'microsoft.baremetal/monitoringservers': 'Monitoring Servers',\n  'microsoft.baremetalinfrastructure/baremetalinstances': 'BareMetal Instances',\n  'microsoft.batch/batchaccounts': 'Batch accounts',\n  'microsoft.bing/accounts': 'Bing Resources',\n  'microsoft.blockchain/blockchainmembers': 'Azure Blockchain Service',\n  'microsoft.blockchain/cordamembers': 'Corda',\n  'microsoft.botservice/botservices': 'Bot Services',\n  'microsoft.cache/redis': 'Azure Cache for Redis',\n  'microsoft.cache/redisenterprise': 'Redis Enterprise',\n  'microsoft.cdn/cdnwebapplicationfirewallpolicies': 'Content Delivery Network WAF policies',\n  'microsoft.cdn/profiles': '(front doors standard/premium Preview)',\n  'microsoft.cdn/profiles/afdendpoints': 'Endpoints',\n  'microsoft.cdn/profiles/endpoints': 'Endpoints',\n  'microsoft.certificateregistration/certificateorders': 'App Service Certificates',\n  'microsoft.chaos/chaosexperiments': 'Chaos Experiments (Classic)',\n  'microsoft.chaos/experiments': 'Chaos Experiments',\n  'microsoft.classiccompute/domainnames': 'Cloud services (classic)',\n  'microsoft.classiccompute/virtualmachines': 'Virtual machines (classic)',\n  'microsoft.classicnetwork/networksecuritygroups': 'Network security groups (classic)',\n  'microsoft.classicnetwork/reservedips': 'Reserved IP addresses (classic)',\n  'microsoft.classicnetwork/virtualnetworks': 'Virtual networks (classic)',\n  'microsoft.classicstorage/storageaccounts': 'Storage accounts (classic)',\n  'microsoft.cloudtest/accounts': 'CloudTest Accounts',\n  'microsoft.cloudtest/hostedpools': '1ES Hosted Pools',\n  'microsoft.cloudtest/images': 'CloudTest Images',\n  'microsoft.cloudtest/pools': 'CloudTest Pools',\n  'microsoft.cognition/syntheticsaccounts': 'Synthetics Accounts',\n  'microsoft.clusterstor/nodes': 'ClusterStors',\n  'microsoft.cognitiveservices/accounts': 'Cognitive Services',\n  'microsoft.compute/availabilitysets': 'Availability sets',\n  'microsoft.compute/capacityreservationgroups': 'Capacity Reservation Groups',\n  'microsoft.compute/cloudservices': 'Cloud services (extended support)',\n  'microsoft.compute/diskaccesses': 'Disk Accesses',\n  'microsoft.compute/diskencryptionsets': 'Disk Encryption Sets',\n  'microsoft.compute/disks': 'Disks',\n  'microsoft.compute/galleries': 'Azure compute galleries',\n  'microsoft.compute/galleries/applications': 'VM application definitions',\n  'microsoft.compute/galleries/applications/versions': 'VM application versions',\n  'microsoft.compute/galleries/images': 'VM image definitions',\n  'microsoft.compute/galleries/images/versions': 'VM image versions',\n  'microsoft.compute/hostgroups': 'Host groups',\n  'microsoft.compute/hostgroups/hosts': 'Hosts',\n  'microsoft.compute/images': 'Images',\n  'microsoft.compute/proximityplacementgroups': 'Proximity placement groups',\n  'microsoft.compute/restorepointcollections': 'Restore Point Collections',\n  'microsoft.compute/snapshots': 'Snapshots',\n  'microsoft.compute/sshpublickeys': 'SSH keys',\n  'microsoft.compute/virtualmachines': 'Virtual machines',\n  'microsoft.compute/virtualmachinescalesets': 'Virtual machine scale sets',\n  'microsoft.confidentialledger/ledgers': 'Confidential Ledgers',\n  'microsoft.confluent/organizations': 'Confluent organizations',\n  'microsoft.connectedcache/cachenodes': 'Connected Cache Resources',\n  'microsoft.connectedcache/enterprisecustomers': 'Connected Cache Resources',\n  'microsoft.connectedvehicle/platformaccounts': 'Connected Vehicle Platforms',\n  'microsoft.connectedvmwarevsphere/vcenters': 'VMware vCenters',\n  'microsoft.connectedvmwarevsphere/virtualmachines': 'VMware + AVS virtual machines',\n  'microsoft.containerinstance/containergroups': 'Container instances',\n  'microsoft.containerregistry/registries': 'Container registries',\n  'microsoft.containerregistry/registries/replications': 'Container registry replications',\n  'microsoft.containerregistry/registries/webhooks': 'Container registry webhooks',\n  'microsoft.containerservice/managedclusters': 'Kubernetes services',\n  'microsoft.dashboard/grafana': 'Grafana Workspaces',\n  'microsoft.databox/jobs': 'Azure Data Box',\n  'microsoft.databoxedge/databoxedgedevices': 'Azure Stack Edge / Data Box Gateway',\n  'microsoft.databricks/workspaces': 'Azure Databricks Services',\n  'microsoft.datacatalog/catalogs': 'Data Catalog',\n  'microsoft.datacollaboration/workspaces': 'Project CI',\n  'microsoft.datadog/monitors': 'Datadog',\n  'microsoft.datafactory/datafactories': 'Data factories',\n  'microsoft.datafactory/factories': 'Data factories (V2)',\n  'microsoft.datalakeanalytics/accounts': 'Data Lake Analytics',\n  'microsoft.datalakestore/accounts': 'Data Lake Storage Gen1',\n  'microsoft.datamigration/services': 'Azure Database Migration Services',\n  'microsoft.datamigration/services/projects': 'Azure Database Migration Projects',\n  'microsoft.datamigration/sqlmigrationservices': 'Azure Database Migration Services',\n  'microsoft.dataprotection/backupvaults': 'Backup vaults',\n  'microsoft.dataprotection/resourceguards': 'Resource Guards (Preview)',\n  'microsoft.datareplication/replicationvaults': 'Site Recovery Vaults',\n  'microsoft.datashare/accounts': 'Data Shares',\n  'microsoft.dbformariadb/servers': 'Azure Database for MariaDB servers',\n  'microsoft.dbformysql/flexibleservers': 'Azure Database for MySQL flexible servers',\n  'microsoft.dbformysql/servers': 'Azure Database for MySQL servers',\n  'microsoft.dbforpostgresql/flexibleservers': 'Azure Database for PostgreSQL flexible servers',\n  'microsoft.dbforpostgresql/servergroups': 'Azure Database for PostgreSQL server groups',\n  'microsoft.dbforpostgresql/servergroupsv2': 'Azure Database for PostgreSQL server groups',\n  'microsoft.dbforpostgresql/servers': 'Azure Database for PostgreSQL servers',\n  'microsoft.dbforpostgresql/serversv2': 'Azure Database for PostgreSQL servers v2',\n  'microsoft.deploymentmanager/rollouts': 'Rollouts',\n  'microsoft.desktopvirtualization/applicationgroups': 'Application groups',\n  'microsoft.desktopvirtualization/hostpools': 'Host pools',\n  'microsoft.desktopvirtualization/scalingplans': 'Scaling plans',\n  'microsoft.desktopvirtualization/workspaces': 'Workspaces',\n  'microsoft.devices/iothubs': 'IoT Hub',\n  'microsoft.devices/provisioningservices': 'Device Provisioning Services',\n  'microsoft.deviceupdate/accounts': 'Device Update for IoT Hubs',\n  'microsoft.devops/pipelines': 'DevOps Starter',\n  'microsoft.devtestlab/labs': 'DevTest Labs',\n  'microsoft.devtestlab/labs/virtualmachines': 'Virtual machines',\n  'microsoft.digitaltwins/digitaltwinsinstances': 'Azure Digital Twins',\n  'microsoft.documentdb/cassandraclusters': 'Azure Managed Instance for Apache Cassandra',\n  'microsoft.documentdb/databaseaccounts': 'Azure Cosmos DB accounts',\n  'microsoft.domainregistration/domains': 'App Service Domains',\n  'microsoft.edgeorder/addresses': 'Azure Edge Hardware Center Address',\n  'microsoft.edgeorder/orderitems': 'Azure Edge Hardware Center',\n  'microsoft.elastic/monitors': 'Elasticsearch (Elastic Cloud)',\n  'microsoft.eventgrid/domains': 'Event Grid Domains',\n  'microsoft.eventgrid/partnernamespaces': 'Event Grid Partner Namespaces',\n  'microsoft.eventgrid/partnerregistrations': 'Event Grid Partner Registrations',\n  'microsoft.eventgrid/partnertopics': 'Event Grid Partner Topics',\n  'microsoft.eventgrid/systemtopics': 'Event Grid System Topics',\n  'microsoft.eventgrid/topics': 'Event Grid Topics',\n  'microsoft.eventhub/clusters': 'Event Hubs Clusters',\n  'microsoft.eventhub/namespaces': 'Event Hubs Namespaces',\n  'microsoft.experimentation/experimentworkspaces': 'Experiment Workspaces',\n  'microsoft.extendedlocation/customlocations': 'Custom locations',\n  'microsoft.fidalgo/devcenters': 'Fidalgo DevCenters',\n  'microsoft.fidalgo/networksettings': 'Network Configurations',\n  'microsoft.fidalgo/projects': 'Fidalgo Projects',\n  'microsoft.fidalgo/projects/environments': 'Fidalgo Environments',\n  'microsoft.fluidrelay/fluidrelayservers': 'Fluid Relay',\n  'microsoft.genomics/accounts': 'Genomics accounts',\n  'microsoft.hanaonazure/hanainstances': 'SAP HANA on Azure',\n  'microsoft.hanaonazure/sapmonitors': 'Azure Monitors for SAP Solutions',\n  'microsoft.hdinsight/clusterpools': 'HDInsight cluster pools',\n  'microsoft.hdinsight/clusterpools/clusters': 'HDInsight gen2 clusters',\n  'microsoft.hdinsight/clusterpools/clusters/sessionclusters': 'HDInsight session clusters',\n  'microsoft.hdinsight/clusters': 'HDInsight clusters',\n  'microsoft.healthbot/healthbots': 'Azure Health Bot',\n  'microsoft.healthcareapis/services': 'Azure API for FHIR',\n  'microsoft.healthcareapis/workspaces': 'Healthcare APIs Workspaces',\n  'microsoft.healthcareapis/workspaces/dicomservices': 'DICOM services',\n  'microsoft.healthcareapis/workspaces/fhirservices': 'FHIR services',\n  'microsoft.healthcareapis/workspaces/iotconnectors': 'IoT connectors',\n  'microsoft.hpcworkbench/instances': 'HPC Workbenches (preview)',\n  'microsoft.hpcworkbench/instances/chambers': 'Chambers (preview)',\n  'microsoft.hpcworkbench/instances/chambers/accessprofiles': 'Chamber Profiles (preview)',\n  'microsoft.hpcworkbench/instances/chambers/workloads': 'Chamber VMs (preview)',\n  'microsoft.hpcworkbench/instances/consortiums': 'Consortiums (preview)',\n  'microsoft.hybridcompute/machines': 'Servers - Azure Arc',\n  'microsoft.hybridcompute/privatelinkscopes': 'Azure Arc Private Link Scopes',\n  'microsoft.hybridcontainerservice/provisionedclusters': 'Provisioned clusters',\n  'microsoft.hybriddata/datamanagers': 'StorSimple Data Managers',\n  'microsoft.hybridnetwork/devices': 'Azure Network Function Manager – Devices',\n  'microsoft.hybridnetwork/networkfunctions': 'Azure Network Function Manager – Network Functions',\n  'microsoft.importexport/jobs': 'Import/export jobs',\n  'microsoft.insights/components': 'Application Insights',\n  'microsoft.insights/datacollectionendpoints': 'Data collection endpoints',\n  'microsoft.insights/datacollectionrules': 'Data collection rules',\n  'microsoft.insights/privatelinkscopes': 'Azure Monitor Private Link Scopes',\n  'microsoft.insights/webtests': 'Availability tests',\n  'microsoft.insights/workbooks': 'Azure Workbooks',\n  'microsoft.insights/workbooktemplates': 'Azure Workbook Templates',\n  'microsoft.intelligentitdigitaltwin/digitaltwins': 'Minervas',\n  'microsoft.intelligentitdigitaltwin/digitaltwins/assets': 'Assets',\n  'microsoft.intelligentitdigitaltwin/digitaltwins/executionplans': 'Deployments',\n  'microsoft.intelligentitdigitaltwin/digitaltwins/testplans': 'Suites',\n  'microsoft.intelligentitdigitaltwin/digitaltwins/tests': 'Scripts',\n  'microsoft.iotcentral/iotapps': 'IoT Central Applications',\n  'microsoft.keyvault/vaults': 'Key vaults',\n  'microsoft.kubernetes/connectedclusters': 'Kubernetes - Azure Arc',\n  'microsoft.kusto/clusters': 'Azure Data Explorer Clusters',\n  'microsoft.kusto/clusters/databases': 'Azure Data Explorer Databases',\n  'microsoft.labservices/labaccounts': 'Lab Services',\n  'microsoft.labservices/labplans': 'Lab plans',\n  'microsoft.labservices/labs': 'Labs',\n  'microsoft.loadtestservice/loadtests': 'Azure Load Testing',\n  'microsoft.logic/integrationaccounts': 'Integration accounts',\n  'microsoft.logic/integrationserviceenvironments': 'Integration Service Environments',\n  'microsoft.logic/integrationserviceenvironments/managedapis': 'Managed Connector',\n  'microsoft.logic/workflows': 'Logic apps',\n  'microsoft.logz/monitors': 'Logz main account',\n  'microsoft.logz/monitors/accounts': 'Logz sub account',\n  'microsoft.logz/monitors/metricssource': 'Logz metrics data source',\n  'microsoft.machinelearning/commitmentplans': 'Machine Learning Studio (classic) web service plans',\n  'microsoft.machinelearning/webservices': 'Machine Learning Studio (classic) web services',\n  'microsoft.machinelearning/workspaces': 'Machine Learning Studio (classic) workspaces',\n  'microsoft.machinelearningservices/workspaces': 'Machine learning',\n  'microsoft.machinelearningservices/workspaces/onlineendpoints': 'Machine learning online endpoints',\n  'microsoft.machinelearningservices/workspaces/onlineendpoints/deployments': 'Machine learning online deployments',\n  'microsoft.maintenance/maintenanceconfigurations': 'Maintenance Configurations',\n  'microsoft.managedidentity/userassignedidentities': 'Managed Identities',\n  'microsoft.maps/accounts': 'Azure Maps Accounts',\n  'microsoft.maps/accounts/creators': 'Azure Maps Creator Resources',\n  'microsoft.marketplaceapps/classicdevservices': 'Classic Dev Services',\n  'microsoft.media/mediaservices': 'Media Services',\n  'microsoft.media/mediaservices/liveevents': 'Live events',\n  'microsoft.media/mediaservices/streamingendpoints': 'Streaming Endpoints',\n  'microsoft.media/videoanalyzers': 'Video Analyzers',\n  'microsoft.migrate/projects': 'Migration projects',\n  'microsoft.mixedreality/holographicsbroadcastaccounts': 'Holographics Broadcast Accounts',\n  'microsoft.mixedreality/objectanchorsaccounts': 'Object Anchors Accounts',\n  'microsoft.mixedreality/objectunderstandingaccounts': 'Object Understanding Accounts',\n  'microsoft.mixedreality/remoterenderingaccounts': 'Remote Rendering Accounts',\n  'microsoft.mixedreality/spatialanchorsaccounts': 'Spatial Anchors Accounts',\n  'microsoft.mobilenetwork/mobilenetworks': 'Mobile Networks',\n  'microsoft.mobilenetwork/mobilenetworks/datanetworks': 'Data Networks',\n  'microsoft.mobilenetwork/mobilenetworks/services': 'Services',\n  'microsoft.mobilenetwork/mobilenetworks/simpolicies': 'Sim Policies',\n  'microsoft.mobilenetwork/mobilenetworks/sites': 'Mobile Network Sites',\n  'microsoft.mobilenetwork/mobilenetworks/slices': 'Slices',\n  'microsoft.mobilenetwork/packetcorecontrolplanes': 'Packet Core Control Planes',\n  'microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes': 'Packet Core Data Planes',\n  'microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks': 'Attached Data Networks',\n  'microsoft.mobilenetwork/sims': 'Sims',\n  'microsoft.netapp/netappaccounts': 'NetApp accounts',\n  'microsoft.netapp/netappaccounts/capacitypools': 'Capacity pools',\n  'microsoft.netapp/netappaccounts/capacitypools/volumes': 'Volumes',\n  'microsoft.netapp/netappaccounts/capacitypools/volumes/snapshots': 'Snapshots',\n  'microsoft.netapp/netappaccounts/snapshotpolicies': 'Snapshot policies',\n  'microsoft.network/applicationgateways': 'Application gateways',\n  'microsoft.network/applicationgatewaywebapplicationfirewallpolicies': 'Application Gateway WAF policies',\n  'microsoft.network/applicationsecuritygroups': 'Application security groups',\n  'microsoft.network/azurefirewalls': 'Firewalls',\n  'microsoft.network/bastionhosts': 'Bastions',\n  'microsoft.network/connections': 'Connections',\n  'microsoft.network/customipprefixes': 'Custom IP Prefixes',\n  'microsoft.network/ddosprotectionplans': 'DDoS protection plans',\n  'microsoft.network/dnsforwardingrulesets': 'Dns Forwarding Rulesets',\n  'microsoft.network/dnsresolvers': 'DNS Private Resolvers',\n  'microsoft.network/dnszones': 'DNS zones',\n  'microsoft.network/expressroutecircuits': 'ExpressRoute circuits',\n  'microsoft.network/expressrouteports': 'ExpressRoute Direct',\n  'microsoft.network/firewallpolicies': 'Firewall Policies',\n  'microsoft.network/frontdoors': 'Front Doors',\n  'microsoft.network/frontdoorwebapplicationfirewallpolicies': 'Web Application Firewall policies (WAF)',\n  'microsoft.network/ipgroups': 'IP Groups',\n  'microsoft.network/loadbalancers': 'Load balancers',\n  'microsoft.network/localnetworkgateways': 'Local network gateways',\n  'microsoft.network/natgateways': 'NAT gateways',\n  'microsoft.network/networkexperimentprofiles': 'Internet Analyzer profiles',\n  'microsoft.network/networkinterfaces': 'Network interfaces',\n  'microsoft.network/networkmanagers': 'Network Managers',\n  'microsoft.network/networksecuritygroups': 'Network security groups',\n  'microsoft.network/networkwatchers': 'Network Watchers',\n  'microsoft.network/networkwatchers/connectionmonitors': 'Connection Monitors',\n  'microsoft.network/networkwatchers/flowlogs': 'NSG Flow Logs',\n  'microsoft.network/privatednszones': 'Private DNS zones',\n  'microsoft.network/privateendpoints': 'Private endpoints',\n  'microsoft.network/privatelinkservices': 'Private link services',\n  'microsoft.network/publicipaddresses': 'Public IP addresses',\n  'microsoft.network/publicipprefixes': 'Public IP Prefixes',\n  'microsoft.network/routefilters': 'Route filters',\n  'microsoft.network/routetables': 'Route tables',\n  'microsoft.network/serviceendpointpolicies': 'Service endpoint policies',\n  'microsoft.network/trafficmanagerprofiles': 'Traffic Manager profiles',\n  'microsoft.network/virtualnetworkgateways': 'Virtual network gateways',\n  'microsoft.network/virtualnetworks': 'Virtual networks',\n  'microsoft.network/virtualwans': 'Virtual WANs',\n  'microsoft.notificationhubs/namespaces': 'Notification Hub Namespaces',\n  'microsoft.notificationhubs/namespaces/notificationhubs': 'Notification Hubs',\n  'microsoft.openenergyplatform/energyservices': 'Azure OpenEnergy',\n  'microsoft.openlogisticsplatform/workspaces': 'Open Supply Chain Platform',\n  'microsoft.operationalinsights/querypacks': 'Log Analytics query packs',\n  'microsoft.operationalinsights/workspaces': 'Log Analytics workspaces',\n  'microsoft.operationsmanagement/solutions': 'Solutions',\n  'microsoft.orbital/contactprofiles': 'Contact Profiles',\n  'microsoft.orbital/edgesites': 'Edge Sites',\n  'microsoft.orbital/groundstations': 'Ground Stations',\n  'microsoft.orbital/l2connections': 'L2 Connections',\n  'microsoft.orbital/spacecrafts': 'Spacecrafts',\n  'microsoft.peering/peerings': 'Peerings',\n  'microsoft.peering/peeringservices': 'Peering Services',\n  'microsoft.playfab/playeraccountpools': 'Player account pools',\n  'microsoft.playfab/titles': 'PlayFab titles',\n  'microsoft.portal/dashboards': 'Shared dashboards',\n  'microsoft.powerbidedicated/capacities': 'Power BI Embedded',\n  'microsoft.purview/accounts': 'Purview accounts',\n  'microsoft.quantum/workspaces': 'Quantum Workspaces',\n  'microsoft.recommendationsservice/accounts': 'Intelligent Recommendations Accounts',\n  'microsoft.recommendationsservice/accounts/modeling': 'Modeling',\n  'microsoft.recommendationsservice/accounts/serviceendpoints': 'Service Endpoints',\n  'microsoft.recoveryservices/vaults': 'Recovery Services vaults',\n  'microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems': 'Backup Items',\n  'microsoft.redhatopenshift/openshiftclusters': 'Azure Red Hat OpenShift',\n  'microsoft.relay/namespaces': 'Relays',\n  'microsoft.resourceconnector/appliances': 'Resource bridges',\n  'microsoft.resourcegraph/queries': 'Resource Graph queries',\n  'microsoft.resources/deploymentscripts': 'Deployment Scripts',\n  'microsoft.resources/subscriptions': 'Subscriptions',\n  'microsoft.resources/subscriptions/resourcegroups': 'Resource groups',\n  'microsoft.resources/templatespecs': 'Template specs',\n  'microsoft.saas/applications': 'Software as a Service (classic)',\n  'microsoft.saas/resources': 'SaaS',\n  'microsoft.scheduler/jobcollections': 'Scheduler Job Collections',\n  'microsoft.scom/managedinstances': 'Aquila Instances',\n  'microsoft.scvmm/virtualmachines': 'SCVMM virtual machine - Azure Arc',\n  'microsoft.scvmm/vmmservers': 'SCVMM management servers',\n  'microsoft.search/searchservices': 'Search services',\n  'microsoft.security/insights/classification': 'Data Sensitivity Security Insights (Preview)',\n  'microsoft.security/locations/alerts': 'Security Alerts',\n  'microsoft.securitydetonation/chambers': 'Security Detonation Chambers',\n  'microsoft.servicebus/namespaces': 'Service Bus Namespaces',\n  'microsoft.servicefabric/clusters': 'Service Fabric clusters',\n  'microsoft.servicefabric/managedclusters': 'Service Fabric managed clusters',\n  'microsoft.serviceshub/connectors': 'Services Hub Connectors',\n  'microsoft.signalrservice/signalr': 'SignalR',\n  'microsoft.signalrservice/webpubsub': 'Web PubSub Service',\n  'microsoft.solutions/applicationdefinitions': 'Service catalog managed application definitions',\n  'microsoft.solutions/applications': 'Managed applications',\n  'microsoft.sql/instancepools': 'Instance pools',\n  'microsoft.sql/managedinstances': 'SQL managed instances',\n  'microsoft.sql/managedinstances/databases': 'Managed databases',\n  'microsoft.sql/servers': 'SQL servers',\n  'microsoft.sql/servers/databases': 'SQL databases',\n  'microsoft.sql/servers/elasticpools': 'SQL elastic pools',\n  'microsoft.sql/servers/jobagents': 'Elastic Job agents',\n  'microsoft.sql/virtualclusters': 'Virtual clusters',\n  'microsoft.sqlvirtualmachine/sqlvirtualmachines': 'SQL virtual machines',\n  'microsoft.storage/storageaccounts': 'Storage accounts',\n  'microsoft.storagecache/amlfilesystems': 'Lustre File Systems',\n  'microsoft.storagecache/caches': 'HPC caches',\n  'microsoft.storagepool/diskpools': 'Disk Pools',\n  'microsoft.storagesync/storagesyncservices': 'Storage Sync Services',\n  'microsoft.storagesyncdev/storagesyncservices': 'Storage Sync Services',\n  'microsoft.storagesyncint/storagesyncservices': 'Storage Sync Services',\n  'microsoft.storsimple/managers': 'StorSimple Device Managers',\n  'microsoft.streamanalytics/clusters': 'Stream Analytics clusters',\n  'microsoft.streamanalytics/streamingjobs': 'Stream Analytics jobs',\n  'microsoft.synapse/privatelinkhubs': 'Azure Synapse Analytics (private link hubs)',\n  'microsoft.synapse/workspaces': 'Azure Synapse Analytics',\n  'microsoft.synapse/workspaces/bigdatapools': 'Apache Spark pools',\n  'microsoft.synapse/workspaces/kustopools': 'Data Explorer pools (preview)',\n  'microsoft.synapse/workspaces/sqlpools': 'Dedicated SQL pools',\n  'microsoft.testbase/testbaseaccounts': 'Test Base Accounts',\n  'microsoft.testbase/testbaseaccounts/packages': 'Test Base Packages',\n  'microsoft.timeseriesinsights/environments': 'Time Series Insights environments',\n  'microsoft.timeseriesinsights/environments/eventsources': 'Time Series Insights event sources',\n  'microsoft.timeseriesinsights/environments/referencedatasets': 'Time Series Insights reference data sets',\n  'microsoft.videoindexer/accounts': 'Video Analyzer for Media',\n  'microsoft.virtualmachineimages/imagetemplates': 'Image Templates',\n  'microsoft.visualstudio/account': 'Azure DevOps organizations',\n  'microsoft.visualstudio/account/project': 'DevOps Starter',\n  'microsoft.vmwarecloudsimple/dedicatedcloudnodes': 'CloudSimple Nodes',\n  'microsoft.vmwarecloudsimple/dedicatedcloudservices': 'CloudSimple Services',\n  'microsoft.vmwarecloudsimple/virtualmachines': 'CloudSimple Virtual Machines',\n  'microsoft.vsonline/plans': 'Visual Studio Online Plans',\n  'microsoft.web/connectiongateways': 'On-premises data gateways',\n  'microsoft.web/connections': 'API Connections',\n  'microsoft.web/containerapps': 'Container Apps',\n  'microsoft.web/customapis': 'Logic Apps Custom Connector',\n  'microsoft.web/hostingenvironments': 'App Service Environments',\n  'microsoft.web/kubeenvironments': 'App Service Kubernetes Environments',\n  'microsoft.web/serverfarms': 'App Service plans',\n  'microsoft.web/sites': 'App Services',\n  'microsoft.web/sites/slots': 'App Service (Slots)',\n  'microsoft.web/staticsites': 'Static Web Apps',\n  'microsoft.windowsesu/multipleactivationkeys': 'Windows Multiple Activation Keys',\n  'microsoft.windowsiot/deviceservices': 'Windows 10 IoT Core Services',\n  'microsoft.workloads/monitors': 'Azure Monitors for SAP Solutions (v2)',\n  'microsoft.workloads/phpworkloads': 'Scalable WordPress on Linux',\n  'microsoft.workloads/sapvirtualinstances': 'SAP Virtual Instances',\n  'microsoft.workloads/sapvirtualinstances/applicationinstances': 'SAP app server instances',\n  'microsoft.workloads/sapvirtualinstances/centralinstances': 'SAP central server instances',\n  'microsoft.workloads/sapvirtualinstances/databaseinstances': 'SAP database server instances',\n  'nginx.nginxplus/nginxdeployments': 'NGINX Deployment',\n  'paraleap.cloudmonix/services': 'CloudMonix',\n  'pokitdok.platform/services': 'PokitDok Platform',\n  'providers.test/statefulibizaengines': 'My Resources',\n  'ravenhq.db/databases': 'RavenHQ',\n  'raygun.crashreporting/apps': 'Raygun',\n  'sendgrid.email/accounts': 'SendGrid Accounts',\n  'trendmicro.deepsecurity/accounts': 'Deep Security SaaS',\n  'wandisco.fusion/fusiongroups': 'LiveData Planes',\n  'wandisco.fusion/fusiongroups/azurezones': 'Azure Zones',\n  'wandisco.fusion/fusiongroups/azurezones/plugins': 'Plugins',\n  'wandisco.fusion/fusiongroups/hivereplicationrules': 'Hive Replication Rules',\n  'wandisco.fusion/fusiongroups/managedonpremzones': 'On-premises Zones',\n  'wandisco.fusion/fusiongroups/replicationrules': 'Replication Rules',\n  'wandisco.fusion/migrators': 'LiveData Migrators',\n  'wandisco.fusion/migrators/exclusiontemplates': 'Exclusions',\n  'wandisco.fusion/migrators/livedatamigrations': 'Migrations',\n  'wandisco.fusion/migrators/metadatamigrations': 'Metadata Migrations',\n  'wandisco.fusion/migrators/metadatatargets': 'Metadata Targets',\n  'wandisco.fusion/migrators/pathmappings': 'Path Mappings',\n  'wandisco.fusion/migrators/targets': 'Targets',\n};\n\n// This list has been manually written using the Azure Portal as the source.\n// Visit https://portal.azure.com/#view/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/~/metrics\n// and go to Select a scope > Resource types > Multi-resource compatible (preview)\nexport const multiResourceCompatibleTypes: { [ns: string]: boolean } = {\n  'microsoft.cache/redis': true, // 'Azure Cache for Redis'\n  'microsoft.documentdb/mongoclusters': true, // 'Azure Cosmos DB for MongoDB'\n  'microsoft.dbforpostgresql/flexibleservers': true, // 'Azure Database for PostgreSQL flexible servers'\n  'microsoft.storagecache/amlfilesystems': true, // 'Lustre File Systems'\n  'microsoft.monitor/accounts': true, // Azure Monitor Workspaces\n  'microsoft.databoxedge/databoxedgedevices': true, // 'Azure Stack Edge / Data Box Gateway'\n  'microsoft.azurestackhci/clusters': true, // 'Azure Stack HCI'\n  'microsoft.dataprotection/backupvaults': true, // 'Backup vaults'\n  'microsoft.networkcloud/baremetalmachines': true, // 'Bare Metal Machines'\n  'microsoft.netapp/netappaccounts/capacitypools': true, // 'Capacity pools'\n  'microsoft.netapp/netappaccounts/capacitypools/volumes': true, // 'Capacity pool volumes'\n  'microsoft.network/networkwatchers/connectionmonitors': true, // 'Connection Monitors'\n  'microsoft.keyvault/vaults': true, // 'Key vaults'\n  'microsoft.recoveryservices/vaults': true, // 'Recovery Services vaults'\n  'microsoft.sql/servers/databases': true, // 'SQL databases'\n  'microsoft.sql/servers/elasticpools': true, // 'SQL elastic pools'\n  'microsoft.compute/virtualmachinescalesets': true, // 'Virtual machine scale sets'\n  'microsoft.compute/virtualmachines': true, // 'Virtual machines'\n  'microsoft.signalrservice/webpubsub': true, // 'Web PubSub Service'\n};\n\nexport const resourceTypes = [\n  'microsoft.aad/domainservices',\n  'microsoft.aadiam/azureadmetrics',\n  'microsoft.analysisservices/servers',\n  'microsoft.apimanagement/service',\n  'microsoft.app/containerapps',\n  'microsoft.app/jobs',\n  'microsoft.app/managedenvironments',\n  'microsoft.appconfiguration/configurationstores',\n  'microsoft.appplatform/spring',\n  'microsoft.automation/automationaccounts',\n  'microsoft.avs/privateclouds',\n  'microsoft.azuresphere/catalogs',\n  'microsoft.azurestackhci/clusters',\n  'microsoft.azurestackresourcemonitor/storageaccountmonitor',\n  'microsoft.batch/batchaccounts',\n  'microsoft.batchai/workspaces',\n  'microsoft.bing/accounts',\n  'microsoft.botservice/botservices',\n  'microsoft.botservice/botservices/channels',\n  'microsoft.botservice/botservices/connections',\n  'microsoft.botservice/checknameavailability',\n  'microsoft.botservice/hostsettings',\n  'microsoft.botservice/listauthserviceproviders',\n  'microsoft.botservice/listqnamakerendpointkeys',\n  'microsoft.cache/redis',\n  'microsoft.cache/redisenterprise',\n  'microsoft.cdn/cdnwebapplicationfirewallpolicies',\n  'microsoft.cdn/profiles',\n  'microsoft.classiccompute/domainnames',\n  'microsoft.classiccompute/domainnames/slots/roles',\n  'microsoft.classiccompute/virtualmachines',\n  'microsoft.classicstorage/storageaccounts',\n  'microsoft.classicstorage/storageaccounts/blobservices',\n  'microsoft.classicstorage/storageaccounts/fileservices',\n  'microsoft.classicstorage/storageaccounts/queueservices',\n  'microsoft.classicstorage/storageaccounts/tableservices',\n  'microsoft.cloudtest/hostedpools',\n  'microsoft.cloudtest/pools',\n  'microsoft.clusterstor/nodes',\n  'microsoft.codesigning/codesigningaccounts',\n  'microsoft.cognitiveservices/accounts',\n  'microsoft.communication/communicationservices',\n  'microsoft.compute/cloudservices',\n  'microsoft.compute/cloudservices/roles',\n  'microsoft.compute/disks',\n  'microsoft.compute/virtualmachines',\n  'microsoft.compute/virtualmachinescalesets',\n  'microsoft.compute/virtualmachinescalesets/virtualmachines',\n  'microsoft.connectedcache/cachenodes',\n  'microsoft.connectedcache/enterprisemcccustomers',\n  'microsoft.connectedcache/ispcustomers',\n  'microsoft.connectedvehicle/platformaccounts',\n  'microsoft.containerinstance/containergroups',\n  'microsoft.containerinstance/containerscalesets',\n  'microsoft.containerregistry/registries',\n  'microsoft.containerservice/managedclusters',\n  'microsoft.customerinsights/hubs',\n  'microsoft.customproviders/resourceproviders',\n  'microsoft.dashboard/grafana',\n  'microsoft.databoxedge/databoxedgedevices',\n  'microsoft.databricks/workspaces',\n  'microsoft.datacollaboration/workspaces',\n  'microsoft.datafactory/datafactories',\n  'microsoft.datafactory/factories',\n  'microsoft.datalakeanalytics/accounts',\n  'microsoft.datalakestore/accounts',\n  'microsoft.dataprotection/backupvaults',\n  'microsoft.datashare/accounts',\n  'microsoft.dbformariadb/servers',\n  'microsoft.dbformysql/flexibleservers',\n  'microsoft.dbformysql/servers',\n  'microsoft.dbforpostgresql/flexibleservers',\n  'microsoft.dbforpostgresql/servergroupsv2',\n  'microsoft.dbforpostgresql/servers',\n  'microsoft.dbforpostgresql/serversv2',\n  'microsoft.devcenter/devcenters',\n  'microsoft.devices/iothubs',\n  'microsoft.devices/provisioningservices',\n  'microsoft.devopsinfrastructure/pools',\n  'microsoft.digitaltwins/digitaltwinsinstances',\n  'microsoft.documentdb/cassandraclusters',\n  'microsoft.documentdb/databaseaccounts',\n  'microsoft.documentdb/mongoclusters',\n  'microsoft.edgezones/edgezones',\n  'microsoft.elasticsan/elasticsans',\n  'microsoft.enterpriseknowledgegraph/services',\n  'microsoft.eventgrid/domains',\n  'microsoft.eventgrid/eventsubscriptions',\n  'microsoft.eventgrid/extensiontopics',\n  'microsoft.eventgrid/namespaces',\n  'microsoft.eventgrid/partnernamespaces',\n  'microsoft.eventgrid/partnertopics',\n  'microsoft.eventgrid/systemtopics',\n  'microsoft.eventgrid/topics',\n  'microsoft.eventhub/clusters',\n  'microsoft.eventhub/namespaces',\n  'microsoft.fabric.admin/fabriclocations',\n  'microsoft.hdinsight/clusters',\n  'microsoft.healthcareapis/services',\n  'microsoft.healthcareapis/workspaces/dicomservices',\n  'microsoft.healthcareapis/workspaces/fhirservices',\n  'microsoft.healthcareapis/workspaces/iotconnectors',\n  'microsoft.healthmodel/healthmodels',\n  'microsoft.hybridcontainerservice/provisionedclusters',\n  'microsoft.hybridnetwork/networkfunctions',\n  'microsoft.hybridnetwork/virtualnetworkfunctions',\n  'microsoft.insights/autoscalesettings',\n  'microsoft.insights/components',\n  'microsoft.insights/datacollectionrules',\n  'microsoft.iotcentral/iotapps',\n  'microsoft.iotspaces/graph',\n  'microsoft.keyvault/managedhsms',\n  'microsoft.keyvault/vaults',\n  'microsoft.kubernetes/connectedclusters',\n  'microsoft.kubernetesconfiguration/extensions',\n  'microsoft.kusto/clusters',\n  'microsoft.logic/integrationserviceenvironments',\n  'microsoft.logic/workflows',\n  'microsoft.machinelearningservices/workspaces',\n  'microsoft.machinelearningservices/workspaces/onlineendpoints',\n  'microsoft.machinelearningservices/workspaces/onlineendpoints/deployments',\n  'microsoft.managednetworkfabric/internetgateways',\n  'microsoft.managednetworkfabric/l2isolationdomains',\n  'microsoft.managednetworkfabric/l3isolationdomains',\n  'microsoft.managednetworkfabric/networkdevices',\n  'microsoft.maps/accounts',\n  'microsoft.media/mediaservices',\n  'microsoft.media/mediaservices/liveevents',\n  'microsoft.media/mediaservices/streamingendpoints',\n  'microsoft.media/videoanalyzers',\n  'microsoft.messagingconnectors/connectors',\n  'microsoft.mixedreality/remoterenderingaccounts',\n  'microsoft.mixedreality/spatialanchorsaccounts',\n  'microsoft.mobilenetwork/mobilenetworks/sites',\n  'microsoft.mobilenetwork/packetcorecontrolplanes',\n  'microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes',\n  'microsoft.mobilenetwork/radioaccessnetworks',\n  'microsoft.monitor/accounts',\n  'microsoft.netapp/netappaccounts/capacitypools',\n  'microsoft.netapp/netappaccounts/capacitypools/volumes',\n  'microsoft.network/applicationgateways',\n  'microsoft.network/azurefirewalls',\n  'microsoft.network/bastionhosts',\n  'microsoft.network/connections',\n  'microsoft.network/dnsforwardingrulesets',\n  'microsoft.network/dnsresolverpolicies',\n  'microsoft.network/dnsresolvers',\n  'microsoft.network/dnszones',\n  'microsoft.network/expressroutecircuits',\n  'microsoft.network/expressroutecircuits/peerings',\n  'microsoft.network/expressroutegateways',\n  'microsoft.network/expressrouteports',\n  'microsoft.network/frontdoors',\n  'microsoft.network/loadbalancers',\n  'microsoft.network/natgateways',\n  'microsoft.network/networkinterfaces',\n  'microsoft.network/networkmanagers/ipampools',\n  'microsoft.network/networkvirtualappliances',\n  'microsoft.network/networkwatchers',\n  'microsoft.network/networkwatchers/connectionmonitors',\n  'microsoft.network/p2svpngateways',\n  'microsoft.network/privatednszones',\n  'microsoft.network/privateendpoints',\n  'microsoft.network/privatelinkservices',\n  'microsoft.network/publicipaddresses',\n  'microsoft.network/publicipprefixes',\n  'microsoft.network/trafficmanagerprofiles',\n  'microsoft.network/virtualhubs',\n  'microsoft.network/virtualnetworkgateways',\n  'microsoft.network/virtualnetworks',\n  'microsoft.network/virtualrouters',\n  'microsoft.network/vpngateways',\n  'microsoft.networkanalytics/dataconnectors',\n  'microsoft.networkcloud/baremetalmachines',\n  'microsoft.networkcloud/clustermanagers',\n  'microsoft.networkcloud/clusters',\n  'microsoft.networkcloud/storageappliances',\n  'microsoft.networkfunction/azuretrafficcollectors',\n  'microsoft.notificationhubs/namespaces/notificationhubs',\n  'microsoft.operationalinsights/workspaces',\n  'microsoft.operationsmanagement/solutions',\n  'microsoft.orbital/contactprofiles',\n  'microsoft.orbital/l2connections',\n  'microsoft.orbital/spacecrafts',\n  'microsoft.orbital/terminals',\n  'microsoft.peering/peerings',\n  'microsoft.peering/peeringservices',\n  'microsoft.playfab/titles',\n  'microsoft.powerbidedicated/capacities',\n  'microsoft.providerhub/providermonitorsettings',\n  'microsoft.purview/accounts',\n  'microsoft.recoveryservices/vaults',\n  'microsoft.relay/namespaces',\n  'microsoft.resources/subscriptions',\n  'microsoft.search/searchservices',\n  'microsoft.securitydetonation/chambers',\n  'microsoft.securitydetonation/securitydetonationchambers',\n  'microsoft.servicebus/namespaces',\n  'microsoft.servicefabricmesh/applications',\n  'microsoft.servicenetworking/trafficcontrollers',\n  'microsoft.signalrservice/signalr',\n  'microsoft.signalrservice/signalr/replicas',\n  'microsoft.signalrservice/webpubsub',\n  'microsoft.signalrservice/webpubsub/replicas',\n  'microsoft.singularity/accounts',\n  'microsoft.sql/managedinstances',\n  'microsoft.sql/servers/databases',\n  'microsoft.sql/servers/elasticpools',\n  'microsoft.sql/servers/jobagents',\n  'microsoft.storageactions/storagetasks',\n  'microsoft.storage/storageaccounts',\n  'microsoft.storage/storageaccounts/blobservices',\n  'microsoft.storage/storageaccounts/fileservices',\n  'microsoft.storage/storageaccounts/objectreplicationpolicies',\n  'microsoft.storage/storageaccounts/queueservices',\n  'microsoft.storage/storageaccounts/storagetasks',\n  'microsoft.storage/storageaccounts/tableservices',\n  'microsoft.storage/storagetasks',\n  'microsoft.storagecache/amlfilesystems',\n  'microsoft.storagecache/caches',\n  'microsoft.storagemover/storagemovers',\n  'microsoft.storagesync/storagesyncservices',\n  'microsoft.storagetasks/storagetasks',\n  'microsoft.streamanalytics/streamingjobs',\n  'microsoft.synapse/workspaces',\n  'microsoft.synapse/workspaces/bigdatapools',\n  'microsoft.synapse/workspaces/kustopools',\n  'microsoft.synapse/workspaces/scopepools',\n  'microsoft.synapse/workspaces/sqlpools',\n  'microsoft.timeseriesinsights/environments',\n  'microsoft.timeseriesinsights/environments/eventsources',\n  'microsoft.vmwarecloudsimple/virtualmachines',\n  'microsoft.voiceservices/communicationsgateways',\n  'microsoft.web/containerapps',\n  'microsoft.web/hostingenvironments',\n  'microsoft.web/hostingenvironments/multirolepools',\n  'microsoft.web/hostingenvironments/workerpools',\n  'microsoft.web/serverfarms',\n  'microsoft.web/sites',\n  'microsoft.web/sites/slots',\n  'microsoft.web/staticsites',\n  'nginx.nginxplus/nginxdeployments',\n  'oracle.database/autonomousdatabases',\n  'oracle.database/cloudvmclusters',\n  'oracle.database/exadbvmclusters',\n  'private.messagingconnectors/private.messagingconnectors/connectors',\n  'wandisco.fusion/migrators',\n  'wandisco.fusion/migrators/datatransferagents',\n  'wandisco.fusion/migrators/livedatamigrations',\n  'wandisco.fusion/migrators/metadatamigrations',\n];\n","import { css } from '@emotion/css';\nimport { useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { AccessoryButton } from '@grafana/plugin-ui';\nimport { Input, Label, InlineField, Button, useStyles2 } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorResource } from '../../types';\n\nexport interface ResourcePickerProps<T> {\n  resources: T[];\n  onChange: (resources: T[]) => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  resourceList: css({ display: 'flex', columnGap: theme.spacing(1), flexWrap: 'wrap', marginBottom: theme.spacing(1) }),\n  resource: css({ flex: '0 0 auto' }),\n  resourceLabel: css({ padding: theme.spacing(1) }),\n  resourceGroupAndName: css({ display: 'flex', columnGap: theme.spacing(0.5) }),\n});\n\nconst AdvancedResourcePicker = ({ resources, onChange }: ResourcePickerProps<AzureMonitorResource>) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    // Ensure there is at least one resource\n    if (resources.length === 0) {\n      onChange([{}]);\n    }\n  }, [resources, onChange]);\n\n  const onResourceChange = (index: number, resource: AzureMonitorResource) => {\n    const newResources = [...resources];\n    newResources[index] = resource;\n    onChange(newResources);\n  };\n\n  const removeResource = (index: number) => {\n    const newResources = [...resources];\n    newResources.splice(index, 1);\n    onChange(newResources);\n  };\n\n  const addResource = () => {\n    onChange(\n      resources.concat({\n        subscription: resources[0]?.subscription,\n        metricNamespace: resources[0]?.metricNamespace,\n        resourceGroup: '',\n        resourceName: '',\n      })\n    );\n  };\n\n  const onCommonPropChange = (r: Partial<AzureMonitorResource>) => {\n    onChange(resources.map((resource) => ({ ...resource, ...r })));\n  };\n\n  return (\n    <>\n      <InlineField\n        label=\"Subscription\"\n        grow\n        transparent\n        htmlFor={`input-advanced-resource-picker-subscription`}\n        labelWidth={15}\n        data-testid={selectors.components.queryEditor.resourcePicker.advanced.subscription.input}\n      >\n        <Input\n          id={`input-advanced-resource-picker-subscription`}\n          value={resources[0]?.subscription ?? ''}\n          onChange={(event) => onCommonPropChange({ subscription: event.currentTarget.value })}\n          placeholder=\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeee\"\n        />\n      </InlineField>\n      <InlineField\n        label=\"Namespace\"\n        grow\n        transparent\n        htmlFor={`input-advanced-resource-picker-metricNamespace`}\n        labelWidth={15}\n        data-testid={selectors.components.queryEditor.resourcePicker.advanced.namespace.input}\n        invalid={resources[0]?.metricNamespace?.endsWith('/')}\n        error={'Namespace cannot end with a \"/\"'}\n      >\n        <Input\n          id={`input-advanced-resource-picker-metricNamespace`}\n          value={resources[0]?.metricNamespace ?? ''}\n          onChange={(event) => onCommonPropChange({ metricNamespace: event.currentTarget.value })}\n          placeholder=\"Microsoft.Insights/metricNamespaces\"\n        />\n      </InlineField>\n      <InlineField\n        label=\"Region\"\n        grow\n        transparent\n        htmlFor={`input-advanced-resource-picker-region`}\n        labelWidth={15}\n        data-testid={selectors.components.queryEditor.resourcePicker.advanced.region.input}\n        tooltip=\"The code region of the resource. Optional for one resource but mandatory when selecting multiple ones.\"\n      >\n        <Input\n          id={`input-advanced-resource-picker-region`}\n          value={resources[0]?.region ?? ''}\n          onChange={(event) => onCommonPropChange({ region: event.currentTarget.value })}\n          placeholder=\"northeurope\"\n        />\n      </InlineField>\n      <div className={styles.resourceList}>\n        {resources.map((resource, index) => (\n          <div key={`resource-${index + 1}`} className={styles.resource}>\n            {resources.length !== 1 && <Label className={styles.resourceLabel}>Resource {index + 1}</Label>}\n            <InlineField\n              label=\"Resource Group\"\n              transparent\n              htmlFor={`input-advanced-resource-picker-resourceGroup-${index + 1}`}\n              labelWidth={15}\n              data-testid={selectors.components.queryEditor.resourcePicker.advanced.resourceGroup.input}\n            >\n              <div className={styles.resourceGroupAndName}>\n                <Input\n                  id={`input-advanced-resource-picker-resourceGroup-${index + 1}`}\n                  value={resource?.resourceGroup ?? ''}\n                  onChange={(event) =>\n                    onResourceChange(index, { ...resource, resourceGroup: event.currentTarget.value })\n                  }\n                  placeholder=\"resource-group\"\n                />\n                <AccessoryButton\n                  aria-label=\"remove\"\n                  icon=\"times\"\n                  variant=\"secondary\"\n                  onClick={() => removeResource(index)}\n                  hidden={resources.length === 1}\n                  data-testid={'remove-resource'}\n                />\n              </div>\n            </InlineField>\n\n            <InlineField\n              label=\"Resource Name\"\n              transparent\n              htmlFor={`input-advanced-resource-picker-resourceName-${index + 1}`}\n              labelWidth={15}\n              data-testid={selectors.components.queryEditor.resourcePicker.advanced.resource.input}\n            >\n              <Input\n                id={`input-advanced-resource-picker-resourceName-${index + 1}`}\n                value={resource?.resourceName ?? ''}\n                onChange={(event) => onResourceChange(index, { ...resource, resourceName: event.currentTarget.value })}\n                placeholder=\"name\"\n              />\n            </InlineField>\n          </div>\n        ))}\n      </div>\n      <Button aria-label=\"Add\" icon=\"plus\" variant=\"secondary\" onClick={addResource} type=\"button\">\n        Add resource\n      </Button>\n    </>\n  );\n};\n\nexport default AdvancedResourcePicker;\n","import { AzureMetricDimension, AzureMonitorQuery } from '../../types';\n\nexport function setCustomNamespace(query: AzureMonitorQuery, selection: string | undefined): AzureMonitorQuery {\n  if (query.azureMonitor?.customNamespace === selection) {\n    return query;\n  }\n\n  if (selection?.toLowerCase().startsWith('microsoft.storage/storageaccounts/')) {\n    return {\n      ...query,\n      azureMonitor: {\n        ...query.azureMonitor,\n        metricNamespace: selection,\n        metricName: undefined,\n        aggregation: undefined,\n        timeGrain: '',\n        dimensionFilters: [],\n      },\n    };\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      customNamespace: selection,\n      metricName: undefined,\n      aggregation: undefined,\n      timeGrain: '',\n      dimensionFilters: [],\n    },\n  };\n}\n\nexport function setMetricName(query: AzureMonitorQuery, metricName: string | undefined): AzureMonitorQuery {\n  if (query.azureMonitor?.metricName === metricName) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      metricName: metricName,\n      aggregation: undefined,\n      timeGrain: '',\n      dimensionFilters: [],\n    },\n  };\n}\n\nexport function setAggregation(query: AzureMonitorQuery, aggregation: string): AzureMonitorQuery {\n  if (query.azureMonitor?.aggregation === aggregation) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      aggregation: aggregation,\n    },\n  };\n}\n\nexport function setTimeGrain(query: AzureMonitorQuery, timeGrain: string): AzureMonitorQuery {\n  if (query.azureMonitor?.timeGrain === timeGrain) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      timeGrain: timeGrain,\n    },\n  };\n}\n\nexport function setDimensionFilters(query: AzureMonitorQuery, dimensions: AzureMetricDimension[]): AzureMonitorQuery {\n  if (query.azureMonitor?.dimensionFilters === dimensions) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      dimensionFilters: dimensions,\n    },\n  };\n}\n\nexport function appendDimensionFilter(\n  query: AzureMonitorQuery,\n  dimension = '',\n  operator = 'eq',\n  filters: string[] = []\n): AzureMonitorQuery {\n  const existingFilters = query.azureMonitor?.dimensionFilters ?? [];\n\n  return setDimensionFilters(query, [\n    ...existingFilters,\n    {\n      dimension,\n      operator,\n      filters,\n    },\n  ]);\n}\n\nexport function removeDimensionFilter(query: AzureMonitorQuery, indexToRemove: number): AzureMonitorQuery {\n  const existingFilters = query.azureMonitor?.dimensionFilters ?? [];\n  const newFilters = [...existingFilters];\n  newFilters.splice(indexToRemove, 1);\n  return setDimensionFilters(query, newFilters);\n}\n\nexport function setDimensionFilterValue<Key extends keyof AzureMetricDimension>(\n  query: AzureMonitorQuery,\n  index: number,\n  fieldName: Key,\n  value: AzureMetricDimension[Key]\n): AzureMonitorQuery {\n  const existingFilters = query.azureMonitor?.dimensionFilters ?? [];\n  const newFilters = [...existingFilters];\n  const newFilter = newFilters[index];\n  newFilter[fieldName] = value;\n  if (fieldName === 'dimension' || fieldName === 'operator') {\n    newFilter.filters = [];\n  }\n  return setDimensionFilters(query, newFilters);\n}\n\nexport function setTop(query: AzureMonitorQuery, top: string): AzureMonitorQuery {\n  if (query.azureMonitor?.top === top) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      top: top,\n    },\n  };\n}\n\nexport function setLegendAlias(query: AzureMonitorQuery, alias: string): AzureMonitorQuery {\n  if (query.azureMonitor?.alias === alias) {\n    return query;\n  }\n\n  return {\n    ...query,\n    azureMonitor: {\n      ...query.azureMonitor,\n      alias: alias,\n    },\n  };\n}\n","import { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { addValueToOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\nimport { setAggregation } from './setQueryValue';\n\ninterface AggregationFieldProps extends AzureQueryEditorFieldProps {\n  aggregationOptions: AzureMonitorOption[];\n  isLoading: boolean;\n}\n\nconst AggregationField = ({\n  query,\n  variableOptionGroup,\n  onQueryChange,\n  aggregationOptions,\n  isLoading,\n}: AggregationFieldProps) => {\n  const handleChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setAggregation(query, change.value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const options = addValueToOptions(aggregationOptions, variableOptionGroup, query.azureMonitor?.aggregation);\n\n  return (\n    <Field label=\"Aggregation\">\n      <Select\n        inputId=\"azure-monitor-metrics-aggregation-field\"\n        value={query.azureMonitor?.aggregation || null}\n        onChange={handleChange}\n        options={options}\n        isLoading={isLoading}\n      />\n    </Field>\n  );\n};\n\nexport default AggregationField;\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { SelectableValue, DataFrame, PanelData, Labels } from '@grafana/data';\nimport { EditorList, AccessoryButton } from '@grafana/plugin-ui';\nimport { Select, HorizontalGroup, MultiSelect } from '@grafana/ui';\n\nimport { AzureMetricDimension, AzureMonitorOption, AzureMonitorQuery, AzureQueryEditorFieldProps } from '../../types';\nimport { Field } from '../shared/Field';\n\nimport { setDimensionFilters } from './setQueryValue';\n\ninterface DimensionFieldsProps extends AzureQueryEditorFieldProps {\n  dimensionOptions: AzureMonitorOption[];\n}\n\ninterface DimensionLabels {\n  [key: string]: Set<string>;\n}\n\nconst useDimensionLabels = (data: PanelData | undefined, query: AzureMonitorQuery) => {\n  const [dimensionLabels, setDimensionLabels] = useState<DimensionLabels>({});\n  useEffect(() => {\n    let labelsObj: DimensionLabels = {};\n    if (data?.series?.length) {\n      // Identify which series' in the dataframe are relevant to the current query\n      const series: DataFrame[] = data.series.flat().filter((series) => series.refId === query.refId);\n      const fields = series.flatMap((series) => series.fields);\n      // Retrieve labels for series fields\n      const labels = fields\n        .map((fields) => fields.labels)\n        .flat()\n        .filter((item): item is Labels => item !== null && item !== undefined);\n      for (const label of labels) {\n        // Labels only exist for series that have a dimension selected\n        for (const [dimension, value] of Object.entries(label)) {\n          const dimensionLower = dimension.toLowerCase();\n          if (labelsObj[dimensionLower]) {\n            labelsObj[dimensionLower].add(value);\n          } else {\n            labelsObj[dimensionLower] = new Set([value]);\n          }\n        }\n      }\n    }\n    setDimensionLabels((prevLabels) => {\n      const newLabels: DimensionLabels = {};\n      const currentLabels = Object.keys(labelsObj);\n      if (currentLabels.length === 0) {\n        return prevLabels;\n      }\n      for (const label of currentLabels) {\n        if (prevLabels[label] && labelsObj[label].size < prevLabels[label].size) {\n          newLabels[label] = prevLabels[label];\n        } else {\n          newLabels[label] = labelsObj[label];\n        }\n      }\n      return newLabels;\n    });\n  }, [data?.series, query.refId]);\n  return dimensionLabels;\n};\n\nconst DimensionFields = ({ data, query, dimensionOptions, onQueryChange }: DimensionFieldsProps) => {\n  const dimensionFilters = useMemo(\n    () => query.azureMonitor?.dimensionFilters ?? [],\n    [query.azureMonitor?.dimensionFilters]\n  );\n\n  const dimensionLabels = useDimensionLabels(data, query);\n\n  const dimensionOperators: Array<SelectableValue<string>> = [\n    { label: '==', value: 'eq' },\n    { label: '!=', value: 'ne' },\n    { label: 'starts with', value: 'sw' },\n  ];\n\n  const validDimensionOptions = useMemo(() => {\n    // We filter out any dimensions that have already been used in a filter as the API doesn't support having multiple filters with the same dimension name.\n    // The Azure portal also doesn't support this feature so it makes sense for consistency.\n    let t = dimensionOptions;\n    if (dimensionFilters.length) {\n      t = dimensionOptions.filter(\n        (val) => !dimensionFilters.some((dimensionFilter) => dimensionFilter.dimension === val.value)\n      );\n    }\n    return t;\n  }, [dimensionFilters, dimensionOptions]);\n\n  const onFieldChange = <Key extends keyof AzureMetricDimension>(\n    fieldName: Key,\n    item: Partial<AzureMetricDimension>,\n    value: AzureMetricDimension[Key],\n    onChange: (item: Partial<AzureMetricDimension>) => void\n  ) => {\n    item[fieldName] = value;\n    onChange(item);\n  };\n\n  const getValidDimensionOptions = (selectedDimension: string) => {\n    return validDimensionOptions.concat(dimensionOptions.filter((item) => item.value === selectedDimension));\n  };\n\n  const getValidFilterOptions = (selectedFilter: string | undefined, dimension: string) => {\n    const dimensionFilters = Array.from(dimensionLabels[dimension.toLowerCase()] ?? []);\n    if (dimensionFilters.find((filter) => filter === selectedFilter)) {\n      return dimensionFilters.map((filter) => ({ value: filter, label: filter }));\n    }\n    return [...dimensionFilters, ...(selectedFilter && selectedFilter !== '*' ? [selectedFilter] : [])].map((item) => ({\n      value: item,\n      label: item,\n    }));\n  };\n\n  const getValidMultiSelectOptions = (selectedFilters: string[] | undefined, dimension: string) => {\n    const labelOptions = getValidFilterOptions(undefined, dimension);\n    if (selectedFilters) {\n      for (const filter of selectedFilters) {\n        if (!labelOptions.find((label) => label.value === filter)) {\n          labelOptions.push({ value: filter, label: filter });\n        }\n      }\n    }\n    return labelOptions;\n  };\n  const getValidOperators = (selectedOperator: string) => {\n    if (dimensionOperators.find((operator: SelectableValue) => operator.value === selectedOperator)) {\n      return dimensionOperators;\n    }\n    return [...dimensionOperators, ...(selectedOperator ? [{ label: selectedOperator, value: selectedOperator }] : [])];\n  };\n\n  const changedFunc = (changed: Array<Partial<AzureMetricDimension>>) => {\n    const properData: AzureMetricDimension[] = changed.map((x) => {\n      return {\n        dimension: x.dimension ?? '',\n        operator: x.operator ?? 'eq',\n        filters: x.filters ?? [],\n      };\n    });\n    onQueryChange(setDimensionFilters(query, properData));\n  };\n\n  const renderFilters = (\n    item: Partial<AzureMetricDimension>,\n    onChange: (item: Partial<AzureMetricDimension>) => void,\n    onDelete: () => void\n  ) => {\n    return (\n      <HorizontalGroup spacing=\"none\">\n        <Select\n          menuShouldPortal\n          placeholder=\"Field\"\n          value={item.dimension}\n          options={getValidDimensionOptions(item.dimension || '')}\n          onChange={(e) => onFieldChange('dimension', item, e.value ?? '', onChange)}\n        />\n        <Select\n          menuShouldPortal\n          placeholder=\"Operation\"\n          value={item.operator}\n          options={getValidOperators(item.operator || 'eq')}\n          onChange={(e) => onFieldChange('operator', item, e.value ?? '', onChange)}\n          allowCustomValue\n        />\n        {item.operator === 'eq' || item.operator === 'ne' ? (\n          <MultiSelect\n            menuShouldPortal\n            placeholder=\"Select value(s)\"\n            value={item.filters}\n            options={getValidMultiSelectOptions(item.filters, item.dimension ?? '')}\n            onChange={(e) =>\n              onFieldChange(\n                'filters',\n                item,\n                e.map((x) => x.value ?? ''),\n                onChange\n              )\n            }\n            aria-label={'dimension-labels-select'}\n            allowCustomValue\n          />\n        ) : (\n          // The API does not currently allow for multiple \"starts with\" clauses to be used.\n          <Select\n            menuShouldPortal\n            placeholder=\"Select value\"\n            value={item.filters ? item.filters[0] : ''}\n            allowCustomValue\n            options={getValidFilterOptions(item.filters ? item.filters[0] : '', item.dimension ?? '')}\n            onChange={(e) => onFieldChange('filters', item, [e?.value ?? ''], onChange)}\n            isClearable\n          />\n        )}\n        <AccessoryButton aria-label=\"Remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} type=\"button\" />\n      </HorizontalGroup>\n    );\n  };\n\n  return (\n    <Field label=\"Dimensions\">\n      <EditorList items={dimensionFilters} onChange={changedFunc} renderItem={renderFilters} />\n    </Field>\n  );\n};\n\nexport default DimensionFields;\n","import { useCallback, useState } from 'react';\nimport * as React from 'react';\n\nimport { Input } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\nimport { Field } from '../shared/Field';\n\nimport { setLegendAlias } from './setQueryValue';\n\nconst LegendFormatField = ({ onQueryChange, query }: AzureQueryEditorFieldProps) => {\n  const [value, setValue] = useState<string>(query.azureMonitor?.alias ?? '');\n\n  // As calling onQueryChange initiates a the datasource refresh, we only want to call it once\n  // the field loses focus\n  const handleChange = useCallback((ev: React.FormEvent) => {\n    if (ev.target instanceof HTMLInputElement) {\n      setValue(ev.target.value);\n    }\n  }, []);\n\n  const handleBlur = useCallback(() => {\n    const newQuery = setLegendAlias(query, value);\n    onQueryChange(newQuery);\n  }, [onQueryChange, query, value]);\n\n  return (\n    <Field label=\"Legend format\">\n      <Input\n        id=\"azure-monitor-metrics-legend-field\"\n        placeholder=\"Alias patterns\"\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        width={38}\n      />\n    </Field>\n  );\n};\n\nexport default LegendFormatField;\n","import { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { addValueToOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\nimport { setMetricName } from './setQueryValue';\n\ninterface MetricNameProps extends AzureQueryEditorFieldProps {\n  metricNames: AzureMonitorOption[];\n}\n\nconst MetricNameField = ({ metricNames, query, variableOptionGroup, onQueryChange }: MetricNameProps) => {\n  const handleChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setMetricName(query, change.value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const options = addValueToOptions(metricNames, variableOptionGroup, query.azureMonitor?.metricName);\n\n  return (\n    <Field label=\"Metric\" data-testid={selectors.components.queryEditor.metricsQueryEditor.metricName.input}>\n      <Select\n        inputId=\"azure-monitor-metrics-metric-field\"\n        value={query.azureMonitor?.metricName ?? null}\n        onChange={handleChange}\n        options={options}\n        allowCustomValue\n      />\n    </Field>\n  );\n};\n\nexport default MetricNameField;\n","import { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { addValueToOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\nimport { setCustomNamespace } from './setQueryValue';\n\ninterface MetricNamespaceFieldProps extends AzureQueryEditorFieldProps {\n  metricNamespaces: AzureMonitorOption[];\n}\n\nconst MetricNamespaceField = ({\n  metricNamespaces,\n  query,\n  variableOptionGroup,\n  onQueryChange,\n}: MetricNamespaceFieldProps) => {\n  const handleChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setCustomNamespace(query, change.value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const value = query.azureMonitor?.customNamespace || query.azureMonitor?.metricNamespace;\n  const options = addValueToOptions(metricNamespaces, variableOptionGroup, value);\n\n  return (\n    <Field label=\"Metric namespace\">\n      <Select\n        inputId=\"azure-monitor-metrics-metric-namespace-field\"\n        value={value || null}\n        onChange={handleChange}\n        options={options}\n        allowCustomValue\n      />\n    </Field>\n  );\n};\n\nexport default MetricNamespaceField;\n","import { useCallback, useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport TimegrainConverter from '../../time_grain_converter';\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { addValueToOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\nimport { setTimeGrain } from './setQueryValue';\n\ninterface TimeGrainFieldProps extends AzureQueryEditorFieldProps {\n  timeGrainOptions: AzureMonitorOption[];\n}\n\nconst TimeGrainField = ({ query, timeGrainOptions, variableOptionGroup, onQueryChange }: TimeGrainFieldProps) => {\n  const handleChange = useCallback(\n    (change: SelectableValue<string>) => {\n      if (!change.value) {\n        return;\n      }\n\n      const newQuery = setTimeGrain(query, change.value);\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const timeGrains = useMemo(() => {\n    const autoInterval = TimegrainConverter.findClosestTimeGrain(\n      '1m',\n      timeGrainOptions.map((o) => TimegrainConverter.createKbnUnitFromISO8601Duration(o.value)) || [\n        '1m',\n        '5m',\n        '15m',\n        '30m',\n        '1h',\n        '6h',\n        '12h',\n        '1d',\n      ]\n    );\n\n    const baseTimeGrains = timeGrainOptions.map((v) => (v.value === 'auto' ? { ...v, description: autoInterval } : v));\n\n    const options = addValueToOptions(baseTimeGrains, variableOptionGroup, query.azureMonitor?.timeGrain);\n\n    return options;\n  }, [timeGrainOptions, variableOptionGroup, query.azureMonitor?.timeGrain]);\n\n  return (\n    <Field label=\"Time grain\">\n      <Select\n        inputId=\"azure-monitor-metrics-time-grain-field\"\n        value={query.azureMonitor?.timeGrain}\n        onChange={handleChange}\n        options={timeGrains}\n      />\n    </Field>\n  );\n};\n\nexport default TimeGrainField;\n","import { useCallback, useState } from 'react';\nimport * as React from 'react';\n\nimport { Input } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps } from '../../types';\nimport { Field } from '../shared/Field';\n\nimport { setTop } from './setQueryValue';\n\nconst TopField = ({ onQueryChange, query }: AzureQueryEditorFieldProps) => {\n  const [value, setValue] = useState<string>(query.azureMonitor?.top ?? '');\n\n  // As calling onQueryChange initiates a the datasource refresh, we only want to call it once\n  // the field loses focus\n  const handleChange = useCallback((ev: React.FormEvent) => {\n    if (ev.target instanceof HTMLInputElement) {\n      setValue(ev.target.value);\n    }\n  }, []);\n\n  const handleBlur = useCallback(() => {\n    const newQuery = setTop(query, value);\n    onQueryChange(newQuery);\n  }, [onQueryChange, query, value]);\n\n  return (\n    <Field label=\"Top\">\n      <Input\n        id=\"azure-monitor-metrics-top-field\"\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        width={16}\n      />\n    </Field>\n  );\n};\n\nexport default TopField;\n","import { useEffect, useMemo, useState } from 'react';\n\nexport function useAsyncState<T>(asyncFn: () => Promise<T>, setError: Function, dependencies: unknown[]) {\n  // Use the lazy initial state functionality of useState to assign a random ID to the API call\n  // to track where errors come from. See useLastError.\n  const [errorSource] = useState(() => Math.random());\n  const [value, setValue] = useState<T>();\n\n  const finalValue = useMemo(() => value ?? [], [value]);\n\n  useEffect(() => {\n    asyncFn()\n      .then((results) => {\n        setValue(results);\n        setError(errorSource, undefined);\n      })\n      .catch((err) => {\n        setError(errorSource, err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return finalValue;\n}\n","import { useEffect, useState } from 'react';\n\nimport { rangeUtil } from '@grafana/data';\n\nimport Datasource from '../../datasource';\nimport TimegrainConverter from '../../time_grain_converter';\nimport { AzureMonitorErrorish, AzureMonitorOption, AzureMonitorQuery, AzureMonitorResource } from '../../types';\nimport { toOption } from '../../utils/common';\nimport { useAsyncState } from '../../utils/useAsyncState';\n\nimport { setCustomNamespace } from './setQueryValue';\n\ntype SetErrorFn = (source: string, error: AzureMonitorErrorish | undefined) => void;\n\nexport type DataHook = (\n  query: AzureMonitorQuery,\n  datasource: Datasource,\n  onChange: OnChangeFn,\n  setError: SetErrorFn\n) => AzureMonitorOption[];\n\nexport type MetricsMetadataHook = (\n  query: AzureMonitorQuery,\n  datasource: Datasource,\n  onChange: OnChangeFn\n) => MetricMetadata;\n\nexport interface MetricMetadata {\n  aggOptions: AzureMonitorOption[];\n  timeGrains: AzureMonitorOption[];\n  dimensions: AzureMonitorOption[];\n  isLoading: boolean;\n\n  // These two properties are only used within the hook, and not elsewhere\n  supportedAggTypes: string[];\n  primaryAggType: string | undefined;\n}\n\ntype OnChangeFn = (newQuery: AzureMonitorQuery) => void;\n\nconst getResourceGroupAndName = (resources?: AzureMonitorResource[]) => {\n  if (!resources || !resources.length) {\n    return { resourceGroup: '', resourceName: '' };\n  }\n  return {\n    resourceGroup: resources[0].resourceGroup ?? '',\n    resourceName: resources[0].resourceName ?? '',\n  };\n};\n\nexport const useMetricNamespaces: DataHook = (query, datasource, onChange, setError) => {\n  const { subscription } = query;\n  const { metricNamespace, resources } = query.azureMonitor ?? {};\n  const { resourceGroup, resourceName } = getResourceGroupAndName(resources);\n\n  const metricNamespaces = useAsyncState(\n    async () => {\n      if (!subscription || !resourceGroup || !resourceName) {\n        return;\n      }\n\n      const results = await datasource.azureMonitorDatasource.getMetricNamespaces(\n        {\n          subscription,\n          metricNamespace,\n          resourceGroup,\n          resourceName,\n        },\n        false\n      );\n      const options = formatOptions(results, metricNamespace);\n\n      // Do some cleanup of the query state if need be\n      if (!metricNamespace && options.length) {\n        onChange(setCustomNamespace(query, options[0].value));\n      }\n\n      return options;\n    },\n    setError,\n    [subscription, metricNamespace, resourceGroup, resourceName]\n  );\n\n  return metricNamespaces;\n};\n\nexport const useMetricNames: DataHook = (query, datasource, onChange, setError) => {\n  const { subscription } = query;\n  const { metricNamespace, metricName, resources, customNamespace } = query.azureMonitor ?? {};\n  const { resourceGroup, resourceName } = getResourceGroupAndName(resources);\n  const multipleResources = (resources && resources.length > 1) ?? false;\n  const region = query.azureMonitor?.region ?? '';\n\n  return useAsyncState(\n    async () => {\n      if (!subscription || !metricNamespace || !resourceGroup || !resourceName) {\n        return;\n      }\n      const results = await datasource.azureMonitorDatasource.getMetricNames(\n        {\n          subscription,\n          resourceGroup,\n          resourceName,\n          metricNamespace,\n          customNamespace,\n        },\n        multipleResources,\n        region\n      );\n      const options = formatOptions(results, metricName);\n\n      return options;\n    },\n    setError,\n    [subscription, resourceGroup, resourceName, metricNamespace, customNamespace, multipleResources]\n  );\n};\n\nconst defaultMetricMetadata: MetricMetadata = {\n  aggOptions: [],\n  timeGrains: [],\n  dimensions: [],\n  isLoading: false,\n  supportedAggTypes: [],\n  primaryAggType: undefined,\n};\n\nexport const useMetricMetadata = (query: AzureMonitorQuery, datasource: Datasource, onChange: OnChangeFn) => {\n  const [metricMetadata, setMetricMetadata] = useState<MetricMetadata>(defaultMetricMetadata);\n  const { subscription } = query;\n  const { resources, metricNamespace, metricName, aggregation, timeGrain, customNamespace, region } =\n    query.azureMonitor ?? {};\n  const { resourceGroup, resourceName } = getResourceGroupAndName(resources);\n  const multipleResources = (resources && resources.length > 1) ?? false;\n\n  // Fetch new metric metadata when the fields change\n  useEffect(() => {\n    if (!subscription || !resourceGroup || !resourceName || !metricNamespace || !metricName) {\n      setMetricMetadata(defaultMetricMetadata);\n      return;\n    }\n    datasource.azureMonitorDatasource\n      .getMetricMetadata(\n        { subscription, resourceGroup, resourceName, metricNamespace, metricName, customNamespace },\n        multipleResources,\n        region\n      )\n      .then((metadata) => {\n        // TODO: Move the aggregationTypes and timeGrain defaults into `getMetricMetadata`\n        const aggregations = (metadata.supportedAggTypes || [metadata.primaryAggType]).map((v) => ({\n          label: v,\n          value: v,\n        }));\n\n        setMetricMetadata({\n          aggOptions: aggregations,\n          timeGrains: metadata.supportedTimeGrains,\n          dimensions: metadata.dimensions,\n          isLoading: false,\n          supportedAggTypes: metadata.supportedAggTypes ?? [],\n          primaryAggType: metadata.primaryAggType,\n        });\n      });\n  }, [\n    region,\n    datasource,\n    subscription,\n    resourceGroup,\n    resourceName,\n    metricNamespace,\n    metricName,\n    customNamespace,\n    multipleResources,\n  ]);\n\n  // Update the query state in response to the meta data changing\n  useEffect(() => {\n    const newAggregation = aggregation || metricMetadata.primaryAggType;\n    const newTimeGrain = timeGrain || 'auto';\n\n    if (newAggregation !== aggregation || newTimeGrain !== timeGrain) {\n      onChange({\n        ...query,\n        azureMonitor: {\n          ...query.azureMonitor,\n          aggregation: newAggregation,\n          timeGrain: newTimeGrain,\n          allowedTimeGrainsMs: metricMetadata.timeGrains\n            .filter((timeGrain) => timeGrain.value !== 'auto')\n            .map((timeGrain) =>\n              rangeUtil.intervalToMs(TimegrainConverter.createKbnUnitFromISO8601Duration(timeGrain.value))\n            ),\n        },\n      });\n    }\n  }, [onChange, metricMetadata, aggregation, timeGrain, query]);\n\n  return metricMetadata;\n};\n\nfunction formatOptions(\n  rawResults: Array<{\n    text: string;\n    value: string;\n  }>,\n  selectedValue?: string\n) {\n  const options = rawResults.map(toOption);\n\n  // account for custom values that might have been set in json file like ones crafted with a template variable (ex: \"cloud-datasource-resource-$Environment\")\n  if (selectedValue && !options.find((option) => option.value === selectedValue.toLowerCase())) {\n    options.push({ label: selectedValue, value: selectedValue });\n  }\n\n  return options;\n}\n","import { PanelData } from '@grafana/data';\nimport { EditorRows, EditorRow, EditorFieldGroup } from '@grafana/plugin-ui';\n\nimport { multiResourceCompatibleTypes } from '../../azureMetadata';\nimport type Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport type { AzureMonitorQuery, AzureMonitorOption, AzureMonitorErrorish, AzureMonitorResource } from '../../types';\nimport ResourceField from '../ResourceField';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from '../ResourcePicker/types';\nimport { parseResourceDetails } from '../ResourcePicker/utils';\n\nimport AdvancedResourcePicker from './AdvancedResourcePicker';\nimport AggregationField from './AggregationField';\nimport DimensionFields from './DimensionFields';\nimport LegendFormatField from './LegendFormatField';\nimport MetricNameField from './MetricNameField';\nimport MetricNamespaceField from './MetricNamespaceField';\nimport TimeGrainField from './TimeGrainField';\nimport TopField from './TopField';\nimport { useMetricNames, useMetricNamespaces, useMetricMetadata } from './dataHooks';\n\ninterface MetricsQueryEditorProps {\n  data: PanelData | undefined;\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  onChange: (newQuery: AzureMonitorQuery) => void;\n  variableOptionGroup: { label: string; options: AzureMonitorOption[] };\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n}\n\nconst MetricsQueryEditor = ({\n  data,\n  query,\n  datasource,\n  variableOptionGroup,\n  onChange,\n  setError,\n}: MetricsQueryEditorProps) => {\n  const metricsMetadata = useMetricMetadata(query, datasource, onChange);\n  const metricNamespaces = useMetricNamespaces(query, datasource, onChange, setError);\n  const metricNames = useMetricNames(query, datasource, onChange, setError);\n  const resources =\n    query.azureMonitor?.resources?.map((r) => ({\n      subscription: query.subscription,\n      resourceGroup: r.resourceGroup,\n      metricNamespace: query.azureMonitor?.metricNamespace,\n      resourceName: r.resourceName,\n      region: query.azureMonitor?.region,\n    })) ?? [];\n\n  const supportMultipleResource = (namespace?: string) => {\n    return multiResourceCompatibleTypes[namespace?.toLocaleLowerCase() ?? ''] ?? false;\n  };\n\n  const disableRow = (row: ResourceRow, selectedRows: ResourceRowGroup) => {\n    if (selectedRows.length === 0) {\n      // Only if there is some resource(s) selected we should disable rows\n      return false;\n    }\n\n    const rowResource = parseResourceDetails(row.uri, row.location);\n    const selectedRowSample = parseResourceDetails(selectedRows[0].uri, selectedRows[0].location);\n    // Only resources:\n    // - in the same subscription\n    // - in the same region\n    // - with the same metric namespace\n    // - with a metric namespace that is compatible with multi-resource queries\n    return (\n      rowResource.subscription !== selectedRowSample.subscription ||\n      rowResource.region !== selectedRowSample.region ||\n      rowResource.metricNamespace?.toLocaleLowerCase() !== selectedRowSample.metricNamespace?.toLocaleLowerCase() ||\n      !supportMultipleResource(rowResource.metricNamespace)\n    );\n  };\n\n  const selectionNotice = (selectedRows: ResourceRowGroup) => {\n    if (selectedRows.length === 0) {\n      return '';\n    }\n    const selectedRowSample = parseResourceDetails(selectedRows[0].uri, selectedRows[0].location);\n    return supportMultipleResource(selectedRowSample.metricNamespace)\n      ? 'You can select items of the same resource type and location. To select resources of a different resource type or location, please first uncheck your current selection.'\n      : '';\n  };\n\n  return (\n    <span data-testid={selectors.components.queryEditor.metricsQueryEditor.container.input}>\n      <EditorRows>\n        <EditorRow>\n          <EditorFieldGroup>\n            <ResourceField\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              selectableEntryTypes={[ResourceRowType.Resource]}\n              resources={resources ?? []}\n              queryType={'metrics'}\n              disableRow={disableRow}\n              renderAdvanced={(resources, onChange) => (\n                // It's required to cast resources because the resource picker\n                // specifies the type to string | AzureMonitorResource.\n                // eslint-disable-next-line\n                <AdvancedResourcePicker resources={resources as AzureMonitorResource[]} onChange={onChange} />\n              )}\n              selectionNotice={selectionNotice}\n            />\n            <MetricNamespaceField\n              metricNamespaces={metricNamespaces}\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n            />\n            <MetricNameField\n              metricNames={metricNames}\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n            />\n            <AggregationField\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              aggregationOptions={metricsMetadata?.aggOptions ?? []}\n              isLoading={metricsMetadata.isLoading}\n            />\n            <TimeGrainField\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              timeGrainOptions={metricsMetadata?.timeGrains ?? []}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n        <EditorRow>\n          <EditorFieldGroup>\n            <DimensionFields\n              data={data}\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              dimensionOptions={metricsMetadata?.dimensions ?? []}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n        <EditorRow>\n          <EditorFieldGroup>\n            <TopField\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n            />\n            <LegendFormatField\n              query={query}\n              datasource={datasource}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n      </EditorRows>\n    </span>\n  );\n};\n\nexport default MetricsQueryEditor;\n","import { gte, compare, valid } from 'semver';\n\nimport {\n  FunctionSelector,\n  Selectors,\n  SelectorsOf,\n  StringSelector,\n  VersionedSelectorGroup,\n  VersionedSelectors,\n  CssSelector,\n  UrlSelector,\n  FunctionSelectorTwoArgs,\n} from './types';\n\n/**\n * Resolves selectors based on the Grafana version\n */\nexport function resolveSelectors<T extends VersionedSelectorGroup>(\n  versionedSelectors: T,\n  grafanaVersion = 'latest'\n): SelectorsOf<T> {\n  const version = grafanaVersion.replace(/\\-.*/, '');\n\n  return resolveSelectorGroup(versionedSelectors, version);\n}\n\nfunction resolveSelectorGroup<T extends VersionedSelectorGroup>(group: T, grafanaVersion: string): SelectorsOf<T> {\n  const result: Selectors = {};\n\n  for (const [key, value] of Object.entries(group)) {\n    if (isVersionedSelectorGroup(value)) {\n      result[key] = resolveSelectorGroup(value, grafanaVersion);\n    } else {\n      assertIsSemverValid(value, key);\n      result[key] = resolveSelector(value, grafanaVersion);\n    }\n  }\n\n  return result as SelectorsOf<T>;\n}\n\nfunction isVersionedSelectorGroup(\n  target: VersionedSelectors | VersionedSelectorGroup\n): target is VersionedSelectorGroup {\n  if (typeof target === 'object') {\n    const [first] = Object.keys(target);\n    return !valid(first);\n  }\n\n  return false;\n}\n\nfunction resolveSelector(\n  versionedSelector: VersionedSelectors,\n  grafanaVersion: string\n): StringSelector | FunctionSelector | FunctionSelectorTwoArgs | CssSelector | UrlSelector {\n  let versionToUse;\n  let versions = Object.keys(versionedSelector).sort(compare);\n\n  if (grafanaVersion === 'latest') {\n    return versionedSelector[versions[versions.length - 1]];\n  }\n\n  for (const version of versions) {\n    if (gte(grafanaVersion, version)) {\n      versionToUse = version;\n    }\n  }\n\n  if (!versionToUse) {\n    versionToUse = versions[versions.length - 1];\n  }\n\n  return versionedSelector[versionToUse];\n}\n\nfunction assertIsSemverValid(versionedSelector: VersionedSelectors, selectorName: string) {\n  if (!Object.keys(versionedSelector).every((version) => valid(version))) {\n    throw new Error(`Invalid semver version: '${selectorName}'`);\n  }\n}\n","export const MIN_GRAFANA_VERSION = '8.5.0';\n","// NOTE: by default Component string selectors are set up to be aria-labels,\n// however there are many cases where your component may not need an aria-label\n// (a <button> with clear text, for example, does not need an aria-label as it's already labeled)\n// but you still might need to select it for testing,\n// in that case please add the attribute data-testid={selector} in the component and\n// prefix your selector string with 'data-testid' so that when create the selectors we know to search for it on the right attribute\n\nimport { VersionedSelectorGroup } from '../types';\n\nimport { MIN_GRAFANA_VERSION } from './constants';\n\n/**\n * Selectors grouped/defined in Components\n */\nexport const versionedComponents = {\n  RadioButton: {\n    container: {\n      '10.2.3': 'data-testid radio-button',\n    },\n  },\n  Breadcrumbs: {\n    breadcrumb: {\n      '9.4.0': (title: string) => `data-testid ${title} breadcrumb`,\n    },\n  },\n  TimePicker: {\n    openButton: {\n      [MIN_GRAFANA_VERSION]: 'data-testid TimePicker Open Button',\n    },\n    overlayContent: {\n      '10.2.3': 'data-testid TimePicker Overlay Content',\n    },\n    fromField: {\n      '10.2.3': 'data-testid Time Range from field',\n      [MIN_GRAFANA_VERSION]: 'Time Range from field',\n    },\n    toField: {\n      '10.2.3': 'data-testid Time Range to field',\n      [MIN_GRAFANA_VERSION]: 'Time Range to field',\n    },\n    applyTimeRange: {\n      [MIN_GRAFANA_VERSION]: 'data-testid TimePicker submit button',\n    },\n    copyTimeRange: {\n      '10.4.0': 'data-testid TimePicker copy button',\n    },\n    pasteTimeRange: {\n      '10.4.0': 'data-testid TimePicker paste button',\n    },\n    calendar: {\n      label: {\n        '10.2.3': 'data-testid Time Range calendar',\n        [MIN_GRAFANA_VERSION]: 'Time Range calendar',\n      },\n      openButton: {\n        '10.2.3': 'data-testid Open time range calendar',\n        [MIN_GRAFANA_VERSION]: 'Open time range calendar',\n      },\n      closeButton: {\n        '10.2.3': 'data-testid Close time range Calendar',\n        [MIN_GRAFANA_VERSION]: 'Close time range Calendar',\n      },\n    },\n    absoluteTimeRangeTitle: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-absolute-time-range-narrow',\n    },\n  },\n  DataSourcePermissions: {\n    form: { '9.5.0': () => 'form[name=\"addPermission\"]' },\n    roleType: {\n      '9.5.0': 'Role to add new permission to',\n    },\n    rolePicker: {\n      '9.5.0': 'Built-in role picker',\n    },\n    permissionLevel: {\n      '12.0.0': 'Permission level',\n      '9.5.0': 'Permission Level',\n    },\n  },\n  DateTimePicker: {\n    input: {\n      '10.2.3': 'data-testid date-time-input',\n    },\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: {\n          [MIN_GRAFANA_VERSION]: 'Test Data Query scenario select container',\n        },\n        scenarioSelect: {\n          [MIN_GRAFANA_VERSION]: 'Test Data Query scenario select',\n        },\n        max: {\n          [MIN_GRAFANA_VERSION]: 'TestData max',\n        },\n        min: {\n          [MIN_GRAFANA_VERSION]: 'TestData min',\n        },\n        noise: {\n          [MIN_GRAFANA_VERSION]: 'TestData noise',\n        },\n        seriesCount: {\n          [MIN_GRAFANA_VERSION]: 'TestData series count',\n        },\n        spread: {\n          [MIN_GRAFANA_VERSION]: 'TestData spread',\n        },\n        startValue: {\n          [MIN_GRAFANA_VERSION]: 'TestData start value',\n        },\n        drop: {\n          [MIN_GRAFANA_VERSION]: 'TestData drop values',\n        },\n      },\n    },\n    DataSourceHttpSettings: {\n      urlInput: {\n        '10.4.0': 'data-testid Datasource HTTP settings url',\n        [MIN_GRAFANA_VERSION]: 'Datasource HTTP settings url',\n      },\n    },\n    Jaeger: {\n      traceIDInput: {\n        [MIN_GRAFANA_VERSION]: 'Trace ID',\n      },\n    },\n    Prometheus: {\n      configPage: {\n        connectionSettings: {\n          [MIN_GRAFANA_VERSION]: 'Data source connection URL', // aria-label in grafana experimental\n        },\n        manageAlerts: {\n          '10.4.0': 'prometheus-alerts-manager', // id for switch component\n        },\n        scrapeInterval: {\n          '10.4.0': 'data-testid scrape interval',\n        },\n        queryTimeout: {\n          '10.4.0': 'data-testid query timeout',\n        },\n        defaultEditor: {\n          '10.4.0': 'data-testid default editor',\n        },\n        disableMetricLookup: {\n          '10.4.0': 'disable-metric-lookup', // id for switch component\n        },\n        prometheusType: {\n          '10.4.0': 'data-testid prometheus type',\n        },\n        prometheusVersion: {\n          '10.4.0': 'data-testid prometheus version',\n        },\n        cacheLevel: {\n          '10.4.0': 'data-testid cache level',\n        },\n        incrementalQuerying: {\n          '10.4.0': 'prometheus-incremental-querying', // id for switch component\n        },\n        queryOverlapWindow: {\n          '10.4.0': 'data-testid query overlap window',\n        },\n        disableRecordingRules: {\n          '10.4.0': 'disable-recording-rules', // id for switch component\n        },\n        customQueryParameters: {\n          '10.4.0': 'data-testid custom query parameters',\n        },\n        httpMethod: {\n          '10.4.0': 'data-testid http method',\n        },\n        exemplarsAddButton: {\n          '10.3.0': 'data-testid Add exemplar config button',\n          [MIN_GRAFANA_VERSION]: 'Add exemplar config button',\n        },\n        internalLinkSwitch: {\n          '10.3.0': 'data-testid Internal link switch',\n          [MIN_GRAFANA_VERSION]: 'Internal link switch',\n        },\n        codeModeMetricNamesSuggestionLimit: {\n          '11.1.0': 'data-testid code mode metric names suggestion limit',\n        },\n      },\n      queryEditor: {\n        explain: {\n          '10.4.0': 'data-testid prometheus explain switch wrapper',\n        },\n        editorToggle: {\n          '10.4.0': 'data-testid QueryEditorModeToggle', // wrapper for toggle\n        },\n        options: {\n          '10.4.0': 'data-testid prometheus options', // wrapper for options group\n        },\n        legend: {\n          '10.4.0': 'data-testid prometheus legend wrapper', // wrapper for multiple compomnents\n        },\n        format: {\n          '10.4.0': 'data-testid prometheus format',\n        },\n        step: {\n          '10.4.0': 'prometheus-step', // id for autosize component\n        },\n        type: {\n          '10.4.0': 'data-testid prometheus type', //wrapper for radio button group\n        },\n        exemplars: {\n          '10.4.0': 'prometheus-exemplars', // id for editor switch component\n        },\n        builder: {\n          // see QueryBuilder below for commented selectors\n          metricSelect: {\n            '10.4.0': 'data-testid metric select',\n          },\n          hints: {\n            '10.4.0': 'data-testid prometheus hints', // wrapper for hints component\n          },\n          metricsExplorer: {\n            '10.4.0': 'data-testid metrics explorer',\n          },\n          queryAdvisor: {\n            '10.4.0': 'data-testid query advisor',\n          },\n        },\n        code: {\n          queryField: {\n            '10.4.0': 'data-testid prometheus query field',\n          },\n          metricsCountInfo: {\n            '11.1.0': 'data-testid metrics count disclaimer',\n          },\n          metricsBrowser: {\n            openButton: {\n              '10.4.0': 'data-testid open metrics browser',\n            },\n            selectMetric: {\n              '10.4.0': 'data-testid select a metric',\n            },\n            seriesLimit: {\n              '10.3.1': 'data-testid series limit',\n            },\n            metricList: {\n              '10.4.0': 'data-testid metric list',\n            },\n            labelNamesFilter: {\n              '10.4.0': 'data-testid label names filter',\n            },\n            labelValuesFilter: {\n              '10.4.0': 'data-testid label values filter',\n            },\n            useQuery: {\n              '10.4.0': 'data-testid use query',\n            },\n            useAsRateQuery: {\n              '10.4.0': 'data-testid use as rate query',\n            },\n            validateSelector: {\n              '10.4.0': 'data-testid validate selector',\n            },\n            clear: {\n              '10.4.0': 'data-testid clear',\n            },\n          },\n        },\n      },\n      exemplarMarker: {\n        '10.3.0': 'data-testid Exemplar marker',\n        [MIN_GRAFANA_VERSION]: 'Exemplar marker',\n      },\n      variableQueryEditor: {\n        queryType: {\n          '10.4.0': 'data-testid query type',\n        },\n        labelnames: {\n          metricRegex: {\n            '10.4.0': 'data-testid label names metric regex',\n          },\n        },\n        labelValues: {\n          labelSelect: {\n            '10.4.0': 'data-testid label values label select',\n          },\n        },\n        metricNames: {\n          metricRegex: {\n            '10.4.0': 'data-testid metric names metric regex',\n          },\n        },\n        varQueryResult: {\n          '10.4.0': 'data-testid variable query result',\n        },\n        seriesQuery: {\n          '10.4.0': 'data-testid prometheus series query',\n        },\n        classicQuery: {\n          '10.4.0': 'data-testid prometheus classic query',\n        },\n      },\n      annotations: {\n        minStep: {\n          '10.4.0': 'prometheus-annotation-min-step', // id for autosize input\n        },\n        title: {\n          '10.4.0': 'data-testid prometheus annotation title',\n        },\n        tags: {\n          '10.4.0': 'data-testid prometheus annotation tags',\n        },\n        text: {\n          '10.4.0': 'data-testid prometheus annotation text',\n        },\n        seriesValueAsTimestamp: {\n          '10.4.0': 'data-testid prometheus annotation series value as timestamp',\n        },\n      },\n    },\n  },\n  Menu: {\n    MenuComponent: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `${title} menu`,\n    },\n    MenuGroup: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `${title} menu group`,\n    },\n    MenuItem: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `${title} menu item`,\n    },\n    SubMenu: {\n      container: {\n        '10.3.0': 'data-testid SubMenu container',\n        [MIN_GRAFANA_VERSION]: 'SubMenu container',\n      },\n      icon: {\n        '10.3.0': 'data-testid SubMenu icon',\n        [MIN_GRAFANA_VERSION]: 'SubMenu icon',\n      },\n    },\n  },\n  Panels: {\n    Panel: {\n      title: {\n        [MIN_GRAFANA_VERSION]: (title: string) => `data-testid Panel header ${title}`,\n      },\n      content: {\n        '11.1.0': 'data-testid panel content',\n      },\n      headerItems: {\n        '10.2.0': (item: string) => `data-testid Panel header item ${item}`,\n      },\n      menuItems: {\n        '9.5.0': (item: string) => `data-testid Panel menu item ${item}`,\n      },\n      menu: {\n        '9.5.0': (title: string) => `data-testid Panel menu ${title}`,\n      },\n      containerByTitle: {\n        [MIN_GRAFANA_VERSION]: (title: string) => `${title} panel`,\n      },\n      headerCornerInfo: {\n        [MIN_GRAFANA_VERSION]: (mode: string) => `Panel header ${mode}`,\n      },\n      status: {\n        '10.2.0': (status: string) => `data-testid Panel status ${status}`,\n        [MIN_GRAFANA_VERSION]: (_: string) => 'Panel status',\n      },\n      loadingBar: {\n        '10.0.0': () => `Panel loading bar`,\n      },\n      HoverWidget: {\n        container: {\n          '10.1.0': 'data-testid hover-header-container',\n          [MIN_GRAFANA_VERSION]: 'hover-header-container',\n        },\n        dragIcon: {\n          '10.0.0': 'data-testid drag-icon',\n        },\n      },\n      PanelDataErrorMessage: {\n        '10.4.0': 'data-testid Panel data error message',\n      },\n    },\n    Visualization: {\n      Graph: {\n        container: {\n          '9.5.0': 'Graph container',\n        },\n        VisualizationTab: {\n          legendSection: {\n            [MIN_GRAFANA_VERSION]: 'Legend section',\n          },\n        },\n        Legend: {\n          legendItemAlias: {\n            [MIN_GRAFANA_VERSION]: (name: string) => `gpl alias ${name}`,\n          },\n          showLegendSwitch: {\n            [MIN_GRAFANA_VERSION]: 'gpl show legend',\n          },\n        },\n        xAxis: {\n          labels: {\n            [MIN_GRAFANA_VERSION]: () => 'div.flot-x-axis > div.flot-tick-label',\n          },\n        },\n      },\n      BarGauge: {\n        valueV2: {\n          [MIN_GRAFANA_VERSION]: 'data-testid Bar gauge value',\n        },\n      },\n      PieChart: {\n        svgSlice: {\n          '10.3.0': 'data testid Pie Chart Slice',\n        },\n      },\n      Text: {\n        container: { [MIN_GRAFANA_VERSION]: () => '.markdown-html' },\n      },\n      Table: {\n        header: {\n          [MIN_GRAFANA_VERSION]: 'table header',\n        },\n        footer: {\n          [MIN_GRAFANA_VERSION]: 'table-footer',\n        },\n        body: {\n          '10.2.0': 'data-testid table body',\n        },\n      },\n    },\n  },\n  VizLegend: {\n    seriesName: {\n      '10.3.0': (name: string) => `data-testid VizLegend series ${name}`,\n    },\n  },\n  Drawer: {\n    General: {\n      title: {\n        [MIN_GRAFANA_VERSION]: (title: string) => `Drawer title ${title}`,\n      },\n      expand: {\n        [MIN_GRAFANA_VERSION]: 'Drawer expand',\n      },\n      contract: {\n        [MIN_GRAFANA_VERSION]: 'Drawer contract',\n      },\n      close: {\n        '10.3.0': 'data-testid Drawer close',\n        [MIN_GRAFANA_VERSION]: 'Drawer close',\n      },\n      rcContentWrapper: { '9.4.0': () => '.rc-drawer-content-wrapper' },\n      subtitle: {\n        '10.4.0': 'data-testid drawer subtitle',\n      },\n    },\n    DashboardSaveDrawer: {\n      saveButton: {\n        '11.1.0': 'data-testid Save dashboard drawer button',\n      },\n      saveAsButton: {\n        '11.1.0': 'data-testid Save as dashboard drawer button',\n      },\n      saveAsTitleInput: {\n        '11.1.0': 'Save dashboard title field',\n      },\n    },\n  },\n  PanelEditor: {\n    General: {\n      content: {\n        '11.1.0': 'data-testid Panel editor content',\n        '8.0.0': 'Panel editor content',\n      },\n    },\n    OptionsPane: {\n      content: {\n        '11.1.0': 'data-testid Panel editor option pane content',\n        [MIN_GRAFANA_VERSION]: 'Panel editor option pane content',\n      },\n      select: {\n        [MIN_GRAFANA_VERSION]: 'Panel editor option pane select',\n      },\n      fieldLabel: {\n        [MIN_GRAFANA_VERSION]: (type: string) => `${type} field property editor`,\n      },\n      fieldInput: {\n        '11.0.0': (title: string) => `data-testid Panel editor option pane field input ${title}`,\n      },\n    },\n    DataPane: {\n      content: {\n        '11.1.0': 'data-testid Panel editor data pane content',\n        [MIN_GRAFANA_VERSION]: 'Panel editor data pane content',\n      },\n    },\n    applyButton: {\n      '9.2.0': 'data-testid Apply changes and go back to dashboard',\n      '9.1.0': 'Apply changes and go back to dashboard',\n      '8.0.0': 'panel editor apply',\n    },\n    toggleVizPicker: {\n      '10.0.0': 'data-testid toggle-viz-picker',\n      '8.0.0': 'toggle-viz-picker',\n    },\n    toggleVizOptions: {\n      '10.1.0': 'data-testid toggle-viz-options',\n      [MIN_GRAFANA_VERSION]: 'toggle-viz-options',\n    },\n    toggleTableView: {\n      '11.1.0': 'data-testid toggle-table-view',\n      [MIN_GRAFANA_VERSION]: 'toggle-table-view',\n    },\n\n    // [Geomap] Map controls\n    showZoomField: {\n      '10.2.0': 'Map controls Show zoom control field property editor',\n    },\n    showAttributionField: {\n      '10.2.0': 'Map controls Show attribution field property editor',\n    },\n    showScaleField: {\n      '10.2.0': 'Map controls Show scale field property editor',\n    },\n    showMeasureField: {\n      '10.2.0': 'Map controls Show measure tools field property editor',\n    },\n    showDebugField: {\n      '10.2.0': 'Map controls Show debug field property editor',\n    },\n\n    measureButton: {\n      '9.2.0': 'show measure tools',\n    },\n  },\n  PanelInspector: {\n    Data: {\n      content: {\n        [MIN_GRAFANA_VERSION]: 'Panel inspector Data content',\n      },\n    },\n    Stats: {\n      content: {\n        [MIN_GRAFANA_VERSION]: 'Panel inspector Stats content',\n      },\n    },\n    Json: {\n      content: {\n        '11.1.0': 'data-testid Panel inspector Json content',\n        [MIN_GRAFANA_VERSION]: 'Panel inspector Json content',\n      },\n    },\n    Query: {\n      content: {\n        [MIN_GRAFANA_VERSION]: 'Panel inspector Query content',\n      },\n      refreshButton: {\n        [MIN_GRAFANA_VERSION]: 'Panel inspector Query refresh button',\n      },\n      jsonObjectKeys: {\n        [MIN_GRAFANA_VERSION]: () => '.json-formatter-key',\n      },\n    },\n  },\n  Tab: {\n    title: {\n      '11.2.0': (title: string) => `data-testid Tab ${title}`,\n    },\n    active: { [MIN_GRAFANA_VERSION]: () => '[class*=\"-activeTabStyle\"]' },\n  },\n  RefreshPicker: {\n    runButtonV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid RefreshPicker run button',\n    },\n    intervalButtonV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid RefreshPicker interval button',\n    },\n  },\n  QueryTab: {\n    content: {\n      [MIN_GRAFANA_VERSION]: 'Query editor tab content',\n    },\n    queryInspectorButton: {\n      [MIN_GRAFANA_VERSION]: 'Query inspector button',\n    },\n    queryHistoryButton: {\n      '10.2.0': 'data-testid query-history-button',\n      [MIN_GRAFANA_VERSION]: 'query-history-button',\n    },\n    addQuery: {\n      '10.2.0': 'data-testid query-tab-add-query',\n      [MIN_GRAFANA_VERSION]: 'Query editor add query button',\n    },\n    addQueryFromLibrary: {\n      '11.5.0': 'data-testid query-tab-add-query-from-library',\n    },\n    queryGroupTopSection: {\n      '11.2.0': 'data-testid query group top section',\n    },\n    addExpression: {\n      '11.2.0': 'data-testid query-tab-add-expression',\n    },\n  },\n  QueryHistory: {\n    queryText: {\n      '9.0.0': 'Query text',\n    },\n  },\n  QueryEditorRows: {\n    rows: {\n      [MIN_GRAFANA_VERSION]: 'Query editor row',\n    },\n  },\n  QueryEditorRow: {\n    actionButton: {\n      '10.4.0': (title: string) => `data-testid ${title}`,\n    },\n    title: {\n      [MIN_GRAFANA_VERSION]: (refId: string) => `Query editor row title ${refId}`,\n    },\n    container: {\n      [MIN_GRAFANA_VERSION]: (refId: string) => `Query editor row ${refId}`,\n    },\n  },\n  AlertTab: {\n    content: {\n      '10.2.3': 'data-testid Alert editor tab content',\n      [MIN_GRAFANA_VERSION]: 'Alert editor tab content',\n    },\n  },\n  AlertRules: {\n    groupToggle: {\n      '11.0.0': 'data-testid group-collapse-toggle',\n    },\n    toggle: {\n      '11.0.0': 'data-testid collapse-toggle',\n    },\n    expandedContent: {\n      '11.0.0': 'data-testid expanded-content',\n    },\n    previewButton: {\n      '11.1.0': 'data-testid alert-rule preview-button',\n    },\n    ruleNameField: {\n      '11.1.0': 'data-testid alert-rule name-field',\n    },\n    newFolderButton: {\n      '11.1.0': 'data-testid alert-rule new-folder-button',\n    },\n    newFolderNameField: {\n      '11.1.0': 'data-testid alert-rule name-folder-name-field',\n    },\n    newFolderNameCreateButton: {\n      '11.1.0': 'data-testid alert-rule name-folder-name-create-button',\n    },\n    newEvaluationGroupButton: {\n      '11.1.0': 'data-testid alert-rule new-evaluation-group-button',\n    },\n    newEvaluationGroupName: {\n      '11.1.0': 'data-testid alert-rule new-evaluation-group-name',\n    },\n    newEvaluationGroupInterval: {\n      '11.1.0': 'data-testid alert-rule new-evaluation-group-interval',\n    },\n    newEvaluationGroupCreate: {\n      '11.1.0': 'data-testid alert-rule new-evaluation-group-create-button',\n    },\n    step: {\n      '11.5.0': (stepNo: string) => `data-testid alert-rule step-${stepNo}`,\n    },\n    stepAdvancedModeSwitch: {\n      '11.5.0': (stepNo: string) => `data-testid advanced-mode-switch step-${stepNo}`,\n    },\n  },\n  Alert: {\n    alertV2: {\n      [MIN_GRAFANA_VERSION]: (severity: string) => `data-testid Alert ${severity}`,\n    },\n  },\n  TransformTab: {\n    content: {\n      '10.1.0': 'data-testid Transform editor tab content',\n      [MIN_GRAFANA_VERSION]: 'Transform editor tab content',\n    },\n    newTransform: {\n      '10.1.0': (name: string) => `data-testid New transform ${name}`,\n    },\n    transformationEditor: {\n      '10.1.0': (name: string) => `data-testid Transformation editor ${name}`,\n    },\n    transformationEditorDebugger: {\n      '10.1.0': (name: string) => `data-testid Transformation editor debugger ${name}`,\n    },\n  },\n  Transforms: {\n    card: {\n      '10.1.0': (name: string) => `data-testid New transform ${name}`,\n    },\n    disableTransformationButton: {\n      '10.4.0': 'data-testid Disable transformation button',\n    },\n    Reduce: {\n      modeLabel: {\n        '10.2.3': 'data-testid Transform mode label',\n        [MIN_GRAFANA_VERSION]: 'Transform mode label',\n      },\n      calculationsLabel: {\n        '10.2.3': 'data-testid Transform calculations label',\n        [MIN_GRAFANA_VERSION]: 'Transform calculations label',\n      },\n    },\n    SpatialOperations: {\n      actionLabel: {\n        '9.1.2': 'root Action field property editor',\n      },\n      locationLabel: {\n        '10.2.0': 'root Location Mode field property editor',\n      },\n      location: {\n        autoOption: {\n          '9.1.2': 'Auto location option',\n        },\n        coords: {\n          option: {\n            '9.1.2': 'Coords location option',\n          },\n          latitudeFieldLabel: {\n            '9.1.2': 'root Latitude field field property editor',\n          },\n          longitudeFieldLabel: {\n            '9.1.2': 'root Longitude field field property editor',\n          },\n        },\n        geohash: {\n          option: {\n            '9.1.2': 'Geohash location option',\n          },\n          geohashFieldLabel: {\n            '9.1.2': 'root Geohash field field property editor',\n          },\n        },\n        lookup: {\n          option: {\n            '9.1.2': 'Lookup location option',\n          },\n          lookupFieldLabel: {\n            '9.1.2': 'root Lookup field field property editor',\n          },\n          gazetteerFieldLabel: {\n            '9.1.2': 'root Gazetteer field property editor',\n          },\n        },\n      },\n    },\n    searchInput: {\n      '10.2.3': 'data-testid search transformations',\n      [MIN_GRAFANA_VERSION]: 'search transformations',\n    },\n    noTransformationsMessage: {\n      '10.2.3': 'data-testid no transformations message',\n    },\n    addTransformationButton: {\n      '10.1.0': 'data-testid add transformation button',\n      [MIN_GRAFANA_VERSION]: 'add transformation button',\n    },\n    removeAllTransformationsButton: {\n      '10.4.0': 'data-testid remove all transformations button',\n    },\n  },\n  NavBar: {\n    Configuration: {\n      button: {\n        '9.5.0': 'Configuration',\n      },\n    },\n    Toggle: {\n      button: {\n        '10.2.3': 'data-testid Toggle menu',\n        [MIN_GRAFANA_VERSION]: 'Toggle menu',\n      },\n    },\n    Reporting: {\n      button: {\n        '9.5.0': 'Reporting',\n      },\n    },\n  },\n  NavMenu: {\n    Menu: {\n      '10.2.3': 'data-testid navigation mega-menu',\n    },\n    item: {\n      '9.5.0': 'data-testid Nav menu item',\n    },\n  },\n  NavToolbar: {\n    container: {\n      '9.4.0': 'data-testid Nav toolbar',\n    },\n    commandPaletteTrigger: {\n      '11.5.0': 'data-testid Command palette trigger',\n    },\n    shareDashboard: {\n      '11.1.0': 'data-testid Share dashboard',\n    },\n    markAsFavorite: {\n      '11.1.0': 'data-testid Mark as favorite',\n    },\n    editDashboard: {\n      editButton: {\n        '11.1.0': 'data-testid Edit dashboard button',\n      },\n      saveButton: {\n        '11.1.0': 'data-testid Save dashboard button',\n      },\n      exitButton: {\n        '11.1.0': 'data-testid Exit edit mode button',\n      },\n      settingsButton: {\n        '11.1.0': 'data-testid Dashboard settings',\n      },\n      addRowButton: {\n        '11.1.0': 'data-testid Add row button',\n      },\n      addLibraryPanelButton: {\n        '11.1.0': 'data-testid Add a panel from the panel library button',\n      },\n      addVisualizationButton: {\n        '11.1.0': 'data-testid Add new visualization menu item',\n      },\n      pastePanelButton: {\n        '11.1.0': 'data-testid Paste panel button',\n      },\n      discardChangesButton: {\n        '11.1.0': 'data-testid Discard changes button',\n      },\n      discardLibraryPanelButton: {\n        '11.1.0': 'data-testid Discard library panel button',\n      },\n      unlinkLibraryPanelButton: {\n        '11.1.0': 'data-testid Unlink library panel button',\n      },\n      saveLibraryPanelButton: {\n        '11.1.0': 'data-testid Save library panel button',\n      },\n      backToDashboardButton: {\n        '11.1.0': 'data-testid Back to dashboard button',\n      },\n    },\n  },\n\n  PageToolbar: {\n    container: { [MIN_GRAFANA_VERSION]: () => '.page-toolbar' },\n    item: {\n      [MIN_GRAFANA_VERSION]: (tooltip: string) => `${tooltip}`,\n    },\n    itemButton: {\n      '9.5.0': (title: string) => `data-testid ${title}`,\n    },\n  },\n  QueryEditorToolbarItem: {\n    button: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `QueryEditor toolbar item button ${title}`,\n    },\n  },\n  BackButton: {\n    backArrow: {\n      '10.3.0': 'data-testid Go Back',\n      [MIN_GRAFANA_VERSION]: 'Go Back',\n    },\n  },\n  OptionsGroup: {\n    group: {\n      '11.1.0': (title?: string) => (title ? `data-testid Options group ${title}` : 'data-testid Options group'),\n      [MIN_GRAFANA_VERSION]: (title?: string) => (title ? `Options group ${title}` : 'Options group'),\n    },\n    toggle: {\n      '11.1.0': (title?: string) =>\n        title ? `data-testid Options group ${title} toggle` : 'data-testid Options group toggle',\n      [MIN_GRAFANA_VERSION]: (title?: string) => (title ? `Options group ${title} toggle` : 'Options group toggle'),\n    },\n  },\n  PluginVisualization: {\n    item: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `Plugin visualization item ${title}`,\n    },\n    current: {\n      [MIN_GRAFANA_VERSION]: () => '[class*=\"-currentVisualizationItem\"]',\n    },\n  },\n  Select: {\n    menu: {\n      '11.5.0': 'data-testid Select menu',\n      [MIN_GRAFANA_VERSION]: 'Select options menu',\n    },\n    option: {\n      '11.1.0': 'data-testid Select option',\n      [MIN_GRAFANA_VERSION]: 'Select option',\n    },\n    toggleAllOptions: {\n      '11.3.0': 'data-testid toggle all options',\n    },\n    input: {\n      [MIN_GRAFANA_VERSION]: () => 'input[id*=\"time-options-input\"]',\n    },\n    singleValue: {\n      [MIN_GRAFANA_VERSION]: () => 'div[class*=\"-singleValue\"]',\n    },\n  },\n  FieldConfigEditor: {\n    content: {\n      [MIN_GRAFANA_VERSION]: 'Field config editor content',\n    },\n  },\n  OverridesConfigEditor: {\n    content: {\n      [MIN_GRAFANA_VERSION]: 'Field overrides editor content',\n    },\n  },\n  FolderPicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Folder picker select container',\n    },\n    input: {\n      '10.4.0': 'data-testid folder-picker-input',\n    },\n  },\n  ReadonlyFolderPicker: {\n    container: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Readonly folder picker select container',\n    },\n  },\n  DataSourcePicker: {\n    container: {\n      '10.0.0': 'data-testid Data source picker select container',\n      '8.0.0': 'Data source picker select container',\n    },\n    inputV2: {\n      '10.1.0': 'data-testid Select a data source',\n      [MIN_GRAFANA_VERSION]: 'Select a data source',\n    },\n    dataSourceList: {\n      '10.4.0': 'data-testid Data source list dropdown',\n    },\n    advancedModal: {\n      dataSourceList: {\n        '10.4.0': 'data-testid Data source list',\n      },\n      builtInDataSourceList: {\n        '10.4.0': 'data-testid Built in data source list',\n      },\n    },\n  },\n  TimeZonePicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Time zone picker select container',\n    },\n    changeTimeSettingsButton: {\n      '11.0.0': 'data-testid Time zone picker Change time settings button',\n    },\n  },\n  WeekStartPicker: {\n    containerV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Choose starting day of the week',\n    },\n    placeholder: {\n      [MIN_GRAFANA_VERSION]: 'Choose starting day of the week',\n    },\n  },\n  TraceViewer: {\n    spanBar: {\n      '9.0.0': 'data-testid SpanBar--wrapper',\n    },\n  },\n  QueryField: {\n    container: {\n      '10.3.0': 'data-testid Query field',\n      [MIN_GRAFANA_VERSION]: 'Query field',\n    },\n  },\n  QueryBuilder: {\n    queryPatterns: {\n      '10.3.0': 'data-testid Query patterns',\n      [MIN_GRAFANA_VERSION]: 'Query patterns',\n    },\n    labelSelect: {\n      '10.3.0': 'data-testid Select label',\n      [MIN_GRAFANA_VERSION]: 'Select label',\n    },\n    inputSelect: {\n      '11.1.0': 'data-testid Select label-input',\n    },\n    valueSelect: {\n      '10.3.0': 'data-testid Select value',\n      [MIN_GRAFANA_VERSION]: 'Select value',\n    },\n    matchOperatorSelect: {\n      '10.3.0': 'data-testid Select match operator',\n      [MIN_GRAFANA_VERSION]: 'Select match operator',\n    },\n  },\n  ValuePicker: {\n    button: {\n      '10.3.0': (name: string) => `data-testid Value picker button ${name}`,\n    },\n    select: {\n      '10.3.0': (name: string) => `data-testid Value picker select ${name}`,\n    },\n  },\n  Search: {\n    sectionV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Search section',\n    },\n    itemsV2: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Search items',\n    },\n    cards: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Search cards',\n    },\n    collapseFolder: {\n      [MIN_GRAFANA_VERSION]: (sectionId: string) => `data-testid Collapse folder ${sectionId}`,\n    },\n    expandFolder: {\n      [MIN_GRAFANA_VERSION]: (sectionId: string) => `data-testid Expand folder ${sectionId}`,\n    },\n    dashboardItem: {\n      [MIN_GRAFANA_VERSION]: (item: string) => `data-testid Dashboard search item ${item}`,\n    },\n    dashboardCard: {\n      [MIN_GRAFANA_VERSION]: (item: string) => `data-testid Search card ${item}`,\n    },\n    folderHeader: {\n      '9.3.0': (folderName: string) => `data-testid Folder header ${folderName}`,\n    },\n    folderContent: {\n      '9.3.0': (folderName: string) => `data-testid Folder content ${folderName}`,\n    },\n    dashboardItems: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Dashboard search item',\n    },\n  },\n  DashboardLinks: {\n    container: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Dashboard link container',\n    },\n    dropDown: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Dashboard link dropdown',\n    },\n    link: {\n      [MIN_GRAFANA_VERSION]: 'data-testid Dashboard link',\n    },\n  },\n  LoadingIndicator: {\n    icon: {\n      '10.4.0': 'data-testid Loading indicator',\n      [MIN_GRAFANA_VERSION]: 'Loading indicator',\n    },\n  },\n  CallToActionCard: {\n    buttonV2: {\n      [MIN_GRAFANA_VERSION]: (name: string) => `data-testid Call to action button ${name}`,\n    },\n  },\n  DataLinksContextMenu: {\n    singleLink: {\n      '10.3.0': 'data-testid Data link',\n      [MIN_GRAFANA_VERSION]: 'Data link',\n    },\n  },\n  CodeEditor: {\n    container: {\n      '10.2.3': 'data-testid Code editor container',\n      [MIN_GRAFANA_VERSION]: 'Code editor container',\n    },\n  },\n  ReactMonacoEditor: {\n    editorLazy: {\n      '11.1.0': 'data-testid ReactMonacoEditor editorLazy',\n    },\n  },\n  DashboardImportPage: {\n    textarea: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-import-dashboard-textarea',\n    },\n    submit: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-load-dashboard',\n    },\n  },\n  ImportDashboardForm: {\n    name: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-import-dashboard-title',\n    },\n    submit: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-import-dashboard-submit',\n    },\n  },\n  PanelAlertTabContent: {\n    content: {\n      '10.2.3': 'data-testid Unified alert editor tab content',\n      [MIN_GRAFANA_VERSION]: 'Unified alert editor tab content',\n    },\n  },\n  VisualizationPreview: {\n    card: {\n      [MIN_GRAFANA_VERSION]: (name: string) => `data-testid suggestion-${name}`,\n    },\n  },\n  ColorSwatch: {\n    name: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-colorswatch',\n    },\n  },\n  DashboardRow: {\n    title: {\n      [MIN_GRAFANA_VERSION]: (title: string) => `data-testid dashboard-row-title-${title}`,\n    },\n  },\n  UserProfile: {\n    profileSaveButton: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-user-profile-save',\n    },\n    preferencesSaveButton: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-shared-prefs-save',\n    },\n    orgsTable: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-user-orgs-table',\n    },\n    sessionsTable: {\n      [MIN_GRAFANA_VERSION]: 'data-testid-user-sessions-table',\n    },\n    extensionPointTabs: {\n      '10.2.3': 'data-testid-extension-point-tabs',\n    },\n    extensionPointTab: {\n      '10.2.3': (tabId: string) => `data-testid-extension-point-tab-${tabId}`,\n    },\n  },\n  FileUpload: {\n    inputField: {\n      '9.0.0': 'data-testid-file-upload-input-field',\n    },\n    fileNameSpan: {\n      '9.0.0': 'data-testid-file-upload-file-name',\n    },\n  },\n  DebugOverlay: {\n    wrapper: {\n      '9.2.0': 'debug-overlay',\n    },\n  },\n  OrgRolePicker: {\n    input: {\n      '9.5.0': 'Role',\n    },\n  },\n  AnalyticsToolbarButton: {\n    button: {\n      '9.5.0': 'Dashboard insights',\n    },\n  },\n  Variables: {\n    variableOption: {\n      '9.5.0': 'data-testid variable-option',\n    },\n    variableLinkWrapper: {\n      '11.1.1': 'data-testid variable-link-wrapper',\n    },\n  },\n  Annotations: {\n    annotationsTypeInput: {\n      '11.1.0': 'data-testid annotations-type-input',\n      [MIN_GRAFANA_VERSION]: 'annotations-type-input',\n    },\n    annotationsChoosePanelInput: {\n      '11.1.0': 'data-testid choose-panels-input',\n      [MIN_GRAFANA_VERSION]: 'choose-panels-input',\n    },\n    editor: {\n      testButton: {\n        '11.0.0': 'data-testid annotations-test-button',\n      },\n      resultContainer: {\n        '11.0.0': 'data-testid annotations-query-result-container',\n      },\n    },\n  },\n  Tooltip: {\n    container: {\n      '10.2.0': 'data-testid tooltip',\n    },\n  },\n  ReturnToPrevious: {\n    buttonGroup: {\n      '11.0.0': 'data-testid dismissable button group',\n    },\n    backButton: {\n      '11.0.0': 'data-testid back',\n    },\n    dismissButton: {\n      '11.0.0': 'data-testid dismiss',\n    },\n  },\n  SQLQueryEditor: {\n    selectColumn: {\n      '11.0.0': 'data-testid select-column',\n    },\n    selectColumnInput: { '11.0.0': 'data-testid select-column-input' },\n    selectFunctionParameter: { '11.0.0': (name: string) => `data-testid select-function-parameter-${name}` },\n    selectAggregation: {\n      '11.0.0': 'data-testid select-aggregation',\n    },\n    selectAggregationInput: { '11.0.0': 'data-testid select-aggregation-input' },\n    selectAlias: {\n      '11.0.0': 'data-testid select-alias',\n    },\n    selectAliasInput: { '11.0.0': 'data-testid select-alias-input' },\n    selectInputParameter: { '11.0.0': 'data-testid select-input-parameter' },\n    filterConjunction: {\n      '11.0.0': 'data-testid filter-conjunction',\n    },\n    filterField: {\n      '11.0.0': 'data-testid filter-field',\n    },\n    filterOperator: {\n      '11.0.0': 'data-testid filter-operator',\n    },\n    headerTableSelector: {\n      '11.0.0': 'data-testid header-table-selector',\n    },\n    headerFilterSwitch: {\n      '11.0.0': 'data-testid header-filter-switch',\n    },\n    headerGroupSwitch: {\n      '11.0.0': 'data-testid header-group-switch',\n    },\n    headerOrderSwitch: {\n      '11.0.0': 'data-testid header-order-switch',\n    },\n    headerPreviewSwitch: {\n      '11.0.0': 'data-testid header-preview-switch',\n    },\n  },\n  EntityNotFound: {\n    container: {\n      '11.2.0': 'data-testid entity-not-found',\n    },\n  },\n  Portal: {\n    container: {\n      '11.5.0': 'data-testid portal-container',\n    },\n  },\n} satisfies VersionedSelectorGroup;\n\nexport type VersionedComponents = typeof versionedComponents;\n","import { resolveSelectors } from '../resolver';\nimport { E2ESelectors } from '../types';\n\nimport { versionedComponents, VersionedComponents } from './components';\nimport { versionedPages, VersionedPages } from './pages';\n\nconst Pages = resolveSelectors(versionedPages);\nconst Components = resolveSelectors(versionedComponents);\nconst selectors = { pages: Pages, components: Components };\n\n/**\n * Exposes Pages, Component selectors and E2ESelectors type in package for easy use in e2e tests and in production code\n */\nexport {\n  Pages,\n  Components,\n  selectors,\n  versionedComponents,\n  versionedPages,\n  resolveSelectors,\n  type VersionedPages,\n  type VersionedComponents,\n  type E2ESelectors,\n};\n","import { VersionedSelectorGroup } from '../types';\n\nimport { MIN_GRAFANA_VERSION } from './constants';\n\n/**\n * Selectors grouped/defined in Pages\n */\nexport const versionedPages = {\n  Alerting: {\n    AddAlertRule: {\n      url: {\n        '10.1.0': '/alerting/new/alerting',\n        [MIN_GRAFANA_VERSION]: '/alerting/new',\n      },\n    },\n    EditAlertRule: {\n      url: {\n        [MIN_GRAFANA_VERSION]: (alertRuleUid: string) => `alerting/${alertRuleUid}/edit`,\n      },\n    },\n  },\n  Login: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/login',\n    },\n    username: {\n      '10.2.3': 'data-testid Username input field',\n      [MIN_GRAFANA_VERSION]: 'Username input field',\n    },\n    password: {\n      '10.2.3': 'data-testid Password input field',\n      [MIN_GRAFANA_VERSION]: 'Password input field',\n    },\n    submit: {\n      '10.2.3': 'data-testid Login button',\n      [MIN_GRAFANA_VERSION]: 'Login button',\n    },\n    skip: {\n      '10.2.3': 'data-testid Skip change password button',\n    },\n  },\n  PasswordlessLogin: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/login/passwordless/authenticate',\n    },\n    email: {\n      '10.2.3': 'data-testid Email input field',\n      [MIN_GRAFANA_VERSION]: 'Email input field',\n    },\n    submit: {\n      '10.2.3': 'data-testid PasswordlessLogin button',\n      [MIN_GRAFANA_VERSION]: 'PasswordlessLogin button',\n    },\n  },\n  Home: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/',\n    },\n  },\n  DataSource: {\n    name: {\n      '10.3.0': 'data-testid Data source settings page name input field',\n      [MIN_GRAFANA_VERSION]: 'Data source settings page name input field',\n    },\n    delete: {\n      [MIN_GRAFANA_VERSION]: 'Data source settings page Delete button',\n    },\n    readOnly: {\n      '10.3.0': 'data-testid Data source settings page read only message',\n      [MIN_GRAFANA_VERSION]: 'Data source settings page read only message',\n    },\n    saveAndTest: {\n      '10.0.0': 'data-testid Data source settings page Save and Test button',\n      [MIN_GRAFANA_VERSION]: 'Data source settings page Save and Test button',\n    },\n    alert: {\n      '10.3.0': 'data-testid Data source settings page Alert',\n      [MIN_GRAFANA_VERSION]: 'Data source settings page Alert',\n    },\n  },\n  DataSources: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/datasources',\n    },\n    dataSources: {\n      [MIN_GRAFANA_VERSION]: (dataSourceName: string) => `Data source list item ${dataSourceName}`,\n    },\n  },\n  EditDataSource: {\n    url: {\n      '9.5.0': (dataSourceUid: string) => `/datasources/edit/${dataSourceUid}`,\n    },\n    settings: {\n      '9.5.0': 'Datasource settings page basic settings',\n    },\n  },\n  AddDataSource: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/datasources/new',\n    },\n    dataSourcePluginsV2: {\n      '9.3.1': (pluginName: string) => `Add new data source ${pluginName}`,\n      [MIN_GRAFANA_VERSION]: (pluginName: string) => `Data source plugin item ${pluginName}`,\n    },\n  },\n  ConfirmModal: {\n    delete: {\n      '10.0.0': 'data-testid Confirm Modal Danger Button',\n      [MIN_GRAFANA_VERSION]: 'Confirm Modal Danger Button',\n    },\n  },\n  AddDashboard: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/dashboard/new',\n    },\n    itemButton: {\n      '9.5.0': (title: string) => `data-testid ${title}`,\n    },\n    addNewPanel: {\n      '11.1.0': 'data-testid Add new panel',\n      '8.0.0': 'Add new panel',\n      [MIN_GRAFANA_VERSION]: 'Add new panel',\n    },\n    itemButtonAddViz: {\n      [MIN_GRAFANA_VERSION]: 'Add new visualization menu item',\n    },\n    addNewRow: {\n      '11.1.0': 'data-testid Add new row',\n      [MIN_GRAFANA_VERSION]: 'Add new row',\n    },\n    addNewPanelLibrary: {\n      '11.1.0': 'data-testid Add new panel from panel library',\n      [MIN_GRAFANA_VERSION]: 'Add new panel from panel library',\n    },\n    Settings: {\n      Annotations: {\n        List: {\n          url: {\n            [MIN_GRAFANA_VERSION]: '/dashboard/new?orgId=1&editview=annotations',\n          },\n        },\n        Edit: {\n          url: {\n            [MIN_GRAFANA_VERSION]: (annotationIndex: string) =>\n              `/dashboard/new?editview=annotations&editIndex=${annotationIndex}`,\n          },\n        },\n      },\n      Variables: {\n        List: {\n          url: {\n            '11.3.0': '/dashboard/new?orgId=1&editview=variables',\n            [MIN_GRAFANA_VERSION]: '/dashboard/new?orgId=1&editview=templating',\n          },\n        },\n        Edit: {\n          url: {\n            '11.3.0': (editIndex: string) => `/dashboard/new?orgId=1&editview=variables&editIndex=${editIndex}`,\n            [MIN_GRAFANA_VERSION]: (editIndex: string) =>\n              `/dashboard/new?orgId=1&editview=templating&editIndex=${editIndex}`,\n          },\n        },\n      },\n    },\n  },\n  Dashboard: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (uid: string) => `/d/${uid}`,\n    },\n    DashNav: {\n      nav: {\n        [MIN_GRAFANA_VERSION]: 'Dashboard navigation',\n      },\n      navV2: {\n        [MIN_GRAFANA_VERSION]: 'data-testid Dashboard navigation',\n      },\n      publicDashboardTag: {\n        '9.1.0': 'data-testid public dashboard tag',\n      },\n      shareButton: {\n        '10.4.0': 'data-testid share-button',\n      },\n      scrollContainer: {\n        '11.1.0': 'data-testid Dashboard canvas scroll container',\n      },\n      newShareButton: {\n        container: {\n          '11.1.0': 'data-testid new share button',\n        },\n        shareLink: {\n          '11.1.0': 'data-testid new share link-button',\n        },\n        arrowMenu: {\n          '11.1.0': 'data-testid new share button arrow menu',\n        },\n        menu: {\n          container: {\n            '11.1.0': 'data-testid new share button menu',\n          },\n          shareInternally: {\n            '11.1.0': 'data-testid new share button share internally',\n          },\n          shareExternally: {\n            '11.1.1': 'data-testid new share button share externally',\n          },\n          shareSnapshot: {\n            '11.2.0': 'data-testid new share button share snapshot',\n          },\n        },\n      },\n      NewExportButton: {\n        container: {\n          '11.2.0': 'data-testid new export button',\n        },\n        arrowMenu: {\n          '11.2.0': 'data-testid new export button arrow menu',\n        },\n        Menu: {\n          container: {\n            '11.2.0': 'data-testid new export button menu',\n          },\n          exportAsJson: {\n            '11.2.0': 'data-testid new export button export as json',\n          },\n        },\n      },\n      playlistControls: {\n        prev: {\n          '11.0.0': 'data-testid playlist previous dashboard button',\n        },\n        stop: {\n          '11.0.0': 'data-testid playlist stop dashboard button',\n        },\n        next: {\n          '11.0.0': 'data-testid playlist next dashboard button',\n        },\n      },\n    },\n    Controls: {\n      '11.1.0': 'data-testid dashboard controls',\n    },\n    SubMenu: {\n      submenu: {\n        [MIN_GRAFANA_VERSION]: 'Dashboard submenu',\n      },\n      submenuItem: {\n        [MIN_GRAFANA_VERSION]: 'data-testid template variable',\n      },\n      submenuItemLabels: {\n        [MIN_GRAFANA_VERSION]: (item: string) => `data-testid Dashboard template variables submenu Label ${item}`,\n      },\n      submenuItemValueDropDownValueLinkTexts: {\n        [MIN_GRAFANA_VERSION]: (item: string) =>\n          `data-testid Dashboard template variables Variable Value DropDown value link text ${item}`,\n      },\n      submenuItemValueDropDownDropDown: {\n        [MIN_GRAFANA_VERSION]: 'Variable options',\n      },\n      submenuItemValueDropDownOptionTexts: {\n        [MIN_GRAFANA_VERSION]: (item: string) =>\n          `data-testid Dashboard template variables Variable Value DropDown option text ${item}`,\n      },\n      Annotations: {\n        annotationsWrapper: {\n          '10.0.0': 'data-testid annotation-wrapper',\n        },\n        annotationLabel: {\n          '10.0.0': (label: string) => `data-testid Dashboard annotations submenu Label ${label}`,\n        },\n        annotationToggle: {\n          '10.0.0': (label: string) => `data-testid Dashboard annotations submenu Toggle ${label}`,\n        },\n      },\n    },\n    Settings: {\n      Actions: {\n        close: {\n          '9.5.0': 'data-testid dashboard-settings-close',\n        },\n      },\n      General: {\n        deleteDashBoard: {\n          '11.1.0': 'data-testid Dashboard settings page delete dashboard button',\n        },\n        sectionItems: {\n          [MIN_GRAFANA_VERSION]: (item: string) => `Dashboard settings section item ${item}`,\n        },\n        saveDashBoard: {\n          [MIN_GRAFANA_VERSION]: 'Dashboard settings aside actions Save button',\n        },\n        saveAsDashBoard: {\n          [MIN_GRAFANA_VERSION]: 'Dashboard settings aside actions Save As button',\n        },\n        title: {\n          '11.2.0': 'General',\n        },\n      },\n      Annotations: {\n        Edit: {\n          urlParams: {\n            [MIN_GRAFANA_VERSION]: (annotationIndex: string) => `editview=annotations&editIndex=${annotationIndex}`,\n          },\n        },\n        List: {\n          url: {\n            [MIN_GRAFANA_VERSION]: (dashboardUid: string) => `/d/${dashboardUid}?editview=annotations`,\n          },\n          addAnnotationCTAV2: {\n            [MIN_GRAFANA_VERSION]: 'data-testid Call to action button Add annotation query',\n          },\n          annotations: {\n            '10.4.0': 'data-testid list-annotations',\n          },\n        },\n        Settings: {\n          name: {\n            '11.1.0': 'data-testid Annotations settings name input',\n            [MIN_GRAFANA_VERSION]: 'Annotations settings name input',\n          },\n        },\n        NewAnnotation: {\n          panelFilterSelect: {\n            '10.0.0': 'data-testid annotations-panel-filter',\n          },\n          showInLabel: {\n            '11.1.0': 'data-testid show-in-label',\n          },\n          previewInDashboard: {\n            '10.0.0': 'data-testid annotations-preview',\n          },\n          delete: {\n            '10.4.0': 'data-testid annotations-delete',\n          },\n          apply: {\n            '10.4.0': 'data-testid annotations-apply',\n          },\n          enable: {\n            '10.4.0': 'data-testid annotation-enable',\n          },\n          hide: {\n            '10.4.0': 'data-testid annotation-hide',\n          },\n        },\n      },\n      Variables: {\n        List: {\n          url: {\n            '11.3.0': (dashboardUid: string) => `/d/${dashboardUid}?editview=variables`,\n            [MIN_GRAFANA_VERSION]: (dashboardUid: string) => `/d/${dashboardUid}?editview=templating`,\n          },\n          addVariableCTAV2: {\n            [MIN_GRAFANA_VERSION]: 'data-testid Call to action button Add variable',\n          },\n          newButton: {\n            [MIN_GRAFANA_VERSION]: 'Variable editor New variable button',\n          },\n          table: {\n            [MIN_GRAFANA_VERSION]: 'Variable editor Table',\n          },\n          tableRowNameFields: {\n            [MIN_GRAFANA_VERSION]: (variableName: string) => `Variable editor Table Name field ${variableName}`,\n          },\n          tableRowDefinitionFields: {\n            '10.1.0': (variableName: string) => `Variable editor Table Definition field ${variableName}`,\n          },\n          tableRowArrowUpButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName: string) => `Variable editor Table ArrowUp button ${variableName}`,\n          },\n          tableRowArrowDownButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName: string) => `Variable editor Table ArrowDown button ${variableName}`,\n          },\n          tableRowDuplicateButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName: string) => `Variable editor Table Duplicate button ${variableName}`,\n          },\n          tableRowRemoveButtons: {\n            [MIN_GRAFANA_VERSION]: (variableName: string) => `Variable editor Table Remove button ${variableName}`,\n          },\n        },\n        Edit: {\n          urlParams: {\n            '11.3.0': (editIndex: string) => `editview=variables&editIndex=${editIndex}`,\n            [MIN_GRAFANA_VERSION]: (editIndex: string) => `editview=templating&editIndex=${editIndex}`,\n          },\n          General: {\n            headerLink: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Header link',\n            },\n            modeLabelNew: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Header mode New',\n            },\n            /**\n             * @deprecated\n             */\n            modeLabelEdit: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Header mode Edit',\n            },\n            generalNameInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Name field',\n            },\n            generalNameInputV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Name field',\n            },\n            generalTypeSelect: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Type select',\n            },\n            generalTypeSelectV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Type select',\n            },\n            generalLabelInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Label field',\n            },\n            generalLabelInputV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Label field',\n            },\n            generalHideSelect: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Hide select',\n            },\n            generalHideSelectV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Hide select',\n            },\n            selectionOptionsAllowCustomValueSwitch: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Allow Custom Value switch',\n            },\n            selectionOptionsMultiSwitch: {\n              '10.4.0': 'data-testid Variable editor Form Multi switch',\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Multi switch',\n            },\n            selectionOptionsIncludeAllSwitch: {\n              '10.4.0': 'data-testid Variable editor Form IncludeAll switch',\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form IncludeAll switch',\n            },\n            selectionOptionsCustomAllInput: {\n              '10.4.0': 'data-testid Variable editor Form IncludeAll field',\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form IncludeAll field',\n            },\n            previewOfValuesOption: {\n              '10.4.0': 'data-testid Variable editor Preview of Values option',\n              [MIN_GRAFANA_VERSION]: 'Variable editor Preview of Values option',\n            },\n            submitButton: {\n              '10.4.0': 'data-testid Variable editor Run Query button',\n              [MIN_GRAFANA_VERSION]: 'Variable editor Submit button',\n            },\n            applyButton: {\n              '9.3.0': 'data-testid Variable editor Apply button',\n            },\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: {\n              '10.4.0': 'data-testid Select a data source',\n              '10.0.0': 'data-testid Data source picker select container',\n              [MIN_GRAFANA_VERSION]: 'Data source picker select container',\n            },\n            queryOptionsRefreshSelect: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query Refresh select',\n            },\n            queryOptionsRefreshSelectV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Query Refresh select',\n            },\n            queryOptionsRegExInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query RegEx field',\n            },\n            queryOptionsRegExInputV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Query RegEx field',\n            },\n            queryOptionsSortSelect: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query Sort select',\n            },\n            queryOptionsSortSelectV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Query Sort select',\n            },\n            queryOptionsQueryInput: {\n              '10.4.0': 'data-testid Variable editor Form Default Variable Query Editor textarea',\n            },\n            valueGroupsTagsEnabledSwitch: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query UseTags switch',\n            },\n            valueGroupsTagsTagsQueryInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query TagsQuery field',\n            },\n            valueGroupsTagsTagsValuesQueryInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Query TagsValuesQuery field',\n            },\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form Constant Query field',\n            },\n            constantOptionsQueryInputV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form Constant Query field',\n            },\n          },\n          DatasourceVariable: {\n            datasourceSelect: {\n              [MIN_GRAFANA_VERSION]: 'data-testid datasource variable datasource type',\n            },\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: {\n              [MIN_GRAFANA_VERSION]: 'Variable editor Form TextBox Query field',\n            },\n            textBoxOptionsQueryInputV2: {\n              [MIN_GRAFANA_VERSION]: 'data-testid Variable editor Form TextBox Query field',\n            },\n          },\n          CustomVariable: {\n            customValueInput: {\n              [MIN_GRAFANA_VERSION]: 'data-testid custom-variable-input',\n            },\n          },\n          IntervalVariable: {\n            intervalsValueInput: {\n              [MIN_GRAFANA_VERSION]: 'data-testid interval variable intervals input',\n            },\n            autoEnabledCheckbox: {\n              '10.4.0': 'data-testid interval variable auto value checkbox',\n            },\n            stepCountIntervalSelect: {\n              '10.4.0': 'data-testid interval variable step count input',\n            },\n            minIntervalInput: {\n              '10.4.0': 'data-testid interval variable mininum interval input',\n            },\n          },\n          GroupByVariable: {\n            dataSourceSelect: {\n              '10.4.0': 'data-testid Select a data source',\n            },\n            infoText: {\n              '10.4.0': 'data-testid group by variable info text',\n            },\n            modeToggle: {\n              '10.4.0': 'data-testid group by variable mode toggle',\n            },\n          },\n          AdHocFiltersVariable: {\n            datasourceSelect: {\n              '10.4.0': 'data-testid Select a data source',\n            },\n            infoText: {\n              '10.4.0': 'data-testid ad-hoc filters variable info text',\n            },\n            modeToggle: {\n              '11.0.0': 'data-testid ad-hoc filters variable mode toggle',\n            },\n          },\n        },\n      },\n    },\n    Annotations: {\n      marker: {\n        '10.0.0': 'data-testid annotation-marker',\n      },\n    },\n    Rows: {\n      Repeated: {\n        ConfigSection: {\n          warningMessage: {\n            '10.2.0': 'data-testid Repeated rows warning message',\n          },\n        },\n      },\n    },\n  },\n  Dashboards: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/dashboards',\n    },\n    dashboards: {\n      '10.2.0': (title: string) => `Dashboard search item ${title}`,\n    },\n    toggleView: {\n      [MIN_GRAFANA_VERSION]: 'data-testid radio-button',\n    },\n  },\n  SaveDashboardAsModal: {\n    newName: {\n      '10.2.0': 'Save dashboard title field',\n    },\n    save: {\n      '10.2.0': 'Save dashboard button',\n    },\n  },\n  SaveDashboardModal: {\n    save: {\n      '10.2.0': 'Dashboard settings Save Dashboard Modal Save button',\n    },\n    saveVariables: {\n      '10.2.0': 'Dashboard settings Save Dashboard Modal Save variables checkbox',\n    },\n    saveTimerange: {\n      '10.2.0': 'Dashboard settings Save Dashboard Modal Save timerange checkbox',\n    },\n    saveRefresh: {\n      '11.1.0': 'Dashboard settings Save Dashboard Modal Save refresh checkbox',\n    },\n  },\n  SharePanelModal: {\n    linkToRenderedImage: {\n      [MIN_GRAFANA_VERSION]: 'Link to rendered image',\n    },\n  },\n  ShareDashboardModal: {\n    PublicDashboard: {\n      WillBePublicCheckbox: {\n        '9.1.0': 'data-testid public dashboard will be public checkbox',\n      },\n      LimitedDSCheckbox: {\n        '9.1.0': 'data-testid public dashboard limited datasources checkbox',\n      },\n      CostIncreaseCheckbox: {\n        '9.1.0': 'data-testid public dashboard cost may increase checkbox',\n      },\n      PauseSwitch: {\n        '9.5.0': 'data-testid public dashboard pause switch',\n      },\n      EnableAnnotationsSwitch: {\n        '9.3.0': 'data-testid public dashboard on off switch for annotations',\n      },\n      CreateButton: {\n        '9.5.0': 'data-testid public dashboard create button',\n      },\n      DeleteButton: {\n        '9.3.0': 'data-testid public dashboard delete button',\n      },\n      CopyUrlInput: {\n        '9.1.0': 'data-testid public dashboard copy url input',\n      },\n      CopyUrlButton: {\n        '9.1.0': 'data-testid public dashboard copy url button',\n      },\n      SettingsDropdown: {\n        '10.1.0': 'data-testid public dashboard settings dropdown',\n      },\n      TemplateVariablesWarningAlert: {\n        '9.1.0': 'data-testid public dashboard disabled template variables alert',\n      },\n      UnsupportedDataSourcesWarningAlert: {\n        '9.5.0': 'data-testid public dashboard unsupported data sources alert',\n      },\n      NoUpsertPermissionsWarningAlert: {\n        '9.5.0': 'data-testid public dashboard no upsert permissions alert',\n      },\n      EnableTimeRangeSwitch: {\n        '9.4.0': 'data-testid public dashboard on off switch for time range',\n      },\n      EmailSharingConfiguration: {\n        Container: {\n          '9.5.0': 'data-testid email sharing config container',\n        },\n        ShareType: {\n          '9.5.0': 'data-testid public dashboard share type',\n        },\n        EmailSharingInput: {\n          '9.5.0': 'data-testid public dashboard email sharing input',\n        },\n        EmailSharingInviteButton: {\n          '9.5.0': 'data-testid public dashboard email sharing invite button',\n        },\n        EmailSharingList: {\n          '9.5.0': 'data-testid public dashboard email sharing list',\n        },\n        DeleteEmail: {\n          '9.5.0': 'data-testid public dashboard delete email button',\n        },\n        ReshareLink: {\n          '9.5.0': 'data-testid public dashboard reshare link button',\n        },\n      },\n    },\n    SnapshotScene: {\n      url: {\n        '11.1.0': (key: string) => `/dashboard/snapshot/${key}`,\n      },\n      PublishSnapshot: {\n        '11.1.0': 'data-testid publish snapshot button',\n      },\n      CopyUrlButton: {\n        '11.1.0': 'data-testid snapshot copy url button',\n      },\n      CopyUrlInput: {\n        '11.1.0': 'data-testid snapshot copy url input',\n      },\n    },\n  },\n  ShareDashboardDrawer: {\n    ShareInternally: {\n      container: {\n        '11.3.0': 'data-testid share internally drawer container',\n      },\n      lockTimeRangeSwitch: {\n        '11.3.0': 'data-testid share internally lock time range switch',\n      },\n      shortenUrlSwitch: {\n        '11.3.0': 'data-testid share internally shorten url switch',\n      },\n      copyUrlButton: {\n        '11.3.0': 'data-testid share internally copy url button',\n      },\n      SharePanel: {\n        preview: {\n          '11.5.0': 'data-testid share panel internally image generation preview',\n        },\n        widthInput: {\n          '11.5.0': 'data-testid share panel internally width input',\n        },\n        heightInput: {\n          '11.5.0': 'data-testid share panel internally height input',\n        },\n        scaleFactorInput: {\n          '11.5.0': 'data-testid share panel internally scale factor input',\n        },\n        generateImageButton: {\n          '11.5.0': 'data-testid share panel internally generate image button',\n        },\n        downloadImageButton: {\n          '11.5.0': 'data-testid share panel internally download image button',\n        },\n      },\n    },\n    ShareExternally: {\n      container: {\n        '11.3.0': 'data-testid share externally drawer container',\n      },\n      publicAlert: {\n        '11.3.0': 'data-testid public share alert',\n      },\n      emailSharingAlert: {\n        '11.3.0': 'data-testid email share alert',\n      },\n      shareTypeSelect: {\n        '11.3.0': 'data-testid share externally share type select',\n      },\n      Creation: {\n        PublicShare: {\n          createButton: {\n            '11.3.0': 'data-testid public share dashboard create button',\n          },\n          cancelButton: {\n            '11.3.0': 'data-testid public share dashboard cancel button',\n          },\n        },\n        EmailShare: {\n          createButton: {\n            '11.3.0': 'data-testid email share dashboard create button',\n          },\n          cancelButton: {\n            '11.3.0': 'data-testid email share dashboard cancel button',\n          },\n        },\n        willBePublicCheckbox: {\n          '11.3.0': 'data-testid share dashboard will be public checkbox',\n        },\n      },\n      Configuration: {\n        enableTimeRangeSwitch: {\n          '11.3.0': 'data-testid share externally enable time range switch',\n        },\n        enableAnnotationsSwitch: {\n          '11.3.0': 'data-testid share externally enable annotations switch',\n        },\n        copyUrlButton: {\n          '11.3.0': 'data-testid share externally copy url button',\n        },\n        revokeAccessButton: {\n          '11.3.0': 'data-testid share externally revoke access button',\n        },\n        toggleAccessButton: {\n          '11.3.0': 'data-testid share externally pause or resume access button',\n        },\n      },\n    },\n    ShareSnapshot: {\n      url: {\n        '11.3.0': (key: string) => `/dashboard/snapshot/${key}`,\n      },\n      container: {\n        '11.3.0': 'data-testid share snapshot drawer container',\n      },\n      publishSnapshot: {\n        '11.3.0': 'data-testid share snapshot publish button',\n      },\n      copyUrlButton: {\n        '11.3.0': 'data-testid share snapshot copy url button',\n      },\n    },\n  },\n  ExportDashboardDrawer: {\n    ExportAsJson: {\n      container: {\n        '11.3.0': 'data-testid export as json drawer container',\n      },\n      codeEditor: {\n        '11.3.0': 'data-testid export as json code editor',\n      },\n      exportExternallyToggle: {\n        '11.3.0': 'data-testid export as json externally switch',\n      },\n      saveToFileButton: {\n        '11.3.0': 'data-testid export as json save to file button',\n      },\n      copyToClipboardButton: {\n        '11.3.0': 'data-testid export as json copy to clipboard button',\n      },\n      cancelButton: {\n        '11.3.0': 'data-testid export as json cancel button',\n      },\n    },\n  },\n  PublicDashboard: {\n    page: {\n      '9.5.0': 'public-dashboard-page',\n    },\n    NotAvailable: {\n      container: {\n        '9.5.0': 'public-dashboard-not-available',\n      },\n      title: {\n        '9.5.0': 'public-dashboard-title',\n      },\n      pausedDescription: {\n        '9.5.0': 'public-dashboard-paused-description',\n      },\n    },\n    footer: {\n      '11.0.0': 'public-dashboard-footer',\n    },\n  },\n  PublicDashboardScene: {\n    loadingPage: {\n      '11.0.0': 'public-dashboard-scene-loading-page',\n    },\n    page: {\n      '11.0.0': 'public-dashboard-scene-page',\n    },\n    controls: {\n      '11.0.0': 'public-dashboard-controls',\n    },\n  },\n  RequestViewAccess: {\n    form: {\n      '9.5.0': 'request-view-access-form',\n    },\n    recipientInput: {\n      '9.5.0': 'request-view-access-recipient-input',\n    },\n    submitButton: {\n      '9.5.0': 'request-view-access-submit-button',\n    },\n  },\n  PublicDashboardConfirmAccess: {\n    submitButton: {\n      '10.2.0': 'data-testid confirm-access-submit-button',\n    },\n  },\n  Explore: {\n    url: {\n      [MIN_GRAFANA_VERSION]: '/explore',\n    },\n    General: {\n      container: {\n        [MIN_GRAFANA_VERSION]: 'data-testid Explore',\n      },\n      graph: {\n        [MIN_GRAFANA_VERSION]: 'Explore Graph',\n      },\n      table: {\n        [MIN_GRAFANA_VERSION]: 'Explore Table',\n      },\n      scrollView: {\n        '9.0.0': 'data-testid explorer scroll view',\n      },\n      addFromQueryLibrary: {\n        '11.5.0': 'data-testid explore add from query library button',\n      },\n    },\n    QueryHistory: {\n      container: {\n        '11.1.0': 'data-testid QueryHistory',\n      },\n    },\n  },\n  SoloPanel: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (page: string) => `/d-solo/${page}`,\n    },\n  },\n  PluginsList: {\n    page: {\n      [MIN_GRAFANA_VERSION]: 'Plugins list page',\n    },\n    list: {\n      [MIN_GRAFANA_VERSION]: 'Plugins list',\n    },\n    listItem: {\n      [MIN_GRAFANA_VERSION]: 'Plugins list item',\n    },\n    signatureErrorNotice: {\n      '10.3.0': 'data-testid Unsigned plugins notice',\n      [MIN_GRAFANA_VERSION]: 'Unsigned plugins notice',\n    },\n  },\n  PluginPage: {\n    page: {\n      [MIN_GRAFANA_VERSION]: 'Plugin page',\n    },\n    signatureInfo: {\n      '10.3.0': 'data-testid Plugin signature info',\n      [MIN_GRAFANA_VERSION]: 'Plugin signature info',\n    },\n    disabledInfo: {\n      '10.3.0': 'data-testid Plugin disabled info',\n      [MIN_GRAFANA_VERSION]: 'Plugin disabled info',\n    },\n  },\n  PlaylistForm: {\n    name: {\n      [MIN_GRAFANA_VERSION]: 'Playlist name',\n    },\n    interval: {\n      [MIN_GRAFANA_VERSION]: 'Playlist interval',\n    },\n    itemDelete: {\n      '10.2.0': 'data-testid playlist-form-delete-item',\n    },\n  },\n  BrowseDashboards: {\n    table: {\n      body: {\n        '10.2.0': 'data-testid browse-dashboards-table',\n      },\n      row: {\n        '10.2.0': (name: string) => `data-testid browse dashboards row ${name}`,\n      },\n      checkbox: {\n        '10.0.0': (uid: string) => `data-testid ${uid} checkbox`,\n      },\n    },\n    NewFolderForm: {\n      form: {\n        '10.2.0': 'data-testid new folder form',\n      },\n      nameInput: {\n        '10.2.0': 'data-testid new-folder-name-input',\n      },\n      createButton: {\n        '10.2.0': 'data-testid new-folder-create-button',\n      },\n    },\n  },\n  SearchDashboards: {\n    table: {\n      '10.2.0': 'Search results table',\n    },\n  },\n  Search: {\n    url: {\n      '9.3.0': '/?search=openn',\n    },\n    FolderView: {\n      url: {\n        '9.3.0': '/?search=open&layout=folders',\n      },\n    },\n  },\n  PublicDashboards: {\n    ListItem: {\n      linkButton: {\n        '9.3.0': 'public-dashboard-link-button',\n      },\n      configButton: {\n        '9.3.0': 'public-dashboard-configuration-button',\n      },\n      trashcanButton: {\n        '9.3.0': 'public-dashboard-remove-button',\n      },\n      pauseSwitch: {\n        '10.1.0': 'data-testid public dashboard pause switch',\n      },\n    },\n  },\n  UserListPage: {\n    tabs: {\n      allUsers: {\n        '10.0.0': 'data-testid all-users-tab',\n      },\n      orgUsers: {\n        '10.0.0': 'data-testid org-users-tab',\n      },\n      anonUserDevices: {\n        '10.2.3': 'data-testid anon-user-devices-tab',\n      },\n      publicDashboardsUsers: {\n        '10.0.0': 'data-testid public-dashboards-users-tab',\n      },\n      users: {\n        '10.0.0': 'data-testid users-tab',\n      },\n    },\n    org: {\n      url: {\n        '10.2.0': '/admin/users',\n        '9.5.0': '/org/users',\n      },\n    },\n    admin: {\n      url: {\n        '9.5.0': '/admin/users',\n      },\n    },\n    publicDashboards: {\n      container: {\n        '11.1.0': 'data-testid public-dashboards-users-list',\n      },\n    },\n    UserListAdminPage: {\n      container: {\n        '10.0.0': 'data-testid user-list-admin-page',\n      },\n    },\n    UsersListPage: {\n      container: {\n        '10.0.0': 'data-testid users-list-page',\n      },\n    },\n    UserAnonListPage: {\n      container: {\n        '10.4.0': 'data-testid user-anon-list-page',\n      },\n    },\n    UsersListPublicDashboardsPage: {\n      container: {\n        '10.0.0': 'data-testid users-list-public-dashboards-page',\n      },\n      DashboardsListModal: {\n        listItem: {\n          '10.0.0': (uid: string) => `data-testid dashboards-list-item-${uid}`,\n        },\n      },\n    },\n  },\n  ProfilePage: {\n    url: {\n      '10.2.0': '/profile',\n    },\n  },\n  Plugin: {\n    url: {\n      [MIN_GRAFANA_VERSION]: (pluginId: string) => `/plugins/${pluginId}`,\n    },\n  },\n  MigrateToCloud: {\n    url: {\n      '11.2.0': '/admin/migrate-to-cloud',\n    },\n  },\n} satisfies VersionedSelectorGroup;\n\nexport type VersionedPages = typeof versionedPages;\n","import { cx } from '@emotion/css';\nimport { RefCallback, SyntheticEvent, useState } from 'react';\nimport * as React from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport { CoreApp, DataFrame, getDefaultTimeRange, SelectableValue, TimeRange } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { AccessoryButton } from '@grafana/plugin-ui';\nimport {\n  HorizontalGroup,\n  Select,\n  ButtonSelect,\n  AsyncMultiSelect,\n  getSelectStyles,\n  useTheme2,\n  Checkbox,\n} from '@grafana/ui';\n\nimport { AzureMonitorQuery, AzureQueryType, AzureTracesFilter } from '../../dataquery.gen';\nimport Datasource from '../../datasource';\nimport { VariableOptionGroup } from '../../types';\nimport { addValueToOptions } from '../../utils/common';\n\nexport interface FilterProps {\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  propertyMap: Map<string, SelectableValue[]>;\n  setPropertyMap: React.Dispatch<React.SetStateAction<Map<string, Array<SelectableValue<string>>>>>;\n  queryTraceTypes: string[];\n  properties: string[];\n  variableOptionGroup: VariableOptionGroup;\n  range?: TimeRange;\n}\n\nconst onFieldChange = <Key extends keyof AzureTracesFilter>(\n  fieldName: Key,\n  item: Partial<AzureTracesFilter>,\n  selected: SelectableValue<AzureTracesFilter[Key]>,\n  onChange: (item: Partial<AzureTracesFilter>) => void\n) => {\n  if (fieldName === 'filters') {\n    item[fieldName] = selected.map((item: SelectableValue<string>) => item.value);\n  } else {\n    item[fieldName] = selected.value;\n    if (fieldName === 'property') {\n      item.filters = [];\n    }\n  }\n  onChange(item);\n};\n\nconst getTraceProperties = async (\n  query: AzureMonitorQuery,\n  datasource: Datasource,\n  traceTypes: string[],\n  propertyMap: Map<string, SelectableValue[]>,\n  setPropertyMap: React.Dispatch<React.SetStateAction<Map<string, Array<SelectableValue<string>>>>>,\n  filter?: Partial<AzureTracesFilter>,\n  range?: TimeRange\n): Promise<SelectableValue[]> => {\n  const { azureTraces } = query;\n  if (!azureTraces) {\n    return [];\n  }\n\n  const { resources } = azureTraces;\n\n  if (!resources || !filter) {\n    return [];\n  }\n\n  const property = filter.property;\n  if (!property) {\n    return [];\n  }\n\n  const queryString = `let ${property} = toscalar(union isfuzzy=true ${traceTypes.join(',')}\n  | where $__timeFilter(timestamp)\n  | summarize count=count() by ${property}\n  | summarize make_list(pack_all()));\n  print properties = bag_pack(\"${property}\", ${property});`;\n\n  const results = await lastValueFrom(\n    datasource.azureLogAnalyticsDatasource.query({\n      requestId: 'azure-traces-properties-req',\n      interval: '',\n      intervalMs: 0,\n      scopedVars: {},\n      timezone: '',\n      startTime: 0,\n      app: CoreApp.Unknown,\n      targets: [\n        {\n          ...query,\n          azureLogAnalytics: {\n            resources,\n            query: queryString,\n          },\n          queryType: AzureQueryType.LogAnalytics,\n        },\n      ],\n      range: range || getDefaultTimeRange(),\n    })\n  );\n  if (results.data.length > 0) {\n    const result: DataFrame = results.data[0];\n    if (result.fields.length > 0) {\n      const properties: { [key: string]: Array<{ [key: string]: string | number; count: number }> } = JSON.parse(\n        result.fields[0].values.toArray()[0]\n      );\n      const values = properties[property].map((value) => {\n        let label = value[property];\n        if (value[property] === '') {\n          label = '<Empty>';\n        }\n        return { label: label.toString(), value: value[property].toString(), count: value.count };\n      });\n      propertyMap.set(property, values);\n      setPropertyMap(propertyMap);\n      return values;\n    }\n  }\n\n  return [];\n};\n\nexport function makeRenderItem(props: FilterProps) {\n  function renderItem(\n    item: Partial<AzureTracesFilter>,\n    onChange: (item: Partial<AzureTracesFilter>) => void,\n    onDelete: () => void\n  ) {\n    return <Filter {...props} item={item} onChange={onChange} onDelete={onDelete} />;\n  }\n\n  return renderItem;\n}\n\ninterface OptionProps {\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n  innerRef: RefCallback<HTMLDivElement>;\n  data: SelectableValue<string>;\n  selectOption: (data: SelectableValue<string>) => void;\n}\n\nconst Option = (props: React.PropsWithChildren<OptionProps>) => {\n  const { data, innerProps, innerRef, isFocused, isSelected } = props;\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  const onClickMultiOption = (e: SyntheticEvent) => {\n    props.selectOption({ ...data });\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      ref={innerRef}\n      className={cx(\n        styles.option,\n        isFocused && styles.optionFocused,\n        isSelected && styles.optionSelected,\n        data.isDisabled && styles.optionDisabled\n      )}\n      {...innerProps}\n      data-testid={selectors.components.Select.option}\n      title={data.title}\n      onClick={onClickMultiOption}\n      onKeyDown={onClickMultiOption}\n      role=\"checkbox\"\n      aria-checked={isSelected}\n      tabIndex={0}\n    >\n      <div className={styles.optionBody}>\n        <Checkbox value={isSelected} label={data.label ? `${data.label} - (${data.count})` : ''} />\n      </div>\n    </div>\n  );\n};\n\nconst Filter = (\n  props: FilterProps & {\n    item: Partial<AzureTracesFilter>;\n    onChange: (item: Partial<AzureTracesFilter>) => void;\n    onDelete: () => void;\n  }\n) => {\n  const {\n    query,\n    datasource,\n    propertyMap,\n    setPropertyMap,\n    queryTraceTypes,\n    properties,\n    item,\n    onChange,\n    onDelete,\n    variableOptionGroup,\n    range,\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const [values, setValues] = useState<Array<SelectableValue<string> | VariableOptionGroup>>(\n    addValueToOptions(propertyMap.get(item.property ?? '') ?? [], variableOptionGroup)\n  );\n  const [selected, setSelected] = useState<SelectableValue[]>(\n    item.filters ? item.filters.map((filter) => ({ value: filter, label: filter === '' ? '<Empty>' : filter })) : []\n  );\n\n  const loadOptions = async () => {\n    setLoading(true);\n    if (item.property && item.property !== '') {\n      const vals = propertyMap.get(item.property ?? '');\n      if (!vals) {\n        const promise = await getTraceProperties(\n          query,\n          datasource,\n          queryTraceTypes,\n          propertyMap,\n          setPropertyMap,\n          item,\n          range\n        );\n        setValues(addValueToOptions(promise, variableOptionGroup));\n        setLoading(false);\n        return promise;\n      } else {\n        setValues(addValueToOptions(vals, variableOptionGroup));\n        setLoading(false);\n        return Promise.resolve(vals);\n      }\n    }\n    const empty: Array<SelectableValue<string>> = [];\n    return Promise.resolve(empty);\n  };\n\n  return (\n    <HorizontalGroup spacing=\"none\">\n      <Select\n        menuShouldPortal\n        placeholder=\"Property\"\n        value={item.property ? { value: item.property, label: item.property } : null}\n        options={addValueToOptions(\n          properties.map((type) => ({ label: type, value: type })),\n          variableOptionGroup\n        )}\n        onChange={(e) => onFieldChange('property', item, e, onChange)}\n        width={25}\n      />\n      <ButtonSelect<string>\n        value={item.operation ? { label: item.operation === 'eq' ? '=' : '!=', value: item.operation } : undefined}\n        options={[\n          { label: '=', value: 'eq' },\n          { label: '!=', value: 'ne' },\n        ]}\n        onChange={(e) => onFieldChange('operation', item, e, onChange)}\n        defaultValue={'eq'}\n      />\n      <AsyncMultiSelect\n        blurInputOnSelect={false}\n        menuShouldPortal\n        placeholder=\"Value\"\n        value={selected}\n        loadOptions={loadOptions}\n        isLoading={loading}\n        onOpenMenu={loadOptions}\n        onChange={(e: Array<SelectableValue<string>>) => {\n          setSelected(e);\n          if (e.length === 0) {\n            onFieldChange('filters', item, selected, onChange);\n          }\n        }}\n        width={35}\n        defaultOptions={values}\n        isClearable\n        components={{ Option }}\n        closeMenuOnSelect={false}\n        onCloseMenu={() => onFieldChange('filters', item, selected, onChange)}\n        hideSelectedOptions={false}\n      />\n      <AccessoryButton aria-label=\"Remove filter\" icon=\"times\" variant=\"secondary\" onClick={onDelete} type=\"button\" />\n    </HorizontalGroup>\n  );\n};\n\nexport default Filter;\n","import { omit } from 'lodash';\n\nexport const Tables = {\n  availabilityResults: { label: 'Availablity Results', description: 'Availability test results.' },\n  dependencies: {\n    label: 'Dependencies',\n    description: 'Calls your application makes to other services such as databases or REST APIs.',\n  },\n  customEvents: { label: 'Custom Events', description: 'Calls to TrackEvent that are inserted to monitor usage.' },\n  exceptions: {\n    label: 'Exceptions',\n    description: 'Exceptions that are logged via TrackException, or uncaught exceptions.',\n  },\n  pageViews: { label: 'Page Views', description: 'Web client telemetry to create page view reports.' },\n  requests: { label: 'Requests', description: 'HTTP requests received by the application.' },\n  traces: {\n    label: 'Traces',\n    description:\n      'Diagnostic logs emitted using TrackTrace and similar methods. Note: Traces are not visualised if the result format is set to Trace',\n  },\n};\n\n// Resource centric tables mapped to legacy tables\nexport const tables = {\n  AppAvailabilityResults: 'availabilityResults',\n  AppDependencies: 'dependencies',\n  AppEvents: 'events',\n  AppExceptions: 'exceptions',\n  AppPageViews: 'pageViews',\n  AppRequests: 'requests',\n  AppTraces: 'traces',\n};\n\n// Properties to omit when generating the attributes bag\nexport const attributesOmit = [\n  'operationId',\n  'duration',\n  'id',\n  'name',\n  'problemId',\n  'operation_ParentId',\n  'timestamp',\n  'customDimensions',\n  'operation_Name',\n];\n\n// Common resource centric properties mapped to legacy property names\nexport const common = {\n  appId: 'ResourceGUID',\n  application_Version: 'AppVersion',\n  appName: '_ResourceId',\n  client_Browser: 'ClientBrowser',\n  client_City: 'ClientCity',\n  client_CountryOrRegion: 'ClientCountryOrRegion',\n  client_IP: 'ClientIP',\n  client_Model: 'ClientModel',\n  client_OS: 'ClientOS',\n  client_StateOrProvince: 'ClientStateOrProvince',\n  client_Type: 'ClientType',\n  cloud_RoleInstance: 'AppRoleInstance',\n  cloud_RoleName: 'AppRoleName',\n  customDimensions: 'Properties',\n  customMeasurements: 'Measurements',\n  duration: 'DurationMs',\n  id: 'Id',\n  iKey: 'IKey',\n  itemCount: 'ItemCount',\n  itemId: '_ItemId',\n  itemType: 'Type',\n  name: 'Name',\n  operation_Id: 'OperationId',\n  operation_Name: 'OperationName',\n  operation_ParentId: 'OperationParentId',\n  operation_SyntheticSource: 'OperationSyntheticSource',\n  performanceBucket: 'PerformanceBucket',\n  sdkVersion: 'SDKVersion',\n  session_Id: 'SessionId',\n  success: 'Success',\n  timestamp: 'TimeGenerated',\n  user_AccountId: 'UserAccountId',\n  user_AuthenticatedId: 'UserAuthenticatedId',\n  user_Id: 'UserId',\n};\n\n// Additional properties for availabilityResults\nexport const availabilityResultsSchema = {\n  ...common,\n  location: 'Location',\n  message: 'Message',\n  size: 'Size',\n};\n\n// Additional properties for dependencies\nexport const dependenciesSchema = {\n  ...common,\n  data: 'Data',\n  resultCode: 'ResultCode',\n  target: 'Target',\n  type: 'DependencyType',\n};\n\n// Additional properties for events\nexport const eventsSchema = omit(common, ['duration', 'id', 'success', 'performanceBucket']);\n\n// Additional properties for pageVies\nexport const pageViewsSchema = omit(\n  {\n    ...common,\n    url: 'Url',\n  },\n  ['success']\n);\n\n// Additional properties for requests\nexport const requestsSchema = {\n  resultCode: 'ResultCode',\n  source: 'Source',\n  url: 'Url',\n};\n\n// Additional properties for exceptions\nexport const exceptionsSchema = omit(\n  {\n    ...common,\n    assembly: 'Assembly',\n    details: 'Details',\n    handledAt: 'HandledAt',\n    innermostAssembly: 'InnermostAssembly',\n    innermostMessage: 'InnermostMessage',\n    innermostMethod: 'InnermostMethod',\n    innermostType: 'InnermostType',\n    message: 'Message',\n    method: 'Method',\n    outerAssembly: 'OuterAssembly',\n    outerMessage: 'OuterMessage',\n    outerMethod: 'OuterMethod',\n    outerType: 'OuterType',\n    problemId: 'ProblemId',\n    severityLevel: 'SeverityLevel',\n    type: 'ExceptionType',\n  },\n  ['duration', 'id', 'name', 'performanceBucket', 'success']\n);\n\n// Additional properties for traces\nexport const tracesSchema = omit(\n  {\n    message: 'Message',\n    severityLevel: 'SeverityLevel',\n  },\n  ['duration', 'id', 'name', 'performanceBucket', 'success']\n);\n\nexport const tablesSchema: { [key: string]: { [key: string]: string } } = {\n  availabilityResults: availabilityResultsSchema,\n  dependencies: dependenciesSchema,\n  customEvents: eventsSchema,\n  exceptions: exceptionsSchema,\n  pageViews: pageViewsSchema,\n  requests: requestsSchema,\n  traces: tracesSchema,\n};\n\nexport const tableTags = Object.entries(tablesSchema).reduce(\n  (val, [k, v]) => ({ ...val, [k]: Object.keys(omit(v, attributesOmit)).join(',') }),\n  {}\n);\n","import { SelectableValue } from '@grafana/data';\n\nimport { AzureMonitorQuery, AzureQueryType, AzureTracesFilter, ResultFormat } from '../../types';\n\n// Used when switching from a traces exemplar query to a standard Azure Traces query\nexport function setDefaultTracesQuery(query: AzureMonitorQuery): AzureMonitorQuery {\n  return {\n    ...query,\n    query: undefined,\n    queryType: AzureQueryType.AzureTraces,\n    azureTraces: undefined,\n  };\n}\n\nexport function setQueryOperationId(query: AzureMonitorQuery, operationId?: string): AzureMonitorQuery {\n  return {\n    ...query,\n    azureTraces: {\n      ...query.azureTraces,\n      operationId,\n    },\n  };\n}\n\nexport function setFormatAs(query: AzureMonitorQuery, formatAs: ResultFormat): AzureMonitorQuery {\n  return {\n    ...query,\n    azureTraces: {\n      ...query.azureTraces,\n      resultFormat: formatAs,\n    },\n  };\n}\n\nexport function setTraceTypes(query: AzureMonitorQuery, traceTypes: string[]): AzureMonitorQuery {\n  return {\n    ...query,\n    azureTraces: {\n      ...query.azureTraces,\n      traceTypes,\n    },\n  };\n}\n\nexport function setFilters(query: AzureMonitorQuery, filters: AzureTracesFilter[]): AzureMonitorQuery {\n  return {\n    ...query,\n    azureTraces: {\n      ...query.azureTraces,\n      filters,\n    },\n  };\n}\n\nexport function onLoad(\n  query: AzureMonitorQuery,\n  defaultValue: ResultFormat,\n  handleChange: (change: SelectableValue<ResultFormat>) => void\n) {\n  if (!query.azureTraces?.resultFormat) {\n    handleChange({ value: defaultValue });\n  }\n}\n","import { uniq } from 'lodash';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { EditorList } from '@grafana/plugin-ui';\nimport { Field } from '@grafana/ui';\n\nimport { AzureQueryEditorFieldProps, AzureTracesFilter } from '../../types';\n\nimport { makeRenderItem } from './Filter';\nimport { tablesSchema } from './consts';\nimport { setFilters } from './setQueryValue';\n\nconst Filters = ({ query, datasource, onQueryChange, variableOptionGroup, range }: AzureQueryEditorFieldProps) => {\n  const { azureTraces } = query;\n  const queryTraceTypes = azureTraces?.traceTypes ? azureTraces.traceTypes : Object.keys(tablesSchema);\n\n  const excludedProperties = new Set([\n    'customDimensions',\n    'customMeasurements',\n    'details',\n    'duration',\n    'id',\n    'itemId',\n    'operation_Id',\n    'operation_ParentId',\n    'timestamp',\n  ]);\n  const properties = uniq(queryTraceTypes.map((type) => Object.keys(tablesSchema[type])).flat()).filter(\n    (item) => !excludedProperties.has(item)\n  );\n\n  const [propertyMap, setPropertyMap] = useState(new Map<string, Array<SelectableValue<string>>>());\n  const queryFilters = useMemo(() => query.azureTraces?.filters ?? [], [query.azureTraces?.filters]);\n  const [filters, updateFilters] = useState(queryFilters);\n\n  useEffect(() => {\n    setPropertyMap(new Map<string, Array<SelectableValue<string>>>());\n  }, [query.azureTraces?.resources, query.azureTraces?.traceTypes, query.azureTraces?.operationId]);\n\n  const changedFunc = (changed: Array<Partial<AzureTracesFilter>>) => {\n    let updateQuery = false;\n    const properData: AzureTracesFilter[] = changed.map((x) => {\n      if (x.property !== '' && x.filters && x.filters.length > 0 && x.operation !== '') {\n        updateQuery = true;\n      } else {\n        updateQuery = false;\n      }\n      return {\n        property: x.property ?? '',\n        filters: x.filters ?? [],\n        operation: x.operation ?? 'eq',\n      };\n    });\n    updateFilters(properData);\n    if (updateQuery || (queryFilters.length > 0 && properData.length === 0)) {\n      onQueryChange(setFilters(query, properData));\n    }\n  };\n\n  return (\n    <Field label=\"Filters\">\n      <EditorList\n        items={filters}\n        onChange={changedFunc}\n        renderItem={makeRenderItem({\n          query,\n          datasource,\n          propertyMap,\n          setPropertyMap,\n          queryTraceTypes,\n          properties,\n          variableOptionGroup,\n          range,\n        })}\n      />\n    </Field>\n  );\n};\n\nexport default Filters;\n","import { useCallback, useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { MultiSelect } from '@grafana/ui';\n\nimport { selectors } from '../../e2e/selectors';\nimport { AzureQueryEditorFieldProps, AzureMonitorOption } from '../../types';\nimport { findOptions } from '../../utils/common';\nimport { Field } from '../shared/Field';\n\nimport { Tables } from './consts';\nimport { setTraceTypes } from './setQueryValue';\n\nconst TraceTypeField = ({ query, variableOptionGroup, onQueryChange }: AzureQueryEditorFieldProps) => {\n  const tables: AzureMonitorOption[] = Object.entries(Tables).map(([key, value]) => ({\n    label: value.label,\n    description: value.description,\n    value: key,\n  }));\n  const handleChange = useCallback(\n    (change: Array<SelectableValue<string>>) => {\n      const newQuery = setTraceTypes(\n        query,\n        change.map((type) => type.value ?? '')\n      );\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const options = useMemo(() => [...tables, variableOptionGroup], [tables, variableOptionGroup]);\n\n  // Select all trace event ypes by default\n  const getDefaultOptions = () => {\n    const allEventTypes = tables.map((t) => t.value);\n    const defaultQuery = setTraceTypes(query, allEventTypes);\n    onQueryChange(defaultQuery);\n    return allEventTypes;\n  };\n\n  return (\n    <Field label=\"Event Type\">\n      <MultiSelect\n        placeholder=\"Choose event types\"\n        inputId=\"azure-monitor-traces-type-field\"\n        value={findOptions(\n          [...tables, ...variableOptionGroup.options],\n          query.azureTraces?.traceTypes ?? getDefaultOptions()\n        )}\n        onChange={handleChange}\n        options={options}\n        allowCustomValue\n        isClearable\n        aria-label={selectors.components.queryEditor.tracesQueryEditor.traceTypes.select}\n      />\n    </Field>\n  );\n};\n\nexport default TraceTypeField;\n","import { useCallback, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { usePrevious } from 'react-use';\n\nimport { TimeRange } from '@grafana/data';\nimport { EditorFieldGroup, EditorRow, EditorRows } from '@grafana/plugin-ui';\nimport { Input } from '@grafana/ui';\n\nimport Datasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorErrorish, AzureMonitorOption, AzureMonitorQuery, AzureQueryType, ResultFormat } from '../../types';\nimport AdvancedResourcePicker from '../LogsQueryEditor/AdvancedResourcePicker';\nimport ResourceField from '../ResourceField';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from '../ResourcePicker/types';\nimport { parseResourceDetails } from '../ResourcePicker/utils';\nimport { Field } from '../shared/Field';\nimport FormatAsField from '../shared/FormatAsField';\n\nimport Filters from './Filters';\nimport TraceTypeField from './TraceTypeField';\nimport { onLoad, setDefaultTracesQuery, setFormatAs, setQueryOperationId } from './setQueryValue';\n\ninterface TracesQueryEditorProps {\n  query: AzureMonitorQuery;\n  datasource: Datasource;\n  subscriptionId?: string;\n  onChange: (newQuery: AzureMonitorQuery) => void;\n  variableOptionGroup: { label: string; options: AzureMonitorOption[] };\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n  range?: TimeRange;\n}\n\nconst TracesQueryEditor = ({\n  query,\n  datasource,\n  subscriptionId,\n  variableOptionGroup,\n  onChange,\n  setError,\n  range,\n}: TracesQueryEditorProps) => {\n  const disableRow = (row: ResourceRow, selectedRows: ResourceRowGroup) => {\n    if (selectedRows.length === 0) {\n      // Only if there is some resource(s) selected we should disable rows\n      return false;\n    }\n    const rowResourceNS = parseResourceDetails(row.uri, row.location).metricNamespace?.toLowerCase();\n    const selectedRowSampleNs = parseResourceDetails(\n      selectedRows[0].uri,\n      selectedRows[0].location\n    ).metricNamespace?.toLowerCase();\n    // Only resources with the same metricNamespace can be selected\n    return rowResourceNS !== selectedRowSampleNs;\n  };\n\n  const [operationId, setOperationId] = useState<string>(query.azureTraces?.operationId ?? '');\n  const previousOperationId = usePrevious(query.azureTraces?.operationId);\n\n  useEffect(() => {\n    if (query.azureTraces?.operationId) {\n      if (previousOperationId !== query.azureTraces.operationId) {\n        setOperationId(query.azureTraces.operationId);\n      }\n    }\n  }, [setOperationId, previousOperationId, query, operationId]);\n\n  const handleChange = useCallback(\n    (ev: React.FormEvent) => {\n      if (ev.target instanceof HTMLInputElement) {\n        setOperationId(ev.target.value);\n        if (query.queryType === AzureQueryType.TraceExemplar && ev.target.value === '') {\n          // If this is an exemplars query and the operation ID is cleared we reset this to a default traces query\n          onChange(setDefaultTracesQuery(query));\n        }\n      }\n    },\n    [onChange, query]\n  );\n\n  const handleBlur = useCallback(\n    (ev: React.FormEvent) => {\n      const newQuery = setQueryOperationId(query, operationId);\n      onChange(newQuery);\n    },\n    [onChange, operationId, query]\n  );\n\n  return (\n    <span data-testid={selectors.components.queryEditor.tracesQueryEditor.container.input}>\n      <EditorRows>\n        <EditorRow>\n          <EditorFieldGroup>\n            <ResourceField\n              query={query}\n              datasource={datasource}\n              subscriptionId={subscriptionId}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              setError={setError}\n              selectableEntryTypes={[\n                ResourceRowType.Subscription,\n                ResourceRowType.ResourceGroup,\n                ResourceRowType.Resource,\n                ResourceRowType.Variable,\n              ]}\n              resources={query.azureTraces?.resources ?? []}\n              queryType=\"traces\"\n              disableRow={disableRow}\n              renderAdvanced={(resources, onChange) => (\n                // It's required to cast resources because the resource picker\n                // specifies the type to string | AzureMonitorResource.\n                // eslint-disable-next-line\n                <AdvancedResourcePicker resources={resources as string[]} onChange={onChange} />\n              )}\n              selectionNotice={() => 'You may only choose items of the same resource type.'}\n              range={range}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n        <EditorRow>\n          <EditorFieldGroup>\n            <TraceTypeField\n              datasource={datasource}\n              onQueryChange={onChange}\n              query={query}\n              setError={setError}\n              variableOptionGroup={variableOptionGroup}\n              range={range}\n            />\n            <Field label=\"Operation ID\">\n              <Input\n                id=\"azure-monitor-traces-operation-id-field\"\n                value={operationId}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                width={40}\n              />\n            </Field>\n          </EditorFieldGroup>\n        </EditorRow>\n        <EditorRow>\n          <EditorFieldGroup>\n            <Filters\n              datasource={datasource}\n              onQueryChange={onChange}\n              query={query}\n              setError={setError}\n              variableOptionGroup={variableOptionGroup}\n              range={range}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n        <EditorRow>\n          <EditorFieldGroup>\n            <FormatAsField\n              datasource={datasource}\n              setError={setError}\n              query={query}\n              variableOptionGroup={variableOptionGroup}\n              onQueryChange={onChange}\n              inputId=\"azure-monitor-traces\"\n              options={[\n                { label: 'Table', value: ResultFormat.Table },\n                { label: 'Trace', value: ResultFormat.Trace },\n              ]}\n              defaultValue={ResultFormat.Table}\n              setFormatAs={setFormatAs}\n              resultFormat={query.azureTraces?.resultFormat}\n              range={range}\n              onLoad={onLoad}\n            />\n          </EditorFieldGroup>\n        </EditorRow>\n      </EditorRows>\n    </span>\n  );\n};\n\nexport default TracesQueryEditor;\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","import { css } from '@emotion/css';\nimport React__default from 'react';\nimport '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst EditorHeader = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, children);\n};\nconst getStyles = (theme) => ({\n  root: css({\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    gap: theme.spacing(3),\n    minHeight: theme.spacing(4)\n  })\n});\n\nexport { EditorHeader };\n//# sourceMappingURL=EditorHeader.js.map\n","import { css, cx } from '@emotion/css';\nimport React__default, { useState } from 'react';\nimport '@grafana/data';\nimport { useStyles2, Select, SelectContainer as SelectContainer$1 } from '@grafana/ui';\n\nfunction InlineSelect({ label: labelProp, ...props }) {\n  const [id] = useState(() => Math.random().toString(16).slice(2));\n  const styles = useStyles2(getSelectStyles);\n  const components = {\n    SelectContainer,\n    ValueContainer,\n    SingleValue: ValueContainer\n  };\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.root }, labelProp && /* @__PURE__ */ React__default.createElement(\"label\", { className: styles.label, htmlFor: id }, labelProp, \":\", \"\\xA0\"), /* @__PURE__ */ React__default.createElement(Select, { openMenuOnFocus: true, inputId: id, ...props, components }));\n}\nconst SelectContainer = (props) => {\n  const { children } = props;\n  const styles = useStyles2(getSelectStyles);\n  return /* @__PURE__ */ React__default.createElement(SelectContainer$1, { ...props, className: cx(props.className, styles.container) }, children);\n};\nconst ValueContainer = (props) => {\n  const { className, children } = props;\n  const styles = useStyles2(getSelectStyles);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: cx(className, styles.valueContainer) }, children);\n};\nconst getSelectStyles = (theme) => ({\n  root: css({\n    display: \"flex\",\n    fontSize: 12,\n    alignItems: \"center\"\n  }),\n  label: css({\n    color: theme.colors.text.secondary,\n    whiteSpace: \"nowrap\"\n  }),\n  container: css({\n    background: \"none\",\n    borderColor: \"transparent\"\n  }),\n  valueContainer: css({\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: \"initial\",\n    color: theme.colors.text.secondary,\n    fontSize: 12\n  })\n});\n\nexport { InlineSelect };\n//# sourceMappingURL=InlineSelect.js.map\n","import React__default from 'react';\n\nconst FlexItem = ({ grow, shrink }) => {\n  return /* @__PURE__ */ React__default.createElement(\"div\", { style: { display: \"block\", flexGrow: grow, flexShrink: shrink } });\n};\n\nexport { FlexItem };\n//# sourceMappingURL=FlexItem.js.map\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { CoreApp, LoadingState, PanelData, SelectableValue } from '@grafana/data';\nimport { EditorHeader, FlexItem, InlineSelect } from '@grafana/plugin-ui';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Button, ConfirmModal, RadioButtonGroup } from '@grafana/ui';\n\nimport { LogsEditorMode } from '../../dataquery.gen';\nimport { selectors } from '../../e2e/selectors';\nimport { AzureMonitorQuery, AzureQueryType } from '../../types';\n\ninterface QueryTypeFieldProps {\n  query: AzureMonitorQuery;\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n  setAzureLogsCheatSheetModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  data: PanelData | undefined;\n  onRunQuery: () => void;\n  app: CoreApp | undefined;\n}\n\nconst EDITOR_MODES = [\n  { label: 'Builder', value: LogsEditorMode.Builder },\n  { label: 'KQL', value: LogsEditorMode.Raw },\n];\n\nexport const QueryHeader = ({\n  query,\n  onQueryChange,\n  setAzureLogsCheatSheetModalOpen,\n  data,\n  app,\n  onRunQuery,\n}: QueryTypeFieldProps) => {\n  const isLoading = useMemo(() => data?.state === LoadingState.Loading, [data?.state]);\n\n  const [showModeSwitchWarning, setShowModeSwitchWarning] = useState(false);\n  const [pendingModeChange, setPendingModeChange] = useState<LogsEditorMode | null>(null);\n\n  const currentMode = query.azureLogAnalytics?.mode;\n\n  const queryTypes: Array<{ value: AzureQueryType; label: string }> = [\n    { value: AzureQueryType.AzureMonitor, label: 'Metrics' },\n    { value: AzureQueryType.LogAnalytics, label: 'Logs' },\n    { value: AzureQueryType.AzureTraces, label: 'Traces' },\n    { value: AzureQueryType.AzureResourceGraph, label: 'Azure Resource Graph' },\n  ];\n\n  const handleChange = useCallback(\n    (change: SelectableValue<AzureQueryType>) => {\n      if (change.value && change.value !== query.queryType) {\n        onQueryChange({\n          ...query,\n          queryType: change.value,\n        });\n      }\n    },\n    [onQueryChange, query]\n  );\n\n  useEffect(() => {\n    if (query.azureLogAnalytics && query.azureLogAnalytics.mode === undefined) {\n      const updatedQuery = {\n        ...query,\n        azureLogAnalytics: {\n          ...query.azureLogAnalytics,\n          mode: LogsEditorMode.Builder,\n          dashboardTime: true,\n        },\n      };\n      onQueryChange(updatedQuery);\n    }\n  }, [query, onQueryChange]);\n\n  const onLogsModeChange = (newMode: LogsEditorMode) => {\n    if (newMode === currentMode) {\n      return;\n    }\n\n    const goingToBuilder = newMode === LogsEditorMode.Builder;\n    const goingToRaw = newMode === LogsEditorMode.Raw;\n\n    const hasRawKql = !!query.azureLogAnalytics?.query;\n    const hasBuilderQuery = !!query.azureLogAnalytics?.builderQuery;\n\n    if ((goingToBuilder && hasRawKql) || (goingToRaw && hasBuilderQuery)) {\n      setPendingModeChange(newMode);\n      setShowModeSwitchWarning(true);\n    } else {\n      applyModeChange(newMode);\n    }\n  };\n\n  const applyModeChange = (mode: LogsEditorMode) => {\n    const updatedQuery = {\n      ...query,\n      azureLogAnalytics: {\n        ...query.azureLogAnalytics,\n        mode,\n        query: '',\n        builderQuery: mode === LogsEditorMode.Raw ? undefined : query.azureLogAnalytics?.builderQuery,\n        dashboardTime: mode === LogsEditorMode.Builder ? true : undefined,\n      },\n    };\n    onQueryChange(updatedQuery);\n  };\n\n  return (\n    <span data-testid={selectors.components.queryEditor.header.select}>\n      <EditorHeader>\n        <ConfirmModal\n          isOpen={showModeSwitchWarning}\n          title=\"Switch editor mode?\"\n          body={\n            pendingModeChange === LogsEditorMode.Builder\n              ? 'Switching to Builder will discard your current KQL query and clear the KQL editor. Are you sure?'\n              : 'Switching to KQL will discard your current builder settings. Are you sure?'\n          }\n          confirmText={`Switch to ${pendingModeChange === LogsEditorMode.Builder ? 'Builder' : 'KQL'}`}\n          onConfirm={() => {\n            if (pendingModeChange) {\n              applyModeChange(pendingModeChange);\n            }\n            setShowModeSwitchWarning(false);\n            setPendingModeChange(null);\n          }}\n          onDismiss={() => {\n            setShowModeSwitchWarning(false);\n            setPendingModeChange(null);\n          }}\n        />\n\n        <InlineSelect\n          label=\"Service\"\n          value={query.queryType === AzureQueryType.TraceExemplar ? AzureQueryType.AzureTraces : query.queryType}\n          placeholder=\"Service...\"\n          allowCustomValue\n          options={queryTypes}\n          onChange={handleChange}\n        />\n        {query.queryType === AzureQueryType.LogAnalytics && query.azureLogAnalytics?.mode === LogsEditorMode.Raw && (\n          <Button\n            aria-label=\"Azure logs kick start your query button\"\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => {\n              setAzureLogsCheatSheetModalOpen((prev) => !prev);\n              reportInteraction('grafana_azure_logs_query_patterns_opened', {\n                version: 'v2',\n                editorMode: query.azureLogAnalytics,\n              });\n            }}\n          >\n            Kick start your query\n          </Button>\n        )}\n        <FlexItem grow={1} />\n        {query.queryType === AzureQueryType.LogAnalytics && !!config.featureToggles.azureMonitorLogsBuilderEditor && (\n          <RadioButtonGroup\n            size=\"sm\"\n            options={EDITOR_MODES}\n            value={query.azureLogAnalytics?.mode || LogsEditorMode.Builder}\n            onChange={onLogsModeChange}\n            data-testid=\"azure-query-header-logs-radio-button\"\n          />\n        )}\n        {query.azureLogAnalytics?.mode === LogsEditorMode.Builder &&\n          !!config.featureToggles.azureMonitorLogsBuilderEditor &&\n          app !== CoreApp.Explore && (\n            <Button\n              variant=\"primary\"\n              icon={isLoading ? 'spinner' : 'play'}\n              size=\"sm\"\n              onClick={onRunQuery}\n              data-testid={selectors.components.queryEditor.logsQueryEditor.runQuery.button}\n            >\n              Run query\n            </Button>\n          )}\n      </EditorHeader>\n    </span>\n  );\n};\n","import { setKustoQuery } from '../components/LogsQueryEditor/setQueryValue';\nimport {\n  appendDimensionFilter,\n  setTimeGrain as setMetricsTimeGrain,\n} from '../components/MetricsQueryEditor/setQueryValue';\nimport { parseResourceDetails } from '../components/ResourcePicker/utils';\nimport TimegrainConverter from '../time_grain_converter';\nimport { AzureMetricDimension, AzureMonitorQuery, AzureQueryType } from '../types';\n\nconst OLD_DEFAULT_DROPDOWN_VALUE = 'select';\n\nexport default function migrateQuery(query: AzureMonitorQuery): AzureMonitorQuery {\n  let workingQuery = query;\n\n  if (!workingQuery.queryType) {\n    workingQuery = {\n      ...workingQuery,\n      queryType: AzureQueryType.AzureMonitor,\n    };\n  }\n\n  workingQuery = migrateLogAnalyticsToFromTimes(workingQuery);\n  if (workingQuery.queryType === AzureQueryType.AzureMonitor && workingQuery.azureMonitor) {\n    workingQuery = migrateTimeGrains(workingQuery);\n    workingQuery = migrateToDefaultNamespace(workingQuery);\n    workingQuery = migrateDimensionToDimensionFilter(workingQuery);\n    workingQuery = migrateDimensionFilterToArray(workingQuery);\n    workingQuery = migrateResourceUriToResourceObj(workingQuery);\n  }\n\n  if (workingQuery.azureMonitor?.resourceGroup || workingQuery.azureMonitor?.resourceName) {\n    workingQuery = migrateResourceGroupAndName(workingQuery);\n  }\n\n  if (workingQuery.azureLogAnalytics?.resource) {\n    workingQuery = {\n      ...workingQuery,\n      azureLogAnalytics: {\n        ...workingQuery.azureLogAnalytics,\n        resources: [workingQuery.azureLogAnalytics.resource],\n      },\n    };\n\n    delete workingQuery.azureLogAnalytics?.resource;\n  }\n\n  if (workingQuery.azureLogAnalytics && workingQuery.azureLogAnalytics.dashboardTime === undefined) {\n    if (workingQuery.azureLogAnalytics.intersectTime) {\n      workingQuery = {\n        ...workingQuery,\n        azureLogAnalytics: {\n          ...workingQuery.azureLogAnalytics,\n          dashboardTime: true,\n        },\n      };\n    } else {\n      workingQuery = {\n        ...workingQuery,\n        azureLogAnalytics: {\n          ...workingQuery.azureLogAnalytics,\n          dashboardTime: false,\n        },\n      };\n    }\n  }\n\n  return workingQuery;\n}\n\nfunction migrateTimeGrains(query: AzureMonitorQuery): AzureMonitorQuery {\n  let workingQuery = query;\n\n  if (workingQuery.azureMonitor?.timeGrainUnit && workingQuery.azureMonitor.timeGrain !== 'auto') {\n    const newTimeGrain = TimegrainConverter.createISO8601Duration(\n      workingQuery.azureMonitor.timeGrain ?? 'auto',\n      workingQuery.azureMonitor.timeGrainUnit\n    );\n    workingQuery = setMetricsTimeGrain(workingQuery, newTimeGrain);\n\n    delete workingQuery.azureMonitor?.timeGrainUnit;\n  }\n\n  return workingQuery;\n}\n\nfunction migrateLogAnalyticsToFromTimes(query: AzureMonitorQuery): AzureMonitorQuery {\n  let workingQuery = query;\n\n  if (workingQuery.azureLogAnalytics?.query?.match(/\\$__from\\s/gi)) {\n    workingQuery = setKustoQuery(\n      workingQuery,\n      workingQuery.azureLogAnalytics.query.replace(/\\$__from\\s/gi, '$__timeFrom() ')\n    );\n  }\n\n  if (workingQuery.azureLogAnalytics?.query?.match(/\\$__to\\s/gi)) {\n    workingQuery = setKustoQuery(\n      workingQuery,\n      workingQuery.azureLogAnalytics.query.replace(/\\$__to\\s/gi, '$__timeTo() ')\n    );\n  }\n\n  return workingQuery;\n}\n\nfunction migrateToDefaultNamespace(query: AzureMonitorQuery): AzureMonitorQuery {\n  const haveMetricNamespace =\n    query.azureMonitor?.metricNamespace && query.azureMonitor.metricNamespace !== OLD_DEFAULT_DROPDOWN_VALUE;\n\n  if (!haveMetricNamespace && query.azureMonitor?.metricDefinition) {\n    return {\n      ...query,\n      azureMonitor: {\n        ...query.azureMonitor,\n        metricNamespace: query.azureMonitor.metricDefinition,\n        metricDefinition: undefined,\n      },\n    };\n  }\n\n  return query;\n}\n\nfunction migrateDimensionToDimensionFilter(query: AzureMonitorQuery): AzureMonitorQuery {\n  let workingQuery = query;\n\n  const oldDimension = workingQuery.azureMonitor?.dimension;\n  if (oldDimension && oldDimension !== 'None') {\n    workingQuery = appendDimensionFilter(workingQuery, oldDimension, 'eq', [\n      workingQuery.azureMonitor?.dimensionFilter || '',\n    ]);\n  }\n\n  delete workingQuery.azureMonitor?.dimension;\n  delete workingQuery.azureMonitor?.dimensionFilter;\n\n  return workingQuery;\n}\n\nfunction migrateDimensionFilterToArray(query: AzureMonitorQuery): AzureMonitorQuery {\n  const azureMonitorQuery = query.azureMonitor;\n\n  if (!azureMonitorQuery) {\n    return query;\n  }\n\n  const newFilters: AzureMetricDimension[] = [];\n  const dimensionFilters = azureMonitorQuery.dimensionFilters;\n  if (dimensionFilters && dimensionFilters.length > 0) {\n    dimensionFilters.forEach((filter) => {\n      const staticProps = { dimension: filter.dimension, operator: filter.operator };\n      if (!filter.filters && filter.filter) {\n        newFilters.push({ ...staticProps, filters: [filter.filter] });\n      } else {\n        let hasFilter = false;\n        if (filter.filters && filter.filter) {\n          for (const oldFilter of filter.filters) {\n            if (filter.filter === oldFilter) {\n              hasFilter = true;\n              break;\n            }\n          }\n          if (!hasFilter && filter.filter !== '*') {\n            filter.filters.push(filter.filter);\n          }\n          newFilters.push({ ...staticProps, filters: filter.filters });\n        }\n      }\n    });\n    if (newFilters.length > 0) {\n      return { ...query, azureMonitor: { ...azureMonitorQuery, dimensionFilters: newFilters } };\n    }\n  }\n  return query;\n}\n\nfunction migrateResourceUriToResourceObj(query: AzureMonitorQuery): AzureMonitorQuery {\n  if (query.azureMonitor?.resourceUri && !query.azureMonitor.resourceUri.startsWith('$')) {\n    const details = parseResourceDetails(query.azureMonitor.resourceUri);\n    const isWellFormedUri = details?.subscription && details?.resourceGroup && details?.resourceName;\n    return {\n      ...query,\n      subscription: details?.subscription,\n      azureMonitor: {\n        ...query.azureMonitor,\n        resources: [{ resourceGroup: details?.resourceGroup, resourceName: details?.resourceName }],\n        metricNamespace: details?.metricNamespace,\n        resourceUri: isWellFormedUri ? undefined : query.azureMonitor.resourceUri,\n      },\n    };\n  }\n\n  return query;\n}\n\nfunction migrateResourceGroupAndName(query: AzureMonitorQuery): AzureMonitorQuery {\n  let workingQuery = query;\n\n  if (workingQuery.azureMonitor?.resourceGroup && workingQuery.azureMonitor?.resourceName) {\n    workingQuery = {\n      ...workingQuery,\n      azureMonitor: {\n        ...workingQuery.azureMonitor,\n        resources: [\n          {\n            resourceGroup: workingQuery.azureMonitor.resourceGroup,\n            resourceName: workingQuery.azureMonitor.resourceName,\n          },\n        ],\n      },\n    };\n\n    delete workingQuery.azureMonitor?.resourceGroup;\n    delete workingQuery.azureMonitor?.resourceName;\n  }\n\n  return workingQuery;\n}\n","import deepEqual from 'fast-deep-equal';\nimport { defaults } from 'lodash';\nimport { useEffect, useMemo } from 'react';\n\nimport { AzureMonitorQuery, AzureQueryType, ResultFormat } from '../../types';\nimport migrateQuery from '../../utils/migrateQuery';\n\nconst DEFAULT_QUERY = {\n  queryType: AzureQueryType.AzureMonitor,\n};\n\nconst transformExemplarQuery = (query: AzureMonitorQuery, defaultSubscriptionId: string) => {\n  if (query.queryType === AzureQueryType.TraceExemplar && query.query !== '' && !query.azureTraces) {\n    query.azureTraces = {\n      operationId: query.query,\n      resultFormat: ResultFormat.Trace,\n      resources: [`/subscriptions/${defaultSubscriptionId}`],\n    };\n  }\n\n  return query;\n};\n\nconst prepareQuery = (query: AzureMonitorQuery, defaultSubscriptionId: string) => {\n  // Note: _.defaults does not apply default values deeply.\n  const withDefaults = defaults({}, query, DEFAULT_QUERY);\n  const transformedQuery = transformExemplarQuery(withDefaults, defaultSubscriptionId);\n  const migratedQuery = migrateQuery(transformedQuery);\n\n  // If we didn't make any changes to the object, then return the original object to keep the\n  // identity the same, and not trigger any other useEffects or anything.\n  return deepEqual(migratedQuery, query) ? query : migratedQuery;\n};\n\n/**\n * Returns queries with some defaults + migrations, and calls onChange function to notify if it changes\n */\nconst usePreparedQuery = (\n  query: AzureMonitorQuery,\n  onChangeQuery: (newQuery: AzureMonitorQuery) => void,\n  defaultSubscriptionId: string\n) => {\n  const preparedQuery = useMemo(() => prepareQuery(query, defaultSubscriptionId), [query, defaultSubscriptionId]);\n\n  useEffect(() => {\n    if (preparedQuery !== query) {\n      onChangeQuery(preparedQuery);\n    }\n  }, [preparedQuery, query, onChangeQuery]);\n\n  return preparedQuery;\n};\n\nexport default usePreparedQuery;\n","import { debounce } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { CoreApp, QueryEditorProps } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, CodeEditor, Space } from '@grafana/ui';\n\nimport AzureMonitorDatasource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport {\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorErrorish,\n  AzureMonitorOption,\n  AzureMonitorQuery,\n  AzureQueryType,\n} from '../../types';\nimport useLastError from '../../utils/useLastError';\nimport ArgQueryEditor from '../ArgQueryEditor';\nimport LogsQueryEditor from '../LogsQueryEditor';\nimport { AzureCheatSheetModal } from '../LogsQueryEditor/AzureCheatSheetModal';\nimport NewMetricsQueryEditor from '../MetricsQueryEditor/MetricsQueryEditor';\nimport TracesQueryEditor from '../TracesQueryEditor';\n\nimport { QueryHeader } from './QueryHeader';\nimport usePreparedQuery from './usePreparedQuery';\n\nexport type AzureMonitorQueryEditorProps = QueryEditorProps<\n  AzureMonitorDatasource,\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData\n>;\n\nconst QueryEditor = ({\n  app,\n  query: baseQuery,\n  datasource,\n  onChange,\n  onRunQuery: baseOnRunQuery,\n  data,\n  range,\n}: AzureMonitorQueryEditorProps) => {\n  const [errorMessage, setError] = useLastError();\n  const onRunQuery = useMemo(() => debounce(baseOnRunQuery, 500), [baseOnRunQuery]);\n  const [azureLogsCheatSheetModalOpen, setAzureLogsCheatSheetModalOpen] = useState(false);\n  const [defaultSubscriptionId, setDefaultSubscriptionId] = useState('');\n\n  const onQueryChange = useCallback(\n    (newQuery: AzureMonitorQuery) => {\n      onChange(newQuery);\n      onRunQuery();\n    },\n    [onChange, onRunQuery]\n  );\n\n  useEffectOnce(() => {\n    if (baseQuery.queryType === AzureQueryType.TraceExemplar) {\n      datasource.azureLogAnalyticsDatasource.getDefaultOrFirstSubscription().then((subscription) => {\n        setDefaultSubscriptionId(subscription || '');\n      });\n    }\n  });\n\n  const query = usePreparedQuery(baseQuery, onQueryChange, defaultSubscriptionId);\n\n  const subscriptionId = query.subscription || datasource.azureMonitorDatasource.defaultSubscriptionId;\n  const basicLogsEnabled =\n    datasource.azureMonitorDatasource.basicLogsEnabled &&\n    app !== CoreApp.UnifiedAlerting &&\n    app !== CoreApp.CloudAlerting;\n  const variableOptionGroup = {\n    label: 'Template Variables',\n    options: datasource.getVariables().map((v) => ({ label: v, value: v })),\n  };\n\n  // Allow authproxy as it may not be clear if an authproxy user is authenticated by Azure\n  const isAzureAuthenticated =\n    config.bootData.user.authenticatedBy === 'oauth_azuread' || config.bootData.user.authenticatedBy === 'authproxy';\n  if (datasource.currentUserAuth) {\n    if (\n      app === CoreApp.UnifiedAlerting &&\n      (!config.azure.userIdentityFallbackCredentialsEnabled || !datasource.currentUserAuthFallbackAvailable)\n    ) {\n      return <UserAuthFallbackAlert />;\n    }\n    if (!isAzureAuthenticated) {\n      return <UserAuthAlert />;\n    }\n  }\n\n  return (\n    <div data-testid=\"azure-monitor-query-editor\">\n      <AzureCheatSheetModal\n        datasource={datasource.azureLogAnalyticsDatasource}\n        isOpen={azureLogsCheatSheetModalOpen}\n        onClose={() => setAzureLogsCheatSheetModalOpen(false)}\n        onChange={(a) => onChange({ ...a, queryType: AzureQueryType.LogAnalytics })}\n      />\n      <QueryHeader\n        query={query}\n        onQueryChange={onQueryChange}\n        setAzureLogsCheatSheetModalOpen={setAzureLogsCheatSheetModalOpen}\n        onRunQuery={baseOnRunQuery}\n        data={data}\n        app={app}\n      />\n      <EditorForQueryType\n        data={data}\n        subscriptionId={subscriptionId}\n        basicLogsEnabled={basicLogsEnabled ?? false}\n        query={query}\n        datasource={datasource}\n        onChange={onQueryChange}\n        onQueryChange={onChange}\n        variableOptionGroup={variableOptionGroup}\n        setError={setError}\n        range={range}\n      />\n      {errorMessage && (\n        <>\n          <Space v={2} />\n          <Alert severity=\"error\" title=\"An error occurred while requesting metadata from Azure Monitor\">\n            {errorMessage instanceof Error ? errorMessage.message : errorMessage}\n          </Alert>\n        </>\n      )}\n    </div>\n  );\n};\n\ninterface EditorForQueryTypeProps extends Omit<AzureMonitorQueryEditorProps, 'onRunQuery'> {\n  subscriptionId?: string;\n  basicLogsEnabled: boolean;\n  variableOptionGroup: { label: string; options: AzureMonitorOption[] };\n  setError: (source: string, error: AzureMonitorErrorish | undefined) => void;\n  // Used to update the query without running it\n  onQueryChange: (newQuery: AzureMonitorQuery) => void;\n}\n\nconst EditorForQueryType = ({\n  data,\n  subscriptionId,\n  basicLogsEnabled,\n  query,\n  datasource,\n  variableOptionGroup,\n  onChange,\n  setError,\n  onQueryChange,\n  range,\n}: EditorForQueryTypeProps) => {\n  switch (query.queryType) {\n    case AzureQueryType.AzureMonitor:\n      return (\n        <NewMetricsQueryEditor\n          data={data}\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          variableOptionGroup={variableOptionGroup}\n          setError={setError}\n        />\n      );\n\n    case AzureQueryType.LogAnalytics:\n      return (\n        <LogsQueryEditor\n          data={data}\n          subscriptionId={subscriptionId}\n          basicLogsEnabled={basicLogsEnabled}\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          variableOptionGroup={variableOptionGroup}\n          setError={setError}\n          timeRange={range}\n          onQueryChange={onQueryChange}\n        />\n      );\n\n    case AzureQueryType.AzureResourceGraph:\n      return (\n        <ArgQueryEditor\n          subscriptionId={subscriptionId}\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          variableOptionGroup={variableOptionGroup}\n          setError={setError}\n        />\n      );\n\n    case AzureQueryType.AzureTraces:\n    case AzureQueryType.TraceExemplar:\n      return (\n        <TracesQueryEditor\n          subscriptionId={subscriptionId}\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          variableOptionGroup={variableOptionGroup}\n          setError={setError}\n          range={range}\n        />\n      );\n\n    default:\n      const type = query.queryType as unknown;\n      return (\n        <Alert title=\"Unknown query type\">\n          {(type === 'Application Insights' || type === 'Insights Analytics') && (\n            <>\n              {type} was deprecated in Grafana 9. See the{' '}\n              <a\n                href=\"https://grafana.com/docs/grafana/latest/datasources/azure-monitor/#application-insights-and-insights-analytics-removed\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                deprecation notice\n              </a>{' '}\n              to get more information about how to migrate your queries. This is the current query definition:\n              <CodeEditor height=\"200px\" readOnly language=\"json\" value={JSON.stringify(query, null, 4)} />\n            </>\n          )}\n        </Alert>\n      );\n  }\n};\n\nconst UserAuthAlert = () => {\n  return (\n    <Alert title=\"Unsupported authentication provider\" data-testid={selectors.components.queryEditor.userAuthAlert}>\n      <>\n        Usage of this data source requires you to be authenticated via Azure Entra (formerly Azure Active Directory).\n        Please review the{' '}\n        <a\n          href=\"https://grafana.com/docs/grafana/latest/datasources/azure-monitor/#configure-current-user-authentication\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          documentation\n        </a>{' '}\n        for more information.\n      </>\n    </Alert>\n  );\n};\n\nconst UserAuthFallbackAlert = () => {\n  return (\n    <Alert\n      title=\"No fallback credentials available\"\n      data-testid={selectors.components.queryEditor.userAuthFallbackAlert}\n    >\n      <>\n        Data source backend features (such as alerting) require service credentials to function. This data source is\n        configured without service credential fallback, or the fallback functionality is disabled. Please review the{' '}\n        <a\n          href=\"https://grafana.com/docs/grafana/latest/datasources/azure-monitor/#configure-current-user-authentication\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          documentation\n        </a>{' '}\n        for more information.\n      </>\n    </Alert>\n  );\n};\n\nexport default QueryEditor;\n","import { TypedVariableModel } from '@grafana/data';\n\nimport { EngineSchema } from '../types';\nimport { AzureLogAnalyticsMetadata } from '../types/logAnalyticsMetadata';\n\n// matches (name):(type) = (defaultValue)\n// e.g. fromRangeStart:datetime = datetime(null)\n//  - name: fromRangeStart\n//  - type: datetime\n//  - defaultValue: datetime(null)\nconst METADATA_FUNCTION_PARAMS = /([\\w\\W]+):([\\w]+)(?:\\s?=\\s?([\\w\\W]+))?/;\n\nfunction transformMetadataFunction(sourceSchema: AzureLogAnalyticsMetadata) {\n  if (!sourceSchema.functions) {\n    return [];\n  }\n\n  return sourceSchema.functions.map((fn) => {\n    const params =\n      fn.parameters &&\n      fn.parameters\n        .split(', ')\n        .map((arg) => {\n          const match = arg.match(METADATA_FUNCTION_PARAMS);\n          if (!match) {\n            return;\n          }\n\n          const [, name, type, defaultValue] = match;\n\n          return {\n            name,\n            type,\n            defaultValue,\n            cslDefaultValue: defaultValue,\n          };\n        })\n        .filter(<T>(v: T): v is Exclude<T, undefined> => !!v);\n\n    return {\n      name: fn.name,\n      body: fn.body,\n      inputParameters: params || [],\n    };\n  });\n}\n\nexport function transformMetadataToKustoSchema(\n  sourceSchema: AzureLogAnalyticsMetadata,\n  nameOrIdOrSomething: string,\n  templateVariables: TypedVariableModel[]\n): EngineSchema {\n  const database = {\n    name: nameOrIdOrSomething,\n    tables: sourceSchema.tables,\n    functions: transformMetadataFunction(sourceSchema),\n    majorVersion: 0,\n    minorVersion: 0,\n    entityGroups: [],\n  };\n\n  // Adding macros as known functions\n  database.functions.push(\n    {\n      name: '$__timeFilter',\n      body: '{ true }',\n      inputParameters: [\n        {\n          name: 'timeColumn',\n          type: 'System.String',\n          defaultValue: '\"\"',\n          cslDefaultValue: '\"\"',\n        },\n      ],\n    },\n    {\n      name: '$__timeFrom',\n      body: '{ datetime(2018-06-05T18:09:58.907Z) }',\n      inputParameters: [],\n    },\n    {\n      name: '$__timeTo',\n      body: '{ datetime(2018-06-05T20:09:58.907Z) }',\n      inputParameters: [],\n    },\n    {\n      name: '$__escapeMulti',\n      body: `{ @'\\\\grafana-vm\\Network(eth0)\\Total', @'\\\\hello!'}`,\n      inputParameters: [\n        {\n          name: '$myVar',\n          type: 'System.String',\n          defaultValue: '$myVar',\n          cslDefaultValue: '$myVar',\n        },\n      ],\n    },\n    {\n      name: '$__contains',\n      body: `{ colName in ('value1','value2') }`,\n      inputParameters: [\n        {\n          name: 'colName',\n          type: 'System.String',\n          defaultValue: 'colName',\n          cslDefaultValue: 'colName',\n        },\n        {\n          name: '$myVar',\n          type: 'System.String',\n          defaultValue: '$myVar',\n          cslDefaultValue: '$myVar',\n        },\n      ],\n    }\n  );\n\n  // Adding macros as global parameters\n  const globalScalarParameters = templateVariables.map((v) => {\n    return {\n      name: `$${v.name}`,\n      type: 'dynamic',\n    };\n  });\n\n  return {\n    clusterType: 'Engine',\n    cluster: {\n      connectionString: nameOrIdOrSomething,\n      databases: [database],\n    },\n    database: database,\n    globalScalarParameters,\n  };\n}\n","import { map } from 'lodash';\n\nimport { AzureCredentials } from '@grafana/azure-sdk';\nimport { ScopedVars } from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport ResponseParser from '../azure_monitor/response_parser';\nimport { getCredentials } from '../credentials';\nimport {\n  AzureAPIResponse,\n  AzureLogsVariable,\n  AzureMonitorDataSourceInstanceSettings,\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorQuery,\n  AzureQueryType,\n  DatasourceValidationResult,\n  Subscription,\n  Workspace,\n} from '../types';\nimport { interpolateVariable, routeNames } from '../utils/common';\n\nimport { transformMetadataToKustoSchema } from './utils';\n\nexport default class AzureLogAnalyticsDatasource extends DataSourceWithBackend<\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData\n> {\n  readonly credentials: AzureCredentials;\n  resourcePath: string;\n  declare applicationId: string;\n\n  defaultSubscriptionId?: string;\n\n  azureMonitorPath: string;\n  firstWorkspace?: string;\n\n  constructor(\n    private instanceSettings: AzureMonitorDataSourceInstanceSettings,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.credentials = getCredentials(instanceSettings);\n\n    this.resourcePath = `${routeNames.logAnalytics}`;\n    this.azureMonitorPath = `${routeNames.azureMonitor}/subscriptions`;\n\n    this.defaultSubscriptionId = this.instanceSettings.jsonData.subscriptionId || '';\n  }\n\n  isConfigured(): boolean {\n    // If validation didn't return any error then the data source is properly configured\n    return !this.validateDatasource();\n  }\n\n  filterQuery(item: AzureMonitorQuery): boolean {\n    return (\n      item.hide !== true &&\n      ((!!item.azureLogAnalytics?.query &&\n        (!!item.azureLogAnalytics.resources?.length || !!item.azureLogAnalytics.workspace)) ||\n        !!item.azureTraces?.resources?.length)\n    );\n  }\n\n  async getSubscriptions(): Promise<Array<{ text: string; value: string }>> {\n    if (!this.isConfigured()) {\n      return [];\n    }\n\n    const path = `${this.azureMonitorPath}?api-version=2019-03-01`;\n    return await this.getResource<AzureAPIResponse<Subscription>>(path).then((result) => {\n      return ResponseParser.parseSubscriptions(result);\n    });\n  }\n\n  async getWorkspaces(subscription: string): Promise<AzureLogsVariable[]> {\n    const response = await this.getWorkspaceList(subscription);\n\n    return (\n      map(response.value, (val: Workspace) => {\n        return {\n          text: val.name,\n          value: val.id,\n        };\n      }) || []\n    );\n  }\n\n  private getWorkspaceList(subscription: string): Promise<AzureAPIResponse<Workspace>> {\n    const subscriptionId = this.templateSrv.replace(subscription || this.defaultSubscriptionId);\n\n    const workspaceListUrl =\n      this.azureMonitorPath +\n      `/${subscriptionId}/providers/Microsoft.OperationalInsights/workspaces?api-version=2017-04-26-preview`;\n    return this.getResource<AzureAPIResponse<Workspace>>(workspaceListUrl);\n  }\n\n  async getMetadata(resourceUri: string) {\n    const path = `${this.resourcePath}/v1${resourceUri}/metadata`;\n\n    const resp = await this.getResource(path);\n    return resp;\n  }\n\n  async getKustoSchema(resourceUri: string) {\n    const interpolatedUri = this.templateSrv.replace(resourceUri, {}, interpolateVariable);\n    const metadata = await this.getMetadata(interpolatedUri);\n    return transformMetadataToKustoSchema(metadata, interpolatedUri, this.templateSrv.getVariables());\n  }\n\n  applyTemplateVariables(target: AzureMonitorQuery, scopedVars: ScopedVars): AzureMonitorQuery {\n    let item;\n    if (target.queryType === AzureQueryType.LogAnalytics && target.azureLogAnalytics) {\n      item = target.azureLogAnalytics;\n      const resources = this.expandResourcesForMultipleVariables(item.resources, scopedVars);\n      let workspace = this.templateSrv.replace(item.workspace, scopedVars);\n\n      if (!workspace && !resources && this.firstWorkspace) {\n        workspace = this.firstWorkspace;\n      }\n\n      const query = this.templateSrv.replace(item.query, scopedVars, interpolateVariable);\n\n      return {\n        ...target,\n        queryType: target.queryType || AzureQueryType.LogAnalytics,\n\n        azureLogAnalytics: {\n          builderQuery: item.builderQuery,\n          resultFormat: item.resultFormat,\n          query,\n          resources,\n          // Workspace was removed in Grafana 8, but remains for backwards compat\n          workspace,\n          dashboardTime: item.dashboardTime,\n          basicLogsQuery: item.basicLogsQuery,\n          timeColumn: this.templateSrv.replace(item.timeColumn, scopedVars),\n        },\n      };\n    }\n\n    if (target.queryType === AzureQueryType.AzureTraces && target.azureTraces) {\n      item = target.azureTraces;\n      const resources = this.expandResourcesForMultipleVariables(item.resources, scopedVars);\n      const query = this.templateSrv.replace(item.query, scopedVars, interpolateVariable);\n      const traceTypes = item.traceTypes?.map((t) => this.templateSrv.replace(t, scopedVars));\n      const filters = (item.filters ?? [])\n        .filter((f) => !!f.property)\n        .map((f) => {\n          const filtersReplaced = f.filters?.map((filter) => this.templateSrv.replace(filter ?? '', scopedVars));\n          return {\n            property: this.templateSrv.replace(f.property, scopedVars),\n            operation: f.operation || 'eq',\n            filters: filtersReplaced || [],\n          };\n        });\n\n      return {\n        ...target,\n        queryType: target.queryType || AzureQueryType.AzureTraces,\n\n        azureTraces: {\n          resultFormat: item.resultFormat,\n          query,\n          resources,\n          operationId: this.templateSrv.replace(target.azureTraces?.operationId, scopedVars),\n          filters,\n          traceTypes,\n        },\n      };\n    }\n\n    return target;\n  }\n\n  private expandResourcesForMultipleVariables(\n    resources: string[] | undefined,\n    scopedVars: ScopedVars\n  ): string[] | undefined {\n    if (!resources) {\n      return undefined;\n    }\n    const expandedResources: string[] = [];\n    resources.forEach((r: string) => {\n      const tempVars = this.templateSrv.replace(r, scopedVars, 'raw');\n      const values = tempVars.split(',');\n      values.forEach((value) => {\n        expandedResources.push(value);\n      });\n    });\n    return expandedResources;\n  }\n\n  /*\n    In 7.5.x it used to be possible to set a default workspace id in the config on the auth page.\n    This has been deprecated, however is still used by a few legacy template queries.\n  */\n  getDeprecatedDefaultWorkSpace() {\n    return this.instanceSettings.jsonData.logAnalyticsDefaultWorkspace;\n  }\n\n  async getDefaultOrFirstSubscription(): Promise<string | undefined> {\n    if (this.defaultSubscriptionId) {\n      return this.defaultSubscriptionId;\n    }\n    const subscriptions = await this.getSubscriptions();\n    return subscriptions[0]?.value;\n  }\n\n  async getFirstWorkspace(): Promise<string | undefined> {\n    if (this.firstWorkspace) {\n      return this.firstWorkspace;\n    }\n\n    const subscriptionId = await this.getDefaultOrFirstSubscription();\n    if (!subscriptionId) {\n      return undefined;\n    }\n\n    const workspaces = await this.getWorkspaces(subscriptionId);\n    const workspace = workspaces[0]?.value;\n\n    if (workspace) {\n      this.firstWorkspace = workspace;\n    }\n\n    return workspace;\n  }\n\n  private validateDatasource(): DatasourceValidationResult | undefined {\n    if (this.credentials.authType === 'clientsecret') {\n      if (!this.isValidConfigField(this.credentials.tenantId)) {\n        return {\n          status: 'error',\n          message: 'The Tenant Id field is required.',\n        };\n      }\n\n      if (!this.isValidConfigField(this.credentials.clientId)) {\n        return {\n          status: 'error',\n          message: 'The Client Id field is required.',\n        };\n      }\n    }\n\n    return undefined;\n  }\n\n  private isValidConfigField(field: string | undefined): boolean {\n    return typeof field === 'string' && field.length > 0;\n  }\n\n  async getAzureLogAnalyticsCheatsheetQueries() {\n    return await this.getResource(`${this.resourcePath}/v1/metadata`);\n  }\n\n  async getBasicLogsQueryUsage(query: AzureMonitorQuery, table: string): Promise<number> {\n    const templateSrv = getTemplateSrv();\n\n    const data = {\n      table: table,\n      resource: templateSrv.replace(query.azureLogAnalytics?.resources?.[0]),\n      queryType: query.queryType,\n      from: templateSrv.replace('$__from'),\n      to: templateSrv.replace('$__to'),\n    };\n    return await this.postResource(`${this.resourcePath}/usage/basiclogs`, data);\n  }\n}\n","import { find } from 'lodash';\n\nimport { AzureCredentials } from '@grafana/azure-sdk';\nimport { ScopedVars } from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { getCredentials } from '../credentials';\nimport TimegrainConverter from '../time_grain_converter';\nimport {\n  AzureAPIResponse,\n  AzureMetricQuery,\n  AzureMonitorDataSourceInstanceSettings,\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorLocations,\n  AzureMonitorMetricsMetadataResponse,\n  AzureMonitorProvidersResponse,\n  AzureMonitorQuery,\n  AzureQueryType,\n  DatasourceValidationResult,\n  GetLogAnalyticsTableResponse,\n  GetMetricMetadataQuery,\n  GetMetricNamespacesQuery,\n  GetMetricNamesQuery,\n  instanceOfLogAnalyticsTableError,\n  Location,\n  Metric,\n  MetricNamespace,\n  Subscription,\n  TablePlan,\n} from '../types';\nimport { replaceTemplateVariables, routeNames } from '../utils/common';\nimport migrateQuery from '../utils/migrateQuery';\n\nimport ResponseParser from './response_parser';\nimport UrlBuilder from './url_builder';\n\nconst defaultDropdownValue = 'select';\n\nfunction hasValue(item?: string) {\n  return !!(item && item !== defaultDropdownValue);\n}\n\nexport default class AzureMonitorDatasource extends DataSourceWithBackend<\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData\n> {\n  private readonly credentials: AzureCredentials;\n  apiVersion = '2018-01-01';\n  apiPreviewVersion = '2017-12-01-preview';\n  listByResourceGroupApiVersion = '2021-04-01';\n  providerApiVersion = '2021-04-01';\n  locationsApiVersion = '2020-01-01';\n  defaultSubscriptionId?: string;\n  basicLogsEnabled?: boolean;\n  resourcePath: string;\n  declare resourceGroup: string;\n  declare resourceName: string;\n\n  constructor(\n    instanceSettings: AzureMonitorDataSourceInstanceSettings,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.credentials = getCredentials(instanceSettings);\n\n    this.defaultSubscriptionId = instanceSettings.jsonData.subscriptionId;\n    this.basicLogsEnabled = instanceSettings.jsonData.basicLogsEnabled;\n\n    this.resourcePath = routeNames.azureMonitor;\n  }\n\n  isConfigured(): boolean {\n    // If validation didn't return any error then the data source is properly configured\n    return !this.validateDatasource();\n  }\n\n  filterQuery(item: AzureMonitorQuery): boolean {\n    const hasResource =\n      item?.azureMonitor?.resources &&\n      item.azureMonitor.resources.length > 0 &&\n      item.azureMonitor.resources.every((r) => hasValue(r.resourceGroup) && hasValue(r.resourceName)) &&\n      hasValue(item?.azureMonitor?.metricDefinition || item?.azureMonitor?.metricNamespace);\n    const hasResourceUri = hasValue(item.azureMonitor?.resourceUri);\n\n    return !!(\n      item.hide !== true &&\n      (hasResource || hasResourceUri) &&\n      hasValue(item?.azureMonitor?.metricName) &&\n      hasValue(item?.azureMonitor?.aggregation)\n    );\n  }\n\n  applyTemplateVariables(target: AzureMonitorQuery, scopedVars: ScopedVars): AzureMonitorQuery {\n    const preMigrationQuery = target.azureMonitor;\n\n    if (!preMigrationQuery) {\n      throw new Error('Query is not a valid Azure Monitor Metrics query');\n    }\n\n    // These properties need to be replaced pre-migration to ensure values are correctly interpolated\n    if (preMigrationQuery.resourceUri) {\n      preMigrationQuery.resourceUri = this.templateSrv.replace(preMigrationQuery.resourceUri, scopedVars);\n    }\n    if (preMigrationQuery.metricDefinition) {\n      preMigrationQuery.metricDefinition = this.templateSrv.replace(preMigrationQuery.metricDefinition, scopedVars);\n    }\n\n    // fix for timeGrainUnit which is a deprecated/removed field name\n    if (preMigrationQuery.timeGrain && preMigrationQuery.timeGrainUnit && preMigrationQuery.timeGrain !== 'auto') {\n      preMigrationQuery.timeGrain = TimegrainConverter.createISO8601Duration(\n        preMigrationQuery.timeGrain,\n        preMigrationQuery.timeGrainUnit\n      );\n    }\n\n    const migratedTarget = migrateQuery(target);\n    const migratedQuery = migratedTarget.azureMonitor;\n    // This should never be triggered because the above error would've been thrown\n    if (!migratedQuery) {\n      throw new Error('Query is not a valid Azure Monitor Metrics query');\n    }\n\n    const subscriptionId = this.templateSrv.replace(\n      migratedTarget.subscription || this.defaultSubscriptionId,\n      scopedVars\n    );\n    const resources = migratedQuery.resources\n      ?.map((r) => replaceTemplateVariables(this.templateSrv, r, scopedVars))\n      .flat();\n    const metricNamespace = this.templateSrv.replace(migratedQuery.metricNamespace, scopedVars);\n    const customNamespace = this.templateSrv.replace(migratedQuery.customNamespace, scopedVars);\n    const timeGrain = this.templateSrv.replace((migratedQuery.timeGrain || '').toString(), scopedVars);\n    const aggregation = this.templateSrv.replace(migratedQuery.aggregation, scopedVars);\n    const top = this.templateSrv.replace(migratedQuery.top || '', scopedVars);\n\n    const dimensionFilters = (migratedQuery.dimensionFilters ?? [])\n      .filter((f) => f.dimension && f.dimension !== 'None')\n      .map((f) => {\n        const filters = f.filters?.map((filter) => this.templateSrv.replace(filter ?? '', scopedVars));\n        return {\n          dimension: this.templateSrv.replace(f.dimension, scopedVars),\n          operator: f.operator || 'eq',\n          filters: filters || [],\n        };\n      });\n\n    const azMonitorQuery: AzureMetricQuery = {\n      ...migratedQuery,\n      resources,\n      metricNamespace,\n      customNamespace,\n      timeGrain,\n      allowedTimeGrainsMs: migratedQuery.allowedTimeGrainsMs,\n      metricName: this.templateSrv.replace(migratedQuery.metricName, scopedVars),\n      region: this.templateSrv.replace(migratedQuery.region, scopedVars),\n      aggregation: aggregation,\n      dimensionFilters,\n      top: top || '10',\n      alias: migratedQuery.alias,\n    };\n\n    return {\n      ...target,\n      subscription: subscriptionId,\n      queryType: AzureQueryType.AzureMonitor,\n      azureMonitor: azMonitorQuery,\n    };\n  }\n\n  async getSubscriptions(): Promise<Array<{ text: string; value: string }>> {\n    if (!this.isConfigured()) {\n      return [];\n    }\n\n    return this.getResource<AzureAPIResponse<Subscription>>(\n      `${this.resourcePath}/subscriptions?api-version=2019-03-01`\n    ).then((result) => {\n      return ResponseParser.parseSubscriptions(result);\n    });\n  }\n\n  // Note globalRegion should be false when querying custom metric namespaces\n  getMetricNamespaces(query: GetMetricNamespacesQuery, globalRegion: boolean, region?: string, custom?: boolean) {\n    const url = UrlBuilder.buildAzureMonitorGetMetricNamespacesUrl(\n      this.resourcePath,\n      this.apiPreviewVersion,\n      // Only use the first query, as the metric namespaces should be the same for all queries\n      this.replaceSingleTemplateVariables(query),\n      globalRegion,\n      this.templateSrv,\n      region\n    );\n    return this.getResource(url)\n      .then((result: AzureAPIResponse<MetricNamespace>) => {\n        if (custom) {\n          result.value = result.value.filter((namespace) => namespace.classification === 'Custom');\n        }\n        return ResponseParser.parseResponseValues(\n          result,\n          'properties.metricNamespaceName',\n          'properties.metricNamespaceName'\n        );\n      })\n      .then((result) => {\n        if (url.toLowerCase().includes('microsoft.storage/storageaccounts')) {\n          const storageNamespaces = [\n            'microsoft.storage/storageaccounts',\n            'microsoft.storage/storageaccounts/blobservices',\n            'microsoft.storage/storageaccounts/fileservices',\n            'microsoft.storage/storageaccounts/tableservices',\n            'microsoft.storage/storageaccounts/queueservices',\n          ];\n          for (const namespace of storageNamespaces) {\n            if (!find(result, ['value', namespace.toLowerCase()])) {\n              result.push({ value: namespace, text: namespace });\n            }\n          }\n        }\n        return result;\n      })\n      .catch((reason) => {\n        console.error(`Failed to get metric namespaces: ${reason}`);\n        return [];\n      });\n  }\n\n  getMetricNames(query: GetMetricNamesQuery, multipleResources?: boolean, region?: string) {\n    const apiVersion = multipleResources ? this.apiPreviewVersion : this.apiVersion;\n    const url = UrlBuilder.buildAzureMonitorGetMetricNamesUrl(\n      this.resourcePath,\n      apiVersion,\n      // Only use the first query, as the metric names should be the same for all queries\n      this.replaceSingleTemplateVariables(query),\n      this.templateSrv,\n      multipleResources,\n      region\n    );\n    return this.getResource(url).then((result: AzureAPIResponse<Metric>) => {\n      return ResponseParser.parseResponseValues(result, 'name.localizedValue', 'name.value');\n    });\n  }\n\n  getMetricMetadata(query: GetMetricMetadataQuery, multipleResources?: boolean, region?: string) {\n    const { metricName } = query;\n    const apiVersion = multipleResources ? this.apiPreviewVersion : this.apiVersion;\n    const url = UrlBuilder.buildAzureMonitorGetMetricNamesUrl(\n      this.resourcePath,\n      apiVersion,\n      // Only use the first query, as the metric metadata should be the same for all queries\n      this.replaceSingleTemplateVariables(query),\n      this.templateSrv,\n      multipleResources,\n      region\n    );\n    return this.getResource(url).then((result: AzureMonitorMetricsMetadataResponse) => {\n      return ResponseParser.parseMetadata(result, this.templateSrv.replace(metricName));\n    });\n  }\n\n  private validateDatasource(): DatasourceValidationResult | undefined {\n    if (this.credentials.authType === 'clientsecret') {\n      if (!this.isValidConfigField(this.credentials.tenantId)) {\n        return {\n          status: 'error',\n          message: 'The Tenant Id field is required.',\n        };\n      }\n\n      if (!this.isValidConfigField(this.credentials.clientId)) {\n        return {\n          status: 'error',\n          message: 'The Client Id field is required.',\n        };\n      }\n    }\n\n    return undefined;\n  }\n\n  async getWorkspaceTablePlan(resources: string[], tableName: string): Promise<TablePlan> {\n    let workspaceUri = '';\n\n    if (resources) {\n      workspaceUri = resources[0];\n    }\n\n    if (!workspaceUri) {\n      return TablePlan.Analytics;\n    }\n\n    if (workspaceUri && !workspaceUri.toLowerCase().includes('microsoft.operationalinsights/workspaces')) {\n      // Not a Log Analytics workspace so default to Analytics\n      return TablePlan.Analytics;\n    }\n\n    const url = UrlBuilder.buildAzureMonitorGetLogsTableUrl(\n      this.resourcePath,\n      this.templateSrv.replace(workspaceUri),\n      this.templateSrv.replace(tableName)\n    );\n    const tableResult = await this.getResource<GetLogAnalyticsTableResponse>(url);\n\n    if (!tableResult || instanceOfLogAnalyticsTableError(tableResult)) {\n      return TablePlan.Analytics;\n    }\n\n    return tableResult.properties.plan || TablePlan.Analytics;\n  }\n\n  private isValidConfigField(field?: string): boolean {\n    return typeof field === 'string' && field.length > 0;\n  }\n\n  private replaceSingleTemplateVariables<T extends { [K in keyof T]: string }>(query: T, scopedVars?: ScopedVars) {\n    // This method evaluates template variables supporting multiple values but only returns the first value.\n    // This will work as far as the first combination of variables is valid.\n    // For example if 'rg1' contains 'res1' and 'rg2' contains 'res2' then\n    // { resourceGroup: ['rg1', 'rg2'], resourceName: ['res1', 'res2'] } would return\n    // { resourceGroup: 'rg1', resourceName: 'res1' } which is valid but\n    // { resourceGroup: ['rg1', 'rg2'], resourceName: ['res2'] } would result in\n    // { resourceGroup: 'rg1', resourceName: 'res2' } which is not.\n    return replaceTemplateVariables(this.templateSrv, query, scopedVars)[0];\n  }\n\n  async getProvider(providerName: string) {\n    return await this.getResource<AzureMonitorProvidersResponse>(\n      `${routeNames.azureMonitor}/providers/${providerName}?api-version=${this.providerApiVersion}`\n    );\n  }\n\n  async getLocations(subscriptions: string[]) {\n    const locationMap = new Map<string, AzureMonitorLocations>();\n    for (const subscription of subscriptions) {\n      const subLocations = ResponseParser.parseLocations(\n        await this.getResource<AzureAPIResponse<Location>>(\n          `${routeNames.azureMonitor}/subscriptions/${this.templateSrv.replace(subscription)}/locations?api-version=${\n            this.locationsApiVersion\n          }`\n        )\n      );\n      for (const location of subLocations) {\n        locationMap.set(location.name, location);\n      }\n    }\n\n    return locationMap;\n  }\n}\n","import { startsWith, includes, find, filter } from 'lodash';\n\nimport { ScopedVars } from '@grafana/data';\nimport { getTemplateSrv, DataSourceWithBackend, TemplateSrv } from '@grafana/runtime';\n\nimport { resourceTypes } from '../azureMetadata';\nimport {\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData,\n  AzureQueryType,\n  RawAzureResourceGroupItem,\n  AzureGetResourceNamesQuery,\n  AzureMonitorDataSourceInstanceSettings,\n  RawAzureResourceItem,\n  AzureGraphResponse,\n  AzureResourceGraphOptions,\n  RawAzureSubscriptionItem,\n} from '../types';\nimport { interpolateVariable, replaceTemplateVariables, routeNames } from '../utils/common';\n\nexport default class AzureResourceGraphDatasource extends DataSourceWithBackend<\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData\n> {\n  resourcePath: string;\n  resourceGraphURL = '/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01';\n  constructor(\n    instanceSettings: AzureMonitorDataSourceInstanceSettings,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.resourcePath = routeNames.resourceGraph;\n  }\n\n  filterQuery(item: AzureMonitorQuery): boolean {\n    return !!item.azureResourceGraph?.query && !!item.subscriptions && item.subscriptions.length > 0;\n  }\n\n  applyTemplateVariables(target: AzureMonitorQuery, scopedVars: ScopedVars): AzureMonitorQuery {\n    const ts = getTemplateSrv();\n    const item = target.azureResourceGraph;\n    if (!item) {\n      return target;\n    }\n    const variableNames = ts.getVariables().map((v) => `$${v.name}`);\n    const subscriptionVar = find(target.subscriptions, (sub) => includes(variableNames, sub));\n    const interpolatedSubscriptions = ts\n      .replace(subscriptionVar, scopedVars, (v: string[] | string) => v)\n      .split(',')\n      .filter((v) => v.length > 0);\n    const subscriptions = [\n      ...interpolatedSubscriptions,\n      ...filter(target.subscriptions, (sub) => !includes(variableNames, sub)),\n    ];\n    const query = ts.replace(item.query, scopedVars, interpolateVariable);\n\n    return {\n      ...target,\n      queryType: AzureQueryType.AzureResourceGraph,\n      subscriptions,\n      azureResourceGraph: {\n        resultFormat: 'table',\n        query,\n      },\n    };\n  }\n\n  async pagedResourceGraphRequest<T>(query: string, maxRetries = 1): Promise<T[]> {\n    try {\n      let allFetched = false;\n      let $skipToken = undefined;\n      let response: T[] = [];\n      while (!allFetched) {\n        // The response may include several pages\n        let options: Partial<AzureResourceGraphOptions> = {};\n        if ($skipToken) {\n          options = {\n            $skipToken,\n          };\n        }\n        const queryResponse = await this.postResource<AzureGraphResponse<T[]>>(\n          this.resourcePath + this.resourceGraphURL,\n          {\n            query: query,\n            options: {\n              resultFormat: 'objectArray',\n              ...options,\n            },\n          }\n        );\n        response = response.concat(queryResponse.data);\n        $skipToken = queryResponse.$skipToken;\n        allFetched = !$skipToken;\n      }\n\n      return response;\n    } catch (error) {\n      if (maxRetries > 0) {\n        return this.pagedResourceGraphRequest(query, maxRetries - 1);\n      }\n\n      throw error;\n    }\n  }\n\n  async getSubscriptions() {\n    const query = `\n        resources\n        | join kind=inner (\n                  ResourceContainers\n                    | where type == 'microsoft.resources/subscriptions'\n                    | project subscriptionName=name, subscriptionURI=id, subscriptionId\n                  ) on subscriptionId\n        | summarize count=count() by subscriptionName, subscriptionURI, subscriptionId\n        | order by subscriptionName desc\n      `;\n\n    const subscriptions = await this.pagedResourceGraphRequest<RawAzureSubscriptionItem>(query, 1);\n\n    return subscriptions;\n  }\n\n  async getResourceGroups(subscriptionId: string, metricNamespacesFilter?: string) {\n    // We can use subscription ID for the filtering here as they're unique\n    // The logic of this query is:\n    // Retrieve _all_ resources a user/app registration/identity has access to\n    // Filter by the namespaces that support metrics (if this request is from the resource picker)\n    // Filter to resources contained within the subscription\n    // Conduct a left-outer join on the resourcecontainers table to allow us to get the case-sensitive resource group name\n    // Return the count of resources in a group, the URI, and name of the group in ascending order\n    const query = `resources \n    ${metricNamespacesFilter || ''}\n    | where subscriptionId == '${subscriptionId}'\n    | extend resourceGroupURI = strcat(\"/subscriptions/\", subscriptionId, \"/resourcegroups/\", resourceGroup) \n    | join kind=leftouter (resourcecontainers  \n        | where type =~ 'microsoft.resources/subscriptions/resourcegroups'  \n        | project resourceGroupName=name, resourceGroupURI=tolower(id)) on resourceGroupURI \n    | project resourceGroupName=iff(resourceGroupName != \"\", resourceGroupName, resourceGroup), resourceGroupURI\n    | summarize count=count() by resourceGroupName, resourceGroupURI\n    | order by tolower(resourceGroupName) asc `;\n\n    const resourceGroups = await this.pagedResourceGraphRequest<RawAzureResourceGroupItem>(query);\n\n    return resourceGroups;\n  }\n\n  async getResourceNames(query: AzureGetResourceNamesQuery, metricNamespacesFilter?: string) {\n    const promises = replaceTemplateVariables(this.templateSrv, query).map(\n      async ({ metricNamespace, subscriptionId, resourceGroup, region, uri }) => {\n        const validMetricNamespace = startsWith(metricNamespace?.toLowerCase(), 'microsoft.storage/storageaccounts/')\n          ? 'microsoft.storage/storageaccounts'\n          : metricNamespace;\n\n        // URI takes precedence over subscription ID and resource group\n        let prefix = uri;\n        if (!prefix) {\n          if (subscriptionId) {\n            prefix = `/subscriptions/${subscriptionId}`;\n          }\n          if (resourceGroup) {\n            prefix += `/resourceGroups/${resourceGroup}`;\n          }\n        }\n\n        const filters: string[] = [];\n        if (validMetricNamespace) {\n          // Ensure the namespace is always lowercase as that's how it's stored in Resource Graph\n          filters.push(`type == '${validMetricNamespace.toLowerCase()}'`);\n        }\n        if (region) {\n          filters.push(`location == '${region}'`);\n        }\n\n        // We use URIs for the filtering here because resource group names are not unique across subscriptions\n        // We also add a slash at the end of the URI to ensure we do not pull resources from a resource group\n        // that has a similar naming prefix e.g. resourceGroup1 and resourceGroup10\n        const query = `resources${metricNamespacesFilter ? '\\n' + metricNamespacesFilter : ''}\n        | where id hasprefix \"${prefix}/\"\n        ${filters.length > 0 ? `| where ${filters.join(' and ')}` : ''}\n        | order by tolower(name) asc`;\n\n        const resources = await this.pagedResourceGraphRequest<RawAzureResourceItem>(query);\n\n        return resources;\n      }\n    );\n    return (await Promise.all(promises)).flat();\n  }\n\n  // Retrieve metric namespaces relevant to a subscription/resource group/resource\n  async getMetricNamespaces(resourceUri: string) {\n    const promises = replaceTemplateVariables(this.templateSrv, { resourceUri }).map(async ({ resourceUri }) => {\n      const namespacesFilter = resourceTypes.map((type) => `\"${type}\"`).join(',');\n      const query = `\n        resources\n        | where id hasprefix \"${resourceUri}\"\n        | where type in (${namespacesFilter})\n        | project type\n        | distinct type\n        | order by tolower(type) asc`;\n\n      const namespaces = await this.pagedResourceGraphRequest<RawAzureResourceItem>(query);\n\n      return namespaces.map((r) => {\n        return {\n          text: r.type,\n          value: r.type,\n        };\n      });\n    });\n    return (await Promise.all(promises)).flat();\n  }\n}\n","import { DataSourceWithBackend, reportInteraction } from '@grafana/runtime';\n\nimport { logsResourceTypes, resourceTypeDisplayNames, resourceTypes } from '../azureMetadata';\nimport AzureMonitorDatasource from '../azure_monitor/azure_monitor_datasource';\nimport AzureResourceGraphDatasource from '../azure_resource_graph/azure_resource_graph_datasource';\nimport { ResourceRow, ResourceRowGroup, ResourceRowType } from '../components/ResourcePicker/types';\nimport {\n  addResources,\n  findRow,\n  parseMultipleResourceDetails,\n  parseResourceDetails,\n  parseResourceURI,\n  resourceToString,\n} from '../components/ResourcePicker/utils';\nimport {\n  AzureMonitorDataSourceInstanceSettings,\n  AzureMonitorDataSourceJsonData,\n  AzureMonitorResource,\n  AzureMonitorQuery,\n  AzureResourceSummaryItem,\n  RawAzureResourceItem,\n} from '../types';\n\nconst logsSupportedResourceTypesKusto = logsResourceTypes.map((v) => `\"${v}\"`).join(',');\n\nexport type ResourcePickerQueryType = 'logs' | 'metrics' | 'traces';\n\nexport default class ResourcePickerData extends DataSourceWithBackend<\n  AzureMonitorQuery,\n  AzureMonitorDataSourceJsonData\n> {\n  resultLimit = 200;\n  azureMonitorDatasource;\n  azureResourceGraphDatasource;\n  supportedMetricNamespaces = '';\n\n  constructor(\n    instanceSettings: AzureMonitorDataSourceInstanceSettings,\n    azureMonitorDatasource: AzureMonitorDatasource,\n    azureResourceGraphDatasource: AzureResourceGraphDatasource\n  ) {\n    super(instanceSettings);\n    this.azureMonitorDatasource = azureMonitorDatasource;\n    this.azureResourceGraphDatasource = azureResourceGraphDatasource;\n  }\n\n  async fetchInitialRows(\n    type: ResourcePickerQueryType,\n    currentSelection?: AzureMonitorResource[]\n  ): Promise<ResourceRowGroup> {\n    const subscriptions = await this.getSubscriptions();\n\n    if (!currentSelection) {\n      return subscriptions;\n    }\n\n    let resources = subscriptions;\n    const promises = currentSelection.map((selection) => async () => {\n      if (selection.subscription) {\n        const resourceGroupURI = `/subscriptions/${selection.subscription}/resourceGroups/${selection.resourceGroup}`;\n\n        if (selection.resourceGroup && !findRow(resources, resourceGroupURI)) {\n          const resourceGroups = await this.getResourceGroupsBySubscriptionId(selection.subscription, type);\n          resources = addResources(resources, `/subscriptions/${selection.subscription}`, resourceGroups);\n        }\n\n        const resourceURI = resourceToString(selection);\n        if (selection.resourceName && !findRow(resources, resourceURI)) {\n          const resourcesForResourceGroup = await this.getResourcesForResourceGroup(resourceGroupURI, type);\n          resources = addResources(resources, resourceGroupURI, resourcesForResourceGroup);\n        }\n      }\n    });\n\n    for (const promise of promises) {\n      // Fetch resources one by one, avoiding re-fetching the same resource\n      // and race conditions updating the resources array\n      await promise();\n    }\n\n    return resources;\n  }\n\n  async fetchAndAppendNestedRow(\n    rows: ResourceRowGroup,\n    parentRow: ResourceRow,\n    type: ResourcePickerQueryType\n  ): Promise<ResourceRowGroup> {\n    const nestedRows =\n      parentRow.type === ResourceRowType.Subscription\n        ? await this.getResourceGroupsBySubscriptionId(parentRow.id, type)\n        : await this.getResourcesForResourceGroup(parentRow.uri, type);\n\n    return addResources(rows, parentRow.uri, nestedRows);\n  }\n\n  search = async (searchPhrase: string, searchType: ResourcePickerQueryType): Promise<ResourceRowGroup> => {\n    let searchQuery = 'resources';\n    if (searchType === 'logs') {\n      searchQuery += `\n      | union resourcecontainers`;\n    }\n    searchQuery += `\n        | where id contains \"${searchPhrase}\"\n        ${await this.filterByType(searchType)}\n        | order by tolower(name) asc\n        | limit ${this.resultLimit}\n      `;\n    const response =\n      await this.azureResourceGraphDatasource.pagedResourceGraphRequest<RawAzureResourceItem>(searchQuery);\n    return response.map((item) => {\n      const parsedUri = parseResourceURI(item.id);\n      if (!parsedUri || !(parsedUri.resourceName || parsedUri.resourceGroup || parsedUri.subscription)) {\n        throw new Error('unable to fetch resource details');\n      }\n      let id = parsedUri.subscription ?? '';\n      let type = ResourceRowType.Subscription;\n      if (parsedUri.resourceName) {\n        id = parsedUri.resourceName;\n        type = ResourceRowType.Resource;\n      } else if (parsedUri.resourceGroup) {\n        id = parsedUri.resourceGroup;\n        type = ResourceRowType.ResourceGroup;\n      }\n      return {\n        name: item.name,\n        id,\n        uri: item.id,\n        resourceGroupName: item.resourceGroup,\n        type,\n        typeLabel: resourceTypeDisplayNames[item.type] || item.type,\n        location: item.location,\n      };\n    });\n  };\n\n  async getSubscriptions(): Promise<ResourceRowGroup> {\n    const subscriptions = await this.azureResourceGraphDatasource.getSubscriptions();\n\n    if (!subscriptions.length) {\n      throw new Error('No subscriptions were found');\n    }\n\n    return subscriptions.map((subscription) => ({\n      name: subscription.subscriptionName,\n      id: subscription.subscriptionId,\n      uri: `/subscriptions/${subscription.subscriptionId}`,\n      typeLabel: 'Subscription',\n      type: ResourceRowType.Subscription,\n      children: [],\n    }));\n  }\n\n  async getResourceGroupsBySubscriptionId(\n    subscriptionId: string,\n    type: ResourcePickerQueryType\n  ): Promise<ResourceRowGroup> {\n    const filter = await this.filterByType(type);\n\n    const resourceGroups = await this.azureResourceGraphDatasource.getResourceGroups(subscriptionId, filter);\n\n    return resourceGroups.map((r) => {\n      const parsedUri = parseResourceURI(r.resourceGroupURI);\n      if (!parsedUri || !parsedUri.resourceGroup) {\n        throw new Error('unable to fetch resource groups');\n      }\n      return {\n        name: r.resourceGroupName,\n        uri: r.resourceGroupURI,\n        id: parsedUri.resourceGroup,\n        type: ResourceRowType.ResourceGroup,\n        typeLabel: 'Resource Group',\n        children: [],\n      };\n    });\n  }\n\n  // Refactor this one out at a later date\n  async getResourcesForResourceGroup(uri: string, type: ResourcePickerQueryType): Promise<ResourceRowGroup> {\n    const resources = await this.azureResourceGraphDatasource.getResourceNames({ uri }, await this.filterByType(type));\n\n    return resources.map((resource) => {\n      return {\n        name: resource.name,\n        id: resource.name,\n        uri: resource.id,\n        resourceGroupName: resource.resourceGroup,\n        type: ResourceRowType.Resource,\n        typeLabel: resourceTypeDisplayNames[resource.type] || resource.type,\n        locationDisplayName: resource.location,\n        location: resource.location,\n      };\n    });\n  }\n\n  // used to make the select resource button that launches the resource picker show a nicer file path to users\n  async getResourceURIDisplayProperties(resourceURI: string): Promise<AzureMonitorResource> {\n    const { subscription, resourceGroup, resourceName } = parseResourceDetails(resourceURI) ?? {};\n\n    if (!subscription) {\n      throw new Error('Invalid resource URI passed');\n    }\n\n    // resourceGroupURI and resourceURI could be invalid values, but that's okay because the join\n    // will just silently fail as expected\n    const subscriptionURI = `/subscriptions/${subscription}`;\n    const resourceGroupURI = `${subscriptionURI}/resourceGroups/${resourceGroup}`;\n\n    const query = `\n    resourcecontainers\n    | where type == \"microsoft.resources/subscriptions\"\n    | where id =~ \"${subscriptionURI}\"\n    | project subscriptionName=name, subscriptionId\n\n    | join kind=leftouter (\n      resourcecontainers            \n            | where type == \"microsoft.resources/subscriptions/resourcegroups\"\n            | where id =~ \"${resourceGroupURI}\"\n            | project resourceGroupName=name, resourceGroup, subscriptionId\n        ) on subscriptionId\n\n        | join kind=leftouter (\n          resources\n            | where id =~ \"${resourceURI}\"\n            | project resourceName=name, subscriptionId\n        ) on subscriptionId\n\n        | project subscriptionName, resourceGroupName, resourceName\n    `;\n\n    const response = await this.azureResourceGraphDatasource.pagedResourceGraphRequest<AzureResourceSummaryItem>(query);\n\n    if (!response.length) {\n      throw new Error('unable to fetch resource details');\n    }\n\n    const { subscriptionName, resourceGroupName, resourceName: responseResourceName } = response[0];\n    // if the name is undefined it could be because the id is undefined or because we are using a template variable.\n    // Either way we can use it as a fallback. We don't really want to interpolate these variables because we want\n    // to show the user when they are using template variables `$sub/$rg/$resource`\n    return {\n      subscription: subscriptionName || subscription,\n      resourceGroup: resourceGroupName || resourceGroup,\n      resourceName: responseResourceName || resourceName,\n    };\n  }\n\n  async getResourceURIFromWorkspace(workspace: string) {\n    const response = await this.azureResourceGraphDatasource.pagedResourceGraphRequest<RawAzureResourceItem>(`\n      resources\n      | where properties['customerId'] == \"${workspace}\"\n      | project id\n    `);\n\n    if (!response.length) {\n      throw new Error('unable to find resource for workspace ' + workspace);\n    }\n\n    return response[0].id;\n  }\n\n  private filterByType = async (t: ResourcePickerQueryType) => {\n    if (this.supportedMetricNamespaces === '' && t !== 'logs') {\n      await this.fetchAllNamespaces();\n    }\n    return t === 'logs'\n      ? `| where type in (${logsSupportedResourceTypesKusto})`\n      : `| where type in (${this.supportedMetricNamespaces})`;\n  };\n\n  private async fetchAllNamespaces() {\n    const subscriptions = await this.getSubscriptions();\n    reportInteraction('grafana_ds_azuremonitor_subscriptions_loaded', { subscriptions: subscriptions.length });\n\n    let supportedMetricNamespaces: Set<string> = new Set();\n    // Include a predefined set of metric namespaces as a fallback in the case the user cannot query subscriptions\n    resourceTypes.forEach((namespace) => {\n      supportedMetricNamespaces.add(`\"${namespace}\"`);\n    });\n\n    // We make use of these three regions as they *should* contain every possible namespace\n    const regions = ['westeurope', 'eastus', 'japaneast'];\n    const getNamespacesForRegion = async (region: string) => {\n      const namespaces = await this.azureMonitorDatasource.getMetricNamespaces(\n        {\n          // We only need to run this request against the first available subscription\n          resourceUri: `/subscriptions/${subscriptions[0].id}`,\n        },\n        false,\n        region\n      );\n      if (namespaces) {\n        for (const namespace of namespaces) {\n          supportedMetricNamespaces.add(`\"${namespace.value.toLocaleLowerCase()}\"`);\n        }\n      }\n    };\n\n    const promises = regions.map((region) => getNamespacesForRegion(region));\n    await Promise.all(promises);\n\n    if (supportedMetricNamespaces.size === 0) {\n      throw new Error(\n        'Unable to resolve a list of valid metric namespaces. Validate the datasource configuration is correct and required permissions have been granted for all subscriptions. Grafana requires at least the Reader role to be assigned.'\n      );\n    }\n\n    this.supportedMetricNamespaces = Array.from(supportedMetricNamespaces).join(',');\n  }\n\n  parseRows(resources: Array<string | AzureMonitorResource>): ResourceRow[] {\n    const resourceObjs = parseMultipleResourceDetails(resources);\n    const newSelectedRows: ResourceRow[] = [];\n    resourceObjs.forEach((resource, i) => {\n      let id = resource.resourceName;\n      let name = resource.resourceName;\n      let rtype = ResourceRowType.Resource;\n      if (!id) {\n        id = resource.resourceGroup;\n        name = resource.resourceGroup;\n        rtype = ResourceRowType.ResourceGroup;\n        if (!id) {\n          id = resource.subscription;\n          name = resource.subscription;\n          rtype = ResourceRowType.Subscription;\n        }\n      }\n      newSelectedRows.push({\n        id: id ?? '',\n        name: name ?? '',\n        type: rtype,\n        uri: resourceToString(resource),\n        typeLabel:\n          resourceTypeDisplayNames[resource.metricNamespace?.toLowerCase() ?? ''] ?? resource.metricNamespace ?? '',\n        location: resource.region,\n      });\n    });\n    return newSelectedRows;\n  }\n}\n","/**\nThis list is obtained parsing https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-logs-categories\nTo programatically get the list, execute in the browser console:\n \n  const namespaces = []\n  document.querySelectorAll('tr').forEach((tr, index) => {\n      if(index !== 0) {\n          const tds = tr.cells\n          const resourceProvider = tds[0].innerText.replace(\"\\n\", \"\")\n          if(tds[2].innerText === \"N/A\" || !resourceProvider.match(/^(microsoft|Microsoft|Wandisco)/)) {\n              return;\n          }\n          const logsCategories = tds[2].innerText.split(\"\\n\")\n          logsCategories.forEach((category) => {\n              if(category === \"\") {\n                  return;\n              }\n              const string =resourceProvider+'/'+category\n              namespaces.push(string.toLowerCase())\n          })\n      }\n  })\n  namespaces;\n \nNote: Validate that the output makes sense, the format of the page may change.\n \nThat list is not complete so we should merge it with the one below. You can do with a node console:\n \n  const u = require('lodash')\n  const newList = [list from above]\n  const logsResourceTypes = [this list]\n  console.dir(u.uniq(logsResourceTypes.concat(newList)).sort(), {'maxArrayLength': null})\n \n */\n\nexport const logsResourceTypes = [\n  'microsoft.aad/domainservices',\n  'microsoft.aadiam/azureadmetrics',\n  'microsoft.aadiam/tenants',\n  'microsoft.agfoodplatform/farmbeats',\n  'microsoft.analysisservices/servers',\n  'microsoft.apimanagement/service',\n  'microsoft.app/managedenvironments',\n  'microsoft.appconfiguration/configurationstores',\n  'microsoft.appplatform/spring',\n  'microsoft.attestation/attestationproviders',\n  'microsoft.automation/automationaccounts',\n  'microsoft.autonomousdevelopmentplatform/accounts',\n  'microsoft.autonomousdevelopmentplatform/datapools',\n  'microsoft.autonomousdevelopmentplatform/workspaces',\n  'microsoft.avs/privateclouds',\n  'microsoft.azuredatatransfer/connections/flows',\n  'microsoft.azureplaywrightservice/accounts',\n  'microsoft.azuresphere/catalogs',\n  'microsoft.azurestackresourcemonitor/storageaccountmonitor',\n  'microsoft.batch/batchaccounts',\n  'microsoft.batchai/workspaces',\n  'microsoft.blockchain/blockchainmembers',\n  'microsoft.blockchain/cordamembers',\n  'microsoft.botservice/botservices',\n  'microsoft.cache/redis',\n  'microsoft.cache/redisenterprise',\n  'microsoft.cache/redisenterprise/databases',\n  'microsoft.cdn/cdnwebapplicationfirewallpolicies',\n  'microsoft.cdn/profiles',\n  'microsoft.cdn/profiles/endpoints',\n  'microsoft.chaos/experiments',\n  'microsoft.classiccompute/domainnames',\n  'microsoft.classiccompute/virtualmachines',\n  'microsoft.classicnetwork/networksecuritygroups',\n  'microsoft.classicstorage/storageaccounts',\n  'microsoft.codesigning/codesigningaccounts',\n  'microsoft.cognitiveservices/accounts',\n  'microsoft.communication/communicationservices',\n  'microsoft.community/communitytrainings',\n  'microsoft.compute/disks',\n  'microsoft.compute/virtualmachines',\n  'microsoft.compute/virtualmachinescalesets',\n  'microsoft.confidentialledger/managedccf',\n  'microsoft.confidentialledger/managedccfs',\n  'microsoft.connectedcache/cachenodes',\n  'microsoft.connectedcache/enterprisemcccustomers',\n  'microsoft.connectedcache/ispcustomers',\n  'microsoft.connectedvehicle/platformaccounts',\n  'microsoft.containerinstance/containergroups',\n  'microsoft.containerregistry/registries',\n  'microsoft.containerservice/fleets',\n  'microsoft.containerservice/managedclusters',\n  'microsoft.customerinsights/hubs',\n  'microsoft.customproviders/resourceproviders',\n  'microsoft.d365customerinsights/instances',\n  'microsoft.dashboard/grafana',\n  'microsoft.databoxedge/databoxedgedevices',\n  'microsoft.databricks/workspaces',\n  'microsoft.datacollaboration/workspaces',\n  'microsoft.datafactory/datafactories',\n  'microsoft.datafactory/factories',\n  'microsoft.datalakeanalytics/accounts',\n  'microsoft.datalakestore/accounts',\n  'microsoft.dataprotection/backupvaults',\n  'microsoft.datashare/accounts',\n  'microsoft.dbformariadb/servers',\n  'microsoft.dbformysql/flexibleservers',\n  'microsoft.dbformysql/servers',\n  'microsoft.dbforpostgresql/flexibleservers',\n  'microsoft.dbforpostgresql/servergroupsv2',\n  'microsoft.dbforpostgresql/servers',\n  'microsoft.dbforpostgresql/serversv2',\n  'microsoft.desktopvirtualization/appattachpackages',\n  'microsoft.desktopvirtualization/applicationgroups',\n  'microsoft.desktopvirtualization/hostpools',\n  'microsoft.desktopvirtualization/scalingplans',\n  'microsoft.desktopvirtualization/workspaces',\n  'microsoft.devcenter/devcenters',\n  'microsoft.devices/elasticpools/iothubtenants',\n  'microsoft.devices/iothubs',\n  'microsoft.devices/provisioningservices',\n  'microsoft.devopsinfrastructure/pools',\n  'microsoft.digitaltwins/digitaltwinsinstances',\n  'microsoft.documentdb/cassandraclusters',\n  'microsoft.documentdb/databaseaccounts',\n  'microsoft.documentdb/mongoclusters',\n  'microsoft.eventgrid/domains',\n  'microsoft.eventgrid/namespaces',\n  'microsoft.eventgrid/partnernamespaces',\n  'microsoft.eventgrid/partnertopics',\n  'microsoft.eventgrid/systemtopics',\n  'microsoft.eventgrid/topics',\n  'microsoft.eventhub/clusters',\n  'microsoft.eventhub/namespaces',\n  'microsoft.experimentation/experimentworkspaces',\n  'microsoft.fabric.admin/fabriclocations',\n  'microsoft.hardwaresecuritymodules/cloudhsmclusters',\n  'microsoft.hdinsight/clusters',\n  'microsoft.healthcareapis/services',\n  'microsoft.healthcareapis/workspaces/dicomservices',\n  'microsoft.healthcareapis/workspaces/fhirservices',\n  'microsoft.healthcareapis/workspaces/iotconnectors',\n  'microsoft.healthdataaiservices/deidservices',\n  'microsoft.insights/autoscalesettings',\n  'microsoft.insights/components',\n  'microsoft.insights/datacollectionrules',\n  'microsoft.insights/qos',\n  'microsoft.iotcentral/iotapps',\n  'microsoft.keyvault/managedhsms',\n  'microsoft.keyvault/vaults',\n  'microsoft.kubernetes/connectedclusters',\n  'microsoft.kusto/clusters',\n  'microsoft.loadtestservice/loadtests',\n  'microsoft.logic/integrationaccounts',\n  'microsoft.logic/integrationserviceenvironments',\n  'microsoft.logic/workflows',\n  'microsoft.machinelearningservices/registries',\n  'microsoft.machinelearningservices/workspaces',\n  'microsoft.machinelearningservices/workspaces/onlineendpoints',\n  'microsoft.managednetworkfabric/networkdevices',\n  'microsoft.media/mediaservices',\n  'microsoft.media/mediaservices/liveevents',\n  'microsoft.media/mediaservices/streamingendpoints',\n  'microsoft.media/videoanalyzers',\n  'microsoft.monitor/accounts',\n  'microsoft.netapp/netappaccounts/capacitypools',\n  'microsoft.netapp/netappaccounts/capacitypools/volumes',\n  'microsoft.network/applicationgateways',\n  'microsoft.network/azurefirewalls',\n  'microsoft.network/bastionhosts',\n  'microsoft.network/connections',\n  'microsoft.network/dnsresolverpolicies',\n  'microsoft.network/dnszones',\n  'microsoft.network/expressroutecircuits',\n  'microsoft.network/expressroutegateways',\n  'microsoft.network/expressrouteports',\n  'microsoft.network/frontdoors',\n  'microsoft.network/loadbalancers',\n  'microsoft.network/natgateways',\n  'microsoft.network/networkinterfaces',\n  'microsoft.network/networkmanagers',\n  'microsoft.network/networkmanagers/ipampools',\n  'microsoft.network/networksecuritygroups',\n  'microsoft.network/networksecurityperimeters',\n  'microsoft.network/networksecurityperimeters/profiles',\n  'microsoft.network/networkvirtualappliances',\n  'microsoft.network/networkwatchers',\n  'microsoft.network/networkwatchers/connectionmonitors',\n  'microsoft.network/p2svpngateways',\n  'microsoft.network/privateendpoints',\n  'microsoft.network/privatelinkservices',\n  'microsoft.network/publicipaddresses',\n  'microsoft.network/publicipprefixes',\n  'microsoft.network/trafficmanagerprofiles',\n  'microsoft.network/virtualnetworkgateways',\n  'microsoft.network/virtualnetworks',\n  'microsoft.network/vpngateways',\n  'microsoft.networkanalytics/dataproducts',\n  'microsoft.networkcloud/baremetalmachines',\n  'microsoft.networkcloud/clustermanagers',\n  'microsoft.networkcloud/clusters',\n  'microsoft.networkcloud/storageappliances',\n  'microsoft.networkfunction/azuretrafficcollectors',\n  'microsoft.notificationhubs/namespaces',\n  'microsoft.notificationhubs/namespaces/notificationhubs',\n  'microsoft.openlogisticsplatform/workspaces',\n  'microsoft.operationalinsights/workspaces',\n  'microsoft.operationsmanagement/solutions',\n  'microsoft.peering/peeringservices',\n  'microsoft.playfab/titles',\n  'microsoft.powerbi/tenants',\n  'microsoft.powerbi/tenants/workspaces',\n  'microsoft.powerbidedicated/capacities',\n  'microsoft.providerhub/providerregistrations',\n  'microsoft.purview/accounts',\n  'microsoft.recoveryservices/vaults',\n  'microsoft.relay/namespaces',\n  'microsoft.resources/subscriptions',\n  'microsoft.resources/subscriptions/resourcegroups',\n  'microsoft.search/searchservices',\n  'microsoft.security/antimalwaresettings',\n  'microsoft.security/defenderforstoragesettings',\n  'microsoft.securityinsights/settings',\n  'microsoft.servicebus/namespaces',\n  'microsoft.servicenetworking/trafficcontrollers',\n  'microsoft.signalrservice/signalr',\n  'microsoft.signalrservice/signalr/replicas',\n  'microsoft.signalrservice/webpubsub',\n  'microsoft.signalrservice/webpubsub/replicas',\n  'microsoft.singularity/accounts',\n  'microsoft.sql/managedinstances',\n  'microsoft.sql/managedinstances/databases',\n  'microsoft.sql/servers/databases',\n  'microsoft.sql/servers/elasticpools',\n  'microsoft.storage/storageaccounts',\n  'microsoft.storage/storageaccounts/blobservices',\n  'microsoft.storage/storageaccounts/fileservices',\n  'microsoft.storage/storageaccounts/queueservices',\n  'microsoft.storage/storageaccounts/tableservices',\n  'microsoft.storagecache/amlfilesystems',\n  'microsoft.storagecache/caches',\n  'microsoft.storagemover/storagemovers',\n  'microsoft.storagesync/storagesyncservices',\n  'microsoft.streamanalytics/streamingjobs',\n  'microsoft.synapse/workspaces',\n  'microsoft.synapse/workspaces/bigdatapools',\n  'microsoft.synapse/workspaces/kustopools',\n  'microsoft.synapse/workspaces/scopepools',\n  'microsoft.synapse/workspaces/sqlpools',\n  'microsoft.timeseriesinsights/environments',\n  'microsoft.timeseriesinsights/environments/eventsources',\n  'microsoft.videoindexer/accounts',\n  'microsoft.vmwarecloudsimple/virtualmachines',\n  'microsoft.web/hostingenvironments',\n  'microsoft.web/hostingenvironments/workerpools',\n  'microsoft.web/serverfarms',\n  'microsoft.web/sites',\n  'microsoft.web/sites/slots',\n  'microsoft.web/staticsites',\n  'microsoft.workloads/sapvirtualinstances',\n];\n","import { AnnotationQuery } from '@grafana/data';\n\nimport { AzureMonitorQuery, AzureQueryType } from '../types';\n\n// The old Angular annotations editor put some properties (rawQuery, workspace, subscription)\n// on the root annotation object, rather than down in the 'targets' query value\n// This migration moves them to a Log Analytics query compatible with the React query editor\n// The old Angular annotations editor did not support any other query types.\nexport default function migrateAnnotation(annotation: AnnotationQuery<AzureMonitorQuery>) {\n  const oldQuery = typeof annotation.rawQuery === 'string' ? annotation.rawQuery : null;\n  const oldWorkspace = typeof annotation.workspace === 'string' ? annotation.workspace : null;\n\n  if (!(oldQuery && oldWorkspace && !annotation.target?.azureLogAnalytics?.query)) {\n    return annotation;\n  }\n\n  const newQuery: AzureMonitorQuery = {\n    ...(annotation.target ?? {}),\n    refId: annotation.target?.refId ?? 'Anno',\n    queryType: AzureQueryType.LogAnalytics,\n    azureLogAnalytics: {\n      query: oldQuery,\n      resources: [oldWorkspace],\n    },\n  };\n\n  return {\n    ...annotation,\n    rawQuery: undefined,\n    workspace: undefined,\n    subscription: undefined,\n    queryType: undefined,\n    target: newQuery,\n  };\n}\n","import { isGUIDish } from './components/ResourcePicker/utils';\nimport DataSource from './datasource';\nimport { AzureMonitorQuery, AzureQueryType } from './types';\nimport {\n  AppInsightsGroupByQuery,\n  AppInsightsMetricNameQuery,\n  GrafanaTemplateVariableQuery,\n  MetricNamespaceQuery,\n  MetricNamesQuery,\n  ResourceGroupsQuery,\n  ResourceNamesQuery,\n  SubscriptionsQuery,\n  WorkspacesQuery,\n} from './types/templateVariables';\n\n/* \n  Grafana Template Variable Functions\n  ex: Subscriptions()\n\n  These are helper functions we have created and exposed to users to make the writing of template variables easier. \n  Due to legacy reasons, we still need to parse strings to determine if a query is a Grafana Template Variable Function \n  or if it's a KQL-type query\n*/\n\nexport const grafanaTemplateVariableFnMatches = (query: string) => {\n  return {\n    subscriptions: query.match(/^Subscriptions\\(\\)/i),\n    resourceGroups: query.match(/^ResourceGroups\\(\\)/i),\n    resourceGroupsWithSub: query.match(/^ResourceGroups\\(([^\\)]+?)(,\\s?([^,]+?))?\\)/i),\n    namespaces: query.match(/^Namespaces\\(([^\\)]+?)(,\\s?([^,]+?))?\\)/i),\n    namespacesWithSub: query.match(/^Namespaces\\(([^,]+?),\\s?([^,]+?)\\)/i),\n    resourceNames: query.match(/^ResourceNames\\(([^,]+?),\\s?([^,]+?)\\)/i),\n    resourceNamesWithSub: query.match(/^ResourceNames\\(([^,]+?),\\s?([^,]+?),\\s?(.+?)\\)/i),\n    metricNamespace: query.match(/^MetricNamespace\\(([^,]+?),\\s?([^,]+?),\\s?([^,]+?)\\)/i),\n    metricNamespaceWithSub: query.match(/^metricnamespace\\(([^,]+?),\\s?([^,]+?),\\s?([^,]+?),\\s?([^,]+?)\\)/i),\n    metricNames: query.match(/^MetricNames\\(([^,]+?),\\s?([^,]+?),\\s?([^,]+?),\\s?([^,]+?)\\)/i),\n    metricNamesWithSub: query.match(/^MetricNames\\(([^,]+?),\\s?([^,]+?),\\s?([^,]+?),\\s?([^,]+?),\\s?(.+?)\\)/i),\n    appInsightsMetricNameQuery: query.match(/^AppInsightsMetricNames\\(\\)/i),\n    appInsightsGroupByQuery: query.match(/^AppInsightsGroupBys\\(([^\\)]+?)(,\\s?([^,]+?))?\\)/i),\n    workspacesQuery: query.match(/^workspaces\\(\\)/i),\n    workspacesQueryWithSub: query.match(/^workspaces\\([\"']?([^\\)]+?)[\"']?\\)/i),\n  };\n};\n\nconst isGrafanaTemplateVariableFnQuery = (query: string) => {\n  const matches: Record<string, RegExpMatchArray | null> = grafanaTemplateVariableFnMatches(query);\n  return Object.keys(matches).some((key) => !!matches[key]);\n};\n\nconst createGrafanaTemplateVariableQuery = (rawQuery: string, datasource: DataSource): AzureMonitorQuery => {\n  const matchesForQuery = grafanaTemplateVariableFnMatches(rawQuery);\n  const defaultSubscriptionId = datasource.azureMonitorDatasource.defaultSubscriptionId;\n  const createGrafanaTemplateVariableDetails = (): GrafanaTemplateVariableQuery => {\n    // deprecated app insights template variables (will most likely remove in grafana 9)\n    if (matchesForQuery.appInsightsMetricNameQuery) {\n      const queryDetails: AppInsightsMetricNameQuery = { rawQuery, kind: 'AppInsightsMetricNameQuery' };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.appInsightsGroupByQuery) {\n      const queryDetails: AppInsightsGroupByQuery = {\n        kind: 'AppInsightsGroupByQuery',\n        rawQuery,\n        metricName: matchesForQuery.appInsightsGroupByQuery[1],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.subscriptions) {\n      const queryDetails: SubscriptionsQuery = {\n        kind: 'SubscriptionsQuery',\n        rawQuery,\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.resourceGroupsWithSub) {\n      const queryDetails: ResourceGroupsQuery = {\n        kind: 'ResourceGroupsQuery',\n        rawQuery,\n        subscription: matchesForQuery.resourceGroupsWithSub[1],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.resourceGroups && defaultSubscriptionId) {\n      const queryDetails: ResourceGroupsQuery = {\n        kind: 'ResourceGroupsQuery',\n        rawQuery,\n        subscription: defaultSubscriptionId,\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.namespacesWithSub) {\n      const queryDetails: MetricNamespaceQuery = {\n        kind: 'MetricNamespaceQuery',\n        rawQuery,\n        subscription: matchesForQuery.namespacesWithSub[1],\n        resourceGroup: matchesForQuery.namespacesWithSub[2],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.namespaces && defaultSubscriptionId) {\n      const queryDetails: MetricNamespaceQuery = {\n        kind: 'MetricNamespaceQuery',\n        rawQuery,\n        subscription: defaultSubscriptionId,\n        resourceGroup: matchesForQuery.namespaces[1],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.resourceNamesWithSub) {\n      const queryDetails: ResourceNamesQuery = {\n        kind: 'ResourceNamesQuery',\n        rawQuery,\n        subscription: matchesForQuery.resourceNamesWithSub[1],\n        resourceGroup: matchesForQuery.resourceNamesWithSub[2],\n        metricNamespace: matchesForQuery.resourceNamesWithSub[3],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.resourceNames && defaultSubscriptionId) {\n      const queryDetails: ResourceNamesQuery = {\n        kind: 'ResourceNamesQuery',\n        rawQuery,\n        subscription: defaultSubscriptionId,\n        resourceGroup: matchesForQuery.resourceNames[1],\n        metricNamespace: matchesForQuery.resourceNames[2],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.metricNamespaceWithSub) {\n      const queryDetails: MetricNamespaceQuery = {\n        kind: 'MetricNamespaceQuery',\n        rawQuery,\n        subscription: matchesForQuery.metricNamespaceWithSub[1],\n        resourceGroup: matchesForQuery.metricNamespaceWithSub[2],\n        metricNamespace: matchesForQuery.metricNamespaceWithSub[3],\n        resourceName: matchesForQuery.metricNamespaceWithSub[4],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.metricNamespace && defaultSubscriptionId) {\n      const queryDetails: MetricNamespaceQuery = {\n        kind: 'MetricNamespaceQuery',\n        rawQuery,\n        subscription: defaultSubscriptionId,\n        resourceGroup: matchesForQuery.metricNamespace[1],\n        metricNamespace: matchesForQuery.metricNamespace[2],\n        resourceName: matchesForQuery.metricNamespace[3],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.metricNames && defaultSubscriptionId) {\n      if (matchesForQuery.metricNames[3].indexOf(',') === -1) {\n        const queryDetails: MetricNamesQuery = {\n          kind: 'MetricNamesQuery',\n          rawQuery,\n          subscription: defaultSubscriptionId,\n          resourceGroup: matchesForQuery.metricNames[1],\n          metricNamespace: matchesForQuery.metricNames[2],\n          resourceName: matchesForQuery.metricNames[3],\n        };\n        return queryDetails;\n      }\n    }\n\n    if (matchesForQuery.metricNamesWithSub) {\n      const queryDetails: MetricNamesQuery = {\n        kind: 'MetricNamesQuery',\n        rawQuery,\n        subscription: matchesForQuery.metricNamesWithSub[1],\n        resourceGroup: matchesForQuery.metricNamesWithSub[2],\n        metricNamespace: matchesForQuery.metricNamesWithSub[3],\n        resourceName: matchesForQuery.metricNamesWithSub[4],\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.workspacesQueryWithSub) {\n      const queryDetails: WorkspacesQuery = {\n        kind: 'WorkspacesQuery',\n        rawQuery,\n        subscription: (matchesForQuery.workspacesQueryWithSub[1] || '').trim(),\n      };\n      return queryDetails;\n    }\n\n    if (matchesForQuery.workspacesQuery && defaultSubscriptionId) {\n      const queryDetails: WorkspacesQuery = {\n        kind: 'WorkspacesQuery',\n        rawQuery,\n        subscription: defaultSubscriptionId,\n      };\n      return queryDetails;\n    }\n\n    // fallback\n    const queryDetails: SubscriptionsQuery = { kind: 'SubscriptionsQuery', rawQuery };\n    return queryDetails;\n  };\n\n  const query: AzureMonitorQuery = {\n    refId: 'A',\n    queryType: AzureQueryType.GrafanaTemplateVariableFn,\n    grafanaTemplateVariableFn: createGrafanaTemplateVariableDetails(),\n    subscription: defaultSubscriptionId,\n  };\n  return query;\n};\n\nconst createLogAnalyticsTemplateVariableQuery = async (\n  rawQuery: string,\n  datasource: DataSource\n): Promise<AzureMonitorQuery> => {\n  const defaultSubscriptionId = datasource.azureMonitorDatasource.defaultSubscriptionId;\n  let resource = '';\n  // if there's an existing query, we try to get the resourcesuri from a deprecated default workspace\n  // a note this is very similar logic to what is used in useMigrations but moved out of the react-hook land\n  if (rawQuery) {\n    const defaultWorkspaceId = datasource.azureLogAnalyticsDatasource.getDeprecatedDefaultWorkSpace();\n    if (defaultWorkspaceId) {\n      const isWorkspaceGUID = isGUIDish(defaultWorkspaceId);\n      if (isWorkspaceGUID) {\n        resource = await datasource.resourcePickerData.getResourceURIFromWorkspace(defaultWorkspaceId);\n      } else {\n        resource = defaultWorkspaceId;\n      }\n    } else {\n      const maybeFirstWorkspace = await datasource.azureLogAnalyticsDatasource.getFirstWorkspace();\n      resource = maybeFirstWorkspace || '';\n    }\n  }\n\n  return {\n    refId: 'A',\n    queryType: AzureQueryType.LogAnalytics,\n    azureLogAnalytics: {\n      query: rawQuery,\n      resources: resource ? [resource] : [],\n    },\n    subscription: defaultSubscriptionId,\n  };\n};\n\nconst migrateGrafanaTemplateVariableFn = (query: AzureMonitorQuery) => {\n  const { queryType, grafanaTemplateVariableFn } = query;\n  if (queryType !== AzureQueryType.GrafanaTemplateVariableFn || !grafanaTemplateVariableFn) {\n    return query;\n  }\n\n  const migratedQuery: AzureMonitorQuery = {\n    ...query,\n  };\n  if ('subscription' in grafanaTemplateVariableFn) {\n    migratedQuery.subscription = grafanaTemplateVariableFn.subscription;\n  }\n  if ('resourceGroup' in grafanaTemplateVariableFn) {\n    migratedQuery.resourceGroup = grafanaTemplateVariableFn.resourceGroup;\n  }\n  if ('metricNamespace' in grafanaTemplateVariableFn) {\n    migratedQuery.namespace = grafanaTemplateVariableFn.metricNamespace;\n  }\n  if ('resourceName' in grafanaTemplateVariableFn) {\n    migratedQuery.resource = grafanaTemplateVariableFn.resourceName;\n  }\n\n  switch (grafanaTemplateVariableFn.kind) {\n    case 'SubscriptionsQuery':\n      migratedQuery.queryType = AzureQueryType.SubscriptionsQuery;\n      break;\n    case 'ResourceGroupsQuery':\n      migratedQuery.queryType = AzureQueryType.ResourceGroupsQuery;\n      break;\n    case 'ResourceNamesQuery':\n      migratedQuery.queryType = AzureQueryType.ResourceNamesQuery;\n      break;\n    case 'MetricNamespaceQuery':\n      migratedQuery.queryType = AzureQueryType.NamespacesQuery;\n      break;\n    case 'MetricDefinitionsQuery':\n      migratedQuery.queryType = AzureQueryType.NamespacesQuery;\n      break;\n    case 'MetricNamesQuery':\n      migratedQuery.queryType = AzureQueryType.MetricNamesQuery;\n      break;\n    case 'WorkspacesQuery':\n      migratedQuery.queryType = AzureQueryType.WorkspacesQuery;\n      break;\n  }\n\n  return migratedQuery;\n};\n\nexport const migrateStringQueriesToObjectQueries = async (\n  rawQuery: string | AzureMonitorQuery,\n  options: { datasource: DataSource }\n): Promise<AzureMonitorQuery> => {\n  // no need to migrate already migrated queries\n  if (typeof rawQuery !== 'string') {\n    return rawQuery;\n  }\n\n  return isGrafanaTemplateVariableFnQuery(rawQuery)\n    ? createGrafanaTemplateVariableQuery(rawQuery, options.datasource)\n    : createLogAnalyticsTemplateVariableQuery(rawQuery, options.datasource);\n};\n\nexport const migrateQuery = async (\n  rawQuery: string | AzureMonitorQuery,\n  options: { datasource: DataSource }\n): Promise<AzureMonitorQuery> => {\n  let query = await migrateStringQueriesToObjectQueries(rawQuery, options);\n\n  if (query.queryType === AzureQueryType.GrafanaTemplateVariableFn) {\n    query = migrateGrafanaTemplateVariableFn(query);\n  }\n\n  return query;\n};\n","import { ChangeEvent, useCallback, useEffect, useState } from 'react';\n\nimport { InlineField, Input } from '@grafana/ui';\n\nimport DataSource from '../../datasource';\nimport { migrateStringQueriesToObjectQueries } from '../../grafanaTemplateVariableFns';\nimport { AzureMonitorQuery, AzureQueryType } from '../../types';\n\nconst GrafanaTemplateVariableFnInput = ({\n  query,\n  updateQuery,\n  datasource,\n}: {\n  query: AzureMonitorQuery;\n  updateQuery: (val: AzureMonitorQuery) => void;\n  datasource: DataSource;\n}) => {\n  const [inputVal, setInputVal] = useState('');\n\n  useEffect(() => {\n    setInputVal(query.grafanaTemplateVariableFn?.rawQuery || '');\n  }, [query.grafanaTemplateVariableFn?.rawQuery]);\n\n  const onRunQuery = useCallback(\n    (newQuery: string) => {\n      migrateStringQueriesToObjectQueries(newQuery, { datasource }).then((updatedQuery) => {\n        if (updatedQuery.queryType === AzureQueryType.GrafanaTemplateVariableFn) {\n          updateQuery(updatedQuery);\n        } else {\n          updateQuery({\n            ...query,\n            grafanaTemplateVariableFn: {\n              kind: 'UnknownQuery',\n              rawQuery: newQuery,\n            },\n          });\n        }\n      });\n    },\n    [datasource, query, updateQuery]\n  );\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setInputVal(event.target.value);\n  };\n\n  return (\n    <InlineField label=\"Grafana template variable function\">\n      <Input\n        placeholder={'type a grafana template variable function, ex: Subscriptions()'}\n        value={inputVal}\n        onChange={onChange}\n        onBlur={() => onRunQuery(inputVal)}\n      />\n    </InlineField>\n  );\n};\n\nexport default GrafanaTemplateVariableFnInput;\n","import { get, isEqual } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nimport { SelectableValue } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Alert, Field, Select, Space } from '@grafana/ui';\n\nimport UrlBuilder from '../../azure_monitor/url_builder';\nimport DataSource from '../../datasource';\nimport { selectors } from '../../e2e/selectors';\nimport { migrateQuery } from '../../grafanaTemplateVariableFns';\nimport { AzureMonitorOption, AzureMonitorQuery, AzureQueryType } from '../../types';\nimport useLastError from '../../utils/useLastError';\nimport ArgQueryEditor from '../ArgQueryEditor';\nimport LogsQueryEditor from '../LogsQueryEditor';\n\nimport GrafanaTemplateVariableFnInput from './GrafanaTemplateVariableFn';\n\ntype Props = {\n  query: AzureMonitorQuery | string;\n  onChange: (query: AzureMonitorQuery) => void;\n  datasource: DataSource;\n};\n\nconst removeOption: SelectableValue = { label: '-', value: '' };\n\nconst VariableEditor = (props: Props) => {\n  const { query, onChange, datasource } = props;\n  const AZURE_QUERY_VARIABLE_TYPE_OPTIONS = [\n    { label: 'Subscriptions', value: AzureQueryType.SubscriptionsQuery },\n    { label: 'Resource Groups', value: AzureQueryType.ResourceGroupsQuery },\n    { label: 'Namespaces', value: AzureQueryType.NamespacesQuery },\n    { label: 'Regions', value: AzureQueryType.LocationsQuery },\n    { label: 'Resource Names', value: AzureQueryType.ResourceNamesQuery },\n    { label: 'Metric Names', value: AzureQueryType.MetricNamesQuery },\n    { label: 'Workspaces', value: AzureQueryType.WorkspacesQuery },\n    { label: 'Resource Graph', value: AzureQueryType.AzureResourceGraph },\n    { label: 'Logs', value: AzureQueryType.LogAnalytics },\n    { label: 'Custom Namespaces', value: AzureQueryType.CustomNamespacesQuery },\n    { label: 'Custom Metric Names', value: AzureQueryType.CustomMetricNamesQuery },\n  ];\n  if (typeof props.query === 'object' && props.query.queryType === AzureQueryType.GrafanaTemplateVariableFn) {\n    // Add the option for the GrafanaTemplateVariableFn only if it's already in use\n    AZURE_QUERY_VARIABLE_TYPE_OPTIONS.push({\n      label: 'Grafana Query Function',\n      value: AzureQueryType.GrafanaTemplateVariableFn,\n    });\n  }\n  const [variableOptionGroup, setVariableOptionGroup] = useState<{ label: string; options: AzureMonitorOption[] }>({\n    label: 'Template Variables',\n    options: [],\n  });\n  const [requireSubscription, setRequireSubscription] = useState(false);\n  const [hasResourceGroup, setHasResourceGroup] = useState(false);\n  const [hasNamespace, setHasNamespace] = useState(false);\n  const [hasRegion, setHasRegion] = useState(false);\n  const [requireResourceGroup, setRequireResourceGroup] = useState(false);\n  const [requireNamespace, setRequireNamespace] = useState(false);\n  const [requireCustomNamespace, setRequireCustomNamespace] = useState(false);\n  const [requireResource, setRequireResource] = useState(false);\n  const [subscriptions, setSubscriptions] = useState<SelectableValue[]>([]);\n  const [resourceGroups, setResourceGroups] = useState<SelectableValue[]>([]);\n  const [namespaces, setNamespaces] = useState<SelectableValue[]>([]);\n  const [customNamespaces, setCustomNamespaces] = useState<SelectableValue[]>([]);\n  const [resources, setResources] = useState<SelectableValue[]>([]);\n  const [regions, setRegions] = useState<SelectableValue[]>([]);\n  const [errorMessage, setError] = useLastError();\n  const queryType = typeof query === 'string' ? '' : query.queryType;\n\n  useEffect(() => {\n    migrateQuery(query, { datasource: datasource }).then((migratedQuery) => {\n      if (!isEqual(query, migratedQuery)) {\n        onChange(migratedQuery);\n      }\n    });\n  }, [query, datasource, onChange]);\n\n  useEffect(() => {\n    setRequireSubscription(false);\n    setHasResourceGroup(false);\n    setHasNamespace(false);\n    setRequireResourceGroup(false);\n    setRequireNamespace(false);\n    setRequireResource(false);\n    setRequireCustomNamespace(false);\n    switch (queryType) {\n      case AzureQueryType.ResourceGroupsQuery:\n      case AzureQueryType.WorkspacesQuery:\n        setRequireSubscription(true);\n        break;\n      case AzureQueryType.NamespacesQuery:\n        setRequireSubscription(true);\n        setHasResourceGroup(true);\n        break;\n      case AzureQueryType.ResourceNamesQuery:\n        setRequireSubscription(true);\n        setHasResourceGroup(true);\n        setHasNamespace(true);\n        setHasRegion(true);\n        break;\n      case AzureQueryType.MetricNamesQuery:\n        setRequireSubscription(true);\n        setRequireResourceGroup(true);\n        setRequireNamespace(true);\n        setRequireResource(true);\n        break;\n      case AzureQueryType.LocationsQuery:\n        setRequireSubscription(true);\n        break;\n      case AzureQueryType.CustomNamespacesQuery:\n        setRequireSubscription(true);\n        setRequireResourceGroup(true);\n        setRequireNamespace(true);\n        setRequireResource(true);\n        break;\n      case AzureQueryType.CustomMetricNamesQuery:\n        setRequireSubscription(true);\n        setRequireResourceGroup(true);\n        setRequireResource(true);\n        setRequireNamespace(true);\n        setRequireCustomNamespace(true);\n        break;\n    }\n  }, [queryType]);\n\n  useEffect(() => {\n    const options: AzureMonitorOption[] = [];\n    datasource.getVariablesRaw().forEach((v) => {\n      if (get(v, 'query.queryType') !== queryType) {\n        options.push({ label: v.label || v.name, value: `$${v.name}` });\n      }\n    });\n    setVariableOptionGroup({\n      label: 'Template Variables',\n      options,\n    });\n  }, [datasource, queryType]);\n\n  // Always retrieve subscriptions first as they're used in most template variable queries\n  useEffectOnce(() => {\n    datasource.getSubscriptions().then((subs) => {\n      setSubscriptions(subs.map((s) => ({ label: s.text, value: s.value })));\n    });\n  });\n\n  const subscription = typeof query === 'object' && query.subscription;\n  // When subscription is set, retrieve resource groups\n  useEffect(() => {\n    if (subscription) {\n      datasource.getResourceGroups(subscription).then((rgs) => {\n        setResourceGroups(rgs.map((s) => ({ label: s.resourceGroupName, value: s.resourceGroupName })));\n      });\n    }\n  }, [datasource, subscription]);\n\n  const resourceGroup = (typeof query === 'object' && query.resourceGroup) || '';\n  // When resource group is set, retrieve metric namespaces (aka resource types for a custom metric and custom metric namespace query)\n  useEffect(() => {\n    if (subscription && resourceGroup) {\n      datasource.getMetricNamespaces(subscription, resourceGroup, undefined, false, true).then((rgs) => {\n        setNamespaces(rgs.map((s) => ({ label: s.text, value: s.value })));\n      });\n    }\n  }, [datasource, subscription, resourceGroup]);\n\n  // When subscription is set also retrieve locations\n  useEffect(() => {\n    if (subscription) {\n      datasource.azureMonitorDatasource.getLocations([subscription]).then((rgs) => {\n        const regions: SelectableValue[] = [];\n        rgs.forEach((r) => regions.push({ label: r.displayName, value: r.name }));\n        setRegions(regions);\n      });\n    }\n  }, [datasource, subscription, resourceGroup]);\n\n  const namespace = (typeof query === 'object' && query.namespace) || '';\n  // When subscription, resource group, and namespace are all set, retrieve resource names\n  useEffect(() => {\n    if (subscription && resourceGroup && namespace) {\n      datasource.getResourceNames(subscription, resourceGroup, namespace).then((resources) => {\n        setResources(resources.map((s) => ({ label: s.name, value: s.name })));\n      });\n    }\n  }, [datasource, subscription, resourceGroup, namespace]);\n\n  const resource = (typeof query === 'object' && query.resource) || '';\n  // When subscription, resource group, namespace, and resource name are all set, retrieve custom metric namespaces\n  useEffect(() => {\n    if (subscription && resourceGroup && namespace && resource) {\n      const resourceUri = UrlBuilder.buildResourceUri(getTemplateSrv(), {\n        subscription,\n        resourceGroup,\n        metricNamespace: namespace,\n        resourceName: resource,\n      });\n      datasource.getMetricNamespaces(subscription, resourceGroup, resourceUri, true).then((rgs) => {\n        setCustomNamespaces(rgs.map((s) => ({ label: s.text, value: s.value })));\n      });\n    }\n  }, [datasource, subscription, resourceGroup, namespace, resource]);\n\n  if (typeof query === 'string') {\n    // still migrating the query\n    return null;\n  }\n\n  const onQueryTypeChange = (selectableValue: SelectableValue) => {\n    if (selectableValue.value) {\n      onChange({\n        ...query,\n        queryType: selectableValue.value,\n        subscription: undefined,\n        resourceGroup: undefined,\n        namespace: undefined,\n        resource: undefined,\n      });\n    }\n  };\n\n  const onChangeSubscription = (selectableValue: SelectableValue) => {\n    if (selectableValue.value) {\n      onChange({\n        ...query,\n        subscription: selectableValue.value,\n        resourceGroup: undefined,\n        namespace: undefined,\n        resource: undefined,\n      });\n    }\n  };\n\n  const onChangeResourceGroup = (selectableValue: SelectableValue) => {\n    onChange({\n      ...query,\n      resourceGroup: selectableValue.value,\n      namespace: undefined,\n      resource: undefined,\n    });\n  };\n\n  const onChangeNamespace = (selectableValue: SelectableValue) => {\n    onChange({\n      ...query,\n      namespace: selectableValue.value,\n      resource: undefined,\n    });\n  };\n\n  const onChangeRegion = (selectableValue: SelectableValue) => {\n    onChange({\n      ...query,\n      region: selectableValue.value,\n    });\n  };\n\n  const onChangeResource = (selectableValue: SelectableValue) => {\n    onChange({\n      ...query,\n      resource: selectableValue.value,\n    });\n  };\n\n  const onQueryChange = (queryChange: AzureMonitorQuery) => {\n    onChange(queryChange);\n  };\n\n  const onChangeCustomNamespace = (selectableValue: SelectableValue) => {\n    onChange({\n      ...query,\n      customNamespace: selectableValue.value,\n    });\n  };\n\n  return (\n    <>\n      <Field label=\"Query Type\" data-testid={selectors.components.variableEditor.queryType.input}>\n        <Select\n          aria-label=\"select query type\"\n          onChange={onQueryTypeChange}\n          options={AZURE_QUERY_VARIABLE_TYPE_OPTIONS}\n          width={25}\n          value={queryType}\n        />\n      </Field>\n      {query.queryType === AzureQueryType.LogAnalytics && (\n        <>\n          <LogsQueryEditor\n            subscriptionId={query.subscription}\n            query={query}\n            datasource={datasource}\n            onChange={onQueryChange}\n            // Not applicable as the builder isn't available in the variable editor yet\n            onQueryChange={onQueryChange}\n            variableOptionGroup={variableOptionGroup}\n            setError={setError}\n            hideFormatAs={true}\n            basicLogsEnabled={datasource.azureMonitorDatasource.basicLogsEnabled ?? false}\n          />\n          {errorMessage && (\n            <>\n              <Space v={2} />\n              <Alert severity=\"error\" title=\"An error occurred while requesting metadata from Azure Monitor\">\n                {errorMessage instanceof Error ? errorMessage.message : errorMessage}\n              </Alert>\n            </>\n          )}\n        </>\n      )}\n      {query.queryType === AzureQueryType.GrafanaTemplateVariableFn && (\n        <GrafanaTemplateVariableFnInput query={query} updateQuery={props.onChange} datasource={datasource} />\n      )}\n      {requireSubscription && (\n        <Field label=\"Subscription\" data-testid={selectors.components.variableEditor.subscription.input}>\n          <Select\n            aria-label=\"select subscription\"\n            onChange={onChangeSubscription}\n            options={subscriptions.concat(variableOptionGroup)}\n            width={25}\n            value={query.subscription || null}\n          />\n        </Field>\n      )}\n      {(requireResourceGroup || hasResourceGroup) && (\n        <Field label=\"Resource Group\" data-testid={selectors.components.variableEditor.resourceGroup.input}>\n          <Select\n            aria-label=\"select resource group\"\n            onChange={onChangeResourceGroup}\n            options={\n              requireResourceGroup\n                ? resourceGroups.concat(variableOptionGroup)\n                : resourceGroups.concat(variableOptionGroup, removeOption)\n            }\n            width={25}\n            value={query.resourceGroup || null}\n            placeholder={requireResourceGroup ? undefined : 'Optional'}\n          />\n        </Field>\n      )}\n      {(requireNamespace || hasNamespace) && (\n        <Field\n          label={\n            queryType === AzureQueryType.CustomNamespacesQuery || queryType === AzureQueryType.CustomMetricNamesQuery\n              ? 'Resource Type'\n              : 'Namespace'\n          }\n          data-testid={selectors.components.variableEditor.namespace.input}\n        >\n          <Select\n            aria-label=\"select namespace\"\n            onChange={onChangeNamespace}\n            options={\n              requireNamespace\n                ? namespaces.concat(variableOptionGroup)\n                : namespaces.concat(variableOptionGroup, removeOption)\n            }\n            width={25}\n            value={query.namespace || null}\n            placeholder={requireNamespace ? undefined : 'Optional'}\n          />\n        </Field>\n      )}\n      {hasRegion && (\n        <Field label=\"Region\" data-testid={selectors.components.variableEditor.region.input}>\n          <Select\n            aria-label=\"select region\"\n            onChange={onChangeRegion}\n            options={regions.concat(variableOptionGroup)}\n            width={25}\n            value={query.region || null}\n            placeholder=\"Optional\"\n          />\n        </Field>\n      )}\n      {requireResource && (\n        <Field label=\"Resource\" data-testid={selectors.components.variableEditor.resource.input}>\n          <Select\n            aria-label=\"select resource\"\n            onChange={onChangeResource}\n            options={resources.concat(variableOptionGroup)}\n            width={25}\n            value={query.resource || null}\n          />\n        </Field>\n      )}\n      {requireCustomNamespace && (\n        <Field label={'Custom Namespace'} data-testid={selectors.components.variableEditor.customNamespace.input}>\n          <Select\n            aria-label=\"select custom namespace\"\n            onChange={onChangeCustomNamespace}\n            options={\n              requireCustomNamespace\n                ? customNamespaces.concat(variableOptionGroup)\n                : customNamespaces.concat(variableOptionGroup, removeOption)\n            }\n            width={25}\n            value={query.customNamespace || null}\n            placeholder={requireCustomNamespace ? undefined : 'Optional'}\n          />\n        </Field>\n      )}\n      {query.queryType === AzureQueryType.AzureResourceGraph && (\n        <>\n          <ArgQueryEditor\n            subscriptionId={datasource.azureLogAnalyticsDatasource.defaultSubscriptionId}\n            query={query}\n            datasource={datasource}\n            onChange={onQueryChange}\n            variableOptionGroup={variableOptionGroup}\n            setError={setError}\n          />\n          {errorMessage && (\n            <>\n              <Space v={2} />\n              <Alert severity=\"error\" title=\"An error occurred while requesting metadata from Azure Monitor\">\n                {errorMessage instanceof Error ? errorMessage.message : errorMessage}\n              </Alert>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default VariableEditor;\n","import { startsWith } from 'lodash';\nimport { from, lastValueFrom, Observable } from 'rxjs';\n\nimport {\n  CustomVariableSupport,\n  DataQueryRequest,\n  DataQueryResponse,\n  MetricFindValue,\n  toDataFrame,\n} from '@grafana/data';\nimport { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport UrlBuilder from './azure_monitor/url_builder';\nimport VariableEditor from './components/VariableEditor/VariableEditor';\nimport DataSource from './datasource';\nimport { migrateQuery } from './grafanaTemplateVariableFns';\nimport { AzureMonitorQuery, AzureQueryType, RawAzureResourceItem } from './types';\nimport { GrafanaTemplateVariableQuery } from './types/templateVariables';\nimport messageFromError from './utils/messageFromError';\n\nexport function parseResourceNamesAsTemplateVariable(resources: RawAzureResourceItem[], metricNamespace?: string) {\n  return resources.map((r) => {\n    if (startsWith(metricNamespace?.toLowerCase(), 'microsoft.storage/storageaccounts/')) {\n      return {\n        text: r.name + '/default',\n        value: r.name + '/default',\n      };\n    }\n\n    return {\n      text: r.name,\n      value: r.name,\n    };\n  });\n}\n\nexport class VariableSupport extends CustomVariableSupport<DataSource, AzureMonitorQuery> {\n  constructor(\n    private readonly datasource: DataSource,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super();\n    this.datasource = datasource;\n  }\n\n  editor = VariableEditor;\n\n  hasValue(...values: string[]) {\n    return values.every((v) => !!this.templateSrv.replace(v));\n  }\n\n  query(request: DataQueryRequest<AzureMonitorQuery>): Observable<DataQueryResponse> {\n    const promisedResults = async () => {\n      const queryObj = await migrateQuery(request.targets[0], { datasource: this.datasource });\n\n      try {\n        switch (queryObj.queryType) {\n          case AzureQueryType.SubscriptionsQuery:\n            const res = await this.datasource.getSubscriptions();\n            return {\n              data: res?.length ? [toDataFrame(res)] : [],\n            };\n          case AzureQueryType.ResourceGroupsQuery:\n            if (queryObj.subscription && this.hasValue(queryObj.subscription)) {\n              const rgs = await this.datasource.getResourceGroups(queryObj.subscription);\n              return {\n                data: rgs?.length ? [toDataFrame(rgs)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.NamespacesQuery:\n            if (queryObj.subscription && this.hasValue(queryObj.subscription)) {\n              const namespaces = await this.datasource.getMetricNamespaces(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                undefined,\n                false,\n                true\n              );\n              return {\n                data: namespaces?.length ? [toDataFrame(namespaces)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.ResourceNamesQuery:\n            if (queryObj.subscription && this.hasValue(queryObj.subscription)) {\n              const resources = await this.datasource.getResourceNames(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                queryObj.namespace,\n                queryObj.region\n              );\n              return {\n                data: resources?.length ? [toDataFrame(parseResourceNamesAsTemplateVariable(resources))] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.MetricNamesQuery:\n            if (\n              queryObj.subscription &&\n              queryObj.resourceGroup &&\n              queryObj.namespace &&\n              queryObj.resource &&\n              this.hasValue(queryObj.subscription, queryObj.resourceGroup, queryObj.namespace, queryObj.resource)\n            ) {\n              const rgs = await this.datasource.getMetricNames(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                queryObj.namespace,\n                queryObj.resource\n              );\n              return {\n                data: rgs?.length ? [toDataFrame(rgs)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.WorkspacesQuery:\n            if (queryObj.subscription && this.hasValue(queryObj.subscription)) {\n              const rgs = await this.datasource.getAzureLogAnalyticsWorkspaces(queryObj.subscription);\n              return {\n                data: rgs?.length ? [toDataFrame(rgs)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.GrafanaTemplateVariableFn:\n            if (queryObj.grafanaTemplateVariableFn) {\n              const templateVariablesResults = await this.callGrafanaTemplateVariableFn(\n                queryObj.grafanaTemplateVariableFn\n              );\n              return {\n                data: templateVariablesResults?.length ? [toDataFrame(templateVariablesResults)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.LocationsQuery:\n            if (queryObj.subscription && this.hasValue(queryObj.subscription)) {\n              const locationMap = await this.datasource.azureMonitorDatasource.getLocations([queryObj.subscription]);\n              const res: Array<{ text: string; value: string }> = [];\n              locationMap.forEach((loc) => {\n                res.push({ text: loc.displayName, value: loc.name });\n              });\n              return {\n                data: res?.length ? [toDataFrame(res)] : [],\n              };\n            }\n          case AzureQueryType.CustomNamespacesQuery:\n            if (\n              queryObj.subscription &&\n              queryObj.resourceGroup &&\n              queryObj.namespace &&\n              queryObj.resource &&\n              this.hasValue(queryObj.subscription, queryObj.resourceGroup, queryObj.namespace, queryObj.resource)\n            ) {\n              const resourceUri = UrlBuilder.buildResourceUri(this.templateSrv, {\n                subscription: queryObj.subscription,\n                resourceGroup: queryObj.resourceGroup,\n                metricNamespace: queryObj.namespace,\n                resourceName: queryObj.resource,\n              });\n              const res = await this.datasource.getMetricNamespaces(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                resourceUri,\n                true\n              );\n              return {\n                data: res?.length ? [toDataFrame(res)] : [],\n              };\n            }\n            return { data: [] };\n          case AzureQueryType.CustomMetricNamesQuery:\n            if (\n              queryObj.subscription &&\n              queryObj.resourceGroup &&\n              queryObj.namespace &&\n              queryObj.resource &&\n              queryObj.customNamespace &&\n              this.hasValue(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                queryObj.namespace,\n                queryObj.resource,\n                queryObj.customNamespace\n              )\n            ) {\n              const rgs = await this.datasource.getMetricNames(\n                queryObj.subscription,\n                queryObj.resourceGroup,\n                queryObj.namespace,\n                queryObj.resource,\n                queryObj.customNamespace\n              );\n              return {\n                data: rgs?.length ? [toDataFrame(rgs)] : [],\n              };\n            }\n            return { data: [] };\n          default:\n            request.targets[0] = queryObj;\n            const queryResp = await lastValueFrom(this.datasource.query(request));\n            return {\n              data: queryResp.data,\n              error: queryResp.error ? new Error(messageFromError(queryResp.error)) : undefined,\n            };\n        }\n      } catch (err) {\n        return { data: [], error: new Error(messageFromError(err)) };\n      }\n    };\n\n    return from(promisedResults());\n  }\n\n  // Deprecated\n  callGrafanaTemplateVariableFn(query: GrafanaTemplateVariableQuery): Promise<MetricFindValue[]> | null {\n    if (query.kind === 'SubscriptionsQuery') {\n      return this.datasource.getSubscriptions();\n    }\n\n    if (query.kind === 'ResourceGroupsQuery') {\n      return this.datasource.getResourceGroups(this.replaceVariable(query.subscription)).then((rgs) => {\n        if (rgs.length > 0) {\n          return rgs.map((rg) => ({ text: rg.resourceGroupName, value: rg.resourceGroupName }));\n        }\n\n        return [];\n      });\n    }\n\n    if (query.kind === 'ResourceNamesQuery') {\n      return this.datasource\n        .getResourceNames(\n          this.replaceVariable(query.subscription),\n          this.replaceVariable(query.resourceGroup),\n          this.replaceVariable(query.metricNamespace)\n        )\n        .then((resources) => {\n          if (resources.length > 0) {\n            return parseResourceNamesAsTemplateVariable(resources, query.metricNamespace);\n          }\n          return [];\n        });\n    }\n\n    if (query.kind === 'MetricNamespaceQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNamespaces(query, true);\n    }\n\n    if (query.kind === 'MetricNamesQuery') {\n      return this.datasource.azureMonitorDatasource.getMetricNames(query);\n    }\n\n    if (query.kind === 'WorkspacesQuery') {\n      return this.datasource.azureLogAnalyticsDatasource.getWorkspaces(this.replaceVariable(query.subscription));\n    }\n\n    return null;\n  }\n\n  replaceVariable(metric: string) {\n    return this.templateSrv.replace((metric || '').trim());\n  }\n}\n","import { cloneDeep } from 'lodash';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AadCurrentUserCredentials, instanceOfAzureCredential, isCredentialsComplete } from '@grafana/azure-sdk';\nimport {\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  LoadingState,\n  QueryFixAction,\n  ScopedVars,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport AzureLogAnalyticsDatasource from './azure_log_analytics/azure_log_analytics_datasource';\nimport AzureMonitorDatasource from './azure_monitor/azure_monitor_datasource';\nimport AzureResourceGraphDatasource from './azure_resource_graph/azure_resource_graph_datasource';\nimport ResourcePickerData from './resourcePicker/resourcePickerData';\nimport { AzureMonitorDataSourceJsonData, AzureMonitorQuery, AzureQueryType } from './types';\nimport migrateAnnotation from './utils/migrateAnnotation';\nimport migrateQuery from './utils/migrateQuery';\nimport { VariableSupport } from './variables';\n\nexport default class Datasource extends DataSourceWithBackend<AzureMonitorQuery, AzureMonitorDataSourceJsonData> {\n  annotations = {\n    prepareAnnotation: migrateAnnotation,\n  };\n\n  azureMonitorDatasource: AzureMonitorDatasource;\n  azureLogAnalyticsDatasource: AzureLogAnalyticsDatasource;\n  resourcePickerData: ResourcePickerData;\n  azureResourceGraphDatasource: AzureResourceGraphDatasource;\n  currentUserAuth: boolean;\n  currentUserAuthFallbackAvailable: boolean;\n\n  pseudoDatasource: {\n    [key in AzureQueryType]?: AzureMonitorDatasource | AzureLogAnalyticsDatasource | AzureResourceGraphDatasource;\n  } = {};\n\n  declare optionsKey: Record<AzureQueryType, string>;\n\n  constructor(\n    instanceSettings: DataSourceInstanceSettings<AzureMonitorDataSourceJsonData>,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n    this.azureMonitorDatasource = new AzureMonitorDatasource(instanceSettings);\n    this.azureResourceGraphDatasource = new AzureResourceGraphDatasource(instanceSettings);\n    this.azureLogAnalyticsDatasource = new AzureLogAnalyticsDatasource(instanceSettings);\n    this.resourcePickerData = new ResourcePickerData(\n      instanceSettings,\n      this.azureMonitorDatasource,\n      this.azureResourceGraphDatasource\n    );\n\n    this.pseudoDatasource = {\n      [AzureQueryType.AzureMonitor]: this.azureMonitorDatasource,\n      [AzureQueryType.LogAnalytics]: this.azureLogAnalyticsDatasource,\n      [AzureQueryType.AzureResourceGraph]: this.azureResourceGraphDatasource,\n      [AzureQueryType.AzureTraces]: this.azureLogAnalyticsDatasource,\n    };\n\n    this.variables = new VariableSupport(this);\n\n    const credentials = instanceSettings.jsonData.azureCredentials;\n    if (credentials && instanceOfAzureCredential<AadCurrentUserCredentials>('currentuser', credentials)) {\n      this.currentUserAuth = true;\n      if (!credentials.serviceCredentials) {\n        this.currentUserAuthFallbackAvailable = false;\n      } else {\n        this.currentUserAuthFallbackAvailable = isCredentialsComplete(credentials.serviceCredentials, true);\n      }\n    } else {\n      // Handle legacy credentials case\n      this.currentUserAuth = instanceSettings.jsonData.azureAuthType === 'currentuser';\n      this.currentUserAuthFallbackAvailable = false;\n    }\n  }\n\n  filterQuery(item: AzureMonitorQuery): boolean {\n    if (!item.queryType) {\n      return false;\n    }\n\n    const query = migrateQuery(item);\n    const ds = this.pseudoDatasource[item.queryType];\n    return ds?.filterQuery?.(query) ?? true;\n  }\n\n  query(options: DataQueryRequest<AzureMonitorQuery>): Observable<DataQueryResponse> {\n    const byType = new Map<AzureQueryType, DataQueryRequest<AzureMonitorQuery>>();\n\n    for (const baseTarget of options.targets) {\n      // Migrate old query structures\n      const target = migrateQuery(baseTarget);\n\n      // Skip hidden or invalid queries or ones without properties\n      if (!target.queryType || target.hide || !hasQueryForType(target)) {\n        continue;\n      }\n\n      // Initialize the list of queries\n      if (!byType.has(target.queryType)) {\n        const queryForType = cloneDeep(options);\n        queryForType.requestId = `${queryForType.requestId}-${target.refId}`;\n        queryForType.targets = [];\n        byType.set(target.queryType, queryForType);\n      }\n\n      const queryForType = byType.get(target.queryType);\n      queryForType?.targets.push(target);\n    }\n\n    const observables: Array<Observable<DataQueryResponse>> = Array.from(byType.entries()).map(([queryType, req]) => {\n      let mappedQueryType = queryType;\n      if (queryType === AzureQueryType.AzureTraces || queryType === AzureQueryType.TraceExemplar) {\n        mappedQueryType = AzureQueryType.LogAnalytics;\n      }\n\n      const ds = this.pseudoDatasource[mappedQueryType];\n      if (!ds) {\n        throw new Error('Data source not created for query type ' + queryType);\n      }\n\n      return ds.query(req);\n    });\n\n    // Single query can skip merge\n    if (observables.length === 1) {\n      return observables[0];\n    }\n\n    if (observables.length > 1) {\n      return forkJoin(observables).pipe(\n        map((results: DataQueryResponse[]) => {\n          const data: DataFrame[] = [];\n          for (const result of results) {\n            for (const frame of result.data) {\n              data.push(frame);\n            }\n          }\n\n          return { state: LoadingState.Done, data };\n        })\n      );\n    }\n\n    return of({ state: LoadingState.Done, data: [] });\n  }\n\n  targetContainsTemplate(query: AzureMonitorQuery) {\n    if (query.subscription && this.templateSrv.containsTemplate(query.subscription)) {\n      return true;\n    }\n\n    let subQuery;\n    if (query.queryType === AzureQueryType.AzureMonitor) {\n      subQuery = JSON.stringify(query.azureMonitor);\n    } else if (query.queryType === AzureQueryType.LogAnalytics) {\n      subQuery = JSON.stringify(query.azureLogAnalytics);\n    } else if (query.queryType === AzureQueryType.AzureResourceGraph) {\n      subQuery = JSON.stringify([query.azureResourceGraph, query.subscriptions]);\n    }\n\n    return !!subQuery && this.templateSrv.containsTemplate(subQuery);\n  }\n\n  /* Azure Monitor REST API methods */\n  getMetricNamespaces(\n    subscriptionId: string,\n    resourceGroup?: string,\n    resourceUri?: string,\n    custom?: boolean,\n    variableQuery?: boolean\n  ) {\n    let url = `/subscriptions/${subscriptionId}`;\n    if (resourceGroup) {\n      url += `/resourceGroups/${resourceGroup}`;\n    }\n    if (resourceUri) {\n      url = resourceUri;\n    }\n\n    // For variable queries it's more efficient to use resource graph\n    // Using resource graph allows us to return namespaces irrespective of a users permissions\n    // This also ensure the returned namespaces are filtered to the selected resource group when specified\n    if (variableQuery) {\n      return this.azureResourceGraphDatasource.getMetricNamespaces(url);\n    }\n\n    return this.azureMonitorDatasource.getMetricNamespaces(\n      { resourceUri: url },\n      // If custom namespaces are being queried we do not issue the query against the global region\n      // as resources have a specific region\n      custom ? false : true,\n      undefined,\n      custom\n    );\n  }\n\n  getMetricNames(\n    subscriptionId: string,\n    resourceGroup: string,\n    metricNamespace: string,\n    resourceName: string,\n    customNamespace?: string\n  ) {\n    return this.azureMonitorDatasource.getMetricNames({\n      subscription: subscriptionId,\n      resourceGroup,\n      metricNamespace,\n      resourceName,\n      customNamespace,\n    });\n  }\n\n  getSubscriptions() {\n    return this.azureMonitorDatasource.getSubscriptions();\n  }\n\n  /*Azure Log Analytics */\n  getAzureLogAnalyticsWorkspaces(subscriptionId: string) {\n    return this.azureLogAnalyticsDatasource.getWorkspaces(subscriptionId);\n  }\n\n  /*Azure Resource Graph */\n  getResourceGroups(subscriptionId: string) {\n    return this.azureResourceGraphDatasource.getResourceGroups(this.templateSrv.replace(subscriptionId));\n  }\n\n  getResourceNames(subscriptionId: string, resourceGroup?: string, metricNamespace?: string, region?: string) {\n    return this.azureResourceGraphDatasource.getResourceNames({\n      subscriptionId,\n      resourceGroup,\n      metricNamespace,\n      region,\n    });\n  }\n\n  interpolateVariablesInQueries(queries: AzureMonitorQuery[], scopedVars: ScopedVars): AzureMonitorQuery[] {\n    const mapped = queries.map((query) => {\n      if (!query.queryType) {\n        return query;\n      }\n\n      const queryType = query.queryType === AzureQueryType.AzureTraces ? AzureQueryType.LogAnalytics : query.queryType;\n      const ds = this.pseudoDatasource[queryType];\n      return {\n        datasource: ds?.getRef(),\n        ...(ds?.applyTemplateVariables(query, scopedVars) ?? query),\n      };\n    });\n\n    return mapped;\n  }\n\n  getVariables() {\n    return this.templateSrv.getVariables().map((v) => `$${v.name}`);\n  }\n\n  getVariablesRaw() {\n    return this.templateSrv.getVariables();\n  }\n\n  modifyQuery(query: AzureMonitorQuery, action: QueryFixAction): AzureMonitorQuery {\n    if (!action.options) {\n      return query;\n    }\n    let expression = query.azureLogAnalytics?.query;\n    if (expression === undefined) {\n      return query;\n    }\n    switch (action.type) {\n      case 'ADD_FILTER': {\n        expression += `\\n| where ${action.options.key} == \"${action.options.value}\"`;\n        break;\n      }\n      case 'ADD_FILTER_OUT': {\n        expression += `\\n| where ${action.options.key} != \"${action.options.value}\"`;\n        break;\n      }\n    }\n    return { ...query, azureLogAnalytics: { ...query.azureLogAnalytics, query: expression } };\n  }\n}\n\nfunction hasQueryForType(query: AzureMonitorQuery): boolean {\n  switch (query.queryType) {\n    case AzureQueryType.AzureMonitor:\n      return !!query.azureMonitor;\n\n    case AzureQueryType.LogAnalytics:\n      return !!query.azureLogAnalytics;\n\n    case AzureQueryType.AzureResourceGraph:\n      return !!query.azureResourceGraph;\n\n    case AzureQueryType.AzureTraces:\n    case AzureQueryType.TraceExemplar:\n      return !!query.azureTraces;\n\n    case AzureQueryType.GrafanaTemplateVariableFn:\n      return !!query.grafanaTemplateVariableFn;\n\n    default:\n      return false;\n  }\n}\n","import { DataSourcePlugin, DashboardLoadedEvent } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\n\nimport { ConfigEditor } from './components/ConfigEditor/ConfigEditor';\nimport AzureMonitorQueryEditor from './components/QueryEditor';\nimport Datasource from './datasource';\nimport pluginJson from './plugin.json';\nimport { trackAzureMonitorDashboardLoaded } from './tracking';\nimport { AzureMonitorQuery, AzureMonitorDataSourceJsonData, AzureQueryType, ResultFormat } from './types';\n\nexport const plugin = new DataSourcePlugin<Datasource, AzureMonitorQuery, AzureMonitorDataSourceJsonData>(Datasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(AzureMonitorQueryEditor);\n\ninterface Statistics {\n  hidden: number;\n  visible: number;\n  multiResource: number;\n  count: number;\n  [key: string]: number;\n}\n\n// Track dashboard loads to RudderStack\ngetAppEvents().subscribe<DashboardLoadedEvent<AzureMonitorQuery>>(\n  DashboardLoadedEvent,\n  ({ payload: { dashboardId, orgId, userId, grafanaVersion, queries } }) => {\n    const azureQueries = queries[pluginJson.id];\n    const common = {\n      hidden: 0,\n      visible: 0,\n      multiResource: 0,\n      count: 0,\n    };\n    let stats: { [key in AzureQueryType | string]: Statistics } = {\n      [AzureQueryType.AzureMonitor]: {\n        ...common,\n      },\n      [AzureQueryType.LogAnalytics]: {\n        ...common,\n        grafanaTime: 0,\n        queryTime: 0,\n      },\n      [AzureQueryType.AzureResourceGraph]: {\n        ...common,\n      },\n      [AzureQueryType.AzureTraces]: {\n        ...common,\n        table: 0,\n        trace: 0,\n        operationIdSpecified: 0,\n        eventTypesSpecified: 0,\n        filtersSpecified: 0,\n      },\n      [AzureQueryType.SubscriptionsQuery]: { ...common },\n      [AzureQueryType.ResourceGroupsQuery]: { ...common },\n      [AzureQueryType.NamespacesQuery]: { ...common },\n      [AzureQueryType.ResourceNamesQuery]: { ...common },\n      [AzureQueryType.MetricNamesQuery]: { ...common },\n      [AzureQueryType.WorkspacesQuery]: { ...common },\n      [AzureQueryType.GrafanaTemplateVariableFn]: { ...common },\n      [AzureQueryType.LocationsQuery]: { ...common },\n      unknown: { ...common },\n    };\n\n    azureQueries.forEach((query) => {\n      if (query.queryType === AzureQueryType.AzureMonitor) {\n        stats[AzureQueryType.AzureMonitor][query.hide ? 'hidden' : 'visible']++;\n        if (query.azureMonitor?.resources && query.azureMonitor.resources.length > 1) {\n          stats[AzureQueryType.AzureMonitor].multiResource++;\n        }\n      }\n      if (query.queryType === AzureQueryType.LogAnalytics) {\n        stats[AzureQueryType.LogAnalytics][query.hide ? 'hidden' : 'visible']++;\n        stats[AzureQueryType.LogAnalytics][query.azureLogAnalytics?.dashboardTime ? 'grafanaTime' : 'queryTime']++;\n        if (query.azureLogAnalytics?.resources && query.azureLogAnalytics.resources.length > 1) {\n          stats[AzureQueryType.LogAnalytics].multiResource++;\n        }\n      }\n      if (query.queryType === AzureQueryType.AzureResourceGraph) {\n        stats[AzureQueryType.AzureResourceGraph][query.hide ? 'hidden' : 'visible']++;\n        if (query.subscriptions && query.subscriptions.length > 1) {\n          stats[AzureQueryType.AzureResourceGraph].multiResource++;\n        }\n      }\n      if (query.queryType === AzureQueryType.AzureTraces) {\n        stats[AzureQueryType.AzureTraces][query.hide ? 'hidden' : 'visible']++;\n        if (query.azureTraces) {\n          if (query.azureTraces.resultFormat) {\n            stats[AzureQueryType.AzureTraces][\n              query.azureTraces.resultFormat === ResultFormat.Trace ? ResultFormat.Trace : ResultFormat.Table\n            ]++;\n          }\n          if (query.azureTraces.resources && query.azureTraces.resources.length > 1) {\n            stats[AzureQueryType.AzureTraces].multiResource++;\n          }\n          if (query.azureTraces.operationId && query.azureTraces.operationId !== '') {\n            stats[AzureQueryType.AzureTraces].operationIdSpecified++;\n          }\n          if (query.azureTraces.traceTypes && query.azureTraces.traceTypes.length > 0) {\n            stats[AzureQueryType.AzureTraces].eventTypesSpecified++;\n          }\n          if (query.azureTraces.filters && query.azureTraces.filters.length > 0) {\n            stats[AzureQueryType.AzureTraces].filtersSpecified++;\n          }\n        }\n      }\n\n      switch (query.queryType) {\n        case AzureQueryType.AzureMonitor:\n        case AzureQueryType.LogAnalytics:\n        case AzureQueryType.AzureResourceGraph:\n        case AzureQueryType.AzureTraces:\n        case AzureQueryType.SubscriptionsQuery:\n        case AzureQueryType.ResourceGroupsQuery:\n        case AzureQueryType.NamespacesQuery:\n        case AzureQueryType.ResourceNamesQuery:\n        case AzureQueryType.MetricNamesQuery:\n        case AzureQueryType.WorkspacesQuery:\n        case AzureQueryType.GrafanaTemplateVariableFn:\n        case AzureQueryType.LocationsQuery:\n          stats[query.queryType].count++;\n          break;\n        default:\n          stats.unknown.count++;\n      }\n    });\n\n    if (azureQueries && azureQueries.length > 0) {\n      trackAzureMonitorDashboardLoaded({\n        grafana_version: grafanaVersion,\n        dashboard_id: dashboardId,\n        org_id: orgId,\n        // Metrics queries stats\n        azure_monitor_queries: stats[AzureQueryType.AzureMonitor].visible,\n        azure_monitor_queries_hidden: stats[AzureQueryType.AzureMonitor].hidden,\n        azure_monitor_multiple_resource: stats[AzureQueryType.AzureMonitor].multiResource,\n        azure_monitor_query: stats[AzureQueryType.AzureMonitor].count,\n\n        // Logs queries stats\n        azure_log_analytics_queries: stats[AzureQueryType.LogAnalytics].visible,\n        azure_log_analytics_queries_hidden: stats[AzureQueryType.LogAnalytics].hidden,\n        azure_log_multiple_resource: stats[AzureQueryType.LogAnalytics].multiResource,\n        azure_log_analytics_queries_grafana_time: stats[AzureQueryType.LogAnalytics].grafanaTime,\n        azure_log_analytics_queries_query_time: stats[AzureQueryType.LogAnalytics].queryTime,\n        azure_log_query: stats[AzureQueryType.LogAnalytics].count,\n\n        // ARG queries stats\n        azure_resource_graph_queries: stats[AzureQueryType.AzureResourceGraph].visible,\n        azure_resource_graph_queries_hidden: stats[AzureQueryType.AzureResourceGraph].hidden,\n        azure_resource_graph_multiple_subscription: stats[AzureQueryType.AzureResourceGraph].multiResource,\n        azure_resource_graph_query: stats[AzureQueryType.AzureResourceGraph].count,\n\n        // Traces queries stats\n        azure_traces_queries: stats[AzureQueryType.AzureTraces].visible,\n        azure_traces_queries_hidden: stats[AzureQueryType.AzureTraces].hidden,\n        azure_traces_multiple_resource: stats[AzureQueryType.AzureTraces].multiResource,\n        azure_traces_table: stats[AzureQueryType.AzureTraces].table,\n        azure_traces_trace: stats[AzureQueryType.AzureTraces].trace,\n        azure_traces_operation_id_specified: stats[AzureQueryType.AzureTraces].operationIdSpecified,\n        azure_traces_event_type_specified: stats[AzureQueryType.AzureTraces].eventTypesSpecified,\n        azure_traces_filters: stats[AzureQueryType.AzureTraces].filtersSpecified,\n        azure_traces_query: stats[AzureQueryType.AzureTraces].count,\n\n        // Variable queries stats\n        azure_subscriptions_query: stats[AzureQueryType.SubscriptionsQuery].count,\n        azure_resource_groups_query: stats[AzureQueryType.ResourceGroupsQuery].count,\n        azure_namespaces_query: stats[AzureQueryType.NamespacesQuery].count,\n        azure_resource_names_query: stats[AzureQueryType.ResourceNamesQuery].count,\n        azure_metric_names_query: stats[AzureQueryType.MetricNamesQuery].count,\n        azure_workspaces_query: stats[AzureQueryType.WorkspacesQuery].count,\n        azure_grafana_template_variable_query: stats[AzureQueryType.GrafanaTemplateVariableFn].count,\n        azure_locations_query: stats[AzureQueryType.LocationsQuery].count,\n\n        // Unknown query type\n        azure_unknown_query: stats.unknown.count,\n      });\n    }\n  }\n);\n","import { reportInteraction } from '@grafana/runtime';\n\n/**\n * Loaded the first time a dashboard containing azure queries is loaded (not on every render)\n * Note: The queries used here are the ones pre-migration and pre-filterQuery\n *\n * This allows answering questions about:\n * - the adoption of the three query types (Azure Monitor, Azure Logs Analytics and Azure Resource Graph)\n * - stats about number of azure dashboards loaded, number of users\n * - stats about the grafana and plugins versions used by our users\n *\n * Dashboard: https://ops.grafana.net/d/Ad0pti0N/data-sources-adoption-tracking?orgId=1\n * Changelog:\n * - v9.1.0 : list of queries logged\n * - v9.1.2 : list removed in favour of stats, user_id removed\n */\nexport const trackAzureMonitorDashboardLoaded = (props: AzureMonitorDashboardLoadedProps) => {\n  reportInteraction('grafana_ds_azuremonitor_dashboard_loaded', props);\n};\n\nexport type AzureMonitorDashboardLoadedProps = {\n  grafana_version?: string;\n  dashboard_id: string;\n  org_id?: number;\n\n  /** number of non hidden queries of type Azure Monitor if any  */\n  azure_monitor_queries: number;\n  /** number of hidden queries (not executed) of type Azure Monitor if any  */\n  azure_monitor_queries_hidden: number;\n  /** number of Azure Monitor queries using multiple resources */\n  azure_monitor_multiple_resource: number;\n  /** number of Azure Monitor queries */\n  azure_monitor_query: number;\n\n  /** number of non hidden queries of type Azure Logs Analytics if any  */\n  azure_log_analytics_queries: number;\n  /** number of hidden queries (not executed) of type Azure Logs Analytics if any  */\n  azure_log_analytics_queries_hidden: number;\n  /** number of Azure Log Analytics queries using multiple resources */\n  azure_log_multiple_resource: number;\n  /** number of Azure Log Analytics queries using time-range defined explicitly in query */\n  azure_log_analytics_queries_query_time: number;\n  /** number of Azure Log Analytics queries using Grafana time-range */\n  azure_log_analytics_queries_grafana_time: number;\n  /** number of Azure Log Analytics queries */\n  azure_log_query: number;\n\n  /** number of non hidden queries of type Azure Resource Graph if any  */\n  azure_resource_graph_queries: number;\n  /** number of hidden queries (not executed) of type Azure Resource Graph if any  */\n  azure_resource_graph_queries_hidden: number;\n  /** number of Azure Resource Graph queries using multiple subscriptions */\n  azure_resource_graph_multiple_subscription: number;\n  /** number of Azure Resource Graph queries */\n  azure_resource_graph_query: number;\n\n  /** number of non hidden queries of type Azure Traces if any  */\n  azure_traces_queries: number;\n  /** number of hidden queries of type Azure Traces if any  */\n  azure_traces_queries_hidden: number;\n  /** number of trace queries using multiple resources */\n  azure_traces_multiple_resource: number;\n  /** number of trace queries using table format */\n  azure_traces_table: number;\n  /** number of trace queries using trace format */\n  azure_traces_trace: number;\n  /** number of trace queries specifying operation ID */\n  azure_traces_operation_id_specified: number;\n  /** number of trace queries specifying event types */\n  azure_traces_event_type_specified: number;\n  /** number of trace queries using filters */\n  azure_traces_filters: number;\n  /** number of Azure Traces queries */\n  azure_traces_query: number;\n\n  /** variable query tracking */\n  azure_subscriptions_query: number;\n  azure_resource_groups_query: number;\n  azure_namespaces_query: number;\n  azure_resource_names_query: number;\n  azure_metric_names_query: number;\n  azure_workspaces_query: number;\n  azure_grafana_template_variable_query: number;\n  azure_locations_query: number;\n  azure_unknown_query: number;\n};\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","equal","a","b","constructor","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","hasOwnProperty","call","key","Prism","languages","kusto","pattern","greedy","lookbehind","alias","f","Symbol","for","l","m","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","g","d","e","h","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","ANY","Comparator","comp","parseOptions","loose","value","trim","split","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","match","TypeError","SemVer","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","safeRe","SPACE_CHARACTERS","range","raw","set","formatted","replace","parseRange","filter","first","isNullSet","isAny","comps","format","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","safeSrc","src","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","compareBuild","inc","release","identifierBase","PRERELEASELOOSE","PRERELEASE","Number","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","next","exec","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","sort","v","internalRe","constants","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","max","firstKey","looseOption","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","BUILD","FULLPLAIN","MAINVERSIONLOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__4831__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__8146__","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__1269__","__WEBPACK_EXTERNAL_MODULE__3059__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","defineProperty","enumerable","prop","toStringTag","nc","DataSourceDescription","dataSourceName","docsLink","hasRequiredFields","className","theme","useTheme2","styles","container","margin","marginTop","spacing","text","typography","body","color","colors","secondary","link","textDecoration","cx","href","rel","GenericConfigSection","children","title","description","isCollapsible","isInitiallyOpen","kind","isOpen","setIsOpen","useState","iconName","isSubSection","collapsibleButtonAriaLabel","header","display","justifyContent","alignItems","subtitle","fontWeight","fontWeightRegular","descriptionText","marginBottom","bodySmall","IconButton","onClick","ConfigSection","TimeGrainConverter","createISO8601Duration","timeGrain","timeGrainUnit","toUpperCase","createISO8601DurationFromInterval","interval","unit","indexOf","toMinutes","findClosestTimeGrain","allowedTimeGrains","timeGrains","closest","intervalMs","rangeUtil","intervalToMs","createTimeGrainFromISO8601Duration","duration","offset","substring","timeUnitToText","createKbnUnitFromISO8601Duration","timeUnitToKbn","ResponseParser","parseResponseValues","textFieldName","valueFieldName","find","parseMetadata","metricName","defaultAggTypes","metricData","primaryAggType","primaryAggregationType","supportedAggTypes","supportedAggregationTypes","supportedTimeGrains","label","parseTimeGrains","metricAvailabilities","dimensions","parseDimensions","avail","metadataDimensions","dimension","localizedValue","parseSubscriptions","parseSubscriptionsForSelect","parseLocations","locations","location","displayName","supportsLogs","findOptions","reduce","accum","option","toOption","addValueToOptions","variableOptionGroup","optionValues","routeNames","interpolateVariable","variable","multi","includeAll","allValue","val","replaceTemplateVariables","templateSrv","query","scopedVars","workingQueries","rawValue","interpolated","replaced","found","multiple","currentQueries","effect","useEffect","instanceOfAzureCredential","authType","object","predefinedClouds","getDefaultAzureCloud","config","azure","cloud","resolveLegacyCloudName","cloudName","concealed","concealedLegacy","isCredentialsComplete","credentials","ignoreSecret","azureCloud","tenantId","clientId","clientSecret","password","userId","getClientSecret","secureJsonFields","azureClientSecret","secret","secureJsonData","getAdPassword","getCredentials","creds","jsonData","azureCredentials","managedIdentityEnabled","workloadIdentityEnabled","userIdentityEnabled","serviceCredentials","serviceCredentialsEnabled","getDatasourceCredentials","azureAuthType","message","getLegacyCredentials","selectors","select","input","tenantID","clientID","loadSubscriptions","button","defaultSubscription","userAuthAlert","userAuthFallbackAlert","resourcePicker","search","cancel","advanced","collapse","subscription","resourceGroup","namespace","region","resource","metricsQueryEditor","logsQueryEditor","formatSelection","runQuery","argsQueryEditor","subscriptions","tracesQueryEditor","traceTypes","queryType","customNamespace","AppRegistrationCredentials","azureCloudOptions","disabled","onCredentialsChange","Field","data-testid","htmlFor","Select","inputId","aria-label","opt","onChange","selected","updated","required","invalid","Input","placeholder","event","div","gap","Button","variant","authTypeOptions","useMemo","opts","userIdentityFallbackCredentialsEnabled","Alert","severity","Stack","direction","RadioButtonGroup","onServiceCredentialsEnabledChange","defaultAuthType","getAzureCloudOptions","settingsEx","clouds","getAzureClouds","AzureCredentialsForm","unshift","CurrentUserFallbackCredentials","BasicLogsToggle","onBasicLogsEnabledChange","fontSize","Switch","checked","basicLogsEnabled","DefaultSubscription","getSubscriptions","onSubscriptionChange","onSubscriptionsChange","loadSubscriptionsClicked","onLoadSubscriptions","useReducer","updateSubscriptions","canceled","then","received","autoSelect","subscriptionId","MonitorConfig","updateOptions","setSubscriptions","oauthPassThru","disableGrafanaCache","updateDatasourceCredentials","updateCredentials","useEffectOnce","featureToggles","azureMonitorEnableUserAuth","readOnly","receivedSubscriptions","enableBasicLogs","ConfigEditor","PureComponent","render","onOptionsChange","state","Divider","details","whiteSpace","secureSocksDSProxyEnabled","enableSecureSocksProxy","SecureSocksProxySettings","super","getTemplateSrv","baseURL","optionsFunc","setState","unsaved","saveOptions","getBackendSrv","put","updateDatasourcePluginOption","datasource","fetch","url","method","toPromise","err","isFetchError","Promise","resolve","AzureQueryType","ResultFormat","LogsEditorMode","BuilderQueryEditorExpressionType","BuilderQueryEditorPropertyType","BuilderQueryEditorOrderByOptions","TablePlan","messageFromError","maybeAMessage","innererror","useLastError","errors","setErrors","addError","useCallback","errorSource","errorsCopy","findIndex","vSource","recentError","isValidElement","EditorStack","wrap","wrapItems","_a","_b","EditorRows","EditorRow","useStyles2","getStyles","root","padding","backgroundColor","background","borderRadius","shape","radius","default","EditorFieldGroup","onQueryChange","newQuery","azureResourceGraph","CodeEditor","language","height","width","showMiniMap","onBlur","onSave","EditorField","optional","tooltip","tooltipInteractive","fieldProps","childInputId","ReactUtils","getChildId","labelEl","Tooltip","placement","interactive","Icon","tabIndex","icon","Space","field","minWidth","fontWeightMedium","fontStyle","marginLeft","primary","labelWidth","inlineField","remainingProps","InlineField","setError","setValues","MultiSelect","isClearable","change","containsSelectAll","allSubs","newSubs","FieldValidationMessage","ERROR_SOURCE","selectSubscriptions","fetchedSubscriptions","currentSubscriptions","currentSubscription","querySubscriptions","templateVars","commonSubscriptions","intersection","results","catch","span","SubscriptionField","QueryField","EditorList","items","renderItem","newItem","itemIndex","newItems","onChangeItem","onDeleteItem","InputGroup","modifiedChildren","Children","child","cloneElement","invalidChild","borderPriority","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","position","zIndex","AccessoryButton","getButtonStyles","paddingLeft","paddingRight","inputFieldSize","DEFAULT_LOGS_BUILDER_QUERY","columns","Property","property","groupBy","expressions","Group_by","Reduce","where","And","limit","OPERATORS_BY_TYPE","string","int","datetime","bool","aggregateOptions","aggregate","onDelete","templateVariableOptions","isPercentile","isCountAggregate","percentileValue","setPercentileValue","parameters","columnValue","setColumnValue","safeTemplateVariables","selectableOptions","buildPercentileParams","percentile","column","Function_parameter","fieldType","updateAggregate","updates","handleAggregateChange","funcName","Function","step","currentTarget","newValue","percentileParams","handlePercentileChange","Label","newCol","handleColumnChange","AggregateSection","allColumns","buildAndUpdateQuery","builderQuery","azureLogAnalytics","aggregates","setAggregates","prevTable","useRef","hasLoadedAggregates","currentTable","availableColumns","col","makeRenderAggregate","aggregateToDelete","prevAggregates","updatedAggregates","agg","onDeleteAggregate","AggregateItem","buildCondition","exp","isGroupOfFilters","nested","Boolean","joiner","joined","isNestedExpression","escapedValue","FilterItem","filterIndex","groupIndex","usedColumns","getFilterValues","showOr","escapeRegExp","Combobox","inputValue","FilterSection","timeRange","filters","setFilters","group","hasLoadedFilters","variableOptions","completeCol","filterDynamicColumns","updateFilters","onAddOrFilters","Operator","isValid","onAddAndFilters","Or","onDeleteFilter","toISOString","timeColumn","kustoQuery","lastValueFrom","azureLogAnalyticsDatasource","requestId","timezone","app","CoreApp","Unknown","startTime","getDefaultTimeRange","targets","refId","LogAnalytics","resources","fields","toArray","currentGroupIndex","flatMap","idx","FuzzySearch","searchTerm","setSearchTerm","selectedColumn","setSelectedColumn","hasLoadedFuzzySearch","fuzzySearch","fuzzy","strValue","endsWith","removeExtraQuotes","updateFuzzySearch","term","fuzzyExpression","GroupByItem","allowCustomValue","selectedValue","isTemplateVariable","GroupBySection","groupBys","setGroupBys","hasLoadedGroupBy","handleGroupByChange","makeRenderGroupBy","propertyName","prevGroupBys","updatedGroupBys","gb","onDeleteGroupBy","updatedItem","locals","codeBlock","tableLayout","code","hidden","setHidden","pre","LimitSection","setLimit","newLimit","OrderBySection","hasLoadedOrderBy","orderBy","setOrderBy","groupByColumns","aggregateColumns","selectedColumns","columnOptions","orderOptions","handleOrderByChange","order","Asc","Order_by","Desc","entry","onDeleteOrderBy","TableSection","tables","isLoadingSchema","tableOptions","plan","Basic","selectAllOption","allColumnNames","columnSelectValue","selectedTable","basicLogsQuery","isLoading","isMulti","closeMenuOnSelect","selectedArray","includesAll","lastSelected","filtered","isDisabled","LogsQueryBuilder","schema","isKQLPreviewHidden","setIsKQLPreviewHidden","database","tableName","table","datetimeColumn","timeFilterExpression","Datetime","updatedBuilderQuery","timeFilter","updatedQueryString","phrases","condition","appendWhere","appendProject","phrase","reduceExprs","summarizeParts","expr","func","summarizeClause","appendSummarize","clauses","appendOrderBy","appendLimit","AzureMonitorKustoQueryBuilder","KQLPreview","renderAdvanced","isAdvancedOpen","setIsAdvancedOpen","Collapse","collapsible","onToggle","ResourceRowType","EntryIcon","Subscription","ResourceGroup","Resource","VariableGroup","Variable","overflow","scrollableTable","tableScroller","maxHeight","selectedTableScroller","row","borderBottom","border","weak","borderBottomColor","medium","disabledRow","opacity","cell","textOverflow","collapseButton","loadingCell","textAlign","spinner","nestedEntry","entryContentItem","truncated","resourceField","maxWidth","resourceFieldButton","nestedRowCheckbox","selectionFooter","paddingTop","loadingWrapper","paddingBottom","resultLimit","modal","breakpoints","lg","NestedEntry","isSelected","isSelectable","level","scrollIntoView","onToggleCollapse","onSelectedChange","hasChildren","handleToggleCollapse","handleSelectedChanged","ev","checkboxId","uri","getElementById","behavior","block","gridSize","layout","Checkbox","NOTHING","DRAFTABLE","DRAFT_STATE","die","getPrototypeOf","isDraft","isDraftable","isPlainObject","isMap","isSet","objectCtorString","proto","Ctor","each","iter","getArchtype","Reflect","ownKeys","thing","type_","propOrOldValue","latest","copy_","base_","shallowCopy","strict","isPlain","descriptors","getOwnPropertyDescriptors","desc","writable","configurable","create","assign","deep","isFrozen","clear","dontMutateFrozenCollections","entries","currentScope","plugins","getPlugin","pluginKey","plugin","getCurrentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","path","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","autoFreeze_","propertyIsEnumerable","objectTraps","getDescriptorFromProto","draft_","readPropFromProto","peek","prepareCopy","createProxy","current2","currentState","x","y","markChanged","deleteProperty","getOwnPropertyDescriptor","owner","setPrototypeOf","arrayTraps","useStrictShallowCopy_","parent","proxyMap_","proxySet_","isManual_","traps","revoke","proxy","Proxy","revocable","createProxyProxy","currentImpl","copy","fn","arguments","immer","produce","recipe","defaultBase","self","base2","hasError","ip","produceWithPatches","patches","inversePatches","autoFreeze","setAutoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","createDraft","finishDraft","applyPatches","applyPatchesImpl","applyPatches_","bind","UrlBuilder","buildResourceUri","multipleResources","urlArray","metricNamespace","resourceName","metricNamespaceProcessed","metricNamespaceArray","resourceNameProcessed","resourceNameArray","provider","shift","parentResource","buildAzureMonitorGetMetricNamespacesUrl","baseUrl","apiVersion","globalRegion","resourceUri","buildAzureMonitorGetMetricNamesUrl","buildAzureMonitorGetLogsTableUrl","RESOURCE_URI_REGEX","parseResourceURI","resourceURI","matches","groups","metricNamespaceAndResource","metricNamespaceAndName","stringArray","namespaceArray","nextElem","parseNamespaceAndName","parseMultipleResourceDetails","parseResourceDetails","resourcesToStrings","resourceToString","isGUIDish","matchURI","rowURI","rowParams","targetParams","rowNamespace","rowName","resourceNamespace","findRow","rows","addResources","targetParentId","newResources","draftState","draftRow","NestedRow","selectedRows","requestNestedRows","onRowSelectedChange","selectableEntryTypes","disableRow","rowStatus","setRowStatus","onRowToggleCollapse","selectedRow","tr","td","typeLabel","childRow","FadeTransition","visible","colSpan","LoadingPlaceholder","searchFn","searchFilter","setSearchFilter","debouncedSearch","debounce","searchPhrase","resourcePickerData","onApply","onCancel","selectionNotice","setIsLoading","setRows","setSelectedRows","internalSelected","setInternalSelected","errorMessage","setErrorMessage","shouldShowLimitFlag","setShouldShowLimitFlag","selectionNoticeText","loadInitialData","fetchInitialRows","sanitized","uris","findRows","parseRows","parentRow","nestedRows","fetchAndAppendNestedRow","handleSelectionChanged","newRes","newSelected","newInternalSelected","handleApply","handleSearch","searchWord","searchResults","Search","thead","tbody","aria-live","footer","h5","AdvancedMulti","Modal","ButtonRow","fill","ResourceLabel","resourcesComponents","setResourcesComponents","FormattedResource","pickerIsOpen","setPickerIsOpen","handleOpenPicker","closePicker","parsedResource","azureTraces","azureMonitor","toLocaleLowerCase","aggregation","dimensionFilters","setResources","onDismiss","trapFocus","ResourcePicker","formatOptions","defaultValue","onLoad","setFormatAs","resultFormat","handleChange","resourceList","marginBlock","h6","onResourceChange","removeResource","setKustoQuery","formatAs","setDashboardTime","dashboardTime","setTimeColumn","setBasicLogsQuery","TimeSeries","LogsManagement","basicLogsAckOpen","setBasicLogsAckOpen","ConfirmModal","confirmText","onConfirm","updatedBasicLogsQuery","confirmButtonVariant","monaco","setMonaco","setupEditor","editor","model","getModel","kustoWorker","getKustoWorker","kustoMode","setSchema","handleEditorMount","onEditorDidMount","TimeManagement","defaultTimeColumns","setDefaultTimeColumns","timeColumns","setTimeColumns","disabledTimePicker","setDisabledTimePicker","setDefaultColumn","timeColumnOptions","timeColumnsSet","defaultColumnsMap","db","cols","curr","timespanColumn","defaultColumns","handleTimeColumnChange","mode","disabledOptions","migrateWorkspaceQueryToResourceQuery","workspace","getResourceURIFromWorkspace","shouldShowBasicLogsToggle","selectedResource","hideFormatAs","migrationError","setMigrationError","useMigrations","showBasicLogsToggle","setShowBasicLogsToggle","dataIngestedWarning","setDataIngestedWarning","getVariables","isBasicLogsQuery","setIsLoadingSchema","fetchAllPlans","promises","azureMonitorDatasource","getWorkspaceTablePlan","all","getKustoSchema","Builder","hasRawKql","hasNoBuilder","modeUnset","Raw","getBasicLogsUsage","dataIngested","getBasicLogsQueryUsage","textToShow","Text","TextLink","external","portalLinkButton","series","querySeries","meta","custom","azurePortalLink","LinkButton","ResourceField","AdvancedResourcePicker","azureMonitorLogsBuilderEditor","FormatAsField","Logs","Table","RawQuery","lang","highlighted","grammar","editorField","dangerouslySetInnerHTML","__html","fontFamily","fontFamilyMonospace","FUNCTIONS","detail","documentation","comment","backticks","quote","regex","command","function","keyword","number","punctuation","whitespace","cheatsheetQueries","setCheatsheetQueries","areDropdownsOpen","setAreDropdownsOpen","visibleQueries","setVisibleQueries","searchInputValue","setSearchInputValue","tokenizer","dropdownMenu","category","getCheatsheetQueries","getAzureLogAnalyticsCheatsheetQueries","categories","alphabetizedQueries","queriesByCategory","categoryQueries","related","queries","queryId","filterAlignment","filteredQueries","searchValue","visibleQueriesCategories","filteredQueriesBySearch","filterQueriesBySearch","categoryDropdown","updatedVisibleQueries","selectedCategory","queryCategory","filterQueriesByCategory","backspaceRemovesValue","noOptionsMessage","formatCreateLabel","isSearchable","totalQueries","ScrollContainer","showScrollIndicators","Card","card","Heading","rawQuery","Actions","reportInteraction","queryName","queryCategories","flexDirection","AzureCheatSheetModal","onClose","AzureCheatSheet","resourceTypeDisplayNames","multiResourceCompatibleTypes","resourceTypes","columnGap","flexWrap","flex","resourceLabel","resourceGroupAndName","onCommonPropChange","grow","transparent","setCustomNamespace","selection","setTimeGrain","setDimensionFilters","aggregationOptions","setAggregation","dimensionOptions","dimensionLabels","setDimensionLabels","labelsObj","labels","flat","dimensionLower","prevLabels","newLabels","currentLabels","useDimensionLabels","dimensionOperators","validDimensionOptions","dimensionFilter","onFieldChange","fieldName","getValidFilterOptions","selectedFilter","getValidMultiSelectOptions","selectedFilters","labelOptions","changed","properData","selectedOperator","selectedDimension","HorizontalGroup","menuShouldPortal","setValue","HTMLInputElement","handleBlur","setLegendAlias","metricNames","setMetricName","metricNamespaces","timeGrainOptions","autoInterval","TimegrainConverter","baseTimeGrains","top","setTop","useAsyncState","asyncFn","dependencies","Math","random","finalValue","getResourceGroupAndName","defaultMetricMetadata","aggOptions","rawResults","metricsMetadata","metricMetadata","setMetricMetadata","getMetricMetadata","metadata","aggregations","newAggregation","newTimeGrain","allowedTimeGrainsMs","useMetricMetadata","getMetricNamespaces","useMetricNamespaces","getMetricNames","useMetricNames","supportMultipleResource","rowResource","selectedRowSample","MetricNamespaceField","MetricNameField","AggregationField","TimeGrainField","DimensionFields","TopField","LegendFormatField","resolveSelectors","versionedSelectors","grafanaVersion","resolveSelectorGroup","isVersionedSelectorGroup","assertIsSemverValid","resolveSelector","versionedSelector","versionToUse","selectorName","MIN_GRAFANA_VERSION","versionedComponents","RadioButton","Breadcrumbs","breadcrumb","TimePicker","openButton","overlayContent","fromField","toField","applyTimeRange","copyTimeRange","pasteTimeRange","calendar","closeButton","absoluteTimeRangeTitle","DataSourcePermissions","form","roleType","rolePicker","permissionLevel","DateTimePicker","DataSource","TestData","QueryTab","scenarioSelectContainer","scenarioSelect","noise","seriesCount","spread","startValue","drop","DataSourceHttpSettings","urlInput","Jaeger","traceIDInput","Prometheus","configPage","connectionSettings","manageAlerts","scrapeInterval","queryTimeout","defaultEditor","disableMetricLookup","prometheusType","prometheusVersion","cacheLevel","incrementalQuerying","queryOverlapWindow","disableRecordingRules","customQueryParameters","httpMethod","exemplarsAddButton","internalLinkSwitch","codeModeMetricNamesSuggestionLimit","queryEditor","explain","editorToggle","legend","exemplars","builder","metricSelect","hints","metricsExplorer","queryAdvisor","queryField","metricsCountInfo","metricsBrowser","selectMetric","seriesLimit","metricList","labelNamesFilter","labelValuesFilter","useQuery","useAsRateQuery","validateSelector","exemplarMarker","variableQueryEditor","labelnames","metricRegex","labelValues","labelSelect","varQueryResult","seriesQuery","classicQuery","annotations","minStep","tags","seriesValueAsTimestamp","Menu","MenuComponent","MenuGroup","MenuItem","SubMenu","Panels","Panel","headerItems","menuItems","menu","containerByTitle","headerCornerInfo","status","loadingBar","HoverWidget","dragIcon","PanelDataErrorMessage","Visualization","Graph","VisualizationTab","legendSection","Legend","legendItemAlias","showLegendSwitch","xAxis","BarGauge","valueV2","PieChart","svgSlice","VizLegend","seriesName","Drawer","General","expand","contract","close","rcContentWrapper","DashboardSaveDrawer","saveButton","saveAsButton","saveAsTitleInput","PanelEditor","OptionsPane","fieldLabel","fieldInput","DataPane","applyButton","toggleVizPicker","toggleVizOptions","toggleTableView","showZoomField","showAttributionField","showScaleField","showMeasureField","showDebugField","measureButton","PanelInspector","Data","Stats","Json","Query","refreshButton","jsonObjectKeys","Tab","active","RefreshPicker","runButtonV2","intervalButtonV2","queryInspectorButton","queryHistoryButton","addQuery","addQueryFromLibrary","queryGroupTopSection","addExpression","QueryHistory","queryText","QueryEditorRows","QueryEditorRow","actionButton","AlertTab","AlertRules","groupToggle","toggle","expandedContent","previewButton","ruleNameField","newFolderButton","newFolderNameField","newFolderNameCreateButton","newEvaluationGroupButton","newEvaluationGroupName","newEvaluationGroupInterval","newEvaluationGroupCreate","stepNo","stepAdvancedModeSwitch","alertV2","TransformTab","newTransform","transformationEditor","transformationEditorDebugger","Transforms","disableTransformationButton","modeLabel","calculationsLabel","SpatialOperations","actionLabel","locationLabel","autoOption","coords","latitudeFieldLabel","longitudeFieldLabel","geohash","geohashFieldLabel","lookup","lookupFieldLabel","gazetteerFieldLabel","searchInput","noTransformationsMessage","addTransformationButton","removeAllTransformationsButton","NavBar","Configuration","Toggle","Reporting","NavMenu","NavToolbar","commandPaletteTrigger","shareDashboard","markAsFavorite","editDashboard","editButton","exitButton","settingsButton","addRowButton","addLibraryPanelButton","addVisualizationButton","pastePanelButton","discardChangesButton","discardLibraryPanelButton","unlinkLibraryPanelButton","saveLibraryPanelButton","backToDashboardButton","PageToolbar","itemButton","QueryEditorToolbarItem","BackButton","backArrow","OptionsGroup","PluginVisualization","toggleAllOptions","singleValue","FieldConfigEditor","OverridesConfigEditor","FolderPicker","containerV2","ReadonlyFolderPicker","DataSourcePicker","inputV2","dataSourceList","advancedModal","builtInDataSourceList","TimeZonePicker","changeTimeSettingsButton","WeekStartPicker","TraceViewer","spanBar","QueryBuilder","queryPatterns","inputSelect","valueSelect","matchOperatorSelect","ValuePicker","sectionV2","itemsV2","cards","collapseFolder","sectionId","expandFolder","dashboardItem","dashboardCard","folderHeader","folderName","folderContent","dashboardItems","DashboardLinks","dropDown","LoadingIndicator","CallToActionCard","buttonV2","DataLinksContextMenu","singleLink","ReactMonacoEditor","editorLazy","DashboardImportPage","textarea","submit","ImportDashboardForm","PanelAlertTabContent","VisualizationPreview","ColorSwatch","DashboardRow","UserProfile","profileSaveButton","preferencesSaveButton","orgsTable","sessionsTable","extensionPointTabs","extensionPointTab","tabId","FileUpload","inputField","fileNameSpan","DebugOverlay","wrapper","OrgRolePicker","AnalyticsToolbarButton","Variables","variableOption","variableLinkWrapper","Annotations","annotationsTypeInput","annotationsChoosePanelInput","testButton","resultContainer","ReturnToPrevious","buttonGroup","backButton","dismissButton","SQLQueryEditor","selectColumn","selectColumnInput","selectFunctionParameter","selectAggregation","selectAggregationInput","selectAlias","selectAliasInput","selectInputParameter","filterConjunction","filterField","filterOperator","headerTableSelector","headerFilterSwitch","headerGroupSwitch","headerOrderSwitch","headerPreviewSwitch","EntityNotFound","Portal","pages","Alerting","AddAlertRule","EditAlertRule","alertRuleUid","Login","username","skip","PasswordlessLogin","email","Home","saveAndTest","alert","DataSources","dataSources","EditDataSource","dataSourceUid","settings","AddDataSource","dataSourcePluginsV2","pluginName","AddDashboard","addNewPanel","itemButtonAddViz","addNewRow","addNewPanelLibrary","Settings","List","Edit","annotationIndex","editIndex","Dashboard","uid","DashNav","nav","navV2","publicDashboardTag","shareButton","scrollContainer","newShareButton","shareLink","arrowMenu","shareInternally","shareExternally","shareSnapshot","NewExportButton","exportAsJson","playlistControls","stop","Controls","submenu","submenuItem","submenuItemLabels","submenuItemValueDropDownValueLinkTexts","submenuItemValueDropDownDropDown","submenuItemValueDropDownOptionTexts","annotationsWrapper","annotationLabel","annotationToggle","deleteDashBoard","sectionItems","saveDashBoard","saveAsDashBoard","urlParams","dashboardUid","addAnnotationCTAV2","NewAnnotation","panelFilterSelect","showInLabel","previewInDashboard","enable","hide","addVariableCTAV2","newButton","tableRowNameFields","variableName","tableRowDefinitionFields","tableRowArrowUpButtons","tableRowArrowDownButtons","tableRowDuplicateButtons","tableRowRemoveButtons","headerLink","modeLabelNew","modeLabelEdit","generalNameInput","generalNameInputV2","generalTypeSelect","generalTypeSelectV2","generalLabelInput","generalLabelInputV2","generalHideSelect","generalHideSelectV2","selectionOptionsAllowCustomValueSwitch","selectionOptionsMultiSwitch","selectionOptionsIncludeAllSwitch","selectionOptionsCustomAllInput","previewOfValuesOption","submitButton","QueryVariable","queryOptionsDataSourceSelect","queryOptionsRefreshSelect","queryOptionsRefreshSelectV2","queryOptionsRegExInput","queryOptionsRegExInputV2","queryOptionsSortSelect","queryOptionsSortSelectV2","queryOptionsQueryInput","valueGroupsTagsEnabledSwitch","valueGroupsTagsTagsQueryInput","valueGroupsTagsTagsValuesQueryInput","ConstantVariable","constantOptionsQueryInput","constantOptionsQueryInputV2","DatasourceVariable","datasourceSelect","TextBoxVariable","textBoxOptionsQueryInput","textBoxOptionsQueryInputV2","CustomVariable","customValueInput","IntervalVariable","intervalsValueInput","autoEnabledCheckbox","stepCountIntervalSelect","minIntervalInput","GroupByVariable","dataSourceSelect","infoText","modeToggle","AdHocFiltersVariable","marker","Rows","Repeated","warningMessage","Dashboards","dashboards","toggleView","SaveDashboardAsModal","newName","save","SaveDashboardModal","saveVariables","saveTimerange","saveRefresh","SharePanelModal","linkToRenderedImage","ShareDashboardModal","PublicDashboard","WillBePublicCheckbox","LimitedDSCheckbox","CostIncreaseCheckbox","PauseSwitch","EnableAnnotationsSwitch","CreateButton","DeleteButton","CopyUrlInput","CopyUrlButton","SettingsDropdown","TemplateVariablesWarningAlert","UnsupportedDataSourcesWarningAlert","NoUpsertPermissionsWarningAlert","EnableTimeRangeSwitch","EmailSharingConfiguration","Container","ShareType","EmailSharingInput","EmailSharingInviteButton","EmailSharingList","DeleteEmail","ReshareLink","SnapshotScene","PublishSnapshot","ShareDashboardDrawer","ShareInternally","lockTimeRangeSwitch","shortenUrlSwitch","copyUrlButton","SharePanel","preview","widthInput","heightInput","scaleFactorInput","generateImageButton","downloadImageButton","ShareExternally","publicAlert","emailSharingAlert","shareTypeSelect","Creation","PublicShare","createButton","cancelButton","EmailShare","willBePublicCheckbox","enableTimeRangeSwitch","enableAnnotationsSwitch","revokeAccessButton","toggleAccessButton","ShareSnapshot","publishSnapshot","ExportDashboardDrawer","ExportAsJson","codeEditor","exportExternallyToggle","saveToFileButton","copyToClipboardButton","page","NotAvailable","pausedDescription","PublicDashboardScene","loadingPage","controls","RequestViewAccess","recipientInput","PublicDashboardConfirmAccess","Explore","graph","scrollView","addFromQueryLibrary","SoloPanel","PluginsList","listItem","signatureErrorNotice","PluginPage","signatureInfo","disabledInfo","PlaylistForm","itemDelete","BrowseDashboards","checkbox","NewFolderForm","nameInput","SearchDashboards","FolderView","PublicDashboards","ListItem","linkButton","configButton","trashcanButton","pauseSwitch","UserListPage","tabs","allUsers","orgUsers","anonUserDevices","publicDashboardsUsers","users","org","admin","publicDashboards","UserListAdminPage","UsersListPage","UserAnonListPage","UsersListPublicDashboardsPage","DashboardsListModal","ProfilePage","Plugin","pluginId","MigrateToCloud","components","getTraceProperties","propertyMap","setPropertyMap","queryString","Option","innerProps","innerRef","isFocused","getSelectStyles","onClickMultiOption","selectOption","stopPropagation","preventDefault","optionFocused","optionSelected","optionDisabled","onKeyDown","role","aria-checked","optionBody","Filter","queryTraceTypes","properties","loading","setLoading","setSelected","loadOptions","vals","promise","ButtonSelect","operation","AsyncMultiSelect","blurInputOnSelect","onOpenMenu","defaultOptions","onCloseMenu","hideSelectedOptions","Tables","availabilityResults","customEvents","exceptions","pageViews","requests","traces","attributesOmit","common","appId","application_Version","appName","client_Browser","client_City","client_CountryOrRegion","client_IP","client_Model","client_OS","client_StateOrProvince","client_Type","cloud_RoleInstance","cloud_RoleName","customDimensions","customMeasurements","iKey","itemCount","itemId","itemType","operation_Id","operation_Name","operation_ParentId","operation_SyntheticSource","performanceBucket","sdkVersion","session_Id","success","timestamp","user_AccountId","user_AuthenticatedId","user_Id","availabilityResultsSchema","dependenciesSchema","resultCode","eventsSchema","omit","pageViewsSchema","tablesSchema","assembly","handledAt","innermostAssembly","innermostMessage","innermostMethod","innermostType","outerAssembly","outerMessage","outerMethod","outerType","problemId","severityLevel","setTraceTypes","excludedProperties","uniq","queryFilters","operationId","updateQuery","allEventTypes","defaultQuery","getDefaultOptions","setOperationId","previousOperationId","TraceExemplar","AzureTraces","setDefaultTracesQuery","setQueryOperationId","TraceTypeField","Filters","Trace","EditorHeader","minHeight","InlineSelect","labelProp","SelectContainer","ValueContainer","SingleValue","openMenuOnFocus","valueContainer","borderColor","FlexItem","shrink","flexGrow","flexShrink","EDITOR_MODES","QueryHeader","setAzureLogsCheatSheetModalOpen","onRunQuery","LoadingState","Loading","showModeSwitchWarning","setShowModeSwitchWarning","pendingModeChange","setPendingModeChange","currentMode","queryTypes","AzureMonitor","AzureResourceGraph","updatedQuery","applyModeChange","editorMode","newMode","goingToBuilder","goingToRaw","hasBuilderQuery","migrateQuery","workingQuery","migrateLogAnalyticsToFromTimes","setMetricsTimeGrain","migrateTimeGrains","metricDefinition","migrateToDefaultNamespace","oldDimension","appendDimensionFilter","migrateDimensionToDimensionFilter","azureMonitorQuery","newFilters","staticProps","hasFilter","oldFilter","migrateDimensionFilterToArray","isWellFormedUri","migrateResourceUriToResourceObj","migrateResourceGroupAndName","intersectTime","DEFAULT_QUERY","onChangeQuery","defaultSubscriptionId","preparedQuery","transformedQuery","transformExemplarQuery","defaults","migratedQuery","deepEqual","prepareQuery","EditorForQueryType","NewMetricsQueryEditor","LogsQueryEditor","ArgQueryEditor","TracesQueryEditor","UserAuthAlert","UserAuthFallbackAlert","METADATA_FUNCTION_PARAMS","transformMetadataFunction","sourceSchema","functions","params","arg","cslDefaultValue","inputParameters","AzureLogAnalyticsDatasource","DataSourceWithBackend","isConfigured","validateDatasource","filterQuery","azureMonitorPath","getResource","getWorkspaces","response","getWorkspaceList","workspaceListUrl","getMetadata","resourcePath","interpolatedUri","nameOrIdOrSomething","templateVariables","majorVersion","minorVersion","entityGroups","clusterType","cluster","connectionString","databases","globalScalarParameters","transformMetadataToKustoSchema","applyTemplateVariables","expandResourcesForMultipleVariables","firstWorkspace","filtersReplaced","expandedResources","getDeprecatedDefaultWorkSpace","instanceSettings","logAnalyticsDefaultWorkspace","getDefaultOrFirstSubscription","getFirstWorkspace","workspaces","isValidConfigField","postResource","hasValue","AzureMonitorDatasource","hasResource","hasResourceUri","preMigrationQuery","migratedTarget","azMonitorQuery","apiPreviewVersion","replaceSingleTemplateVariables","classification","storageNamespaces","reason","workspaceUri","Analytics","tableResult","getProvider","providerName","providerApiVersion","getLocations","locationMap","subLocations","locationsApiVersion","listByResourceGroupApiVersion","AzureResourceGraphDatasource","ts","variableNames","subscriptionVar","pagedResourceGraphRequest","maxRetries","$skipToken","allFetched","queryResponse","resourceGraphURL","getResourceGroups","metricNamespacesFilter","getResourceNames","validMetricNamespace","logsSupportedResourceTypesKusto","ResourcePickerData","currentSelection","resourceGroupURI","resourceGroups","getResourceGroupsBySubscriptionId","resourcesForResourceGroup","getResourcesForResourceGroup","azureResourceGraphDatasource","subscriptionName","filterByType","parsedUri","resourceGroupName","locationDisplayName","getResourceURIDisplayProperties","subscriptionURI","responseResourceName","fetchAllNamespaces","supportedMetricNamespaces","getNamespacesForRegion","namespaces","resourceObjs","newSelectedRows","rtype","searchType","searchQuery","migrateAnnotation","annotation","oldQuery","oldWorkspace","grafanaTemplateVariableFnMatches","resourceGroupsWithSub","namespacesWithSub","resourceNames","resourceNamesWithSub","metricNamespaceWithSub","metricNamesWithSub","appInsightsMetricNameQuery","appInsightsGroupByQuery","workspacesQuery","workspacesQueryWithSub","createLogAnalyticsTemplateVariableQuery","defaultWorkspaceId","migrateStringQueriesToObjectQueries","isGrafanaTemplateVariableFnQuery","matchesForQuery","GrafanaTemplateVariableFn","grafanaTemplateVariableFn","createGrafanaTemplateVariableQuery","SubscriptionsQuery","ResourceGroupsQuery","ResourceNamesQuery","NamespacesQuery","MetricNamesQuery","WorkspacesQuery","migrateGrafanaTemplateVariableFn","inputVal","setInputVal","removeOption","AZURE_QUERY_VARIABLE_TYPE_OPTIONS","LocationsQuery","CustomNamespacesQuery","CustomMetricNamesQuery","setVariableOptionGroup","requireSubscription","setRequireSubscription","hasResourceGroup","setHasResourceGroup","hasNamespace","setHasNamespace","hasRegion","setHasRegion","requireResourceGroup","setRequireResourceGroup","requireNamespace","setRequireNamespace","requireCustomNamespace","setRequireCustomNamespace","requireResource","setRequireResource","setResourceGroups","setNamespaces","customNamespaces","setCustomNamespaces","regions","setRegions","isEqual","getVariablesRaw","subs","rgs","queryChange","selectableValue","GrafanaTemplateVariableFnInput","parseResourceNamesAsTemplateVariable","VariableSupport","CustomVariableSupport","request","promisedResults","queryObj","toDataFrame","getAzureLogAnalyticsWorkspaces","templateVariablesResults","callGrafanaTemplateVariableFn","loc","queryResp","replaceVariable","rg","metric","VariableEditor","Datasource","ds","pseudoDatasource","byType","baseTarget","hasQueryForType","queryForType","cloneDeep","observables","req","mappedQueryType","forkJoin","pipe","frame","Done","of","targetContainsTemplate","containsTemplate","subQuery","variableQuery","interpolateVariablesInQueries","getRef","modifyQuery","action","expression","currentUserAuth","currentUserAuthFallbackAvailable","prepareAnnotation","variables","DataSourcePlugin","setConfigEditor","setQueryEditor","baseQuery","baseOnRunQuery","azureLogsCheatSheetModalOpen","setDefaultSubscriptionId","usePreparedQuery","UnifiedAlerting","CloudAlerting","isAzureAuthenticated","bootData","user","authenticatedBy","getAppEvents","subscribe","DashboardLoadedEvent","payload","dashboardId","orgId","azureQueries","pluginJson","multiResource","stats","grafanaTime","queryTime","trace","operationIdSpecified","eventTypesSpecified","filtersSpecified","unknown","grafana_version","dashboard_id","org_id","azure_monitor_queries","azure_monitor_queries_hidden","azure_monitor_multiple_resource","azure_monitor_query","azure_log_analytics_queries","azure_log_analytics_queries_hidden","azure_log_multiple_resource","azure_log_analytics_queries_grafana_time","azure_log_analytics_queries_query_time","azure_log_query","azure_resource_graph_queries","azure_resource_graph_queries_hidden","azure_resource_graph_multiple_subscription","azure_resource_graph_query","azure_traces_queries","azure_traces_queries_hidden","azure_traces_multiple_resource","azure_traces_table","azure_traces_trace","azure_traces_operation_id_specified","azure_traces_event_type_specified","azure_traces_filters","azure_traces_query","azure_subscriptions_query","azure_resource_groups_query","azure_namespaces_query","azure_resource_names_query","azure_metric_names_query","azure_workspaces_query","azure_grafana_template_variable_query","azure_locations_query","azure_unknown_query"],"sourceRoot":""}